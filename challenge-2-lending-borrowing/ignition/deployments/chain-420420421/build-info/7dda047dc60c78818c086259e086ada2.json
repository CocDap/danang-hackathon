{
  "id": "7dda047dc60c78818c086259e086ada2",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "contracts/Escrow.sol": {
        "content": "// SPDX-License-Identifier: SEE LICENSE IN LICENSE\npragma solidity ^0.8.20;\n\n/**\n * @title Escrow Contract\n * @dev A simple escrow contract that holds funds until approved by an arbiter.\n * The contract facilitates a secure transaction between a depositor and a beneficiary,\n * with an arbiter who has the authority to release the funds.\n * @author UtkarshBhardwaj007\n */\n\n/**\n * @title Escrow\n * @dev A simple escrow contract that holds funds until approved by an arbiter.\n * The contract facilitates a secure transaction between a depositor and a beneficiary,\n * with an arbiter who has the authority to release the funds.\n */\ncontract Escrow {\n    /**\n     * @dev Emitted when the arbiter approves the release of funds\n     * @param amount The amount of Ether released to the beneficiary\n     */\n    event Approved(uint256 amount);\n\n    /// @notice The address that initially deposited the funds\n    address public depositor;\n\n    /// @notice The address that will receive the funds when approved\n    address public beneficiary;\n\n    /// @notice The address authorized to approve the fund release\n    address public arbiter;\n\n    /**\n     * @dev Sets up the escrow with the specified arbiter and beneficiary\n     * @param _arbiter Address of the arbiter who can approve fund release\n     * @param _beneficiary Address that will receive the funds when approved\n     */\n    constructor(address _arbiter, address _beneficiary) payable {\n        arbiter = _arbiter;\n        beneficiary = _beneficiary;\n        depositor = msg.sender;\n    }\n\n    /**\n     * @dev Releases the contract's funds to the beneficiary\n     * @notice Can only be called by the arbiter\n     * @notice Emits an Approved event upon successful transfer\n     */\n    function approve() external {\n        require(msg.sender == arbiter, \"Only arbiter can approve\");\n        uint256 balance = address(this).balance;\n        (bool sent, ) = beneficiary.call{value: balance}(\"\");\n        require(sent, \"Failed to send Ether\");\n        emit Approved(balance);\n    }\n}\n"
      },
      "contracts/LendingBorrowing.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\ncontract LendingBorrowing is Ownable {\n    struct Loan {\n        uint256 amount; // Borrowed amount\n        uint256 collateral; // Collateral amount\n        bool isActive; // Loan status\n    }\n    IERC20 public immutable collateralToken;\n    IERC20 public immutable lendingToken;\n    uint256 public collateralFactor; // Percentage of collateral allowed to be borrowed (e.g., 50%)\n    mapping(address => uint256) public collateralBalances; // User collateral balances\n    mapping(address => Loan) public loans; // User loans\n    event CollateralDeposited(address indexed user, uint256 amount);\n    event CollateralWithdrawn(address indexed user, uint256 amount);\n    event LoanTaken(address indexed user, uint256 amount);\n    event LoanRepaid(address indexed user, uint256 amount);\n    constructor(IERC20 _collateralToken, IERC20 _lendingToken, uint256 _collateralFactor) Ownable(msg.sender) {\n        require(_collateralFactor <= 100, \"Collateral factor must be <= 100\");\n        collateralToken = _collateralToken;\n        lendingToken = _lendingToken;\n        collateralFactor = _collateralFactor;\n    }\n    function setCollateralFactor(uint256 _newFactor) external onlyOwner {\n        require(_newFactor <= 100, \"Collateral factor must be <= 100\");\n        collateralFactor = _newFactor;\n    }\n    function depositCollateral(uint256 _amount) external {\n        require(_amount > 0, \"Amount must be greater than zero\");\n        collateralBalances[msg.sender] += _amount;\n        collateralToken.transferFrom(msg.sender, address(this), _amount);\n        emit CollateralDeposited(msg.sender, _amount);\n    }\n    function withdrawCollateral(uint256 _amount) external {\n        require(_amount > 0, \"Amount must be greater than zero\");\n        require(collateralBalances[msg.sender] >= _amount, \"Insufficient collateral\");\n        uint256 maxWithdrawable = collateralBalances[msg.sender] - _loanRequiredCollateral(msg.sender);\n        require(_amount <= maxWithdrawable, \"Cannot withdraw collateral locked for a loan\");\n        collateralBalances[msg.sender] -= _amount;\n        collateralToken.transfer(msg.sender, _amount);\n        emit CollateralWithdrawn(msg.sender, _amount);\n    }\n    function takeLoan(uint256 _amount) external {\n        require(_amount > 0, \"Amount must be greater than zero\");\n        require(loans[msg.sender].isActive == false, \"Existing loan must be repaid first\");\n        uint256 maxLoan = (collateralBalances[msg.sender] * collateralFactor) / 100;\n        require(_amount <= maxLoan, \"Loan exceeds collateral limit\");\n        loans[msg.sender] = Loan({\n            amount: _amount,\n            collateral: collateralBalances[msg.sender],\n            isActive: true\n        });\n        lendingToken.transfer(msg.sender, _amount);\n        emit LoanTaken(msg.sender, _amount);\n    }\n    function repayLoan(uint256 _amount) external {\n        require(_amount > 0, \"Amount must be greater than zero\");\n        Loan storage userLoan = loans[msg.sender];\n        require(userLoan.isActive, \"No active loan\");\n        require(_amount <= userLoan.amount, \"Repay amount exceeds loan\");\n        lendingToken.transferFrom(msg.sender, address(this), _amount);\n        userLoan.amount -= _amount;\n        if (userLoan.amount == 0) {\n            userLoan.isActive = false;\n        }\n        emit LoanRepaid(msg.sender, _amount);\n    }\n    function _loanRequiredCollateral(address _user) internal view returns (uint256) {\n        Loan memory userLoan = loans[_user];\n        if (!userLoan.isActive) return 0;\n        return (userLoan.amount * 100) / collateralFactor;\n    }\n    function getLoanDetails(address _user) external view returns (uint256 amount, uint256 collateral, bool isActive) {\n        Loan memory userLoan = loans[_user];\n        return (userLoan.amount, userLoan.collateral, userLoan.isActive);\n    }\n}\n\n"
      },
      "contracts/Lock.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.20;\n\n// Uncomment this line to use console.log\n// import \"hardhat/console.sol\";\n\ncontract Lock {\n    uint public unlockTime;\n    address payable public owner;\n\n    event Withdrawal(uint amount, uint when);\n\n    constructor(uint _unlockTime) payable {\n        require(\n            block.timestamp < _unlockTime,\n            \"Unlock time should be in the future\"\n        );\n\n        unlockTime = _unlockTime;\n        owner = payable(msg.sender);\n    }\n\n    function withdraw() public {\n        // Uncomment this line, and the import of \"hardhat/console.sol\", to print a log in your terminal\n        // console.log(\"Unlock time is %o and block timestamp is %o\", unlockTime, block.timestamp);\n\n        require(block.timestamp >= unlockTime, \"You can't withdraw yet\");\n        require(msg.sender == owner, \"You aren't the owner\");\n\n        emit Withdrawal(address(this).balance, block.timestamp);\n\n        owner.transfer(address(this).balance);\n    }\n}\n"
      },
      "contracts/MyToken.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    constructor(uint256 initialSupply, string memory name, string memory symbol) ERC20(name, symbol) {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(PAUSER_ROLE, msg.sender);\n        _grantRole(MINTER_ROLE, msg.sender);\n\n        _mint(msg.sender, initialSupply);\n    }\n\n    function pause() public onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    function unpause() public onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\n        _mint(to, amount);\n    }\n\n    function _update(address from, address to, uint256 amount)\n        internal\n        override\n        whenNotPaused\n    {\n        super._update(from, to, amount);\n    }\n}\n"
      },
      "contracts/SupplyChainVerifier.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract SupplyChainVerifier is AccessControl {\n    // Define roles\n    bytes32 public constant MANUFACTURER_ROLE = keccak256(\"MANUFACTURER_ROLE\");\n    bytes32 public constant DISTRIBUTOR_ROLE = keccak256(\"DISTRIBUTOR_ROLE\");\n    bytes32 public constant RETAILER_ROLE = keccak256(\"RETAILER_ROLE\");\n\n    // Product struct\n    struct Product {\n        uint256 id;\n        string name;\n        string origin;\n        uint256 manufacturingDate;\n        address manufacturer;\n        bool isVerified;\n        string metadata;\n    }\n\n    // Events\n    event ProductRegistered(uint256 productId, string name, address manufacturer);\n    event ProductVerified(uint256 productId, address verifier);\n\n    // Product tracking\n    mapping(uint256 => Product) public products;\n    uint256 private _productIds;\n\n    constructor() {\n        // Setup the admin role for the contract deployer\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    }\n\n    // Register a new product (manufacturer only)\n    function registerProduct(\n        string memory name,\n        string memory origin,\n        string memory metadata\n    ) public onlyRole(MANUFACTURER_ROLE) returns (uint256) {\n        _productIds += 1;\n        uint256 newProductId = _productIds;\n\n        products[newProductId] = Product({\n            id: newProductId,\n            name: name,\n            origin: origin,\n            manufacturingDate: block.timestamp,\n            manufacturer: msg.sender,\n            isVerified: false,\n            metadata: metadata\n        });\n\n        emit ProductRegistered(newProductId, name, msg.sender);\n        return newProductId;\n    }\n\n    // Verify a product (distributor or retailer)\n    function verifyProduct(uint256 productId) public {\n        require(\n            hasRole(DISTRIBUTOR_ROLE, msg.sender) || hasRole(RETAILER_ROLE, msg.sender),\n            \"Must have distributor or retailer role\"\n        );\n        require(products[productId].id != 0, \"Product does not exist\");\n\n        products[productId].isVerified = true;\n        emit ProductVerified(productId, msg.sender);\n    }\n\n    // Add a distributor\n    function addDistributor(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        grantRole(DISTRIBUTOR_ROLE, account);\n    }\n\n    // Add a retailer\n    function addRetailer(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        grantRole(RETAILER_ROLE, account);\n    }\n\n    // Get product details\n    function getProduct(uint256 productId) public view returns (Product memory) {\n        require(products[productId].id != 0, \"Product does not exist\");\n        return products[productId];\n    }\n\n    // Get product count\n    function getProductCount() public view returns (uint256) {\n        return _productIds;\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "parameters": "z"
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "errors": [
      {
        "component": "general",
        "errorCode": null,
        "formattedMessage": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n\n--> contracts/LendingBorrowing.sol\n",
        "message": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n",
        "severity": "warning",
        "sourceLocation": {
          "file": "13",
          "start": 2244,
          "end": 2289
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": null,
        "formattedMessage": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n\n--> contracts/LendingBorrowing.sol\n",
        "message": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n",
        "severity": "warning",
        "sourceLocation": {
          "file": "13",
          "start": 2882,
          "end": 2924
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": null,
        "formattedMessage": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n\n--> contracts/Lock.sol\n",
        "message": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n",
        "severity": "warning",
        "sourceLocation": {
          "file": "14",
          "start": 961,
          "end": 998
        },
        "type": "Warning"
      }
    ],
    "version": "0.8.26",
    "long_version": "0.8.26+commit.8a97fa7a.Emscripten.clang",
    "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
    "sources": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "id": 0,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "Context": [
              1358
            ],
            "ERC165": [
              1490
            ],
            "IAccessControl": [
              378
            ]
          },
          "id": 296,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "108:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
              "file": "./IAccessControl.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 379,
              "src": "134:52:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "IAccessControl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 378,
                    "src": "142:14:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 5,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 1359,
              "src": "187:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1358,
                    "src": "195:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
              "file": "../utils/introspection/ERC165.sol",
              "id": 7,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 1491,
              "src": "233:57:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 6,
                    "name": "ERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1490,
                    "src": "241:6:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 9,
                    "name": "Context",
                    "nameLocations": [
                      "1988:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1358,
                    "src": "1988:7:0"
                  },
                  "id": 10,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1988:7:0"
                },
                {
                  "baseName": {
                    "id": 11,
                    "name": "IAccessControl",
                    "nameLocations": [
                      "1997:14:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 378,
                    "src": "1997:14:0"
                  },
                  "id": 12,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1997:14:0"
                },
                {
                  "baseName": {
                    "id": 13,
                    "name": "ERC165",
                    "nameLocations": [
                      "2013:6:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1490,
                    "src": "2013:6:0"
                  },
                  "id": 14,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2013:6:0"
                }
              ],
              "canonicalName": "AccessControl",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 8,
                "nodeType": "StructuredDocumentation",
                "src": "292:1660:0",
                "text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
              },
              "fullyImplemented": true,
              "id": 295,
              "linearizedBaseContracts": [
                295,
                1490,
                1502,
                378,
                1358
              ],
              "name": "AccessControl",
              "nameLocation": "1971:13:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "AccessControl.RoleData",
                  "id": 21,
                  "members": [
                    {
                      "constant": false,
                      "id": 18,
                      "mutability": "mutable",
                      "name": "hasRole",
                      "nameLocation": "2085:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 21,
                      "src": "2052:40:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      },
                      "typeName": {
                        "id": 17,
                        "keyName": "account",
                        "keyNameLocation": "2068:7:0",
                        "keyType": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2060:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "2052:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 16,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2079:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 20,
                      "mutability": "mutable",
                      "name": "adminRole",
                      "nameLocation": "2110:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 21,
                      "src": "2102:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 19,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2102:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "RoleData",
                  "nameLocation": "2033:8:0",
                  "nodeType": "StructDefinition",
                  "scope": 295,
                  "src": "2026:100:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_roles",
                  "nameLocation": "2174:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2132:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                    "typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
                  },
                  "typeName": {
                    "id": 25,
                    "keyName": "role",
                    "keyNameLocation": "2148:4:0",
                    "keyType": {
                      "id": 22,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2140:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2132:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                      "typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 24,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 23,
                        "name": "RoleData",
                        "nameLocations": [
                          "2156:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 21,
                        "src": "2156:8:0"
                      },
                      "referencedDeclaration": 21,
                      "src": "2156:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
                        "typeString": "struct AccessControl.RoleData"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "functionSelector": "a217fddf",
                  "id": 29,
                  "mutability": "constant",
                  "name": "DEFAULT_ADMIN_ROLE",
                  "nameLocation": "2211:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2187:49:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2187:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "30783030",
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2232:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0x00"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 39,
                    "nodeType": "Block",
                    "src": "2454:44:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 35,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "2475:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 34,
                            "name": "_checkRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              93,
                              114
                            ],
                            "referencedDeclaration": 93,
                            "src": "2464:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) view"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2464:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37,
                        "nodeType": "ExpressionStatement",
                        "src": "2464:16:0"
                      },
                      {
                        "id": 38,
                        "nodeType": "PlaceholderStatement",
                        "src": "2490:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 30,
                    "nodeType": "StructuredDocumentation",
                    "src": "2243:174:0",
                    "text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
                  },
                  "id": 40,
                  "name": "onlyRole",
                  "nameLocation": "2431:8:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 32,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2448:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "2440:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2440:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2439:14:0"
                  },
                  "src": "2422:76:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1489
                  ],
                  "body": {
                    "id": 61,
                    "nodeType": "Block",
                    "src": "2656:111:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 54,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 49,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "2673:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 51,
                                    "name": "IAccessControl",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 378,
                                    "src": "2693:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
                                      "typeString": "type(contract IAccessControl)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
                                      "typeString": "type(contract IAccessControl)"
                                    }
                                  ],
                                  "id": 50,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967269,
                                  "src": "2688:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 52,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2688:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
                                  "typeString": "type(contract IAccessControl)"
                                }
                              },
                              "id": 53,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2709:11:0",
                              "memberName": "interfaceId",
                              "nodeType": "MemberAccess",
                              "src": "2688:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "2673:47:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 57,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43,
                                "src": "2748:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "expression": {
                                "id": 55,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967271,
                                "src": "2724:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
                                  "typeString": "type(contract super AccessControl)"
                                }
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2730:17:0",
                              "memberName": "supportsInterface",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1489,
                              "src": "2724:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                "typeString": "function (bytes4) view returns (bool)"
                              }
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2724:36:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2673:87:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 48,
                        "id": 60,
                        "nodeType": "Return",
                        "src": "2666:94:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 41,
                    "nodeType": "StructuredDocumentation",
                    "src": "2504:56:0",
                    "text": " @dev See {IERC165-supportsInterface}."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 62,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "2574:17:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 45,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2632:8:0"
                  },
                  "parameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 43,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "2599:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "2592:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 42,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2592:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2591:20:0"
                  },
                  "returnParameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "2650:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2650:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2649:6:0"
                  },
                  "scope": 295,
                  "src": "2565:202:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    345
                  ],
                  "body": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "2937:53:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 72,
                                "name": "_roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "2954:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                  "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                }
                              },
                              "id": 74,
                              "indexExpression": {
                                "id": 73,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "2961:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2954:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                "typeString": "struct AccessControl.RoleData storage ref"
                              }
                            },
                            "id": 75,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2967:7:0",
                            "memberName": "hasRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "2954:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 77,
                          "indexExpression": {
                            "id": 76,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "2975:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2954:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 71,
                        "id": 78,
                        "nodeType": "Return",
                        "src": "2947:36:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 63,
                    "nodeType": "StructuredDocumentation",
                    "src": "2773:76:0",
                    "text": " @dev Returns `true` if `account` has been granted `role`."
                  },
                  "functionSelector": "91d14854",
                  "id": 80,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasRole",
                  "nameLocation": "2863:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 68,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 65,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2879:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2871:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2871:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 67,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2893:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2885:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 66,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2885:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2870:31:0"
                  },
                  "returnParameters": {
                    "id": 71,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 70,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2931:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 69,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2931:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2930:6:0"
                  },
                  "scope": 295,
                  "src": "2854:136:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "3255:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "3276:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 88,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1340,
                                "src": "3282:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3282:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 86,
                            "name": "_checkRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              93,
                              114
                            ],
                            "referencedDeclaration": 114,
                            "src": "3265:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) view"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3265:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "3265:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 81,
                    "nodeType": "StructuredDocumentation",
                    "src": "2996:198:0",
                    "text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
                  },
                  "id": 93,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkRole",
                  "nameLocation": "3208:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3227:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "3219:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3219:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3218:14:0"
                  },
                  "returnParameters": {
                    "id": 85,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3255:0:0"
                  },
                  "scope": 295,
                  "src": "3199:103:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 113,
                    "nodeType": "Block",
                    "src": "3505:124:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3519:23:0",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 102,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 96,
                                "src": "3528:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 103,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98,
                                "src": "3534:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 101,
                              "name": "hasRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "3520:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (bytes32,address) view returns (bool)"
                              }
                            },
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3520:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 112,
                        "nodeType": "IfStatement",
                        "src": "3515:108:0",
                        "trueBody": {
                          "id": 111,
                          "nodeType": "Block",
                          "src": "3544:79:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 107,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "3598:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 108,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 96,
                                    "src": "3607:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 106,
                                  "name": "AccessControlUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 305,
                                  "src": "3565:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
                                    "typeString": "function (address,bytes32) pure returns (error)"
                                  }
                                },
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3565:47:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 110,
                              "nodeType": "RevertStatement",
                              "src": "3558:54:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 94,
                    "nodeType": "StructuredDocumentation",
                    "src": "3308:119:0",
                    "text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
                  },
                  "id": 114,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkRole",
                  "nameLocation": "3441:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 99,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 96,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3460:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "3452:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 95,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3452:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 98,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3474:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "3466:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 97,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3466:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3451:31:0"
                  },
                  "returnParameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3505:0:0"
                  },
                  "scope": 295,
                  "src": "3432:197:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    353
                  ],
                  "body": {
                    "id": 127,
                    "nodeType": "Block",
                    "src": "3884:46:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 122,
                              "name": "_roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "3901:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                              }
                            },
                            "id": 124,
                            "indexExpression": {
                              "id": 123,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "3908:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3901:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RoleData_$21_storage",
                              "typeString": "struct AccessControl.RoleData storage ref"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3914:9:0",
                          "memberName": "adminRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "3901:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 121,
                        "id": 126,
                        "nodeType": "Return",
                        "src": "3894:29:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 115,
                    "nodeType": "StructuredDocumentation",
                    "src": "3635:170:0",
                    "text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
                  },
                  "functionSelector": "248a9ca3",
                  "id": 128,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoleAdmin",
                  "nameLocation": "3819:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 117,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3840:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "3832:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 116,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3832:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3831:14:0"
                  },
                  "returnParameters": {
                    "id": 121,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 120,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "3875:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 119,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3875:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3874:9:0"
                  },
                  "scope": 295,
                  "src": "3810:120:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    361
                  ],
                  "body": {
                    "id": 146,
                    "nodeType": "Block",
                    "src": "4320:42:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 142,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 131,
                              "src": "4341:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 143,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "4347:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 141,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "4330:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4330:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 145,
                        "nodeType": "ExpressionStatement",
                        "src": "4330:25:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 129,
                    "nodeType": "StructuredDocumentation",
                    "src": "3936:285:0",
                    "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
                  },
                  "functionSelector": "2f2ff15d",
                  "id": 147,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 137,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 131,
                              "src": "4313:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 136,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "4300:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4300:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 139,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 135,
                        "name": "onlyRole",
                        "nameLocations": [
                          "4291:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "4291:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4291:28:0"
                    }
                  ],
                  "name": "grantRole",
                  "nameLocation": "4235:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "4253:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 147,
                        "src": "4245:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4245:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4267:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 147,
                        "src": "4259:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4259:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4244:31:0"
                  },
                  "returnParameters": {
                    "id": 140,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4320:0:0"
                  },
                  "scope": 295,
                  "src": "4226:136:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    369
                  ],
                  "body": {
                    "id": 165,
                    "nodeType": "Block",
                    "src": "4737:43:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 161,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "4759:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 162,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "4765:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 160,
                            "name": "_revokeRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "4747:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4747:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 164,
                        "nodeType": "ExpressionStatement",
                        "src": "4747:26:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 148,
                    "nodeType": "StructuredDocumentation",
                    "src": "4368:269:0",
                    "text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
                  },
                  "functionSelector": "d547741f",
                  "id": 166,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 156,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "4730:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 155,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "4717:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4717:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 158,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 154,
                        "name": "onlyRole",
                        "nameLocations": [
                          "4708:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "4708:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4708:28:0"
                    }
                  ],
                  "name": "revokeRole",
                  "nameLocation": "4651:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "4670:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "4662:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4662:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4684:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "4676:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4676:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4661:31:0"
                  },
                  "returnParameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4737:0:0"
                  },
                  "scope": 295,
                  "src": "4642:138:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    377
                  ],
                  "body": {
                    "id": 188,
                    "nodeType": "Block",
                    "src": "5407:166:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 174,
                            "name": "callerConfirmation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "5421:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 175,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1340,
                              "src": "5443:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5443:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5421:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 182,
                        "nodeType": "IfStatement",
                        "src": "5417:102:0",
                        "trueBody": {
                          "id": 181,
                          "nodeType": "Block",
                          "src": "5457:62:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 178,
                                  "name": "AccessControlBadConfirmation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 308,
                                  "src": "5478:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5478:30:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 180,
                              "nodeType": "RevertStatement",
                              "src": "5471:37:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 184,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 169,
                              "src": "5541:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 185,
                              "name": "callerConfirmation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "5547:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 183,
                            "name": "_revokeRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "5529:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5529:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 187,
                        "nodeType": "ExpressionStatement",
                        "src": "5529:37:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 167,
                    "nodeType": "StructuredDocumentation",
                    "src": "4786:537:0",
                    "text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
                  },
                  "functionSelector": "36568abe",
                  "id": 189,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "renounceRole",
                  "nameLocation": "5337:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 169,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "5358:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "5350:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5350:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "callerConfirmation",
                        "nameLocation": "5372:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "5364:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5364:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5349:42:0"
                  },
                  "returnParameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5407:0:0"
                  },
                  "scope": 295,
                  "src": "5328:245:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 216,
                    "nodeType": "Block",
                    "src": "5771:174:0",
                    "statements": [
                      {
                        "assignments": [
                          198
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 198,
                            "mutability": "mutable",
                            "name": "previousAdminRole",
                            "nameLocation": "5789:17:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 216,
                            "src": "5781:25:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 197,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5781:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 202,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 200,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "5822:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 199,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "5809:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5809:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5781:46:0"
                      },
                      {
                        "expression": {
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 203,
                                "name": "_roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "5837:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                  "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                }
                              },
                              "id": 205,
                              "indexExpression": {
                                "id": 204,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 192,
                                "src": "5844:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5837:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                "typeString": "struct AccessControl.RoleData storage ref"
                              }
                            },
                            "id": 206,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5850:9:0",
                            "memberName": "adminRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20,
                            "src": "5837:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 207,
                            "name": "adminRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 194,
                            "src": "5862:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5837:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 209,
                        "nodeType": "ExpressionStatement",
                        "src": "5837:34:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 211,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "5903:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 212,
                              "name": "previousAdminRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "5909:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 213,
                              "name": "adminRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 194,
                              "src": "5928:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 210,
                            "name": "RoleAdminChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "5886:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32,bytes32)"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5886:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 215,
                        "nodeType": "EmitStatement",
                        "src": "5881:57:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 190,
                    "nodeType": "StructuredDocumentation",
                    "src": "5579:114:0",
                    "text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
                  },
                  "id": 217,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setRoleAdmin",
                  "nameLocation": "5707:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "5729:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "5721:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5721:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 194,
                        "mutability": "mutable",
                        "name": "adminRole",
                        "nameLocation": "5743:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "5735:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5735:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5720:33:0"
                  },
                  "returnParameters": {
                    "id": 196,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5771:0:0"
                  },
                  "scope": 295,
                  "src": "5698:247:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 255,
                    "nodeType": "Block",
                    "src": "6262:233:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6276:23:0",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 228,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 220,
                                "src": "6285:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 229,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 222,
                                "src": "6291:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 227,
                              "name": "hasRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "6277:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (bytes32,address) view returns (bool)"
                              }
                            },
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6277:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 253,
                          "nodeType": "Block",
                          "src": "6452:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6473:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 226,
                              "id": 252,
                              "nodeType": "Return",
                              "src": "6466:12:0"
                            }
                          ]
                        },
                        "id": 254,
                        "nodeType": "IfStatement",
                        "src": "6272:217:0",
                        "trueBody": {
                          "id": 250,
                          "nodeType": "Block",
                          "src": "6301:145:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 232,
                                        "name": "_roles",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "6315:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                          "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                        }
                                      },
                                      "id": 234,
                                      "indexExpression": {
                                        "id": 233,
                                        "name": "role",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 220,
                                        "src": "6322:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6315:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                        "typeString": "struct AccessControl.RoleData storage ref"
                                      }
                                    },
                                    "id": 235,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6328:7:0",
                                    "memberName": "hasRole",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18,
                                    "src": "6315:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 237,
                                  "indexExpression": {
                                    "id": 236,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "6336:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6315:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 238,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6347:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "6315:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 240,
                              "nodeType": "ExpressionStatement",
                              "src": "6315:36:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 242,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 220,
                                    "src": "6382:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 243,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "6388:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 244,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1340,
                                      "src": "6397:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 245,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6397:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 241,
                                  "name": "RoleGranted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 326,
                                  "src": "6370:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address,address)"
                                  }
                                },
                                "id": 246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6370:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 247,
                              "nodeType": "EmitStatement",
                              "src": "6365:45:0"
                            },
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6431:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 226,
                              "id": 249,
                              "nodeType": "Return",
                              "src": "6424:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 218,
                    "nodeType": "StructuredDocumentation",
                    "src": "5951:223:0",
                    "text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
                  },
                  "id": 256,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_grantRole",
                  "nameLocation": "6188:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "6207:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6199:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 219,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6199:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "6221:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6213:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6213:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6198:31:0"
                  },
                  "returnParameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 225,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6256:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6256:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6255:6:0"
                  },
                  "scope": 295,
                  "src": "6179:316:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 293,
                    "nodeType": "Block",
                    "src": "6816:233:0",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 267,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 259,
                              "src": "6838:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 268,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 261,
                              "src": "6844:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 266,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "6830:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6830:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 291,
                          "nodeType": "Block",
                          "src": "7006:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7027:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 265,
                              "id": 290,
                              "nodeType": "Return",
                              "src": "7020:12:0"
                            }
                          ]
                        },
                        "id": 292,
                        "nodeType": "IfStatement",
                        "src": "6826:217:0",
                        "trueBody": {
                          "id": 288,
                          "nodeType": "Block",
                          "src": "6854:146:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 270,
                                        "name": "_roles",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "6868:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                          "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                        }
                                      },
                                      "id": 272,
                                      "indexExpression": {
                                        "id": 271,
                                        "name": "role",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 259,
                                        "src": "6875:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6868:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                        "typeString": "struct AccessControl.RoleData storage ref"
                                      }
                                    },
                                    "id": 273,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6881:7:0",
                                    "memberName": "hasRole",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18,
                                    "src": "6868:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 275,
                                  "indexExpression": {
                                    "id": 274,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 261,
                                    "src": "6889:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6868:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6900:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "6868:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 278,
                              "nodeType": "ExpressionStatement",
                              "src": "6868:37:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 280,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 259,
                                    "src": "6936:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 281,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 261,
                                    "src": "6942:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 282,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1340,
                                      "src": "6951:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 283,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6951:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 279,
                                  "name": "RoleRevoked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 335,
                                  "src": "6924:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address,address)"
                                  }
                                },
                                "id": 284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6924:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 285,
                              "nodeType": "EmitStatement",
                              "src": "6919:45:0"
                            },
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6985:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 265,
                              "id": 287,
                              "nodeType": "Return",
                              "src": "6978:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 257,
                    "nodeType": "StructuredDocumentation",
                    "src": "6501:226:0",
                    "text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
                  },
                  "id": 294,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_revokeRole",
                  "nameLocation": "6741:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 259,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "6761:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6753:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 258,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6753:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "6775:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6767:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 260,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6767:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6752:31:0"
                  },
                  "returnParameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6810:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6810:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6809:6:0"
                  },
                  "scope": 295,
                  "src": "6732:317:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 296,
              "src": "1953:5098:0",
              "usedErrors": [
                305,
                308
              ],
              "usedEvents": [
                317,
                326,
                335
              ]
            }
          ],
          "src": "108:6944:0"
        }
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "id": 1,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
          "exportedSymbols": {
            "IAccessControl": [
              378
            ]
          },
          "id": 379,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 297,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAccessControl",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 298,
                "nodeType": "StructuredDocumentation",
                "src": "135:90:1",
                "text": " @dev External interface of AccessControl declared to support ERC-165 detection."
              },
              "fullyImplemented": false,
              "id": 378,
              "linearizedBaseContracts": [
                378
              ],
              "name": "IAccessControl",
              "nameLocation": "236:14:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 299,
                    "nodeType": "StructuredDocumentation",
                    "src": "257:56:1",
                    "text": " @dev The `account` is missing a role."
                  },
                  "errorSelector": "e2517d3f",
                  "id": 305,
                  "name": "AccessControlUnauthorizedAccount",
                  "nameLocation": "324:32:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 304,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 301,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "365:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "357:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 300,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "357:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "neededRole",
                        "nameLocation": "382:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "374:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "374:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "356:37:1"
                  },
                  "src": "318:76:1"
                },
                {
                  "documentation": {
                    "id": 306,
                    "nodeType": "StructuredDocumentation",
                    "src": "400:148:1",
                    "text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
                  },
                  "errorSelector": "6697b232",
                  "id": 308,
                  "name": "AccessControlBadConfirmation",
                  "nameLocation": "559:28:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 307,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "587:2:1"
                  },
                  "src": "553:37:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 309,
                    "nodeType": "StructuredDocumentation",
                    "src": "596:254:1",
                    "text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
                  },
                  "eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
                  "id": 317,
                  "name": "RoleAdminChanged",
                  "nameLocation": "861:16:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 311,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "894:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "878:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 310,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "878:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 313,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousAdminRole",
                        "nameLocation": "916:17:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "900:33:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 312,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "900:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 315,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newAdminRole",
                        "nameLocation": "951:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "935:28:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 314,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "935:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "877:87:1"
                  },
                  "src": "855:110:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 318,
                    "nodeType": "StructuredDocumentation",
                    "src": "971:295:1",
                    "text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
                  },
                  "eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
                  "id": 326,
                  "name": "RoleGranted",
                  "nameLocation": "1277:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 320,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1305:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1289:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 319,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1289:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 322,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1327:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1311:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1311:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 324,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1352:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1336:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1336:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1288:71:1"
                  },
                  "src": "1271:89:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 327,
                    "nodeType": "StructuredDocumentation",
                    "src": "1366:275:1",
                    "text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
                  },
                  "eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
                  "id": 335,
                  "name": "RoleRevoked",
                  "nameLocation": "1652:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 334,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 329,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1680:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1664:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 328,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1664:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 331,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1702:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1686:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 330,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1686:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 333,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1727:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1711:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1711:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1663:71:1"
                  },
                  "src": "1646:89:1"
                },
                {
                  "documentation": {
                    "id": 336,
                    "nodeType": "StructuredDocumentation",
                    "src": "1741:76:1",
                    "text": " @dev Returns `true` if `account` has been granted `role`."
                  },
                  "functionSelector": "91d14854",
                  "id": 345,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasRole",
                  "nameLocation": "1831:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1847:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1839:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1839:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1861:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1853:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1853:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1838:31:1"
                  },
                  "returnParameters": {
                    "id": 344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1893:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1893:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1892:6:1"
                  },
                  "scope": 378,
                  "src": "1822:77:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 346,
                    "nodeType": "StructuredDocumentation",
                    "src": "1905:184:1",
                    "text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
                  },
                  "functionSelector": "248a9ca3",
                  "id": 353,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoleAdmin",
                  "nameLocation": "2103:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2124:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "2116:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2116:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2115:14:1"
                  },
                  "returnParameters": {
                    "id": 352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "2153:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2153:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2152:9:1"
                  },
                  "scope": 378,
                  "src": "2094:68:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 354,
                    "nodeType": "StructuredDocumentation",
                    "src": "2168:239:1",
                    "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
                  },
                  "functionSelector": "2f2ff15d",
                  "id": 361,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "grantRole",
                  "nameLocation": "2421:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 356,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2439:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 361,
                        "src": "2431:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 355,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2431:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2453:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 361,
                        "src": "2445:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2445:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2430:31:1"
                  },
                  "returnParameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2470:0:1"
                  },
                  "scope": 378,
                  "src": "2412:59:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 362,
                    "nodeType": "StructuredDocumentation",
                    "src": "2477:223:1",
                    "text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
                  },
                  "functionSelector": "d547741f",
                  "id": 369,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeRole",
                  "nameLocation": "2714:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 367,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 364,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2733:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2725:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 363,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 366,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2747:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2739:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 365,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2739:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2724:31:1"
                  },
                  "returnParameters": {
                    "id": 368,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2764:0:1"
                  },
                  "scope": 378,
                  "src": "2705:60:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 370,
                    "nodeType": "StructuredDocumentation",
                    "src": "2771:491:1",
                    "text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
                  },
                  "functionSelector": "36568abe",
                  "id": 377,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "renounceRole",
                  "nameLocation": "3276:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 375,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 372,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3297:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "3289:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 371,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3289:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 374,
                        "mutability": "mutable",
                        "name": "callerConfirmation",
                        "nameLocation": "3311:18:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "3303:26:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 373,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3303:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3288:42:1"
                  },
                  "returnParameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3339:0:1"
                  },
                  "scope": 378,
                  "src": "3267:73:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 379,
              "src": "226:3116:1",
              "usedErrors": [
                305,
                308
              ],
              "usedEvents": [
                317,
                326,
                335
              ]
            }
          ],
          "src": "109:3234:1"
        }
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "id": 2,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              1358
            ],
            "Ownable": [
              526
            ]
          },
          "id": 527,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 380,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 382,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 527,
              "sourceUnit": 1359,
              "src": "128:45:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 381,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1358,
                    "src": "136:7:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 384,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1358,
                    "src": "692:7:2"
                  },
                  "id": 385,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:2"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 383,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:2",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 526,
              "linearizedBaseContracts": [
                526,
                1358
              ],
              "name": "Ownable",
              "nameLocation": "681:7:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 387,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "706:22:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 388,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:2",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 392,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 391,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 390,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "858:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:2"
                  },
                  "src": "825:50:2"
                },
                {
                  "documentation": {
                    "id": 393,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:2",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 397,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 396,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 395,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 397,
                        "src": "994:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 394,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:2"
                  },
                  "src": "968:41:2"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 403,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 402,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 399,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 403,
                        "src": "1042:29:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 398,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 401,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 403,
                        "src": "1073:24:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 400,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:2"
                  },
                  "src": "1015:84:2"
                },
                {
                  "body": {
                    "id": 428,
                    "nodeType": "Block",
                    "src": "1259:153:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 409,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 406,
                            "src": "1273:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 410,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 423,
                        "nodeType": "IfStatement",
                        "src": "1269:95:2",
                        "trueBody": {
                          "id": 422,
                          "nodeType": "Block",
                          "src": "1301:63:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 418,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 417,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 416,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 419,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 415,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 397,
                                  "src": "1322:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 421,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 425,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 406,
                              "src": "1392:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 424,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 525,
                            "src": "1373:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 427,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 404,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:2",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 429,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 407,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 406,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 429,
                        "src": "1237:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 405,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:2"
                  },
                  "returnParameters": {
                    "id": 408,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:2"
                  },
                  "scope": 526,
                  "src": "1225:187:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 436,
                    "nodeType": "Block",
                    "src": "1521:41:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 432,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 463,
                            "src": "1531:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 434,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:2"
                      },
                      {
                        "id": 435,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 430,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:2",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 437,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 431,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:2"
                  },
                  "src": "1500:62:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 445,
                    "nodeType": "Block",
                    "src": "1693:30:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 443,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 387,
                          "src": "1710:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 442,
                        "id": 444,
                        "nodeType": "Return",
                        "src": "1703:13:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 438,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:2",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 446,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 439,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:2"
                  },
                  "returnParameters": {
                    "id": 442,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 441,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 446,
                        "src": "1684:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 440,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:2"
                  },
                  "scope": 526,
                  "src": "1638:85:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 462,
                    "nodeType": "Block",
                    "src": "1841:117:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 450,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "1855:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 452,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1340,
                              "src": "1866:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 461,
                        "nodeType": "IfStatement",
                        "src": "1851:101:2",
                        "trueBody": {
                          "id": 460,
                          "nodeType": "Block",
                          "src": "1880:72:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 456,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1340,
                                      "src": "1928:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 457,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 455,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 392,
                                  "src": "1901:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 458,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 459,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 447,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:2",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 463,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 448,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:2"
                  },
                  "returnParameters": {
                    "id": 449,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:2"
                  },
                  "scope": 526,
                  "src": "1796:162:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 476,
                    "nodeType": "Block",
                    "src": "2347:47:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 472,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 470,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 469,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 525,
                            "src": "2357:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 475,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 464,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:2",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 477,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 467,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 466,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 437,
                        "src": "2337:9:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:2"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 465,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:2"
                  },
                  "returnParameters": {
                    "id": 468,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:2"
                  },
                  "scope": 526,
                  "src": "2293:101:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 504,
                    "nodeType": "Block",
                    "src": "2613:145:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 485,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "2627:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 486,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 499,
                        "nodeType": "IfStatement",
                        "src": "2623:91:2",
                        "trueBody": {
                          "id": 498,
                          "nodeType": "Block",
                          "src": "2651:63:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 494,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 493,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 492,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 495,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 491,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 397,
                                  "src": "2672:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 496,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 497,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 501,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "2742:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 500,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 525,
                            "src": "2723:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 503,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 478,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:2",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 505,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 483,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 482,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 437,
                        "src": "2603:9:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:2"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 481,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 480,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 505,
                        "src": "2570:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 479,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:2"
                  },
                  "returnParameters": {
                    "id": 484,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:2"
                  },
                  "scope": 526,
                  "src": "2543:215:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 524,
                    "nodeType": "Block",
                    "src": "2975:124:2",
                    "statements": [
                      {
                        "assignments": [
                          512
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 512,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 524,
                            "src": "2985:16:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 511,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 514,
                        "initialValue": {
                          "id": 513,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 387,
                          "src": "3004:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:2"
                      },
                      {
                        "expression": {
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 515,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 387,
                            "src": "3020:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 516,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 508,
                            "src": "3029:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 518,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 520,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 512,
                              "src": "3073:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 521,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 508,
                              "src": "3083:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 519,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "3052:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 523,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 506,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:2",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 525,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 509,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 508,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 525,
                        "src": "2940:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 507,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:2"
                  },
                  "returnParameters": {
                    "id": 510,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:2"
                  },
                  "scope": 526,
                  "src": "2912:187:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 527,
              "src": "663:2438:2",
              "usedErrors": [
                392,
                397
              ],
              "usedEvents": [
                403
              ]
            }
          ],
          "src": "102:3000:2"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "id": 3,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              663
            ],
            "IERC20Errors": [
              568
            ],
            "IERC721Errors": [
              616
            ]
          },
          "id": 664,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 528,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 529,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:3",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 568,
              "linearizedBaseContracts": [
                568
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 530,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:3",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 538,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 532,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "654:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 534,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "670:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 533,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 536,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "687:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:3"
                  },
                  "src": "623:80:3"
                },
                {
                  "documentation": {
                    "id": 539,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:3",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 543,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 542,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 541,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 543,
                        "src": "891:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 540,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:3"
                  },
                  "src": "866:41:3"
                },
                {
                  "documentation": {
                    "id": 544,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:3",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 548,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 547,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 546,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 548,
                        "src": "1104:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 545,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:3"
                  },
                  "src": "1077:45:3"
                },
                {
                  "documentation": {
                    "id": 549,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:3",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 557,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 556,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 551,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 557,
                        "src": "1511:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 553,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 557,
                        "src": "1528:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 552,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 555,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 557,
                        "src": "1547:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 554,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:3"
                  },
                  "src": "1478:85:3"
                },
                {
                  "documentation": {
                    "id": 558,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:3",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 562,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 561,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 560,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 562,
                        "src": "1775:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 559,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:3"
                  },
                  "src": "1748:45:3"
                },
                {
                  "documentation": {
                    "id": 563,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:3",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 567,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 566,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 565,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "2025:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 564,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:3"
                  },
                  "src": "1999:43:3"
                }
              ],
              "scope": 664,
              "src": "280:1764:3",
              "usedErrors": [
                538,
                543,
                548,
                557,
                562,
                567
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 569,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:3",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 616,
              "linearizedBaseContracts": [
                616
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 570,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:3",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 574,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 573,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 572,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 574,
                        "src": "2469:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 571,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:3"
                  },
                  "src": "2444:40:3"
                },
                {
                  "documentation": {
                    "id": 575,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:3",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 579,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 578,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 577,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 579,
                        "src": "2656:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 576,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:3"
                  },
                  "src": "2627:46:3"
                },
                {
                  "documentation": {
                    "id": 580,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:3",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 588,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 587,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 582,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 588,
                        "src": "3000:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 581,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 584,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 588,
                        "src": "3016:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 583,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 586,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 588,
                        "src": "3033:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 585,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:3"
                  },
                  "src": "2973:75:3"
                },
                {
                  "documentation": {
                    "id": 589,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:3",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 593,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 592,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 591,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 593,
                        "src": "3237:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 590,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:3"
                  },
                  "src": "3211:42:3"
                },
                {
                  "documentation": {
                    "id": 594,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:3",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 598,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 597,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 596,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 598,
                        "src": "3451:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 595,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:3"
                  },
                  "src": "3423:46:3"
                },
                {
                  "documentation": {
                    "id": 599,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:3",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 605,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 604,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 601,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 605,
                        "src": "3760:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 600,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 603,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 605,
                        "src": "3778:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 602,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:3"
                  },
                  "src": "3727:68:3"
                },
                {
                  "documentation": {
                    "id": 606,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:3",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 610,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 609,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 608,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "4008:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 607,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:3"
                  },
                  "src": "3980:46:3"
                },
                {
                  "documentation": {
                    "id": 611,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:3",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 615,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 614,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 613,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 615,
                        "src": "4262:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 612,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:3"
                  },
                  "src": "4234:46:3"
                }
              ],
              "scope": 664,
              "src": "2190:2092:3",
              "usedErrors": [
                574,
                579,
                588,
                593,
                598,
                605,
                610,
                615
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 617,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:3",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 663,
              "linearizedBaseContracts": [
                663
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 618,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:3",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 628,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 627,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 620,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "4860:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 619,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 622,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "4876:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 621,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 624,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "4893:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 626,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "4909:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 625,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:3"
                  },
                  "src": "4827:99:3"
                },
                {
                  "documentation": {
                    "id": 629,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:3",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 633,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 632,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 631,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 633,
                        "src": "5116:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 630,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:3"
                  },
                  "src": "5089:43:3"
                },
                {
                  "documentation": {
                    "id": 634,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:3",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 638,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 637,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 636,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 638,
                        "src": "5331:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 635,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:3"
                  },
                  "src": "5302:47:3"
                },
                {
                  "documentation": {
                    "id": 639,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:3",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 645,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 644,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 641,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 645,
                        "src": "5651:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 640,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 643,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 645,
                        "src": "5669:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 642,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:3"
                  },
                  "src": "5616:68:3"
                },
                {
                  "documentation": {
                    "id": 646,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:3",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 650,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 649,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 648,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "5898:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 647,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:3"
                  },
                  "src": "5869:47:3"
                },
                {
                  "documentation": {
                    "id": 651,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:3",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 655,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 654,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 653,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 655,
                        "src": "6153:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 652,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:3"
                  },
                  "src": "6124:47:3"
                },
                {
                  "documentation": {
                    "id": 656,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:3",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 662,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 661,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 658,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 662,
                        "src": "6494:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 657,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 660,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 662,
                        "src": "6513:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 659,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:3"
                  },
                  "src": "6462:73:3"
                }
              ],
              "scope": 664,
              "src": "4430:2107:3",
              "usedErrors": [
                628,
                633,
                638,
                645,
                650,
                655,
                662
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:3"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "id": 4,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              1358
            ],
            "ERC20": [
              1178
            ],
            "IERC20": [
              1256
            ],
            "IERC20Errors": [
              568
            ],
            "IERC20Metadata": [
              1328
            ]
          },
          "id": 1179,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 665,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 667,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1179,
              "sourceUnit": 1257,
              "src": "131:36:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 666,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1256,
                    "src": "139:6:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 669,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1179,
              "sourceUnit": 1329,
              "src": "168:63:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 668,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1328,
                    "src": "176:14:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 671,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1179,
              "sourceUnit": 1359,
              "src": "232:48:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 670,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1358,
                    "src": "240:7:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 673,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1179,
              "sourceUnit": 664,
              "src": "281:65:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 672,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 568,
                    "src": "289:12:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 675,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1358,
                    "src": "1133:7:4"
                  },
                  "id": 676,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:4"
                },
                {
                  "baseName": {
                    "id": 677,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1256,
                    "src": "1142:6:4"
                  },
                  "id": 678,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:4"
                },
                {
                  "baseName": {
                    "id": 679,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1328,
                    "src": "1150:14:4"
                  },
                  "id": 680,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:4"
                },
                {
                  "baseName": {
                    "id": 681,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 568,
                    "src": "1166:12:4"
                  },
                  "id": 682,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:4"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 674,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:4",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 1178,
              "linearizedBaseContracts": [
                1178,
                568,
                1328,
                1256,
                1358
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 686,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "1185:53:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 685,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:4",
                    "keyType": {
                      "id": 683,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 684,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 692,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "1245:83:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 691,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:4",
                    "keyType": {
                      "id": 687,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 690,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:4",
                      "keyType": {
                        "id": 688,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 689,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 694,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "1335:28:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 696,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "1370:20:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 695,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 698,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "1396:22:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 697,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 714,
                    "nodeType": "Block",
                    "src": "1638:57:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 706,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "1648:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 707,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 701,
                            "src": "1656:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 709,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:4"
                      },
                      {
                        "expression": {
                          "id": 712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 710,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 698,
                            "src": "1671:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 711,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 703,
                            "src": "1681:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 713,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 699,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:4",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 715,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 704,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 701,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 715,
                        "src": "1594:19:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 700,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 703,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 715,
                        "src": "1615:21:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 702,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:4"
                  },
                  "returnParameters": {
                    "id": 705,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:4"
                  },
                  "scope": 1178,
                  "src": "1582:113:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1315
                  ],
                  "body": {
                    "id": 723,
                    "nodeType": "Block",
                    "src": "1820:29:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 721,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "1837:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 720,
                        "id": 722,
                        "nodeType": "Return",
                        "src": "1830:12:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 716,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:4",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 724,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 717,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:4"
                  },
                  "returnParameters": {
                    "id": 720,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 719,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 724,
                        "src": "1805:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 718,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:4"
                  },
                  "scope": 1178,
                  "src": "1760:89:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1321
                  ],
                  "body": {
                    "id": 732,
                    "nodeType": "Block",
                    "src": "2024:31:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 730,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 698,
                          "src": "2041:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 729,
                        "id": 731,
                        "nodeType": "Return",
                        "src": "2034:14:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 725,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:4",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 733,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 726,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:4"
                  },
                  "returnParameters": {
                    "id": 729,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 728,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 733,
                        "src": "2009:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 727,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:4"
                  },
                  "scope": 1178,
                  "src": "1962:93:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1327
                  ],
                  "body": {
                    "id": 741,
                    "nodeType": "Block",
                    "src": "2744:26:4",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 738,
                        "id": 740,
                        "nodeType": "Return",
                        "src": "2754:9:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 734,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:4",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 742,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 735,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:4"
                  },
                  "returnParameters": {
                    "id": 738,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 737,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 742,
                        "src": "2737:5:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 736,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:4"
                  },
                  "scope": 1178,
                  "src": "2688:82:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1205
                  ],
                  "body": {
                    "id": 750,
                    "nodeType": "Block",
                    "src": "2891:36:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 748,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 694,
                          "src": "2908:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 747,
                        "id": 749,
                        "nodeType": "Return",
                        "src": "2901:19:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 743,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:49:4",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 751,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2839:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 744,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2850:2:4"
                  },
                  "returnParameters": {
                    "id": 747,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 746,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 751,
                        "src": "2882:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 745,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2882:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2881:9:4"
                  },
                  "scope": 1178,
                  "src": "2830:97:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1213
                  ],
                  "body": {
                    "id": 763,
                    "nodeType": "Block",
                    "src": "3059:42:4",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 759,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "3076:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 761,
                          "indexExpression": {
                            "id": 760,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 754,
                            "src": "3086:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3076:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 758,
                        "id": 762,
                        "nodeType": "Return",
                        "src": "3069:25:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 752,
                    "nodeType": "StructuredDocumentation",
                    "src": "2933:47:4",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 764,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2994:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 755,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 754,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3012:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 764,
                        "src": "3004:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 753,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3004:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3003:17:4"
                  },
                  "returnParameters": {
                    "id": 758,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 757,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 764,
                        "src": "3050:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 756,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3050:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3049:9:4"
                  },
                  "scope": 1178,
                  "src": "2985:116:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1223
                  ],
                  "body": {
                    "id": 787,
                    "nodeType": "Block",
                    "src": "3371:103:4",
                    "statements": [
                      {
                        "assignments": [
                          775
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 775,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3389:5:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 787,
                            "src": "3381:13:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 774,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3381:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 778,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 776,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "3397:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3397:12:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3381:28:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 780,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 775,
                              "src": "3429:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 781,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 767,
                              "src": "3436:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 782,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 769,
                              "src": "3440:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 779,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 908,
                            "src": "3419:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3419:27:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 784,
                        "nodeType": "ExpressionStatement",
                        "src": "3419:27:4"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3463:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 773,
                        "id": 786,
                        "nodeType": "Return",
                        "src": "3456:11:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 765,
                    "nodeType": "StructuredDocumentation",
                    "src": "3107:184:4",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 788,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3305:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 770,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 767,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3322:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 788,
                        "src": "3314:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 766,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3314:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 769,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3334:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 788,
                        "src": "3326:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 768,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3326:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3313:27:4"
                  },
                  "returnParameters": {
                    "id": 773,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 772,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 788,
                        "src": "3365:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 771,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3365:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3364:6:4"
                  },
                  "scope": 1178,
                  "src": "3296:178:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1233
                  ],
                  "body": {
                    "id": 804,
                    "nodeType": "Block",
                    "src": "3621:51:4",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 798,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 692,
                              "src": "3638:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 800,
                            "indexExpression": {
                              "id": 799,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 791,
                              "src": "3650:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3638:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 802,
                          "indexExpression": {
                            "id": 801,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "3657:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3638:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 797,
                        "id": 803,
                        "nodeType": "Return",
                        "src": "3631:34:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 789,
                    "nodeType": "StructuredDocumentation",
                    "src": "3480:47:4",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 805,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3541:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 794,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 791,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3559:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 805,
                        "src": "3551:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 790,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3551:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 793,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3574:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 805,
                        "src": "3566:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 792,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3566:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3550:32:4"
                  },
                  "returnParameters": {
                    "id": 797,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 796,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 805,
                        "src": "3612:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 795,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3612:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3611:9:4"
                  },
                  "scope": 1178,
                  "src": "3532:140:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1243
                  ],
                  "body": {
                    "id": 828,
                    "nodeType": "Block",
                    "src": "4058:107:4",
                    "statements": [
                      {
                        "assignments": [
                          816
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 816,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4076:5:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 828,
                            "src": "4068:13:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 815,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4068:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 819,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 817,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "4084:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4084:12:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4068:28:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 821,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 816,
                              "src": "4115:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 822,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 808,
                              "src": "4122:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 823,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 810,
                              "src": "4131:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 820,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1069,
                              1129
                            ],
                            "referencedDeclaration": 1069,
                            "src": "4106:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4106:31:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 825,
                        "nodeType": "ExpressionStatement",
                        "src": "4106:31:4"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4154:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 814,
                        "id": 827,
                        "nodeType": "Return",
                        "src": "4147:11:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 806,
                    "nodeType": "StructuredDocumentation",
                    "src": "3678:296:4",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 829,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3988:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 811,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 808,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4004:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 829,
                        "src": "3996:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 807,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3996:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 810,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4021:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 829,
                        "src": "4013:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 809,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4013:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3995:32:4"
                  },
                  "returnParameters": {
                    "id": 814,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 813,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 829,
                        "src": "4052:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 812,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4052:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4051:6:4"
                  },
                  "scope": 1178,
                  "src": "3979:186:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1255
                  ],
                  "body": {
                    "id": 860,
                    "nodeType": "Block",
                    "src": "4850:151:4",
                    "statements": [
                      {
                        "assignments": [
                          842
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 842,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4868:7:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 860,
                            "src": "4860:15:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 841,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4860:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 845,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 843,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "4878:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4878:12:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4860:30:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 847,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 832,
                              "src": "4916:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 848,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 842,
                              "src": "4922:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 849,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 836,
                              "src": "4931:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 846,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1177,
                            "src": "4900:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4900:37:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 851,
                        "nodeType": "ExpressionStatement",
                        "src": "4900:37:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 853,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 832,
                              "src": "4957:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 854,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 834,
                              "src": "4963:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 855,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 836,
                              "src": "4967:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 852,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 908,
                            "src": "4947:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4947:26:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 857,
                        "nodeType": "ExpressionStatement",
                        "src": "4947:26:4"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4990:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 840,
                        "id": 859,
                        "nodeType": "Return",
                        "src": "4983:11:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 830,
                    "nodeType": "StructuredDocumentation",
                    "src": "4171:581:4",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 861,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4766:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 837,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 832,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4787:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 861,
                        "src": "4779:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 831,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4779:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 834,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4801:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 861,
                        "src": "4793:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 833,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4793:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 836,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4813:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 861,
                        "src": "4805:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 835,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4805:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4778:41:4"
                  },
                  "returnParameters": {
                    "id": 840,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 839,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 861,
                        "src": "4844:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 838,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4844:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4843:6:4"
                  },
                  "scope": 1178,
                  "src": "4757:244:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 907,
                    "nodeType": "Block",
                    "src": "5443:231:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 871,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 864,
                            "src": "5457:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5473:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5465:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 872,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5465:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5465:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5457:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 885,
                        "nodeType": "IfStatement",
                        "src": "5453:86:4",
                        "trueBody": {
                          "id": 884,
                          "nodeType": "Block",
                          "src": "5477:62:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 880,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5525:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 879,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5517:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 878,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5517:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 881,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5517:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 877,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 543,
                                  "src": "5498:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 882,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5498:30:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 883,
                              "nodeType": "RevertStatement",
                              "src": "5491:37:4"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 886,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 866,
                            "src": "5552:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5566:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5558:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 887,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5558:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5558:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5552:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 900,
                        "nodeType": "IfStatement",
                        "src": "5548:86:4",
                        "trueBody": {
                          "id": 899,
                          "nodeType": "Block",
                          "src": "5570:64:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 895,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5620:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 894,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5612:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 893,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5612:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 896,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5612:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 892,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 548,
                                  "src": "5591:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 897,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5591:32:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 898,
                              "nodeType": "RevertStatement",
                              "src": "5584:39:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 902,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 864,
                              "src": "5651:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 903,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 866,
                              "src": "5657:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 904,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 868,
                              "src": "5661:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 901,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "5643:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5643:24:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 906,
                        "nodeType": "ExpressionStatement",
                        "src": "5643:24:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 862,
                    "nodeType": "StructuredDocumentation",
                    "src": "5007:362:4",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 908,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5383:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 869,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 864,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5401:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 908,
                        "src": "5393:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 863,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5393:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 866,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5415:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 908,
                        "src": "5407:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 865,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5407:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 868,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5427:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 908,
                        "src": "5419:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 867,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5419:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5392:41:4"
                  },
                  "returnParameters": {
                    "id": 870,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5443:0:4"
                  },
                  "scope": 1178,
                  "src": "5374:300:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 984,
                    "nodeType": "Block",
                    "src": "6064:1032:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 918,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 911,
                            "src": "6078:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6094:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6086:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 919,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6086:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6086:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6078:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 955,
                          "nodeType": "Block",
                          "src": "6252:362:4",
                          "statements": [
                            {
                              "assignments": [
                                930
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 930,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6274:11:4",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 955,
                                  "src": "6266:19:4",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 929,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6266:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 934,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 931,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 686,
                                  "src": "6288:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 933,
                                "indexExpression": {
                                  "id": 932,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 911,
                                  "src": "6298:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6288:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6266:37:4"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 937,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 935,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 930,
                                  "src": "6321:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 936,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 915,
                                  "src": "6335:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6321:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 945,
                              "nodeType": "IfStatement",
                              "src": "6317:115:4",
                              "trueBody": {
                                "id": 944,
                                "nodeType": "Block",
                                "src": "6342:90:4",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 939,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 911,
                                          "src": "6392:4:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 940,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 930,
                                          "src": "6398:11:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 941,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 915,
                                          "src": "6411:5:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 938,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 538,
                                        "src": "6367:24:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 942,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6367:50:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 943,
                                    "nodeType": "RevertStatement",
                                    "src": "6360:57:4"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 954,
                              "nodeType": "UncheckedBlock",
                              "src": "6445:159:4",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 952,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 946,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 686,
                                        "src": "6552:9:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 948,
                                      "indexExpression": {
                                        "id": 947,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 911,
                                        "src": "6562:4:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6552:15:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 951,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 949,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 930,
                                        "src": "6570:11:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 950,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 915,
                                        "src": "6584:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6570:19:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6552:37:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 953,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6552:37:4"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 956,
                        "nodeType": "IfStatement",
                        "src": "6074:540:4",
                        "trueBody": {
                          "id": 928,
                          "nodeType": "Block",
                          "src": "6098:148:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 926,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 924,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 694,
                                  "src": "6214:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 925,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 915,
                                  "src": "6230:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6214:21:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 927,
                              "nodeType": "ExpressionStatement",
                              "src": "6214:21:4"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 957,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 913,
                            "src": "6628:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 960,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6642:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 959,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6634:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 958,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6634:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6634:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6628:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 976,
                          "nodeType": "Block",
                          "src": "6843:206:4",
                          "statements": [
                            {
                              "id": 975,
                              "nodeType": "UncheckedBlock",
                              "src": "6857:182:4",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 973,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 969,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 686,
                                        "src": "7002:9:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 971,
                                      "indexExpression": {
                                        "id": 970,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 913,
                                        "src": "7012:2:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7002:13:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 972,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 915,
                                      "src": "7019:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7002:22:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 974,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7002:22:4"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 977,
                        "nodeType": "IfStatement",
                        "src": "6624:425:4",
                        "trueBody": {
                          "id": 968,
                          "nodeType": "Block",
                          "src": "6646:191:4",
                          "statements": [
                            {
                              "id": 967,
                              "nodeType": "UncheckedBlock",
                              "src": "6660:167:4",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 965,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 963,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 694,
                                      "src": "6791:12:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 964,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 915,
                                      "src": "6807:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6791:21:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 966,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6791:21:4"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 979,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 911,
                              "src": "7073:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 980,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 913,
                              "src": "7079:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 981,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 915,
                              "src": "7083:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 978,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1190,
                            "src": "7064:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7064:25:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 983,
                        "nodeType": "EmitStatement",
                        "src": "7059:30:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 909,
                    "nodeType": "StructuredDocumentation",
                    "src": "5680:304:4",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 985,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5998:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 916,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 911,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6014:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 985,
                        "src": "6006:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 910,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6006:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 913,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6028:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 985,
                        "src": "6020:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 912,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6020:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 915,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6040:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 985,
                        "src": "6032:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 914,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6032:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6005:41:4"
                  },
                  "returnParameters": {
                    "id": 917,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6064:0:4"
                  },
                  "scope": 1178,
                  "src": "5989:1107:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1017,
                    "nodeType": "Block",
                    "src": "7495:152:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 993,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 988,
                            "src": "7509:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7528:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7520:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 994,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7520:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7520:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7509:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1007,
                        "nodeType": "IfStatement",
                        "src": "7505:91:4",
                        "trueBody": {
                          "id": 1006,
                          "nodeType": "Block",
                          "src": "7532:64:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1002,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7582:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1001,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7574:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1000,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7574:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1003,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7574:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 999,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 548,
                                  "src": "7553:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1004,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7553:32:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1005,
                              "nodeType": "RevertStatement",
                              "src": "7546:39:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1011,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7621:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1010,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7613:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1009,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7613:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7613:10:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1013,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 988,
                              "src": "7625:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1014,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 990,
                              "src": "7634:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1008,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "7605:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7605:35:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1016,
                        "nodeType": "ExpressionStatement",
                        "src": "7605:35:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 986,
                    "nodeType": "StructuredDocumentation",
                    "src": "7102:332:4",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 1018,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7448:5:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 991,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 988,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7462:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1018,
                        "src": "7454:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 987,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7454:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 990,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7479:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1018,
                        "src": "7471:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 989,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7471:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7453:32:4"
                  },
                  "returnParameters": {
                    "id": 992,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7495:0:4"
                  },
                  "scope": 1178,
                  "src": "7439:208:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1050,
                    "nodeType": "Block",
                    "src": "8021:150:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1026,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1021,
                            "src": "8035:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1029,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8054:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8046:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1027,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8046:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8046:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8035:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1040,
                        "nodeType": "IfStatement",
                        "src": "8031:89:4",
                        "trueBody": {
                          "id": 1039,
                          "nodeType": "Block",
                          "src": "8058:62:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1035,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8106:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1034,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8098:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1033,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8098:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1036,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8098:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1032,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 543,
                                  "src": "8079:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1037,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8079:30:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1038,
                              "nodeType": "RevertStatement",
                              "src": "8072:37:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1042,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1021,
                              "src": "8137:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1045,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8154:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1044,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8146:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1043,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8146:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8146:10:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1047,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1023,
                              "src": "8158:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1041,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "8129:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8129:35:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1049,
                        "nodeType": "ExpressionStatement",
                        "src": "8129:35:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1019,
                    "nodeType": "StructuredDocumentation",
                    "src": "7653:307:4",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 1051,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7974:5:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1024,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1021,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7988:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "7980:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1020,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7980:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1023,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8005:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "7997:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1022,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7997:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7979:32:4"
                  },
                  "returnParameters": {
                    "id": 1025,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8021:0:4"
                  },
                  "scope": 1178,
                  "src": "7965:206:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1068,
                    "nodeType": "Block",
                    "src": "8781:54:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1062,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1054,
                              "src": "8800:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1063,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1056,
                              "src": "8807:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1064,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1058,
                              "src": "8816:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 1065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8823:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1061,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1069,
                              1129
                            ],
                            "referencedDeclaration": 1129,
                            "src": "8791:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 1066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8791:37:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1067,
                        "nodeType": "ExpressionStatement",
                        "src": "8791:37:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1052,
                    "nodeType": "StructuredDocumentation",
                    "src": "8177:525:4",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 1069,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8716:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1059,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1054,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8733:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1069,
                        "src": "8725:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1053,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8725:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1056,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8748:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1069,
                        "src": "8740:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1055,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8740:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1058,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8765:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1069,
                        "src": "8757:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1057,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8757:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8724:47:4"
                  },
                  "returnParameters": {
                    "id": 1060,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8781:0:4"
                  },
                  "scope": 1178,
                  "src": "8707:128:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1128,
                    "nodeType": "Block",
                    "src": "9780:334:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1081,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1072,
                            "src": "9794:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1084,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9811:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9803:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1082,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9803:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9803:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9794:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1095,
                        "nodeType": "IfStatement",
                        "src": "9790:89:4",
                        "trueBody": {
                          "id": 1094,
                          "nodeType": "Block",
                          "src": "9815:64:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1090,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9865:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1089,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9857:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1088,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9857:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1091,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9857:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1087,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 562,
                                  "src": "9836:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1092,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9836:32:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1093,
                              "nodeType": "RevertStatement",
                              "src": "9829:39:4"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1096,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1074,
                            "src": "9892:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1099,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9911:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9903:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1097,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9903:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9903:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9892:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1110,
                        "nodeType": "IfStatement",
                        "src": "9888:90:4",
                        "trueBody": {
                          "id": 1109,
                          "nodeType": "Block",
                          "src": "9915:63:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1105,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9964:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1104,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9956:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1103,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9956:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1106,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9956:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1102,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 567,
                                  "src": "9936:19:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1107,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9936:31:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1108,
                              "nodeType": "RevertStatement",
                              "src": "9929:38:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1111,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 692,
                                "src": "9987:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1114,
                              "indexExpression": {
                                "id": 1112,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "9999:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9987:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1115,
                            "indexExpression": {
                              "id": 1113,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1074,
                              "src": "10006:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9987:27:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1116,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1076,
                            "src": "10017:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9987:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1118,
                        "nodeType": "ExpressionStatement",
                        "src": "9987:35:4"
                      },
                      {
                        "condition": {
                          "id": 1119,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1078,
                          "src": "10036:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1127,
                        "nodeType": "IfStatement",
                        "src": "10032:76:4",
                        "trueBody": {
                          "id": 1126,
                          "nodeType": "Block",
                          "src": "10047:61:4",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1121,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1072,
                                    "src": "10075:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1122,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1074,
                                    "src": "10082:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1123,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1076,
                                    "src": "10091:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1120,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1199,
                                  "src": "10066:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 1124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10066:31:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1125,
                              "nodeType": "EmitStatement",
                              "src": "10061:36:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1070,
                    "nodeType": "StructuredDocumentation",
                    "src": "8841:836:4",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 1129,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9691:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1079,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1072,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9708:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1129,
                        "src": "9700:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1071,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9700:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1074,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9723:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1129,
                        "src": "9715:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1073,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9715:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1076,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9740:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1129,
                        "src": "9732:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1075,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9732:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1078,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9752:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1129,
                        "src": "9747:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1077,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9747:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9699:63:4"
                  },
                  "returnParameters": {
                    "id": 1080,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9780:0:4"
                  },
                  "scope": 1178,
                  "src": "9682:432:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1176,
                    "nodeType": "Block",
                    "src": "10485:387:4",
                    "statements": [
                      {
                        "assignments": [
                          1140
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1140,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10503:16:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1176,
                            "src": "10495:24:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1139,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10495:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1145,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1142,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1132,
                              "src": "10532:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1143,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1134,
                              "src": "10539:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1141,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 805,
                            "src": "10522:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 1144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10522:25:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10495:52:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1146,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1140,
                            "src": "10561:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1149,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10585:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1148,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10585:7:4",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 1147,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "10580:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10580:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 1151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10594:3:4",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10580:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10561:36:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1175,
                        "nodeType": "IfStatement",
                        "src": "10557:309:4",
                        "trueBody": {
                          "id": 1174,
                          "nodeType": "Block",
                          "src": "10599:267:4",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1153,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1140,
                                  "src": "10617:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 1154,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1136,
                                  "src": "10636:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10617:24:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1163,
                              "nodeType": "IfStatement",
                              "src": "10613:130:4",
                              "trueBody": {
                                "id": 1162,
                                "nodeType": "Block",
                                "src": "10643:100:4",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 1157,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1134,
                                          "src": "10695:7:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1158,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1140,
                                          "src": "10704:16:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 1159,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1136,
                                          "src": "10722:5:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1156,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 557,
                                        "src": "10668:26:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 1160,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10668:60:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 1161,
                                    "nodeType": "RevertStatement",
                                    "src": "10661:67:4"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 1173,
                              "nodeType": "UncheckedBlock",
                              "src": "10756:100:4",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1165,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1132,
                                        "src": "10793:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1166,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1134,
                                        "src": "10800:7:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1169,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1167,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1140,
                                          "src": "10809:16:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 1168,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1136,
                                          "src": "10828:5:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10809:24:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 1170,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10835:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 1164,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        1069,
                                        1129
                                      ],
                                      "referencedDeclaration": 1129,
                                      "src": "10784:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 1171,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10784:57:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1172,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10784:57:4"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1130,
                    "nodeType": "StructuredDocumentation",
                    "src": "10120:271:4",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 1177,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10405:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1137,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1132,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10429:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1177,
                        "src": "10421:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1131,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10421:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1134,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10444:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1177,
                        "src": "10436:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1133,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10436:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1136,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10461:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1177,
                        "src": "10453:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1135,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10453:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10420:47:4"
                  },
                  "returnParameters": {
                    "id": 1138,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10485:0:4"
                  },
                  "scope": 1178,
                  "src": "10396:476:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1179,
              "src": "1106:9768:4",
              "usedErrors": [
                538,
                543,
                548,
                557,
                562,
                567
              ],
              "usedEvents": [
                1190,
                1199
              ]
            }
          ],
          "src": "105:10770:4"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "id": 5,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1256
            ]
          },
          "id": 1257,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1180,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1181,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:5",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 1256,
              "linearizedBaseContracts": [
                1256
              ],
              "name": "IERC20",
              "nameLocation": "214:6:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1182,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:5",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 1190,
                  "name": "Transfer",
                  "nameLocation": "396:8:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1189,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1184,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1190,
                        "src": "405:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1183,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1186,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1190,
                        "src": "427:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1185,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1188,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1190,
                        "src": "447:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1187,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:5"
                  },
                  "src": "390:72:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1191,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:5",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 1199,
                  "name": "Approval",
                  "nameLocation": "627:8:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1193,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1199,
                        "src": "636:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1195,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1199,
                        "src": "659:23:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1197,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1199,
                        "src": "684:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1196,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:5"
                  },
                  "src": "621:78:5"
                },
                {
                  "documentation": {
                    "id": 1200,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:5",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1205,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1201,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:5"
                  },
                  "returnParameters": {
                    "id": 1204,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1203,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1205,
                        "src": "821:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1202,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:5"
                  },
                  "scope": 1256,
                  "src": "775:55:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1206,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:5",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 1213,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1209,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1208,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1213,
                        "src": "931:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1207,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:5"
                  },
                  "returnParameters": {
                    "id": 1212,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1211,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1213,
                        "src": "971:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1210,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:5"
                  },
                  "scope": 1256,
                  "src": "912:68:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1214,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:5",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1223,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1219,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1216,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1223,
                        "src": "1222:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1215,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1218,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1223,
                        "src": "1234:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1217,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:5"
                  },
                  "returnParameters": {
                    "id": 1222,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1221,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1223,
                        "src": "1267:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1220,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:5"
                  },
                  "scope": 1256,
                  "src": "1204:69:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1224,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:5",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1233,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1226,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1233,
                        "src": "1567:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1225,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1228,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1233,
                        "src": "1582:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1227,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:5"
                  },
                  "returnParameters": {
                    "id": 1232,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1231,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1233,
                        "src": "1622:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1230,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:5"
                  },
                  "scope": 1256,
                  "src": "1548:83:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1234,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:5",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1243,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1239,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1236,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1243,
                        "src": "2326:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1235,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1238,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1243,
                        "src": "2343:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1237,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:5"
                  },
                  "returnParameters": {
                    "id": 1242,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1241,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1243,
                        "src": "2376:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1240,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:5"
                  },
                  "scope": 1256,
                  "src": "2309:73:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1244,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:5",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1255,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1251,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1246,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1255,
                        "src": "2712:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1245,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1248,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1255,
                        "src": "2726:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1247,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1250,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1255,
                        "src": "2738:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1249,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:5"
                  },
                  "returnParameters": {
                    "id": 1254,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1253,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1255,
                        "src": "2771:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1252,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:5"
                  },
                  "scope": 1256,
                  "src": "2690:87:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1257,
              "src": "204:2575:5",
              "usedErrors": [],
              "usedEvents": [
                1190,
                1199
              ]
            }
          ],
          "src": "106:2674:5"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "id": 6,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
          "exportedSymbols": {
            "Context": [
              1358
            ],
            "ERC20": [
              1178
            ],
            "ERC20Burnable": [
              1302
            ]
          },
          "id": 1303,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1258,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "124:24:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "../ERC20.sol",
              "id": 1260,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1303,
              "sourceUnit": 1179,
              "src": "150:35:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1259,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1178,
                    "src": "158:5:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../../utils/Context.sol",
              "id": 1262,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1303,
              "sourceUnit": 1359,
              "src": "186:51:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1261,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1358,
                    "src": "194:7:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1264,
                    "name": "Context",
                    "nameLocations": [
                      "483:7:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1358,
                    "src": "483:7:6"
                  },
                  "id": 1265,
                  "nodeType": "InheritanceSpecifier",
                  "src": "483:7:6"
                },
                {
                  "baseName": {
                    "id": 1266,
                    "name": "ERC20",
                    "nameLocations": [
                      "492:5:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1178,
                    "src": "492:5:6"
                  },
                  "id": 1267,
                  "nodeType": "InheritanceSpecifier",
                  "src": "492:5:6"
                }
              ],
              "canonicalName": "ERC20Burnable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1263,
                "nodeType": "StructuredDocumentation",
                "src": "239:208:6",
                "text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
              },
              "fullyImplemented": true,
              "id": 1302,
              "linearizedBaseContracts": [
                1302,
                1178,
                568,
                1328,
                1256,
                1358
              ],
              "name": "ERC20Burnable",
              "nameLocation": "466:13:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1279,
                    "nodeType": "Block",
                    "src": "662:43:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1274,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1340,
                                "src": "678:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "678:12:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1276,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1270,
                              "src": "692:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1273,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1051,
                            "src": "672:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "672:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1278,
                        "nodeType": "ExpressionStatement",
                        "src": "672:26:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1268,
                    "nodeType": "StructuredDocumentation",
                    "src": "504:109:6",
                    "text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
                  },
                  "functionSelector": "42966c68",
                  "id": 1280,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nameLocation": "627:4:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1271,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1270,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "640:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1280,
                        "src": "632:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1269,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "632:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "631:15:6"
                  },
                  "returnParameters": {
                    "id": 1272,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "662:0:6"
                  },
                  "scope": 1302,
                  "src": "618:87:6",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1300,
                    "nodeType": "Block",
                    "src": "1086:93:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1289,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1283,
                              "src": "1112:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1290,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1340,
                                "src": "1121:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1121:12:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1292,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1285,
                              "src": "1135:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1288,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1177,
                            "src": "1096:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1096:45:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1294,
                        "nodeType": "ExpressionStatement",
                        "src": "1096:45:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1296,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1283,
                              "src": "1157:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1297,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1285,
                              "src": "1166:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1295,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1051,
                            "src": "1151:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1151:21:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1299,
                        "nodeType": "ExpressionStatement",
                        "src": "1151:21:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1281,
                    "nodeType": "StructuredDocumentation",
                    "src": "711:305:6",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "79cc6790",
                  "id": 1301,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burnFrom",
                  "nameLocation": "1030:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1286,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1283,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1047:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1301,
                        "src": "1039:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1282,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1039:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1285,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1064:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1301,
                        "src": "1056:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1284,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1056:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1038:32:6"
                  },
                  "returnParameters": {
                    "id": 1287,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1086:0:6"
                  },
                  "scope": 1302,
                  "src": "1021:158:6",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1303,
              "src": "448:733:6",
              "usedErrors": [
                538,
                543,
                548,
                557,
                562,
                567
              ],
              "usedEvents": [
                1190,
                1199
              ]
            }
          ],
          "src": "124:1058:6"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "id": 7,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              1256
            ],
            "IERC20Metadata": [
              1328
            ]
          },
          "id": 1329,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1304,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:7"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 1306,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1329,
              "sourceUnit": 1257,
              "src": "151:37:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1305,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1256,
                    "src": "159:6:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1308,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1256,
                    "src": "306:6:7"
                  },
                  "id": 1309,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:7"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1307,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:7",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 1328,
              "linearizedBaseContracts": [
                1328,
                1256
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1310,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:7",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 1315,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1311,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:7"
                  },
                  "returnParameters": {
                    "id": 1314,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1313,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1315,
                        "src": "417:13:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1312,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:7"
                  },
                  "scope": 1328,
                  "src": "378:54:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1316,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:7",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 1321,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1317,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:7"
                  },
                  "returnParameters": {
                    "id": 1320,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1319,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1321,
                        "src": "540:13:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1318,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:7"
                  },
                  "scope": 1328,
                  "src": "499:56:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1322,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:7",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 1327,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1323,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:7"
                  },
                  "returnParameters": {
                    "id": 1326,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1325,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1327,
                        "src": "674:5:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1324,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:7"
                  },
                  "scope": 1328,
                  "src": "631:50:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1329,
              "src": "278:405:7",
              "usedErrors": [],
              "usedEvents": [
                1190,
                1199
              ]
            }
          ],
          "src": "125:559:7"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "id": 8,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              1358
            ]
          },
          "id": 1359,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1330,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:8"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1331,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:8",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 1358,
              "linearizedBaseContracts": [
                1358
              ],
              "name": "Context",
              "nameLocation": "642:7:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1339,
                    "nodeType": "Block",
                    "src": "718:34:8",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1336,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "735:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:8",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1335,
                        "id": 1338,
                        "nodeType": "Return",
                        "src": "728:17:8"
                      }
                    ]
                  },
                  "id": 1340,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1332,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:8"
                  },
                  "returnParameters": {
                    "id": 1335,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1334,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1340,
                        "src": "709:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1333,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:8"
                  },
                  "scope": 1358,
                  "src": "656:96:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1348,
                    "nodeType": "Block",
                    "src": "825:32:8",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1345,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "842:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:8",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1344,
                        "id": 1347,
                        "nodeType": "Return",
                        "src": "835:15:8"
                      }
                    ]
                  },
                  "id": 1349,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1341,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:8"
                  },
                  "returnParameters": {
                    "id": 1344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1343,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1349,
                        "src": "809:14:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1342,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:8"
                  },
                  "scope": 1358,
                  "src": "758:99:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1356,
                    "nodeType": "Block",
                    "src": "935:25:8",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1353,
                        "id": 1355,
                        "nodeType": "Return",
                        "src": "945:8:8"
                      }
                    ]
                  },
                  "id": 1357,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1350,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:8"
                  },
                  "returnParameters": {
                    "id": 1353,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1352,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1357,
                        "src": "926:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1351,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:8"
                  },
                  "scope": 1358,
                  "src": "863:97:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1359,
              "src": "624:338:8",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:8"
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "id": 9,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              1358
            ],
            "Pausable": [
              1466
            ]
          },
          "id": 1467,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1360,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:9"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 1362,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1467,
              "sourceUnit": 1359,
              "src": "128:45:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1361,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1358,
                    "src": "136:7:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1364,
                    "name": "Context",
                    "nameLocations": [
                      "645:7:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1358,
                    "src": "645:7:9"
                  },
                  "id": 1365,
                  "nodeType": "InheritanceSpecifier",
                  "src": "645:7:9"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1363,
                "nodeType": "StructuredDocumentation",
                "src": "175:439:9",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 1466,
              "linearizedBaseContracts": [
                1466,
                1358
              ],
              "name": "Pausable",
              "nameLocation": "633:8:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1367,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "672:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1466,
                  "src": "659:20:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1366,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1368,
                    "nodeType": "StructuredDocumentation",
                    "src": "686:73:9",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 1372,
                  "name": "Paused",
                  "nameLocation": "770:6:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1371,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1370,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "785:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1372,
                        "src": "777:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1369,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:17:9"
                  },
                  "src": "764:30:9"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1373,
                    "nodeType": "StructuredDocumentation",
                    "src": "800:70:9",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 1377,
                  "name": "Unpaused",
                  "nameLocation": "881:8:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1375,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "898:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1377,
                        "src": "890:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1374,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:17:9"
                  },
                  "src": "875:32:9"
                },
                {
                  "documentation": {
                    "id": 1378,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:76:9",
                    "text": " @dev The operation failed because the contract is paused."
                  },
                  "errorSelector": "d93c0665",
                  "id": 1380,
                  "name": "EnforcedPause",
                  "nameLocation": "1000:13:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1379,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1013:2:9"
                  },
                  "src": "994:22:9"
                },
                {
                  "documentation": {
                    "id": 1381,
                    "nodeType": "StructuredDocumentation",
                    "src": "1022:80:9",
                    "text": " @dev The operation failed because the contract is not paused."
                  },
                  "errorSelector": "8dfc202b",
                  "id": 1383,
                  "name": "ExpectedPause",
                  "nameLocation": "1113:13:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1382,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1126:2:9"
                  },
                  "src": "1107:22:9"
                },
                {
                  "body": {
                    "id": 1390,
                    "nodeType": "Block",
                    "src": "1340:47:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1386,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1420,
                            "src": "1350:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1350:19:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1388,
                        "nodeType": "ExpressionStatement",
                        "src": "1350:19:9"
                      },
                      {
                        "id": 1389,
                        "nodeType": "PlaceholderStatement",
                        "src": "1379:1:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1384,
                    "nodeType": "StructuredDocumentation",
                    "src": "1135:175:9",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 1391,
                  "name": "whenNotPaused",
                  "nameLocation": "1324:13:9",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1385,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1337:2:9"
                  },
                  "src": "1315:72:9",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1398,
                    "nodeType": "Block",
                    "src": "1587:44:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1394,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1433,
                            "src": "1597:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1597:16:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1396,
                        "nodeType": "ExpressionStatement",
                        "src": "1597:16:9"
                      },
                      {
                        "id": 1397,
                        "nodeType": "PlaceholderStatement",
                        "src": "1623:1:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1392,
                    "nodeType": "StructuredDocumentation",
                    "src": "1393:167:9",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 1399,
                  "name": "whenPaused",
                  "nameLocation": "1574:10:9",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1393,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1584:2:9"
                  },
                  "src": "1565:66:9",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1407,
                    "nodeType": "Block",
                    "src": "1779:31:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1405,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1367,
                          "src": "1796:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1404,
                        "id": 1406,
                        "nodeType": "Return",
                        "src": "1789:14:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1400,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:84:9",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 1408,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1735:6:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1401,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1741:2:9"
                  },
                  "returnParameters": {
                    "id": 1404,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1403,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1408,
                        "src": "1773:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1402,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:6:9"
                  },
                  "scope": 1466,
                  "src": "1726:84:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1419,
                    "nodeType": "Block",
                    "src": "1929:77:9",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1412,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1408,
                            "src": "1943:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1943:8:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1418,
                        "nodeType": "IfStatement",
                        "src": "1939:61:9",
                        "trueBody": {
                          "id": 1417,
                          "nodeType": "Block",
                          "src": "1953:47:9",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1414,
                                  "name": "EnforcedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1380,
                                  "src": "1974:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1974:15:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1416,
                              "nodeType": "RevertStatement",
                              "src": "1967:22:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1409,
                    "nodeType": "StructuredDocumentation",
                    "src": "1816:57:9",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 1420,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1887:17:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1410,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1904:2:9"
                  },
                  "returnParameters": {
                    "id": 1411,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1929:0:9"
                  },
                  "scope": 1466,
                  "src": "1878:128:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1432,
                    "nodeType": "Block",
                    "src": "2126:78:9",
                    "statements": [
                      {
                        "condition": {
                          "id": 1426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2140:9:9",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1424,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1408,
                              "src": "2141:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 1425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2141:8:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1431,
                        "nodeType": "IfStatement",
                        "src": "2136:62:9",
                        "trueBody": {
                          "id": 1430,
                          "nodeType": "Block",
                          "src": "2151:47:9",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1427,
                                  "name": "ExpectedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1383,
                                  "src": "2172:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2172:15:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1429,
                              "nodeType": "RevertStatement",
                              "src": "2165:22:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1421,
                    "nodeType": "StructuredDocumentation",
                    "src": "2012:61:9",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 1433,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "2087:14:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1422,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2101:2:9"
                  },
                  "returnParameters": {
                    "id": 1423,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2126:0:9"
                  },
                  "scope": 1466,
                  "src": "2078:126:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1448,
                    "nodeType": "Block",
                    "src": "2388:66:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1439,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1367,
                            "src": "2398:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2408:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2398:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1442,
                        "nodeType": "ExpressionStatement",
                        "src": "2398:14:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1444,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1340,
                                "src": "2434:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2434:12:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1443,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1372,
                            "src": "2427:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2427:20:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1447,
                        "nodeType": "EmitStatement",
                        "src": "2422:25:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1434,
                    "nodeType": "StructuredDocumentation",
                    "src": "2210:124:9",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 1449,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1437,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1436,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2374:13:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1391,
                        "src": "2374:13:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2374:13:9"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2348:6:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1435,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2354:2:9"
                  },
                  "returnParameters": {
                    "id": 1438,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2388:0:9"
                  },
                  "scope": 1466,
                  "src": "2339:115:9",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1464,
                    "nodeType": "Block",
                    "src": "2634:69:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1455,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1367,
                            "src": "2644:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2654:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2644:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1458,
                        "nodeType": "ExpressionStatement",
                        "src": "2644:15:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1460,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1340,
                                "src": "2683:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2683:12:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1459,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1377,
                            "src": "2674:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2674:22:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1463,
                        "nodeType": "EmitStatement",
                        "src": "2669:27:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1450,
                    "nodeType": "StructuredDocumentation",
                    "src": "2460:121:9",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 1465,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1453,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1452,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2623:10:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1399,
                        "src": "2623:10:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2623:10:9"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2595:8:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1451,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:9"
                  },
                  "returnParameters": {
                    "id": 1454,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2634:0:9"
                  },
                  "scope": 1466,
                  "src": "2586:117:9",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1467,
              "src": "615:2090:9",
              "usedErrors": [
                1380,
                1383
              ],
              "usedEvents": [
                1372,
                1377
              ]
            }
          ],
          "src": "102:2604:9"
        }
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "id": 10,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
          "exportedSymbols": {
            "ERC165": [
              1490
            ],
            "IERC165": [
              1502
            ]
          },
          "id": 1491,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1468,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "114:24:10"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "./IERC165.sol",
              "id": 1470,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1491,
              "sourceUnit": 1503,
              "src": "140:38:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1469,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1502,
                    "src": "148:7:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1472,
                    "name": "IERC165",
                    "nameLocations": [
                      "688:7:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1502,
                    "src": "688:7:10"
                  },
                  "id": 1473,
                  "nodeType": "InheritanceSpecifier",
                  "src": "688:7:10"
                }
              ],
              "canonicalName": "ERC165",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1471,
                "nodeType": "StructuredDocumentation",
                "src": "180:479:10",
                "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
              },
              "fullyImplemented": true,
              "id": 1490,
              "linearizedBaseContracts": [
                1490,
                1502
              ],
              "name": "ERC165",
              "nameLocation": "678:6:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    1501
                  ],
                  "body": {
                    "id": 1488,
                    "nodeType": "Block",
                    "src": "845:64:10",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 1486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1481,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1476,
                            "src": "862:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1483,
                                  "name": "IERC165",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1502,
                                  "src": "882:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$1502_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$1502_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                ],
                                "id": 1482,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "877:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "877:13:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1502",
                                "typeString": "type(contract IERC165)"
                              }
                            },
                            "id": 1485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "891:11:10",
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "877:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "862:40:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1480,
                        "id": 1487,
                        "nodeType": "Return",
                        "src": "855:47:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1474,
                    "nodeType": "StructuredDocumentation",
                    "src": "702:56:10",
                    "text": " @dev See {IERC165-supportsInterface}."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1489,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "772:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1477,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1476,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "797:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1489,
                        "src": "790:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1475,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "790:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "789:20:10"
                  },
                  "returnParameters": {
                    "id": 1480,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1479,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1489,
                        "src": "839:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1478,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "839:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "838:6:10"
                  },
                  "scope": 1490,
                  "src": "763:146:10",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1491,
              "src": "660:251:10",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "114:798:10"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "id": 11,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              1502
            ]
          },
          "id": 1503,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1492,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:11"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1493,
                "nodeType": "StructuredDocumentation",
                "src": "141:280:11",
                "text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 1502,
              "linearizedBaseContracts": [
                1502
              ],
              "name": "IERC165",
              "nameLocation": "432:7:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1494,
                    "nodeType": "StructuredDocumentation",
                    "src": "446:340:11",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1501,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "800:17:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1497,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1496,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "825:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1501,
                        "src": "818:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1495,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "818:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "817:20:11"
                  },
                  "returnParameters": {
                    "id": 1500,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1499,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1501,
                        "src": "861:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1498,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "861:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "860:6:11"
                  },
                  "scope": 1502,
                  "src": "791:76:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1503,
              "src": "422:447:11",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:755:11"
        }
      },
      "contracts/Escrow.sol": {
        "id": 12,
        "ast": {
          "absolutePath": "contracts/Escrow.sol",
          "exportedSymbols": {
            "Escrow": [
              1581
            ]
          },
          "id": 1582,
          "license": "SEE LICENSE IN LICENSE",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1504,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "51:24:12"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Escrow",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1505,
                "nodeType": "StructuredDocumentation",
                "src": "373:255:12",
                "text": " @title Escrow\n @dev A simple escrow contract that holds funds until approved by an arbiter.\n The contract facilitates a secure transaction between a depositor and a beneficiary,\n with an arbiter who has the authority to release the funds."
              },
              "fullyImplemented": true,
              "id": 1581,
              "linearizedBaseContracts": [
                1581
              ],
              "name": "Escrow",
              "nameLocation": "638:6:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1506,
                    "nodeType": "StructuredDocumentation",
                    "src": "651:147:12",
                    "text": " @dev Emitted when the arbiter approves the release of funds\n @param amount The amount of Ether released to the beneficiary"
                  },
                  "eventSelector": "3ad93af63cb7967b23e4fb500b7d7d28b07516325dcf341f88bebf959d82c1cb",
                  "id": 1510,
                  "name": "Approved",
                  "nameLocation": "809:8:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1509,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1508,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "826:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1510,
                        "src": "818:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1507,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "818:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "817:16:12"
                  },
                  "src": "803:31:12"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1511,
                    "nodeType": "StructuredDocumentation",
                    "src": "840:58:12",
                    "text": "@notice The address that initially deposited the funds"
                  },
                  "functionSelector": "c7c4ff46",
                  "id": 1513,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nameLocation": "918:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1581,
                  "src": "903:24:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1512,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1514,
                    "nodeType": "StructuredDocumentation",
                    "src": "934:65:12",
                    "text": "@notice The address that will receive the funds when approved"
                  },
                  "functionSelector": "38af3eed",
                  "id": 1516,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "1019:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1581,
                  "src": "1004:26:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1004:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1517,
                    "nodeType": "StructuredDocumentation",
                    "src": "1037:62:12",
                    "text": "@notice The address authorized to approve the fund release"
                  },
                  "functionSelector": "fe25e00a",
                  "id": 1519,
                  "mutability": "mutable",
                  "name": "arbiter",
                  "nameLocation": "1119:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1581,
                  "src": "1104:22:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1540,
                    "nodeType": "Block",
                    "src": "1435:103:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1527,
                            "name": "arbiter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1519,
                            "src": "1445:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1528,
                            "name": "_arbiter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1522,
                            "src": "1455:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1445:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1530,
                        "nodeType": "ExpressionStatement",
                        "src": "1445:18:12"
                      },
                      {
                        "expression": {
                          "id": 1533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1531,
                            "name": "beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1516,
                            "src": "1473:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1532,
                            "name": "_beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1524,
                            "src": "1487:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1473:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1534,
                        "nodeType": "ExpressionStatement",
                        "src": "1473:26:12"
                      },
                      {
                        "expression": {
                          "id": 1538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1535,
                            "name": "depositor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1513,
                            "src": "1509:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1536,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1521:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1525:6:12",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1521:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1509:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1539,
                        "nodeType": "ExpressionStatement",
                        "src": "1509:22:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1520,
                    "nodeType": "StructuredDocumentation",
                    "src": "1133:237:12",
                    "text": " @dev Sets up the escrow with the specified arbiter and beneficiary\n @param _arbiter Address of the arbiter who can approve fund release\n @param _beneficiary Address that will receive the funds when approved"
                  },
                  "id": 1541,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1525,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1522,
                        "mutability": "mutable",
                        "name": "_arbiter",
                        "nameLocation": "1395:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1541,
                        "src": "1387:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1521,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1387:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1524,
                        "mutability": "mutable",
                        "name": "_beneficiary",
                        "nameLocation": "1413:12:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1541,
                        "src": "1405:20:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1523,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1405:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1386:40:12"
                  },
                  "returnParameters": {
                    "id": 1526,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1435:0:12"
                  },
                  "scope": 1581,
                  "src": "1375:163:12",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1579,
                    "nodeType": "Block",
                    "src": "1762:265:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1546,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1780:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1784:6:12",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1780:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1548,
                                "name": "arbiter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1519,
                                "src": "1794:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1780:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c7920617262697465722063616e20617070726f7665",
                              "id": 1550,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1803:26:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_74bff8699523457524967c81d340981e2d894fe899dcedd418dc894831c71d8d",
                                "typeString": "literal_string \"Only arbiter can approve\""
                              },
                              "value": "Only arbiter can approve"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_74bff8699523457524967c81d340981e2d894fe899dcedd418dc894831c71d8d",
                                "typeString": "literal_string \"Only arbiter can approve\""
                              }
                            ],
                            "id": 1545,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1772:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1772:58:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1552,
                        "nodeType": "ExpressionStatement",
                        "src": "1772:58:12"
                      },
                      {
                        "assignments": [
                          1554
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1554,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "1848:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1579,
                            "src": "1840:15:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1553,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1840:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1560,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1557,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1866:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Escrow_$1581",
                                  "typeString": "contract Escrow"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Escrow_$1581",
                                  "typeString": "contract Escrow"
                                }
                              ],
                              "id": 1556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1858:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1555,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1858:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1858:13:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1872:7:12",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1858:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1840:39:12"
                      },
                      {
                        "assignments": [
                          1562,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1562,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "1895:4:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1579,
                            "src": "1890:9:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1561,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1890:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1569,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1938:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 1563,
                                "name": "beneficiary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1516,
                                "src": "1905:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1917:4:12",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "1905:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1565,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1554,
                                "src": "1929:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1905:32:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1905:36:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1889:52:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1571,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1562,
                              "src": "1959:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 1572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1965:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 1570,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1951:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1951:37:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1574,
                        "nodeType": "ExpressionStatement",
                        "src": "1951:37:12"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1576,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1554,
                              "src": "2012:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1575,
                            "name": "Approved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1510,
                            "src": "2003:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2003:17:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1578,
                        "nodeType": "EmitStatement",
                        "src": "1998:22:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1542,
                    "nodeType": "StructuredDocumentation",
                    "src": "1544:185:12",
                    "text": " @dev Releases the contract's funds to the beneficiary\n @notice Can only be called by the arbiter\n @notice Emits an Approved event upon successful transfer"
                  },
                  "functionSelector": "12424e3f",
                  "id": 1580,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "1743:7:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1543,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1750:2:12"
                  },
                  "returnParameters": {
                    "id": 1544,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1762:0:12"
                  },
                  "scope": 1581,
                  "src": "1734:293:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1582,
              "src": "629:1400:12",
              "usedErrors": [],
              "usedEvents": [
                1510
              ]
            }
          ],
          "src": "51:1979:12"
        }
      },
      "contracts/LendingBorrowing.sol": {
        "id": 13,
        "ast": {
          "absolutePath": "contracts/LendingBorrowing.sol",
          "exportedSymbols": {
            "Context": [
              1358
            ],
            "IERC20": [
              1256
            ],
            "LendingBorrowing": [
              1989
            ],
            "Ownable": [
              526
            ]
          },
          "id": 1990,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1583,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:13"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1584,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1990,
              "sourceUnit": 1257,
              "src": "57:56:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1585,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1990,
              "sourceUnit": 527,
              "src": "114:52:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1586,
                    "name": "Ownable",
                    "nameLocations": [
                      "196:7:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 526,
                    "src": "196:7:13"
                  },
                  "id": 1587,
                  "nodeType": "InheritanceSpecifier",
                  "src": "196:7:13"
                }
              ],
              "canonicalName": "LendingBorrowing",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1989,
              "linearizedBaseContracts": [
                1989,
                526,
                1358
              ],
              "name": "LendingBorrowing",
              "nameLocation": "176:16:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "LendingBorrowing.Loan",
                  "id": 1594,
                  "members": [
                    {
                      "constant": false,
                      "id": 1589,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "240:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1594,
                      "src": "232:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1588,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "232:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1591,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "283:10:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1594,
                      "src": "275:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1590,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "275:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1593,
                      "mutability": "mutable",
                      "name": "isActive",
                      "nameLocation": "329:8:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1594,
                      "src": "324:13:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1592,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "324:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Loan",
                  "nameLocation": "217:4:13",
                  "nodeType": "StructDefinition",
                  "scope": 1989,
                  "src": "210:149:13",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "b2016bd4",
                  "id": 1597,
                  "mutability": "immutable",
                  "name": "collateralToken",
                  "nameLocation": "388:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1989,
                  "src": "364:39:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1256",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1596,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1595,
                      "name": "IERC20",
                      "nameLocations": [
                        "364:6:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1256,
                      "src": "364:6:13"
                    },
                    "referencedDeclaration": 1256,
                    "src": "364:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1256",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "aaaca558",
                  "id": 1600,
                  "mutability": "immutable",
                  "name": "lendingToken",
                  "nameLocation": "433:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1989,
                  "src": "409:36:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1256",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1599,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1598,
                      "name": "IERC20",
                      "nameLocations": [
                        "409:6:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1256,
                      "src": "409:6:13"
                    },
                    "referencedDeclaration": 1256,
                    "src": "409:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1256",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "df011c41",
                  "id": 1602,
                  "mutability": "mutable",
                  "name": "collateralFactor",
                  "nameLocation": "466:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1989,
                  "src": "451:31:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "29bc969d",
                  "id": 1606,
                  "mutability": "mutable",
                  "name": "collateralBalances",
                  "nameLocation": "586:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1989,
                  "src": "551:53:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1605,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1603,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "559:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "551:27:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1604,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "570:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "73b4086b",
                  "id": 1611,
                  "mutability": "mutable",
                  "name": "loans",
                  "nameLocation": "670:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1989,
                  "src": "638:37:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$1594_storage_$",
                    "typeString": "mapping(address => struct LendingBorrowing.Loan)"
                  },
                  "typeName": {
                    "id": 1610,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1607,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "646:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "638:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$1594_storage_$",
                      "typeString": "mapping(address => struct LendingBorrowing.Loan)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1609,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1608,
                        "name": "Loan",
                        "nameLocations": [
                          "657:4:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1594,
                        "src": "657:4:13"
                      },
                      "referencedDeclaration": 1594,
                      "src": "657:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$1594_storage_ptr",
                        "typeString": "struct LendingBorrowing.Loan"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142",
                  "id": 1617,
                  "name": "CollateralDeposited",
                  "nameLocation": "701:19:13",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1616,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1613,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "737:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1617,
                        "src": "721:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1612,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "721:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1615,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "751:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1617,
                        "src": "743:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1614,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "743:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "720:38:13"
                  },
                  "src": "695:64:13"
                },
                {
                  "anonymous": false,
                  "eventSelector": "c30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d",
                  "id": 1623,
                  "name": "CollateralWithdrawn",
                  "nameLocation": "770:19:13",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1622,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1619,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "806:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1623,
                        "src": "790:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1618,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "790:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1621,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "820:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1623,
                        "src": "812:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1620,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "812:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "789:38:13"
                  },
                  "src": "764:64:13"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d5c776eab9418d89c040ffee59f2310d225f5ff682191bcee59b0413a7fd4835",
                  "id": 1629,
                  "name": "LoanTaken",
                  "nameLocation": "839:9:13",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1628,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1625,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "865:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1629,
                        "src": "849:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1624,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "849:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1627,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "879:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1629,
                        "src": "871:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1626,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "871:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "848:38:13"
                  },
                  "src": "833:54:13"
                },
                {
                  "anonymous": false,
                  "eventSelector": "c200a1f31dd659e356e0f112c82558e25f49f7b0f84438691cd96f5cb3558823",
                  "id": 1635,
                  "name": "LoanRepaid",
                  "nameLocation": "898:10:13",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1634,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1631,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "925:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1635,
                        "src": "909:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1630,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "909:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1633,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "939:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1635,
                        "src": "931:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1632,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "908:38:13"
                  },
                  "src": "892:55:13"
                },
                {
                  "body": {
                    "id": 1669,
                    "nodeType": "Block",
                    "src": "1058:214:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1651,
                                "name": "_collateralFactor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1643,
                                "src": "1076:17:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 1652,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1097:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "1076:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6c6c61746572616c20666163746f72206d757374206265203c3d20313030",
                              "id": 1654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1102:34:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f7a5a430ecb116f54844382b9c100298df80503920d65ffb7ad5dc8ed3a5d8c1",
                                "typeString": "literal_string \"Collateral factor must be <= 100\""
                              },
                              "value": "Collateral factor must be <= 100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f7a5a430ecb116f54844382b9c100298df80503920d65ffb7ad5dc8ed3a5d8c1",
                                "typeString": "literal_string \"Collateral factor must be <= 100\""
                              }
                            ],
                            "id": 1650,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1068:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1068:69:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1656,
                        "nodeType": "ExpressionStatement",
                        "src": "1068:69:13"
                      },
                      {
                        "expression": {
                          "id": 1659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1657,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1597,
                            "src": "1147:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1256",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1658,
                            "name": "_collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1638,
                            "src": "1165:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1256",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "1147:34:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1256",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1660,
                        "nodeType": "ExpressionStatement",
                        "src": "1147:34:13"
                      },
                      {
                        "expression": {
                          "id": 1663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1661,
                            "name": "lendingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1600,
                            "src": "1191:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1256",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1662,
                            "name": "_lendingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1641,
                            "src": "1206:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1256",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "1191:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1256",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1664,
                        "nodeType": "ExpressionStatement",
                        "src": "1191:28:13"
                      },
                      {
                        "expression": {
                          "id": 1667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1665,
                            "name": "collateralFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1602,
                            "src": "1229:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1666,
                            "name": "_collateralFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1643,
                            "src": "1248:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1229:36:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1668,
                        "nodeType": "ExpressionStatement",
                        "src": "1229:36:13"
                      }
                    ]
                  },
                  "id": 1670,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1646,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1046:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1050:6:13",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1046:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1648,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1645,
                        "name": "Ownable",
                        "nameLocations": [
                          "1038:7:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 526,
                        "src": "1038:7:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1038:19:13"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1644,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1638,
                        "mutability": "mutable",
                        "name": "_collateralToken",
                        "nameLocation": "971:16:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1670,
                        "src": "964:23:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1256",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1637,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1636,
                            "name": "IERC20",
                            "nameLocations": [
                              "964:6:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1256,
                            "src": "964:6:13"
                          },
                          "referencedDeclaration": 1256,
                          "src": "964:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1256",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1641,
                        "mutability": "mutable",
                        "name": "_lendingToken",
                        "nameLocation": "996:13:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1670,
                        "src": "989:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1256",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1640,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1639,
                            "name": "IERC20",
                            "nameLocations": [
                              "989:6:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1256,
                            "src": "989:6:13"
                          },
                          "referencedDeclaration": 1256,
                          "src": "989:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1256",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1643,
                        "mutability": "mutable",
                        "name": "_collateralFactor",
                        "nameLocation": "1019:17:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1670,
                        "src": "1011:25:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1642,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1011:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "963:74:13"
                  },
                  "returnParameters": {
                    "id": 1649,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1058:0:13"
                  },
                  "scope": 1989,
                  "src": "952:320:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1688,
                    "nodeType": "Block",
                    "src": "1345:118:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1678,
                                "name": "_newFactor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1672,
                                "src": "1363:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 1679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1377:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "1363:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6c6c61746572616c20666163746f72206d757374206265203c3d20313030",
                              "id": 1681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1382:34:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f7a5a430ecb116f54844382b9c100298df80503920d65ffb7ad5dc8ed3a5d8c1",
                                "typeString": "literal_string \"Collateral factor must be <= 100\""
                              },
                              "value": "Collateral factor must be <= 100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f7a5a430ecb116f54844382b9c100298df80503920d65ffb7ad5dc8ed3a5d8c1",
                                "typeString": "literal_string \"Collateral factor must be <= 100\""
                              }
                            ],
                            "id": 1677,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1355:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1355:62:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1683,
                        "nodeType": "ExpressionStatement",
                        "src": "1355:62:13"
                      },
                      {
                        "expression": {
                          "id": 1686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1684,
                            "name": "collateralFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1602,
                            "src": "1427:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1685,
                            "name": "_newFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1672,
                            "src": "1446:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1427:29:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1687,
                        "nodeType": "ExpressionStatement",
                        "src": "1427:29:13"
                      }
                    ]
                  },
                  "functionSelector": "b5c22157",
                  "id": 1689,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1675,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1674,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1335:9:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 437,
                        "src": "1335:9:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1335:9:13"
                    }
                  ],
                  "name": "setCollateralFactor",
                  "nameLocation": "1286:19:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1673,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1672,
                        "mutability": "mutable",
                        "name": "_newFactor",
                        "nameLocation": "1314:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1689,
                        "src": "1306:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1671,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1306:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1305:20:13"
                  },
                  "returnParameters": {
                    "id": 1676,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1345:0:13"
                  },
                  "scope": 1989,
                  "src": "1277:186:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1726,
                    "nodeType": "Block",
                    "src": "1521:253:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1695,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1691,
                                "src": "1539:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1549:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1539:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                              "id": 1698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1552:34:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              },
                              "value": "Amount must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              }
                            ],
                            "id": 1694,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1531:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:56:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1700,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:56:13"
                      },
                      {
                        "expression": {
                          "id": 1706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1701,
                              "name": "collateralBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1606,
                              "src": "1597:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1704,
                            "indexExpression": {
                              "expression": {
                                "id": 1702,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1616:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1620:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1616:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1597:30:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1705,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1691,
                            "src": "1631:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1597:41:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1707,
                        "nodeType": "ExpressionStatement",
                        "src": "1597:41:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1711,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1677:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1681:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1677:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1715,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1697:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LendingBorrowing_$1989",
                                    "typeString": "contract LendingBorrowing"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LendingBorrowing_$1989",
                                    "typeString": "contract LendingBorrowing"
                                  }
                                ],
                                "id": 1714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1689:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1713,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1689:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1689:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1717,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1691,
                              "src": "1704:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1708,
                              "name": "collateralToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1597,
                              "src": "1648:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1256",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1664:12:13",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1255,
                            "src": "1648:28:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1648:64:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1719,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:64:13"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1721,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1747:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1751:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1747:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1723,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1691,
                              "src": "1759:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1720,
                            "name": "CollateralDeposited",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1617,
                            "src": "1727:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1727:40:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1725,
                        "nodeType": "EmitStatement",
                        "src": "1722:45:13"
                      }
                    ]
                  },
                  "functionSelector": "bad4a01f",
                  "id": 1727,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "depositCollateral",
                  "nameLocation": "1477:17:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1692,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1691,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "1503:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1727,
                        "src": "1495:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1690,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1495:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1494:17:13"
                  },
                  "returnParameters": {
                    "id": 1693,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1521:0:13"
                  },
                  "scope": 1989,
                  "src": "1468:306:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1789,
                    "nodeType": "Block",
                    "src": "1833:518:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1733,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1729,
                                "src": "1851:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1861:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1851:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                              "id": 1736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1864:34:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              },
                              "value": "Amount must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              }
                            ],
                            "id": 1732,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1843:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1843:56:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1738,
                        "nodeType": "ExpressionStatement",
                        "src": "1843:56:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1740,
                                  "name": "collateralBalances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1606,
                                  "src": "1917:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1743,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1741,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1936:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1742,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1940:6:13",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1936:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1917:30:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1744,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1729,
                                "src": "1951:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1917:41:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e7420636f6c6c61746572616c",
                              "id": 1746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1960:25:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
                                "typeString": "literal_string \"Insufficient collateral\""
                              },
                              "value": "Insufficient collateral"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
                                "typeString": "literal_string \"Insufficient collateral\""
                              }
                            ],
                            "id": 1739,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1909:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1909:77:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1748,
                        "nodeType": "ExpressionStatement",
                        "src": "1909:77:13"
                      },
                      {
                        "assignments": [
                          1750
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1750,
                            "mutability": "mutable",
                            "name": "maxWithdrawable",
                            "nameLocation": "2004:15:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1789,
                            "src": "1996:23:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1749,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1996:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1760,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1751,
                              "name": "collateralBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1606,
                              "src": "2022:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1754,
                            "indexExpression": {
                              "expression": {
                                "id": 1752,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2041:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2045:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2041:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2022:30:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1756,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2079:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2083:6:13",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2079:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1755,
                              "name": "_loanRequiredCollateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1961,
                              "src": "2055:23:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 1758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2055:35:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2022:68:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1996:94:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1762,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1729,
                                "src": "2108:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1763,
                                "name": "maxWithdrawable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1750,
                                "src": "2119:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2108:26:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f7420776974686472617720636f6c6c61746572616c206c6f636b656420666f722061206c6f616e",
                              "id": 1765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2136:46:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5f433af301f93247a7ae5d706c7552102b86c4d977099922d693d30b3883eef5",
                                "typeString": "literal_string \"Cannot withdraw collateral locked for a loan\""
                              },
                              "value": "Cannot withdraw collateral locked for a loan"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5f433af301f93247a7ae5d706c7552102b86c4d977099922d693d30b3883eef5",
                                "typeString": "literal_string \"Cannot withdraw collateral locked for a loan\""
                              }
                            ],
                            "id": 1761,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2100:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2100:83:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1767,
                        "nodeType": "ExpressionStatement",
                        "src": "2100:83:13"
                      },
                      {
                        "expression": {
                          "id": 1773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1768,
                              "name": "collateralBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1606,
                              "src": "2193:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1771,
                            "indexExpression": {
                              "expression": {
                                "id": 1769,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2212:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2216:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2212:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2193:30:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1772,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1729,
                            "src": "2227:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2193:41:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1774,
                        "nodeType": "ExpressionStatement",
                        "src": "2193:41:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1778,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2269:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2273:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2269:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1780,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1729,
                              "src": "2281:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1775,
                              "name": "collateralToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1597,
                              "src": "2244:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1256",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2260:8:13",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1223,
                            "src": "2244:24:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2244:45:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1782,
                        "nodeType": "ExpressionStatement",
                        "src": "2244:45:13"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1784,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2324:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2328:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2324:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1786,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1729,
                              "src": "2336:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1783,
                            "name": "CollateralWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1623,
                            "src": "2304:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2304:40:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1788,
                        "nodeType": "EmitStatement",
                        "src": "2299:45:13"
                      }
                    ]
                  },
                  "functionSelector": "6112fe2e",
                  "id": 1790,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawCollateral",
                  "nameLocation": "1788:18:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1730,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1729,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "1815:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1790,
                        "src": "1807:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1728,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1807:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1806:17:13"
                  },
                  "returnParameters": {
                    "id": 1731,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1833:0:13"
                  },
                  "scope": 1989,
                  "src": "1779:572:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1860,
                    "nodeType": "Block",
                    "src": "2400:576:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1796,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1792,
                                "src": "2418:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2428:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2418:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                              "id": 1799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2431:34:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              },
                              "value": "Amount must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              }
                            ],
                            "id": 1795,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2410:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2410:56:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1801,
                        "nodeType": "ExpressionStatement",
                        "src": "2410:56:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1803,
                                    "name": "loans",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1611,
                                    "src": "2484:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$1594_storage_$",
                                      "typeString": "mapping(address => struct LendingBorrowing.Loan storage ref)"
                                    }
                                  },
                                  "id": 1806,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1804,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2490:3:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1805,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2494:6:13",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2490:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2484:17:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Loan_$1594_storage",
                                    "typeString": "struct LendingBorrowing.Loan storage ref"
                                  }
                                },
                                "id": 1807,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2502:8:13",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1593,
                                "src": "2484:26:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "66616c7365",
                                "id": 1808,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2514:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "2484:35:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4578697374696e67206c6f616e206d75737420626520726570616964206669727374",
                              "id": 1810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2521:36:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71",
                                "typeString": "literal_string \"Existing loan must be repaid first\""
                              },
                              "value": "Existing loan must be repaid first"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71",
                                "typeString": "literal_string \"Existing loan must be repaid first\""
                              }
                            ],
                            "id": 1802,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2476:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2476:82:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1812,
                        "nodeType": "ExpressionStatement",
                        "src": "2476:82:13"
                      },
                      {
                        "assignments": [
                          1814
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1814,
                            "mutability": "mutable",
                            "name": "maxLoan",
                            "nameLocation": "2576:7:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1860,
                            "src": "2568:15:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1813,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2568:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1824,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1815,
                                    "name": "collateralBalances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1606,
                                    "src": "2587:18:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1818,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1816,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2606:3:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1817,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2610:6:13",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2606:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2587:30:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1819,
                                  "name": "collateralFactor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1602,
                                  "src": "2620:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2587:49:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1821,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2586:51:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2640:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "2586:57:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2568:75:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1828,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1826,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1792,
                                "src": "2661:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1827,
                                "name": "maxLoan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1814,
                                "src": "2672:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2661:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c6f616e206578636565647320636f6c6c61746572616c206c696d6974",
                              "id": 1829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2681:31:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f062de9777057055b6551846cac7c8a159a33d8f5550112163d6ec2d9106213f",
                                "typeString": "literal_string \"Loan exceeds collateral limit\""
                              },
                              "value": "Loan exceeds collateral limit"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f062de9777057055b6551846cac7c8a159a33d8f5550112163d6ec2d9106213f",
                                "typeString": "literal_string \"Loan exceeds collateral limit\""
                              }
                            ],
                            "id": 1825,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2653:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2653:60:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1831,
                        "nodeType": "ExpressionStatement",
                        "src": "2653:60:13"
                      },
                      {
                        "expression": {
                          "id": 1844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1832,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1611,
                              "src": "2723:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$1594_storage_$",
                                "typeString": "mapping(address => struct LendingBorrowing.Loan storage ref)"
                              }
                            },
                            "id": 1835,
                            "indexExpression": {
                              "expression": {
                                "id": 1833,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2729:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2733:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2729:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2723:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$1594_storage",
                              "typeString": "struct LendingBorrowing.Loan storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1837,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1792,
                                "src": "2770:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 1838,
                                  "name": "collateralBalances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1606,
                                  "src": "2803:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1841,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1839,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "2822:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1840,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2826:6:13",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2822:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2803:30:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 1842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2857:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 1836,
                              "name": "Loan",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1594,
                              "src": "2743:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Loan_$1594_storage_ptr_$",
                                "typeString": "type(struct LendingBorrowing.Loan storage pointer)"
                              }
                            },
                            "id": 1843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "2762:6:13",
                              "2791:10:13",
                              "2847:8:13"
                            ],
                            "names": [
                              "amount",
                              "collateral",
                              "isActive"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "2743:129:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$1594_memory_ptr",
                              "typeString": "struct LendingBorrowing.Loan memory"
                            }
                          },
                          "src": "2723:149:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Loan_$1594_storage",
                            "typeString": "struct LendingBorrowing.Loan storage ref"
                          }
                        },
                        "id": 1845,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:149:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1849,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2904:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2908:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2904:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1851,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1792,
                              "src": "2916:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1846,
                              "name": "lendingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1600,
                              "src": "2882:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1256",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2895:8:13",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1223,
                            "src": "2882:21:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2882:42:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1853,
                        "nodeType": "ExpressionStatement",
                        "src": "2882:42:13"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1855,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2949:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2953:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2949:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1857,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1792,
                              "src": "2961:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1854,
                            "name": "LoanTaken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1629,
                            "src": "2939:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2939:30:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1859,
                        "nodeType": "EmitStatement",
                        "src": "2934:35:13"
                      }
                    ]
                  },
                  "functionSelector": "8c803fc2",
                  "id": 1861,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "takeLoan",
                  "nameLocation": "2365:8:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1793,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1792,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "2382:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1861,
                        "src": "2374:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1791,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2374:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2373:17:13"
                  },
                  "returnParameters": {
                    "id": 1794,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2400:0:13"
                  },
                  "scope": 1989,
                  "src": "2356:620:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1931,
                    "nodeType": "Block",
                    "src": "3026:490:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1867,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1863,
                                "src": "3044:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1868,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3054:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3044:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                              "id": 1870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3057:34:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              },
                              "value": "Amount must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              }
                            ],
                            "id": 1866,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3036:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3036:56:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1872,
                        "nodeType": "ExpressionStatement",
                        "src": "3036:56:13"
                      },
                      {
                        "assignments": [
                          1875
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1875,
                            "mutability": "mutable",
                            "name": "userLoan",
                            "nameLocation": "3115:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1931,
                            "src": "3102:21:13",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$1594_storage_ptr",
                              "typeString": "struct LendingBorrowing.Loan"
                            },
                            "typeName": {
                              "id": 1874,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1873,
                                "name": "Loan",
                                "nameLocations": [
                                  "3102:4:13"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1594,
                                "src": "3102:4:13"
                              },
                              "referencedDeclaration": 1594,
                              "src": "3102:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$1594_storage_ptr",
                                "typeString": "struct LendingBorrowing.Loan"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1880,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1876,
                            "name": "loans",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1611,
                            "src": "3126:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$1594_storage_$",
                              "typeString": "mapping(address => struct LendingBorrowing.Loan storage ref)"
                            }
                          },
                          "id": 1879,
                          "indexExpression": {
                            "expression": {
                              "id": 1877,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3132:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3136:6:13",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3132:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3126:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Loan_$1594_storage",
                            "typeString": "struct LendingBorrowing.Loan storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3102:41:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1882,
                                "name": "userLoan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1875,
                                "src": "3161:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$1594_storage_ptr",
                                  "typeString": "struct LendingBorrowing.Loan storage pointer"
                                }
                              },
                              "id": 1883,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3170:8:13",
                              "memberName": "isActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1593,
                              "src": "3161:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f20616374697665206c6f616e",
                              "id": 1884,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3180:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba",
                                "typeString": "literal_string \"No active loan\""
                              },
                              "value": "No active loan"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba",
                                "typeString": "literal_string \"No active loan\""
                              }
                            ],
                            "id": 1881,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3153:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3153:44:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1886,
                        "nodeType": "ExpressionStatement",
                        "src": "3153:44:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1888,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1863,
                                "src": "3215:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1889,
                                  "name": "userLoan",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1875,
                                  "src": "3226:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Loan_$1594_storage_ptr",
                                    "typeString": "struct LendingBorrowing.Loan storage pointer"
                                  }
                                },
                                "id": 1890,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3235:6:13",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1589,
                                "src": "3226:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3215:26:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "526570617920616d6f756e742065786365656473206c6f616e",
                              "id": 1892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3243:27:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ca1d6daea04aac090c67657c808874bac2d61a33edee018207c864407ef722d4",
                                "typeString": "literal_string \"Repay amount exceeds loan\""
                              },
                              "value": "Repay amount exceeds loan"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ca1d6daea04aac090c67657c808874bac2d61a33edee018207c864407ef722d4",
                                "typeString": "literal_string \"Repay amount exceeds loan\""
                              }
                            ],
                            "id": 1887,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3207:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3207:64:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1894,
                        "nodeType": "ExpressionStatement",
                        "src": "3207:64:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1898,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3307:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3311:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3307:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1902,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "3327:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LendingBorrowing_$1989",
                                    "typeString": "contract LendingBorrowing"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LendingBorrowing_$1989",
                                    "typeString": "contract LendingBorrowing"
                                  }
                                ],
                                "id": 1901,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3319:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1900,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3319:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3319:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1904,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1863,
                              "src": "3334:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1895,
                              "name": "lendingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1600,
                              "src": "3281:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1256",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3294:12:13",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1255,
                            "src": "3281:25:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3281:61:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1906,
                        "nodeType": "ExpressionStatement",
                        "src": "3281:61:13"
                      },
                      {
                        "expression": {
                          "id": 1911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1907,
                              "name": "userLoan",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1875,
                              "src": "3352:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$1594_storage_ptr",
                                "typeString": "struct LendingBorrowing.Loan storage pointer"
                              }
                            },
                            "id": 1909,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3361:6:13",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1589,
                            "src": "3352:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1910,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1863,
                            "src": "3371:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3352:26:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1912,
                        "nodeType": "ExpressionStatement",
                        "src": "3352:26:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1913,
                              "name": "userLoan",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1875,
                              "src": "3392:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$1594_storage_ptr",
                                "typeString": "struct LendingBorrowing.Loan storage pointer"
                              }
                            },
                            "id": 1914,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3401:6:13",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1589,
                            "src": "3392:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1915,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3411:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3392:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1924,
                        "nodeType": "IfStatement",
                        "src": "3388:76:13",
                        "trueBody": {
                          "id": 1923,
                          "nodeType": "Block",
                          "src": "3414:50:13",
                          "statements": [
                            {
                              "expression": {
                                "id": 1921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1917,
                                    "name": "userLoan",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1875,
                                    "src": "3428:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Loan_$1594_storage_ptr",
                                      "typeString": "struct LendingBorrowing.Loan storage pointer"
                                    }
                                  },
                                  "id": 1919,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "3437:8:13",
                                  "memberName": "isActive",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1593,
                                  "src": "3428:17:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 1920,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3448:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "3428:25:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1922,
                              "nodeType": "ExpressionStatement",
                              "src": "3428:25:13"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1926,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3489:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3493:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3489:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1928,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1863,
                              "src": "3501:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1925,
                            "name": "LoanRepaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1635,
                            "src": "3478:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3478:31:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1930,
                        "nodeType": "EmitStatement",
                        "src": "3473:36:13"
                      }
                    ]
                  },
                  "functionSelector": "ab7b1c89",
                  "id": 1932,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "repayLoan",
                  "nameLocation": "2990:9:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1864,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1863,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "3008:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1932,
                        "src": "3000:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1862,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:17:13"
                  },
                  "returnParameters": {
                    "id": 1865,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3026:0:13"
                  },
                  "scope": 1989,
                  "src": "2981:535:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1960,
                    "nodeType": "Block",
                    "src": "3601:153:13",
                    "statements": [
                      {
                        "assignments": [
                          1941
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1941,
                            "mutability": "mutable",
                            "name": "userLoan",
                            "nameLocation": "3623:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1960,
                            "src": "3611:20:13",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$1594_memory_ptr",
                              "typeString": "struct LendingBorrowing.Loan"
                            },
                            "typeName": {
                              "id": 1940,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1939,
                                "name": "Loan",
                                "nameLocations": [
                                  "3611:4:13"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1594,
                                "src": "3611:4:13"
                              },
                              "referencedDeclaration": 1594,
                              "src": "3611:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$1594_storage_ptr",
                                "typeString": "struct LendingBorrowing.Loan"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1945,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1942,
                            "name": "loans",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1611,
                            "src": "3634:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$1594_storage_$",
                              "typeString": "mapping(address => struct LendingBorrowing.Loan storage ref)"
                            }
                          },
                          "id": 1944,
                          "indexExpression": {
                            "id": 1943,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1934,
                            "src": "3640:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3634:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Loan_$1594_storage",
                            "typeString": "struct LendingBorrowing.Loan storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3611:35:13"
                      },
                      {
                        "condition": {
                          "id": 1948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3660:18:13",
                          "subExpression": {
                            "expression": {
                              "id": 1946,
                              "name": "userLoan",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1941,
                              "src": "3661:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$1594_memory_ptr",
                                "typeString": "struct LendingBorrowing.Loan memory"
                              }
                            },
                            "id": 1947,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3670:8:13",
                            "memberName": "isActive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1593,
                            "src": "3661:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1951,
                        "nodeType": "IfStatement",
                        "src": "3656:32:13",
                        "trueBody": {
                          "expression": {
                            "hexValue": "30",
                            "id": 1949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3687:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "functionReturnParameters": 1938,
                          "id": 1950,
                          "nodeType": "Return",
                          "src": "3680:8:13"
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1955,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1952,
                                    "name": "userLoan",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1941,
                                    "src": "3706:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Loan_$1594_memory_ptr",
                                      "typeString": "struct LendingBorrowing.Loan memory"
                                    }
                                  },
                                  "id": 1953,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3715:6:13",
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1589,
                                  "src": "3706:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 1954,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3724:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "3706:21:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1956,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3705:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1957,
                            "name": "collateralFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1602,
                            "src": "3731:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3705:42:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1938,
                        "id": 1959,
                        "nodeType": "Return",
                        "src": "3698:49:13"
                      }
                    ]
                  },
                  "id": 1961,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_loanRequiredCollateral",
                  "nameLocation": "3530:23:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1935,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1934,
                        "mutability": "mutable",
                        "name": "_user",
                        "nameLocation": "3562:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1961,
                        "src": "3554:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1933,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3554:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3553:15:13"
                  },
                  "returnParameters": {
                    "id": 1938,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1937,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1961,
                        "src": "3592:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1936,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3592:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3591:9:13"
                  },
                  "scope": 1989,
                  "src": "3521:233:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1987,
                    "nodeType": "Block",
                    "src": "3872:126:13",
                    "statements": [
                      {
                        "assignments": [
                          1974
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1974,
                            "mutability": "mutable",
                            "name": "userLoan",
                            "nameLocation": "3894:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1987,
                            "src": "3882:20:13",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$1594_memory_ptr",
                              "typeString": "struct LendingBorrowing.Loan"
                            },
                            "typeName": {
                              "id": 1973,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1972,
                                "name": "Loan",
                                "nameLocations": [
                                  "3882:4:13"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1594,
                                "src": "3882:4:13"
                              },
                              "referencedDeclaration": 1594,
                              "src": "3882:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$1594_storage_ptr",
                                "typeString": "struct LendingBorrowing.Loan"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1978,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1975,
                            "name": "loans",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1611,
                            "src": "3905:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$1594_storage_$",
                              "typeString": "mapping(address => struct LendingBorrowing.Loan storage ref)"
                            }
                          },
                          "id": 1977,
                          "indexExpression": {
                            "id": 1976,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1963,
                            "src": "3911:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3905:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Loan_$1594_storage",
                            "typeString": "struct LendingBorrowing.Loan storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3882:35:13"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "id": 1979,
                                "name": "userLoan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1974,
                                "src": "3935:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$1594_memory_ptr",
                                  "typeString": "struct LendingBorrowing.Loan memory"
                                }
                              },
                              "id": 1980,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3944:6:13",
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1589,
                              "src": "3935:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1981,
                                "name": "userLoan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1974,
                                "src": "3952:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$1594_memory_ptr",
                                  "typeString": "struct LendingBorrowing.Loan memory"
                                }
                              },
                              "id": 1982,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3961:10:13",
                              "memberName": "collateral",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1591,
                              "src": "3952:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1983,
                                "name": "userLoan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1974,
                                "src": "3973:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$1594_memory_ptr",
                                  "typeString": "struct LendingBorrowing.Loan memory"
                                }
                              },
                              "id": 1984,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3982:8:13",
                              "memberName": "isActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1593,
                              "src": "3973:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1985,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3934:57:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$",
                            "typeString": "tuple(uint256,uint256,bool)"
                          }
                        },
                        "functionReturnParameters": 1971,
                        "id": 1986,
                        "nodeType": "Return",
                        "src": "3927:64:13"
                      }
                    ]
                  },
                  "functionSelector": "e8a7da8e",
                  "id": 1988,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLoanDetails",
                  "nameLocation": "3768:14:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1964,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1963,
                        "mutability": "mutable",
                        "name": "_user",
                        "nameLocation": "3791:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1988,
                        "src": "3783:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1962,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3783:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3782:15:13"
                  },
                  "returnParameters": {
                    "id": 1971,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1966,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3829:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1988,
                        "src": "3821:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1965,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3821:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1968,
                        "mutability": "mutable",
                        "name": "collateral",
                        "nameLocation": "3845:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1988,
                        "src": "3837:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1967,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3837:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1970,
                        "mutability": "mutable",
                        "name": "isActive",
                        "nameLocation": "3862:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1988,
                        "src": "3857:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1969,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3857:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3820:51:13"
                  },
                  "scope": 1989,
                  "src": "3759:239:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1990,
              "src": "167:3833:13",
              "usedErrors": [
                392,
                397
              ],
              "usedEvents": [
                403,
                1617,
                1623,
                1629,
                1635
              ]
            }
          ],
          "src": "32:3970:13"
        }
      },
      "contracts/Lock.sol": {
        "id": 14,
        "ast": {
          "absolutePath": "contracts/Lock.sol",
          "exportedSymbols": {
            "Lock": [
              2068
            ]
          },
          "id": 2069,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1991,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:24:14"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Lock",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2068,
              "linearizedBaseContracts": [
                2068
              ],
              "name": "Lock",
              "nameLocation": "150:4:14",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "251c1aa3",
                  "id": 1993,
                  "mutability": "mutable",
                  "name": "unlockTime",
                  "nameLocation": "173:10:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2068,
                  "src": "161:22:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1992,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "161:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8da5cb5b",
                  "id": 1995,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "212:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2068,
                  "src": "189:28:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "189:15:14",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "bf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b93",
                  "id": 2001,
                  "name": "Withdrawal",
                  "nameLocation": "230:10:14",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2000,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1997,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "246:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2001,
                        "src": "241:11:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1996,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "241:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1999,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "when",
                        "nameLocation": "259:4:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2001,
                        "src": "254:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1998,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "254:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "240:24:14"
                  },
                  "src": "224:41:14"
                },
                {
                  "body": {
                    "id": 2026,
                    "nodeType": "Block",
                    "src": "309:200:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2007,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "340:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2008,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "346:9:14",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "340:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 2009,
                                "name": "_unlockTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2003,
                                "src": "358:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "340:29:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e6c6f636b2074696d652073686f756c6420626520696e2074686520667574757265",
                              "id": 2011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "383:37:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413",
                                "typeString": "literal_string \"Unlock time should be in the future\""
                              },
                              "value": "Unlock time should be in the future"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413",
                                "typeString": "literal_string \"Unlock time should be in the future\""
                              }
                            ],
                            "id": 2006,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "319:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "319:111:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2013,
                        "nodeType": "ExpressionStatement",
                        "src": "319:111:14"
                      },
                      {
                        "expression": {
                          "id": 2016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2014,
                            "name": "unlockTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1993,
                            "src": "441:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2015,
                            "name": "_unlockTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2003,
                            "src": "454:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "441:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2017,
                        "nodeType": "ExpressionStatement",
                        "src": "441:24:14"
                      },
                      {
                        "expression": {
                          "id": 2024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2018,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1995,
                            "src": "475:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2021,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "491:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2022,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "495:6:14",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "491:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "483:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 2019,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "483:8:14",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "483:19:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "475:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 2025,
                        "nodeType": "ExpressionStatement",
                        "src": "475:27:14"
                      }
                    ]
                  },
                  "id": 2027,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2004,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2003,
                        "mutability": "mutable",
                        "name": "_unlockTime",
                        "nameLocation": "288:11:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2027,
                        "src": "283:16:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2002,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "283:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "282:18:14"
                  },
                  "returnParameters": {
                    "id": 2005,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "309:0:14"
                  },
                  "scope": 2068,
                  "src": "271:238:14",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2066,
                    "nodeType": "Block",
                    "src": "542:463:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2031,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "766:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2032,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "772:9:14",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "766:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2033,
                                "name": "unlockTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1993,
                                "src": "785:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "766:29:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f752063616e277420776974686472617720796574",
                              "id": 2035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "797:24:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8",
                                "typeString": "literal_string \"You can't withdraw yet\""
                              },
                              "value": "You can't withdraw yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8",
                                "typeString": "literal_string \"You can't withdraw yet\""
                              }
                            ],
                            "id": 2030,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "758:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "758:64:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2037,
                        "nodeType": "ExpressionStatement",
                        "src": "758:64:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2039,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "840:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2040,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "844:6:14",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "840:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2041,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1995,
                                "src": "854:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "840:19:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f75206172656e277420746865206f776e6572",
                              "id": 2043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "861:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a",
                                "typeString": "literal_string \"You aren't the owner\""
                              },
                              "value": "You aren't the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a",
                                "typeString": "literal_string \"You aren't the owner\""
                              }
                            ],
                            "id": 2038,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "832:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "832:52:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2045,
                        "nodeType": "ExpressionStatement",
                        "src": "832:52:14"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2049,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "919:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Lock_$2068",
                                      "typeString": "contract Lock"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Lock_$2068",
                                      "typeString": "contract Lock"
                                    }
                                  ],
                                  "id": 2048,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "911:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2047,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "911:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2050,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "911:13:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "925:7:14",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "911:21:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2052,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "934:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2053,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "940:9:14",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "934:15:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2046,
                            "name": "Withdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2001,
                            "src": "900:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 2054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "900:50:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2055,
                        "nodeType": "EmitStatement",
                        "src": "895:55:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2061,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "984:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Lock_$2068",
                                      "typeString": "contract Lock"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Lock_$2068",
                                      "typeString": "contract Lock"
                                    }
                                  ],
                                  "id": 2060,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "976:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2059,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "976:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2062,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "976:13:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "990:7:14",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "976:21:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2056,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1995,
                              "src": "961:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "967:8:14",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "961:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "961:37:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2065,
                        "nodeType": "ExpressionStatement",
                        "src": "961:37:14"
                      }
                    ]
                  },
                  "functionSelector": "3ccfd60b",
                  "id": 2067,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "524:8:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2028,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "532:2:14"
                  },
                  "returnParameters": {
                    "id": 2029,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "542:0:14"
                  },
                  "scope": 2068,
                  "src": "515:490:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2069,
              "src": "141:866:14",
              "usedErrors": [],
              "usedEvents": [
                2001
              ]
            }
          ],
          "src": "39:969:14"
        }
      },
      "contracts/MyToken.sol": {
        "id": 15,
        "ast": {
          "absolutePath": "contracts/MyToken.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "Context": [
              1358
            ],
            "ERC165": [
              1490
            ],
            "ERC20": [
              1178
            ],
            "ERC20Burnable": [
              1302
            ],
            "IAccessControl": [
              378
            ],
            "IERC20": [
              1256
            ],
            "IERC20Errors": [
              568
            ],
            "IERC20Metadata": [
              1328
            ],
            "MyToken": [
              2188
            ],
            "Pausable": [
              1466
            ]
          },
          "id": 2189,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2070,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:15"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 2071,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2189,
              "sourceUnit": 1179,
              "src": "58:55:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
              "id": 2072,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2189,
              "sourceUnit": 1303,
              "src": "114:74:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "@openzeppelin/contracts/utils/Pausable.sol",
              "id": 2073,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2189,
              "sourceUnit": 1467,
              "src": "189:52:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
              "file": "@openzeppelin/contracts/access/AccessControl.sol",
              "id": 2074,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2189,
              "sourceUnit": 296,
              "src": "242:58:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2075,
                    "name": "ERC20",
                    "nameLocations": [
                      "322:5:15"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1178,
                    "src": "322:5:15"
                  },
                  "id": 2076,
                  "nodeType": "InheritanceSpecifier",
                  "src": "322:5:15"
                },
                {
                  "baseName": {
                    "id": 2077,
                    "name": "ERC20Burnable",
                    "nameLocations": [
                      "329:13:15"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1302,
                    "src": "329:13:15"
                  },
                  "id": 2078,
                  "nodeType": "InheritanceSpecifier",
                  "src": "329:13:15"
                },
                {
                  "baseName": {
                    "id": 2079,
                    "name": "Pausable",
                    "nameLocations": [
                      "344:8:15"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1466,
                    "src": "344:8:15"
                  },
                  "id": 2080,
                  "nodeType": "InheritanceSpecifier",
                  "src": "344:8:15"
                },
                {
                  "baseName": {
                    "id": 2081,
                    "name": "AccessControl",
                    "nameLocations": [
                      "354:13:15"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 295,
                    "src": "354:13:15"
                  },
                  "id": 2082,
                  "nodeType": "InheritanceSpecifier",
                  "src": "354:13:15"
                }
              ],
              "canonicalName": "MyToken",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2188,
              "linearizedBaseContracts": [
                2188,
                295,
                1490,
                1502,
                378,
                1466,
                1302,
                1178,
                568,
                1328,
                1256,
                1358
              ],
              "name": "MyToken",
              "nameLocation": "311:7:15",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "e63ab1e9",
                  "id": 2087,
                  "mutability": "constant",
                  "name": "PAUSER_ROLE",
                  "nameLocation": "398:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2188,
                  "src": "374:62:15",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2083,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "374:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "5041555345525f524f4c45",
                        "id": 2085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "422:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                          "typeString": "literal_string \"PAUSER_ROLE\""
                        },
                        "value": "PAUSER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                          "typeString": "literal_string \"PAUSER_ROLE\""
                        }
                      ],
                      "id": 2084,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "412:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "412:24:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "d5391393",
                  "id": 2092,
                  "mutability": "constant",
                  "name": "MINTER_ROLE",
                  "nameLocation": "466:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2188,
                  "src": "442:62:15",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2088,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "442:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "4d494e5445525f524f4c45",
                        "id": 2090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "490:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        },
                        "value": "MINTER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        }
                      ],
                      "id": 2089,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "480:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "480:24:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2129,
                    "nodeType": "Block",
                    "src": "608:192:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2106,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "629:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 2107,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "649:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "653:6:15",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "649:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2105,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "618:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 2109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "618:42:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2110,
                        "nodeType": "ExpressionStatement",
                        "src": "618:42:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2112,
                              "name": "PAUSER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2087,
                              "src": "681:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 2113,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "694:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "698:6:15",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "694:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2111,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "670:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 2115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "670:35:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2116,
                        "nodeType": "ExpressionStatement",
                        "src": "670:35:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2118,
                              "name": "MINTER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2092,
                              "src": "726:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 2119,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "739:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "743:6:15",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "739:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2117,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "715:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 2121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "715:35:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2122,
                        "nodeType": "ExpressionStatement",
                        "src": "715:35:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2124,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "767:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "771:6:15",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "767:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2126,
                              "name": "initialSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2094,
                              "src": "779:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2123,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1018,
                            "src": "761:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "761:32:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2128,
                        "nodeType": "ExpressionStatement",
                        "src": "761:32:15"
                      }
                    ]
                  },
                  "id": 2130,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2101,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2096,
                          "src": "594:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 2102,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2098,
                          "src": "600:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "id": 2103,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 2100,
                        "name": "ERC20",
                        "nameLocations": [
                          "588:5:15"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1178,
                        "src": "588:5:15"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "588:19:15"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2099,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2094,
                        "mutability": "mutable",
                        "name": "initialSupply",
                        "nameLocation": "531:13:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2130,
                        "src": "523:21:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2093,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "523:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2096,
                        "mutability": "mutable",
                        "name": "name",
                        "nameLocation": "560:4:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2130,
                        "src": "546:18:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2095,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "546:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2098,
                        "mutability": "mutable",
                        "name": "symbol",
                        "nameLocation": "580:6:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2130,
                        "src": "566:20:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2097,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "566:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "522:65:15"
                  },
                  "returnParameters": {
                    "id": 2104,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "608:0:15"
                  },
                  "scope": 2188,
                  "src": "511:289:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2139,
                    "nodeType": "Block",
                    "src": "852:25:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2136,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1449,
                            "src": "862:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "862:8:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2138,
                        "nodeType": "ExpressionStatement",
                        "src": "862:8:15"
                      }
                    ]
                  },
                  "functionSelector": "8456cb59",
                  "id": 2140,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2133,
                          "name": "PAUSER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2087,
                          "src": "839:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 2134,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2132,
                        "name": "onlyRole",
                        "nameLocations": [
                          "830:8:15"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "830:8:15"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "830:21:15"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "815:5:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "820:2:15"
                  },
                  "returnParameters": {
                    "id": 2135,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "852:0:15"
                  },
                  "scope": 2188,
                  "src": "806:71:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2149,
                    "nodeType": "Block",
                    "src": "931:27:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2146,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1465,
                            "src": "941:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "941:10:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2148,
                        "nodeType": "ExpressionStatement",
                        "src": "941:10:15"
                      }
                    ]
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 2150,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2143,
                          "name": "PAUSER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2087,
                          "src": "918:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 2144,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2142,
                        "name": "onlyRole",
                        "nameLocations": [
                          "909:8:15"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "909:8:15"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "909:21:15"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "892:7:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2141,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "899:2:15"
                  },
                  "returnParameters": {
                    "id": 2145,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "931:0:15"
                  },
                  "scope": 2188,
                  "src": "883:75:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2165,
                    "nodeType": "Block",
                    "src": "1035:34:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2161,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2152,
                              "src": "1051:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2162,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2154,
                              "src": "1055:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2160,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1018,
                            "src": "1045:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1045:17:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2164,
                        "nodeType": "ExpressionStatement",
                        "src": "1045:17:15"
                      }
                    ]
                  },
                  "functionSelector": "40c10f19",
                  "id": 2166,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2157,
                          "name": "MINTER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2092,
                          "src": "1022:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 2158,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2156,
                        "name": "onlyRole",
                        "nameLocations": [
                          "1013:8:15"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "1013:8:15"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1013:21:15"
                    }
                  ],
                  "name": "mint",
                  "nameLocation": "973:4:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2152,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "986:2:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2166,
                        "src": "978:10:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2151,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "978:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2154,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "998:6:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2166,
                        "src": "990:14:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2153,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "990:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "977:28:15"
                  },
                  "returnParameters": {
                    "id": 2159,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1035:0:15"
                  },
                  "scope": 2188,
                  "src": "964:105:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    985
                  ],
                  "body": {
                    "id": 2186,
                    "nodeType": "Block",
                    "src": "1194:48:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2181,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2168,
                              "src": "1218:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2182,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2170,
                              "src": "1224:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2183,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2172,
                              "src": "1228:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2178,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1204:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_MyToken_$2188_$",
                                "typeString": "type(contract super MyToken)"
                              }
                            },
                            "id": 2180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1210:7:15",
                            "memberName": "_update",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 985,
                            "src": "1204:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1204:31:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2185,
                        "nodeType": "ExpressionStatement",
                        "src": "1204:31:15"
                      }
                    ]
                  },
                  "id": 2187,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2176,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2175,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "1176:13:15"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1391,
                        "src": "1176:13:15"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1176:13:15"
                    }
                  ],
                  "name": "_update",
                  "nameLocation": "1084:7:15",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2174,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1159:8:15"
                  },
                  "parameters": {
                    "id": 2173,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2168,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1100:4:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2187,
                        "src": "1092:12:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2167,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1092:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2170,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1114:2:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2187,
                        "src": "1106:10:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2169,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1106:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2172,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1126:6:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2187,
                        "src": "1118:14:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2171,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1118:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1091:42:15"
                  },
                  "returnParameters": {
                    "id": 2177,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1194:0:15"
                  },
                  "scope": 2188,
                  "src": "1075:167:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2189,
              "src": "302:942:15",
              "usedErrors": [
                305,
                308,
                538,
                543,
                548,
                557,
                562,
                567,
                1380,
                1383
              ],
              "usedEvents": [
                317,
                326,
                335,
                1190,
                1199,
                1372,
                1377
              ]
            }
          ],
          "src": "32:1213:15"
        }
      },
      "contracts/SupplyChainVerifier.sol": {
        "id": 16,
        "ast": {
          "absolutePath": "contracts/SupplyChainVerifier.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "Context": [
              1358
            ],
            "ERC165": [
              1490
            ],
            "IAccessControl": [
              378
            ],
            "SupplyChainVerifier": [
              2406
            ]
          },
          "id": 2407,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2190,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:16"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
              "file": "@openzeppelin/contracts/access/AccessControl.sol",
              "id": 2191,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2407,
              "sourceUnit": 296,
              "src": "58:58:16",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2192,
                    "name": "AccessControl",
                    "nameLocations": [
                      "150:13:16"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 295,
                    "src": "150:13:16"
                  },
                  "id": 2193,
                  "nodeType": "InheritanceSpecifier",
                  "src": "150:13:16"
                }
              ],
              "canonicalName": "SupplyChainVerifier",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2406,
              "linearizedBaseContracts": [
                2406,
                295,
                1490,
                1502,
                378,
                1358
              ],
              "name": "SupplyChainVerifier",
              "nameLocation": "127:19:16",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "965288b0",
                  "id": 2198,
                  "mutability": "constant",
                  "name": "MANUFACTURER_ROLE",
                  "nameLocation": "214:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2406,
                  "src": "190:74:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2194,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "190:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "4d414e5546414354555245525f524f4c45",
                        "id": 2196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "244:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eefb95e842a3287179d933b4460be539a1d5af11aa8b325bb45c5c8dc92de4ed",
                          "typeString": "literal_string \"MANUFACTURER_ROLE\""
                        },
                        "value": "MANUFACTURER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_eefb95e842a3287179d933b4460be539a1d5af11aa8b325bb45c5c8dc92de4ed",
                          "typeString": "literal_string \"MANUFACTURER_ROLE\""
                        }
                      ],
                      "id": 2195,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "234:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "234:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "f0bd87cc",
                  "id": 2203,
                  "mutability": "constant",
                  "name": "DISTRIBUTOR_ROLE",
                  "nameLocation": "294:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2406,
                  "src": "270:72:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2199,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "270:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "4449535452494255544f525f524f4c45",
                        "id": 2201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "323:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fbd454f36a7e1a388bd6fc3ab10d434aa4578f811acbbcf33afb1c697486313c",
                          "typeString": "literal_string \"DISTRIBUTOR_ROLE\""
                        },
                        "value": "DISTRIBUTOR_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_fbd454f36a7e1a388bd6fc3ab10d434aa4578f811acbbcf33afb1c697486313c",
                          "typeString": "literal_string \"DISTRIBUTOR_ROLE\""
                        }
                      ],
                      "id": 2200,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "313:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "313:29:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "2115e7bf",
                  "id": 2208,
                  "mutability": "constant",
                  "name": "RETAILER_ROLE",
                  "nameLocation": "372:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2406,
                  "src": "348:66:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2204,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "348:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "52455441494c45525f524f4c45",
                        "id": 2206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "398:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a5f906c256a5d799494fcd066e1f6c077689de1cdb65052a1624de4bace99bf",
                          "typeString": "literal_string \"RETAILER_ROLE\""
                        },
                        "value": "RETAILER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2a5f906c256a5d799494fcd066e1f6c077689de1cdb65052a1624de4bace99bf",
                          "typeString": "literal_string \"RETAILER_ROLE\""
                        }
                      ],
                      "id": 2205,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "388:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "388:26:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "SupplyChainVerifier.Product",
                  "id": 2223,
                  "members": [
                    {
                      "constant": false,
                      "id": 2210,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "476:2:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2223,
                      "src": "468:10:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2209,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "468:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2212,
                      "mutability": "mutable",
                      "name": "name",
                      "nameLocation": "495:4:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2223,
                      "src": "488:11:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2211,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "488:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2214,
                      "mutability": "mutable",
                      "name": "origin",
                      "nameLocation": "516:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2223,
                      "src": "509:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2213,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "509:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2216,
                      "mutability": "mutable",
                      "name": "manufacturingDate",
                      "nameLocation": "540:17:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2223,
                      "src": "532:25:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2215,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "532:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2218,
                      "mutability": "mutable",
                      "name": "manufacturer",
                      "nameLocation": "575:12:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2223,
                      "src": "567:20:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2217,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "567:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2220,
                      "mutability": "mutable",
                      "name": "isVerified",
                      "nameLocation": "602:10:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2223,
                      "src": "597:15:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2219,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "597:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2222,
                      "mutability": "mutable",
                      "name": "metadata",
                      "nameLocation": "629:8:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2223,
                      "src": "622:15:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2221,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "622:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Product",
                  "nameLocation": "450:7:16",
                  "nodeType": "StructDefinition",
                  "scope": 2406,
                  "src": "443:201:16",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d810998a0248808a33b20218e71759cb2ec1a182b398350ad606d742587c012c",
                  "id": 2231,
                  "name": "ProductRegistered",
                  "nameLocation": "670:17:16",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2225,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "productId",
                        "nameLocation": "696:9:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2231,
                        "src": "688:17:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2224,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "688:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2227,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "name",
                        "nameLocation": "714:4:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2231,
                        "src": "707:11:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2226,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "707:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2229,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "manufacturer",
                        "nameLocation": "728:12:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2231,
                        "src": "720:20:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2228,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "720:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "687:54:16"
                  },
                  "src": "664:78:16"
                },
                {
                  "anonymous": false,
                  "eventSelector": "ab60911bebc6d3ab48620594e409545834da76f4995297ebc48ca5589f25437b",
                  "id": 2237,
                  "name": "ProductVerified",
                  "nameLocation": "753:15:16",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2236,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2233,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "productId",
                        "nameLocation": "777:9:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2237,
                        "src": "769:17:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2232,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "769:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2235,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "verifier",
                        "nameLocation": "796:8:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2237,
                        "src": "788:16:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2234,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "788:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "768:37:16"
                  },
                  "src": "747:59:16"
                },
                {
                  "constant": false,
                  "functionSelector": "7acc0b20",
                  "id": 2242,
                  "mutability": "mutable",
                  "name": "products",
                  "nameLocation": "871:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2406,
                  "src": "836:43:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$2223_storage_$",
                    "typeString": "mapping(uint256 => struct SupplyChainVerifier.Product)"
                  },
                  "typeName": {
                    "id": 2241,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2238,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "844:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "836:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$2223_storage_$",
                      "typeString": "mapping(uint256 => struct SupplyChainVerifier.Product)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2240,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2239,
                        "name": "Product",
                        "nameLocations": [
                          "855:7:16"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2223,
                        "src": "855:7:16"
                      },
                      "referencedDeclaration": 2223,
                      "src": "855:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Product_$2223_storage_ptr",
                        "typeString": "struct SupplyChainVerifier.Product"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 2244,
                  "mutability": "mutable",
                  "name": "_productIds",
                  "nameLocation": "901:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2406,
                  "src": "885:27:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2253,
                    "nodeType": "Block",
                    "src": "933:117:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2248,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "1012:18:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 2249,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1032:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1036:6:16",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1032:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2247,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "1001:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 2251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1001:42:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2252,
                        "nodeType": "ExpressionStatement",
                        "src": "1001:42:16"
                      }
                    ]
                  },
                  "id": 2254,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2245,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "930:2:16"
                  },
                  "returnParameters": {
                    "id": 2246,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "933:0:16"
                  },
                  "scope": 2406,
                  "src": "919:131:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2301,
                    "nodeType": "Block",
                    "src": "1280:457:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 2270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2268,
                            "name": "_productIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2244,
                            "src": "1290:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 2269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1305:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1290:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2271,
                        "nodeType": "ExpressionStatement",
                        "src": "1290:16:16"
                      },
                      {
                        "assignments": [
                          2273
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2273,
                            "mutability": "mutable",
                            "name": "newProductId",
                            "nameLocation": "1324:12:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 2301,
                            "src": "1316:20:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2272,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1316:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2275,
                        "initialValue": {
                          "id": 2274,
                          "name": "_productIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2244,
                          "src": "1339:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1316:34:16"
                      },
                      {
                        "expression": {
                          "id": 2290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2276,
                              "name": "products",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2242,
                              "src": "1361:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$2223_storage_$",
                                "typeString": "mapping(uint256 => struct SupplyChainVerifier.Product storage ref)"
                              }
                            },
                            "id": 2278,
                            "indexExpression": {
                              "id": 2277,
                              "name": "newProductId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2273,
                              "src": "1370:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1361:22:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Product_$2223_storage",
                              "typeString": "struct SupplyChainVerifier.Product storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2280,
                                "name": "newProductId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2273,
                                "src": "1412:12:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2281,
                                "name": "name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2256,
                                "src": "1444:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 2282,
                                "name": "origin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2258,
                                "src": "1470:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2283,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "1509:5:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1515:9:16",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "1509:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2285,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1552:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1556:6:16",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1552:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 2287,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1588:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "id": 2288,
                                "name": "metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2260,
                                "src": "1617:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 2279,
                              "name": "Product",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2223,
                              "src": "1386:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Product_$2223_storage_ptr_$",
                                "typeString": "type(struct SupplyChainVerifier.Product storage pointer)"
                              }
                            },
                            "id": 2289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "1408:2:16",
                              "1438:4:16",
                              "1462:6:16",
                              "1490:17:16",
                              "1538:12:16",
                              "1576:10:16",
                              "1607:8:16"
                            ],
                            "names": [
                              "id",
                              "name",
                              "origin",
                              "manufacturingDate",
                              "manufacturer",
                              "isVerified",
                              "metadata"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "1386:250:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Product_$2223_memory_ptr",
                              "typeString": "struct SupplyChainVerifier.Product memory"
                            }
                          },
                          "src": "1361:275:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Product_$2223_storage",
                            "typeString": "struct SupplyChainVerifier.Product storage ref"
                          }
                        },
                        "id": 2291,
                        "nodeType": "ExpressionStatement",
                        "src": "1361:275:16"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2293,
                              "name": "newProductId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2273,
                              "src": "1670:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2294,
                              "name": "name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2256,
                              "src": "1684:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 2295,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1690:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1694:6:16",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1690:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2292,
                            "name": "ProductRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2231,
                            "src": "1652:17:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (uint256,string memory,address)"
                            }
                          },
                          "id": 2297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1652:49:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2298,
                        "nodeType": "EmitStatement",
                        "src": "1647:54:16"
                      },
                      {
                        "expression": {
                          "id": 2299,
                          "name": "newProductId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2273,
                          "src": "1718:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2267,
                        "id": 2300,
                        "nodeType": "Return",
                        "src": "1711:19:16"
                      }
                    ]
                  },
                  "functionSelector": "3406b718",
                  "id": 2302,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2263,
                          "name": "MANUFACTURER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2198,
                          "src": "1243:17:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 2264,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2262,
                        "name": "onlyRole",
                        "nameLocations": [
                          "1234:8:16"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "1234:8:16"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1234:27:16"
                    }
                  ],
                  "name": "registerProduct",
                  "nameLocation": "1115:15:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2261,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2256,
                        "mutability": "mutable",
                        "name": "name",
                        "nameLocation": "1154:4:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2302,
                        "src": "1140:18:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2255,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1140:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2258,
                        "mutability": "mutable",
                        "name": "origin",
                        "nameLocation": "1182:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2302,
                        "src": "1168:20:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2257,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1168:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2260,
                        "mutability": "mutable",
                        "name": "metadata",
                        "nameLocation": "1212:8:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2302,
                        "src": "1198:22:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2259,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1198:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1130:96:16"
                  },
                  "returnParameters": {
                    "id": 2267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2266,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2302,
                        "src": "1271:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2265,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1271:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1270:9:16"
                  },
                  "scope": 2406,
                  "src": "1106:631:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2345,
                    "nodeType": "Block",
                    "src": "1842:350:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 2309,
                                    "name": "DISTRIBUTOR_ROLE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2203,
                                    "src": "1881:16:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2310,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "1899:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2311,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1903:6:16",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1899:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2308,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80,
                                  "src": "1873:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 2312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1873:37:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 2314,
                                    "name": "RETAILER_ROLE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2208,
                                    "src": "1922:13:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2315,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "1937:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2316,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1941:6:16",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1937:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2313,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80,
                                  "src": "1914:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 2317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1914:34:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1873:75:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d7573742068617665206469737472696275746f72206f722072657461696c657220726f6c65",
                              "id": 2319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1962:40:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_28d90b5c599d3f32ee19c7e6f1233923e4aab1c4d4c2dc00e283ccdd6455348e",
                                "typeString": "literal_string \"Must have distributor or retailer role\""
                              },
                              "value": "Must have distributor or retailer role"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_28d90b5c599d3f32ee19c7e6f1233923e4aab1c4d4c2dc00e283ccdd6455348e",
                                "typeString": "literal_string \"Must have distributor or retailer role\""
                              }
                            ],
                            "id": 2307,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1852:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1852:160:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2321,
                        "nodeType": "ExpressionStatement",
                        "src": "1852:160:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2323,
                                    "name": "products",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2242,
                                    "src": "2030:8:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$2223_storage_$",
                                      "typeString": "mapping(uint256 => struct SupplyChainVerifier.Product storage ref)"
                                    }
                                  },
                                  "id": 2325,
                                  "indexExpression": {
                                    "id": 2324,
                                    "name": "productId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2304,
                                    "src": "2039:9:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2030:19:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Product_$2223_storage",
                                    "typeString": "struct SupplyChainVerifier.Product storage ref"
                                  }
                                },
                                "id": 2326,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2050:2:16",
                                "memberName": "id",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2210,
                                "src": "2030:22:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2056:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2030:27:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f6475637420646f6573206e6f74206578697374",
                              "id": 2329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2059:24:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592",
                                "typeString": "literal_string \"Product does not exist\""
                              },
                              "value": "Product does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592",
                                "typeString": "literal_string \"Product does not exist\""
                              }
                            ],
                            "id": 2322,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2022:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2022:62:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2331,
                        "nodeType": "ExpressionStatement",
                        "src": "2022:62:16"
                      },
                      {
                        "expression": {
                          "id": 2337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2332,
                                "name": "products",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2242,
                                "src": "2095:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$2223_storage_$",
                                  "typeString": "mapping(uint256 => struct SupplyChainVerifier.Product storage ref)"
                                }
                              },
                              "id": 2334,
                              "indexExpression": {
                                "id": 2333,
                                "name": "productId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2304,
                                "src": "2104:9:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2095:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Product_$2223_storage",
                                "typeString": "struct SupplyChainVerifier.Product storage ref"
                              }
                            },
                            "id": 2335,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2115:10:16",
                            "memberName": "isVerified",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2220,
                            "src": "2095:30:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2128:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2095:37:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2338,
                        "nodeType": "ExpressionStatement",
                        "src": "2095:37:16"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2340,
                              "name": "productId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2304,
                              "src": "2163:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2341,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2174:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2178:6:16",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2174:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2339,
                            "name": "ProductVerified",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2237,
                            "src": "2147:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 2343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2147:38:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2344,
                        "nodeType": "EmitStatement",
                        "src": "2142:43:16"
                      }
                    ]
                  },
                  "functionSelector": "524e8462",
                  "id": 2346,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verifyProduct",
                  "nameLocation": "1802:13:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2305,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2304,
                        "mutability": "mutable",
                        "name": "productId",
                        "nameLocation": "1824:9:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2346,
                        "src": "1816:17:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2303,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1816:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1815:19:16"
                  },
                  "returnParameters": {
                    "id": 2306,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1842:0:16"
                  },
                  "scope": 2406,
                  "src": "1793:399:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2359,
                    "nodeType": "Block",
                    "src": "2300:53:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2355,
                              "name": "DISTRIBUTOR_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2203,
                              "src": "2320:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2356,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2348,
                              "src": "2338:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2354,
                            "name": "grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 147,
                            "src": "2310:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address)"
                            }
                          },
                          "id": 2357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2310:36:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2358,
                        "nodeType": "ExpressionStatement",
                        "src": "2310:36:16"
                      }
                    ]
                  },
                  "functionSelector": "7250e224",
                  "id": 2360,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2351,
                          "name": "DEFAULT_ADMIN_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "2280:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 2352,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2350,
                        "name": "onlyRole",
                        "nameLocations": [
                          "2271:8:16"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "2271:8:16"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2271:28:16"
                    }
                  ],
                  "name": "addDistributor",
                  "nameLocation": "2232:14:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2348,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2255:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2360,
                        "src": "2247:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2347,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2247:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2246:17:16"
                  },
                  "returnParameters": {
                    "id": 2353,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2300:0:16"
                  },
                  "scope": 2406,
                  "src": "2223:130:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2373,
                    "nodeType": "Block",
                    "src": "2455:50:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2369,
                              "name": "RETAILER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2208,
                              "src": "2475:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2370,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2362,
                              "src": "2490:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2368,
                            "name": "grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 147,
                            "src": "2465:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address)"
                            }
                          },
                          "id": 2371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2465:33:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2372,
                        "nodeType": "ExpressionStatement",
                        "src": "2465:33:16"
                      }
                    ]
                  },
                  "functionSelector": "8ec4f505",
                  "id": 2374,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2365,
                          "name": "DEFAULT_ADMIN_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "2435:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 2366,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2364,
                        "name": "onlyRole",
                        "nameLocations": [
                          "2426:8:16"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "2426:8:16"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2426:28:16"
                    }
                  ],
                  "name": "addRetailer",
                  "nameLocation": "2390:11:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2363,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2362,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2410:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2374,
                        "src": "2402:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2361,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2402:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2401:17:16"
                  },
                  "returnParameters": {
                    "id": 2367,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2455:0:16"
                  },
                  "scope": 2406,
                  "src": "2381:124:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2396,
                    "nodeType": "Block",
                    "src": "2614:115:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2383,
                                    "name": "products",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2242,
                                    "src": "2632:8:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$2223_storage_$",
                                      "typeString": "mapping(uint256 => struct SupplyChainVerifier.Product storage ref)"
                                    }
                                  },
                                  "id": 2385,
                                  "indexExpression": {
                                    "id": 2384,
                                    "name": "productId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2376,
                                    "src": "2641:9:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2632:19:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Product_$2223_storage",
                                    "typeString": "struct SupplyChainVerifier.Product storage ref"
                                  }
                                },
                                "id": 2386,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2652:2:16",
                                "memberName": "id",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2210,
                                "src": "2632:22:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2387,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2658:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2632:27:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f6475637420646f6573206e6f74206578697374",
                              "id": 2389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2661:24:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592",
                                "typeString": "literal_string \"Product does not exist\""
                              },
                              "value": "Product does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592",
                                "typeString": "literal_string \"Product does not exist\""
                              }
                            ],
                            "id": 2382,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2624:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2624:62:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2391,
                        "nodeType": "ExpressionStatement",
                        "src": "2624:62:16"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2392,
                            "name": "products",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2242,
                            "src": "2703:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$2223_storage_$",
                              "typeString": "mapping(uint256 => struct SupplyChainVerifier.Product storage ref)"
                            }
                          },
                          "id": 2394,
                          "indexExpression": {
                            "id": 2393,
                            "name": "productId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2376,
                            "src": "2712:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2703:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Product_$2223_storage",
                            "typeString": "struct SupplyChainVerifier.Product storage ref"
                          }
                        },
                        "functionReturnParameters": 2381,
                        "id": 2395,
                        "nodeType": "Return",
                        "src": "2696:26:16"
                      }
                    ]
                  },
                  "functionSelector": "b9db15b4",
                  "id": 2397,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getProduct",
                  "nameLocation": "2547:10:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2377,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2376,
                        "mutability": "mutable",
                        "name": "productId",
                        "nameLocation": "2566:9:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2397,
                        "src": "2558:17:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2375,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2558:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2557:19:16"
                  },
                  "returnParameters": {
                    "id": 2381,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2380,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2397,
                        "src": "2598:14:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Product_$2223_memory_ptr",
                          "typeString": "struct SupplyChainVerifier.Product"
                        },
                        "typeName": {
                          "id": 2379,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2378,
                            "name": "Product",
                            "nameLocations": [
                              "2598:7:16"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2223,
                            "src": "2598:7:16"
                          },
                          "referencedDeclaration": 2223,
                          "src": "2598:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Product_$2223_storage_ptr",
                            "typeString": "struct SupplyChainVerifier.Product"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2597:16:16"
                  },
                  "scope": 2406,
                  "src": "2538:191:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2404,
                    "nodeType": "Block",
                    "src": "2817:35:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 2402,
                          "name": "_productIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2244,
                          "src": "2834:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2401,
                        "id": 2403,
                        "nodeType": "Return",
                        "src": "2827:18:16"
                      }
                    ]
                  },
                  "functionSelector": "4a348da9",
                  "id": 2405,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getProductCount",
                  "nameLocation": "2769:15:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2398,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2784:2:16"
                  },
                  "returnParameters": {
                    "id": 2401,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2400,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2405,
                        "src": "2808:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2399,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2808:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2807:9:16"
                  },
                  "scope": 2406,
                  "src": "2760:92:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2407,
              "src": "118:2736:16",
              "usedErrors": [
                305,
                308
              ],
              "usedEvents": [
                317,
                326,
                335,
                2231,
                2237
              ]
            }
          ],
          "src": "32:2823:16"
        }
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "AccessControl": {
          "abi": [
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "IAccessControl": {
          "abi": [
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "ERC20Burnable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "ERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "irOptimized": ""
        }
      },
      "contracts/Escrow.sol": {
        "Escrow": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_arbiter",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_beneficiary",
                  "type": "address"
                }
              ],
              "stateMutability": "payable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Approved",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "arbiter",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "beneficiary",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "depositor",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_arbiter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arbiter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A simple escrow contract that holds funds until approved by an arbiter. The contract facilitates a secure transaction between a depositor and a beneficiary, with an arbiter who has the authority to release the funds.\",\"events\":{\"Approved(uint256)\":{\"details\":\"Emitted when the arbiter approves the release of funds\",\"params\":{\"amount\":\"The amount of Ether released to the beneficiary\"}}},\"kind\":\"dev\",\"methods\":{\"approve()\":{\"details\":\"Releases the contract's funds to the beneficiary\"},\"constructor\":{\"details\":\"Sets up the escrow with the specified arbiter and beneficiary\",\"params\":{\"_arbiter\":\"Address of the arbiter who can approve fund release\",\"_beneficiary\":\"Address that will receive the funds when approved\"}}},\"title\":\"Escrow\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve()\":{\"notice\":\"Can only be called by the arbiterEmits an Approved event upon successful transfer\"},\"arbiter()\":{\"notice\":\"The address authorized to approve the fund release\"},\"beneficiary()\":{\"notice\":\"The address that will receive the funds when approved\"},\"depositor()\":{\"notice\":\"The address that initially deposited the funds\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Escrow.sol\":\"Escrow\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Escrow.sol\":{\"keccak256\":\"0xf928b1f057c16d97205c30e03339b5e2b6e8dc164e6757968d2459393e0e7d01\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://4ca7c9192cf21efe1d6411fc82668b85dc4afa445cbab762c33b01ec655a2c47\",\"dweb:/ipfs/QmUJ4FMVnQ8gBHN7np8BKdmmJSzepAQZ4KQSd831HavAkd\"]}},\"version\":1}",
            "solc_version": "0.8.26+commit.8a97fa7a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 72/65664 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 1286\n// Code size = 4215 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x20050]\n     5: jump @38 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x30080\n    14: i32 a0 = a0 + 0\n    16: ecalli 12 // 'set_immutable_data'\n    18: jump @38\n      : @2 (gas: 8)\n    21: sp = sp + 0xfffffffffffffff0\n    24: u64 [sp + 0x8] = ra\n    27: u64 [sp] = s0\n    29: a2 = a1\n    31: s0 = a0\n    33: a1 = 0x20\n    36: a0 = a2\n    38: ra = 2, jump @9\n      : @3 [@dyn 1] (gas: 100)\n    43: a1 = u8 [a0 + 0x1]\n    46: a2 = u8 [a0]\n    48: a3 = u8 [a0 + 0x2]\n    51: a4 = u8 [a0 + 0x3]\n    54: a1 = a1 << 0x8\n    57: a1 = a1 | a2\n    60: a3 = a3 << 0x10\n    63: a4 = a4 << 0x18\n    66: a3 = a3 | a4\n    69: a1 = a1 | a3\n    72: a2 = u8 [a0 + 0x5]\n    75: a3 = u8 [a0 + 0x4]\n    78: a4 = u8 [a0 + 0x6]\n    81: a5 = u8 [a0 + 0x7]\n    84: a2 = a2 << 0x8\n    87: a2 = a2 | a3\n    90: a4 = a4 << 0x10\n    93: a5 = a5 << 0x18\n    96: a4 = a4 | a5\n    99: a2 = a2 | a4\n   102: a2 = a2 << 0x20\n   105: t0 = a2 | a1\n   108: a2 = u8 [a0 + 0x9]\n   111: a3 = u8 [a0 + 0x8]\n   114: a4 = u8 [a0 + 0xa]\n   117: a5 = u8 [a0 + 0xb]\n   120: a2 = a2 << 0x8\n   123: a2 = a2 | a3\n   126: a4 = a4 << 0x10\n   129: a5 = a5 << 0x18\n   132: a4 = a4 | a5\n   135: a2 = a2 | a4\n   138: a3 = u8 [a0 + 0xd]\n   141: a4 = u8 [a0 + 0xc]\n   144: a5 = u8 [a0 + 0xe]\n   147: a1 = u8 [a0 + 0xf]\n   150: a3 = a3 << 0x8\n   153: a3 = a3 | a4\n   156: a5 = a5 << 0x10\n   159: a1 = a1 << 0x18\n   162: a1 = a1 | a5\n   165: a1 = a1 | a3\n   168: a1 = a1 << 0x20\n   171: t1 = a1 | a2\n   174: a1 = u8 [a0 + 0x11]\n   177: a3 = u8 [a0 + 0x10]\n   180: a4 = u8 [a0 + 0x12]\n   183: a5 = u8 [a0 + 0x13]\n   186: a1 = a1 << 0x8\n   189: a1 = a1 | a3\n   192: a4 = a4 << 0x10\n   195: a5 = a5 << 0x18\n   198: a4 = a4 | a5\n   201: a1 = a1 | a4\n   204: a3 = u8 [a0 + 0x15]\n   207: a4 = u8 [a0 + 0x14]\n   210: a5 = u8 [a0 + 0x16]\n   213: a2 = u8 [a0 + 0x17]\n   216: a3 = a3 << 0x8\n   219: a3 = a3 | a4\n   222: a5 = a5 << 0x10\n   225: a2 = a2 << 0x18\n   228: a2 = a2 | a5\n   231: a2 = a2 | a3\n   234: a2 = a2 << 0x20\n   237: a3 = a2 | a1\n   240: a1 = u8 [a0 + 0x19]\n   243: a2 = u8 [a0 + 0x18]\n   246: a4 = u8 [a0 + 0x1a]\n   249: a5 = u8 [a0 + 0x1b]\n   252: a1 = a1 << 0x8\n   255: a1 = a1 | a2\n   258: a4 = a4 << 0x10\n   261: a5 = a5 << 0x18\n   264: a4 = a4 | a5\n   267: a1 = a1 | a4\n   270: a2 = u8 [a0 + 0x1d]\n   273: a4 = u8 [a0 + 0x1c]\n   276: a5 = u8 [a0 + 0x1e]\n   279: a0 = u8 [a0 + 0x1f]\n   282: a2 = a2 << 0x8\n   285: a2 = a2 | a4\n   288: a5 = a5 << 0x10\n   291: a0 = a0 << 0x18\n   294: a0 = a0 | a5\n   297: a0 = a0 | a2\n   300: a0 = a0 << 0x20\n   303: a0 = a0 | a1\n   306: a0 = reverse a0\n   308: a1 = reverse a3\n   310: a2 = reverse t1\n   312: a3 = reverse t0\n   314: u64 [s0 + 0x18] = a3\n   317: u64 [s0 + 0x10] = a2\n   320: u64 [s0 + 0x8] = a1\n   323: u64 [s0] = a0\n   325: ra = u64 [sp + 0x8]\n   328: s0 = u64 [sp]\n   330: sp = sp + 0x10\n   333: ret\n      : @4 (gas: 12)\n   335: sp = sp + 0xffffffffffffffd8\n   338: u64 [sp + 0x20] = ra\n   341: u64 [sp + 0x18] = s0\n   344: u64 [sp + 0x10] = s1\n   347: a2 = u64 [a1]\n   349: u64 [sp + 0x8] = a2\n   352: a2 = u64 [a1 + 0x8]\n   355: u64 [sp] = a2\n   357: s0 = u64 [a1 + 0x10]\n   360: s1 = u64 [a1 + 0x18]\n   363: a1 = 0x20\n   366: ra = 4, jump @9\n      : @5 [@dyn 2] (gas: 71)\n   371: a1 = reverse s1\n   373: a2 = reverse s0\n   375: a3 = u64 [sp]\n   377: a3 = reverse a3\n   379: a4 = u64 [sp + 0x8]\n   382: a4 = reverse a4\n   384: u8 [a0 + 0x18] = a4\n   387: u8 [a0 + 0x10] = a3\n   390: u8 [a0 + 0x8] = a2\n   393: u8 [a0] = a1\n   395: a5 = a4 >> 0x38\n   398: u8 [a0 + 0x1f] = a5\n   401: a5 = a4 >> 0x30\n   404: u8 [a0 + 0x1e] = a5\n   407: a5 = a4 >> 0x28\n   410: u8 [a0 + 0x1d] = a5\n   413: a5 = a4 >> 0x20\n   416: u8 [a0 + 0x1c] = a5\n   419: a5 = a4 >> 0x18\n   422: u8 [a0 + 0x1b] = a5\n   425: a5 = a4 >> 0x10\n   428: u8 [a0 + 0x1a] = a5\n   431: a4 = a4 >> 0x8\n   434: u8 [a0 + 0x19] = a4\n   437: a4 = a3 >> 0x38\n   440: u8 [a0 + 0x17] = a4\n   443: a4 = a3 >> 0x30\n   446: u8 [a0 + 0x16] = a4\n   449: a4 = a3 >> 0x28\n   452: u8 [a0 + 0x15] = a4\n   455: a4 = a3 >> 0x20\n   458: u8 [a0 + 0x14] = a4\n   461: a4 = a3 >> 0x18\n   464: u8 [a0 + 0x13] = a4\n   467: a4 = a3 >> 0x10\n   470: u8 [a0 + 0x12] = a4\n   473: a3 = a3 >> 0x8\n   476: u8 [a0 + 0x11] = a3\n   479: a3 = a2 >> 0x38\n   482: u8 [a0 + 0xf] = a3\n   485: a3 = a2 >> 0x30\n   488: u8 [a0 + 0xe] = a3\n   491: a3 = a2 >> 0x28\n   494: u8 [a0 + 0xd] = a3\n   497: a3 = a2 >> 0x20\n   500: u8 [a0 + 0xc] = a3\n   503: a3 = a2 >> 0x18\n   506: u8 [a0 + 0xb] = a3\n   509: a3 = a2 >> 0x10\n   512: u8 [a0 + 0xa] = a3\n   515: a2 = a2 >> 0x8\n   518: u8 [a0 + 0x9] = a2\n   521: a2 = a1 >> 0x38\n   524: u8 [a0 + 0x7] = a2\n   527: a2 = a1 >> 0x30\n   530: u8 [a0 + 0x6] = a2\n   533: a2 = a1 >> 0x28\n   536: u8 [a0 + 0x5] = a2\n   539: a2 = a1 >> 0x20\n   542: u8 [a0 + 0x4] = a2\n   545: a2 = a1 >> 0x18\n   548: u8 [a0 + 0x3] = a2\n   551: a2 = a1 >> 0x10\n   554: u8 [a0 + 0x2] = a2\n   557: a1 = a1 >> 0x8\n   560: u8 [a0 + 0x1] = a1\n   563: ra = u64 [sp + 0x20]\n   566: s0 = u64 [sp + 0x18]\n   569: s1 = u64 [sp + 0x10]\n   572: sp = sp + 0x28\n   575: ret\n      : @6 (gas: 48)\n   577: sp = sp + 0xffffffffffffffa0\n   580: u64 [sp + 0x58] = ra\n   583: u64 [sp + 0x50] = s0\n   586: u64 [sp + 0x48] = s1\n   589: s0 = sp + 0x60\n   592: sp = sp & 0xffffffffffffffe0\n   595: s1 = a0\n   597: a0 = u64 [a1 + 0x18]\n   600: a2 = u64 [a1 + 0x10]\n   603: a3 = u64 [a1 + 0x8]\n   606: a1 = u64 [a1]\n   608: a0 = reverse a0\n   610: a2 = reverse a2\n   612: a3 = reverse a3\n   614: a1 = reverse a1\n   616: u64 [sp + 0x18] = a1\n   619: u64 [sp + 0x10] = a3\n   622: u64 [sp + 0x8] = a2\n   625: u64 [sp] = a0\n   627: u64 [sp + 56] = 0\n   630: u64 [sp + 48] = 0\n   633: u64 [sp + 40] = 0\n   636: u64 [sp + 32] = 0\n   639: u32 [sp + 64] = 0x20\n   643: i32 a1 = sp + 0\n   645: i32 a3 = sp + 0x20\n   648: i32 a4 = sp + 0x40\n   651: a2 = 0xffffffffffffffff\n   654: a0 = 0\n   656: ecalli 7 // 'get_storage'\n   658: a0 = u64 [sp + 0x38]\n   661: a1 = u64 [sp + 0x30]\n   664: a2 = u64 [sp + 0x28]\n   667: a3 = u64 [sp + 0x20]\n   670: a0 = reverse a0\n   672: a1 = reverse a1\n   674: a2 = reverse a2\n   676: a3 = reverse a3\n   678: u64 [s1 + 0x18] = a3\n   681: u64 [s1 + 0x10] = a2\n   684: u64 [s1 + 0x8] = a1\n   687: u64 [s1] = a0\n   689: sp = s0 + 0xffffffffffffffa0\n   692: ra = u64 [sp + 0x58]\n   695: s0 = u64 [sp + 0x50]\n   698: s1 = u64 [sp + 0x48]\n   701: sp = sp + 0x60\n   704: ret\n      : @7 (gas: 40)\n   706: sp = sp + 0xffffffffffffffa0\n   709: u64 [sp + 0x58] = ra\n   712: u64 [sp + 0x50] = s0\n   715: s0 = sp + 0x60\n   718: sp = sp & 0xffffffffffffffe0\n   721: t0 = u64 [a0]\n   723: a3 = u64 [a0 + 0x8]\n   726: a4 = u64 [a0 + 0x10]\n   729: a0 = u64 [a0 + 0x18]\n   732: t1 = u64 [a1]\n   734: a2 = u64 [a1 + 0x8]\n   737: a5 = u64 [a1 + 0x10]\n   740: a1 = u64 [a1 + 0x18]\n   743: t2 = reverse a0\n   745: a4 = reverse a4\n   747: a3 = reverse a3\n   749: a0 = reverse t0\n   751: t0 = reverse a1\n   753: a5 = reverse a5\n   755: a2 = reverse a2\n   757: a1 = reverse t1\n   759: u64 [sp + 0x18] = a0\n   762: u64 [sp + 0x10] = a3\n   765: u64 [sp + 0x8] = a4\n   768: u64 [sp] = t2\n   770: u64 [sp + 0x38] = a1\n   773: u64 [sp + 0x30] = a2\n   776: u64 [sp + 0x28] = a5\n   779: u64 [sp + 0x20] = t0\n   782: i32 a1 = sp + 0\n   784: i32 a3 = sp + 0x20\n   787: a2 = 0xffffffffffffffff\n   790: a4 = 0x20\n   793: a0 = 0\n   795: ecalli 13 // 'set_storage'\n   797: sp = s0 + 0xffffffffffffffa0\n   800: ra = u64 [sp + 0x58]\n   803: s0 = u64 [sp + 0x50]\n   806: sp = sp + 0x60\n   809: ret\n      : @8 [@dyn 3] (gas: 23)\n   811: a1 = u64 [sp]\n   813: a1 = reverse a1\n   815: a2 = u64 [sp + 0x8]\n   818: a2 = reverse a2\n   820: a3 = u64 [sp + 0x10]\n   823: a3 = reverse a3\n   825: a4 = u64 [sp + 0x18]\n   828: a4 = reverse a4\n   830: u64 [sp + 0x38] = a4\n   833: u64 [sp + 0x30] = a3\n   836: u64 [sp + 0x28] = a2\n   839: u64 [sp + 0x20] = a1\n   842: i32 a2 = a0 + 0\n   844: i32 a3 = s1 + 0\n   846: i32 a0 = sp + 0x20\n   849: a1 = 0x1\n   852: ecalli 6 // 'deposit_event'\n   854: sp = s0 + 0xffffffffffffffa0\n   857: ra = u64 [sp + 0x58]\n   860: s0 = u64 [sp + 0x50]\n   863: s1 = u64 [sp + 0x48]\n   866: sp = sp + 0x60\n   869: ret\n      : @9 (gas: 2)\n   871: i32 a2 = a0 >> 0x10\n   874: jump @14 if a2 != 0\n      : @10 (gas: 4)\n   877: a1 = a1 + a0\n   880: i32 a1 = a1 + 0x1f\n   883: a1 = a1 & 0xffffffffffffffe0\n   886: jump @14 if a1 >u 65536\n      : @11 (gas: 3)\n   892: a2 = 0x2004c\n   897: a3 = i32 [0x2004c]\n   902: jump @13 if a3 >=u a1\n      : @12 (gas: 2)\n   905: u32 [0x2004c] = a1\n   910: fallthrough\n      : @13 (gas: 4)\n   911: a1 = 0x20060\n   916: i32 a0 = a0 + 0\n   918: a0 = a0 + a1\n   921: ret\n      : @14 (gas: 1)\n   923: trap\n      : @15 (gas: 6)\n   924: sp = sp + 0xfffffffffffffff0\n   927: u64 [sp + 0x8] = ra\n   930: u64 [sp] = s0\n   932: s0 = a0 & 0x1\n   935: ecalli 4 // 'call_data_size'\n   937: fallthrough\n      : @16 (gas: 2)\n   938: u32 [0x20048] = a0\n   943: jump @18 if s0 == 0\n      : @17 (gas: 1)\n   946: ra = 8, jump @19\n      : @18 [@dyn 4] (gas: 1)\n   950: ra = 10, jump @40\n      : @19 [@dyn 5] (gas: 22)\n   955: sp = sp + 0xfffffffffffffd60\n   959: a0 = sp + 0x200\n   963: u64 [a0 + 0x98] = ra\n   967: u64 [a0 + 0x90] = s0\n   971: u64 [a0 + 0x88] = s1\n   975: s0 = sp + 0x2a0\n   979: sp = sp & 0xffffffffffffffe0\n   982: s1 = i32 [0x20048]\n   987: a0 = s1 << 0x20\n   990: a0 = a0 >> 0x20\n   993: a0 = a0 + 0x1f\n   996: a0 = a0 & 0xffffffffffffffe0\n   999: a1 = a0 + 0x80\n  1003: a0 = a1 <u a0\n  1006: u64 [sp + 344] = 0\n  1010: u64 [sp + 0x140] = a1\n  1014: u64 [sp + 0x148] = a0\n  1018: a0 = 0 if a0 != 0\n  1020: u64 [sp + 0x150] = a0\n  1024: a0 = 0x40\n  1027: a1 = sp + 0x140\n  1031: ra = 12, jump @4\n      : @20 [@dyn 6] (gas: 3)\n  1036: a0 = 0x80\n  1040: a1 = s1\n  1042: ra = 14, jump @9\n      : @21 [@dyn 7] (gas: 5)\n  1047: i32 a0 = a0 + 0\n  1049: a1 = s1\n  1051: a2 = 0\n  1053: ecalli 2 // 'call_data_copy'\n  1055: fallthrough\n      : @22 (gas: 1)\n  1056: jump @35 if s1 <u 64\n      : @23 (gas: 7)\n  1061: u64 [sp + 280] = 0\n  1065: u64 [sp + 272] = 0\n  1069: u64 [sp + 256] = 0x80\n  1075: a0 = sp + 0x120\n  1079: a1 = sp + 0x100\n  1083: u64 [sp + 264] = 0\n  1087: ra = 16, jump @135\n      : @24 [@dyn 8] (gas: 13)\n  1092: a0 = u64 [sp + 0x120]\n  1096: u64 [sp + 0x20] = a0\n  1099: a0 = u64 [sp + 0x128]\n  1103: u64 [sp + 0x18] = a0\n  1106: a0 = u32 [sp + 0x130]\n  1110: u64 [sp + 0x10] = a0\n  1113: u64 [sp + 216] = 0\n  1117: u64 [sp + 208] = 0\n  1121: u64 [sp + 192] = 0xa0\n  1127: a0 = sp + 0xe0\n  1131: a1 = sp + 0xc0\n  1135: u64 [sp + 200] = 0\n  1139: ra = 18, jump @135\n      : @25 [@dyn 9] (gas: 14)\n  1144: a0 = u64 [sp + 0xe0]\n  1148: u64 [sp + 0x38] = a0\n  1151: a0 = u64 [sp + 0xe8]\n  1155: u64 [sp + 0x30] = a0\n  1158: a0 = u32 [sp + 0xf0]\n  1162: u64 [sp + 0x28] = a0\n  1165: u64 [sp + 376] = 0\n  1169: u64 [sp + 368] = 0\n  1173: u64 [sp + 360] = 0\n  1177: s1 = 0x2\n  1180: u64 [sp + 0x160] = s1\n  1184: a0 = sp + 0xa0\n  1188: a1 = sp + 0x160\n  1192: ra = 20, jump @6\n      : @26 [@dyn 10] (gas: 18)\n  1197: a0 = u32 [sp + 0xb4]\n  1201: a0 = a0 << 0x20\n  1204: a1 = u64 [sp + 0xb8]\n  1208: a2 = u64 [sp + 0x10]\n  1211: a0 = a0 | a2\n  1214: u64 [sp + 408] = 0\n  1218: u64 [sp + 400] = 0\n  1222: u64 [sp + 392] = 0\n  1226: u64 [sp + 0x180] = s1\n  1230: a2 = u64 [sp + 0x18]\n  1233: u64 [sp + 0x1a8] = a2\n  1237: a2 = u64 [sp + 0x20]\n  1240: u64 [sp + 0x1a0] = a2\n  1244: u64 [sp + 0x1b8] = a1\n  1248: u64 [sp + 0x1b0] = a0\n  1252: a0 = sp + 0x180\n  1256: a1 = sp + 0x1a0\n  1260: ra = 22, jump @7\n      : @27 [@dyn 11] (gas: 8)\n  1265: u64 [sp + 472] = 0\n  1269: u64 [sp + 464] = 0\n  1273: u64 [sp + 456] = 0\n  1277: s1 = 0x1\n  1280: u64 [sp + 0x1c0] = s1\n  1284: a0 = sp + 0x80\n  1288: a1 = sp + 0x1c0\n  1292: ra = 24, jump @6\n      : @28 [@dyn 12] (gas: 19)\n  1297: a0 = u32 [sp + 0x94]\n  1301: a0 = a0 << 0x20\n  1304: a1 = u64 [sp + 0x98]\n  1308: a2 = u64 [sp + 0x28]\n  1311: a0 = a0 | a2\n  1314: u64 [sp + 504] = 0\n  1318: u64 [sp + 496] = 0\n  1322: u64 [sp + 488] = 0\n  1326: u64 [sp + 0x1e0] = s1\n  1330: a2 = u64 [sp + 0x30]\n  1333: a3 = sp + 0x200\n  1337: u64 [a3 + 0x8] = a2\n  1340: a2 = u64 [sp + 0x38]\n  1343: u64 [a3] = a2\n  1345: u64 [a3 + 0x18] = a1\n  1348: u64 [a3 + 0x10] = a0\n  1351: a0 = sp + 0x1e0\n  1355: a1 = sp + 0x200\n  1359: ra = 26, jump @7\n      : @29 [@dyn 13] (gas: 26)\n  1364: s1 = 0x30060\n  1369: i32 a0 = s1 + 0\n  1371: ecalli 5 // 'caller'\n  1373: a0 = u64 [0x30068]\n  1378: a1 = i32 [0x30070]\n  1383: a2 = u64 [0x30060]\n  1388: a0 = reverse a0\n  1390: a3 = a0 << 0x20\n  1393: a1 = reverse a1\n  1395: a1 = a1 >> 0x20\n  1398: a1 = a1 | a3\n  1401: u64 [sp + 0x38] = a1\n  1404: a0 = a0 >> 0x20\n  1407: a1 = reverse a2\n  1409: a2 = a1 << 0x20\n  1412: a0 = a0 | a2\n  1415: u64 [sp + 0x30] = a0\n  1418: s1 = a1 >> 0x20\n  1421: a0 = sp + 0x200\n  1425: u64 [a0 + 56] = 0\n  1428: u64 [a0 + 48] = 0\n  1431: u64 [a0 + 40] = 0\n  1434: u64 [a0 + 32] = 0\n  1437: a0 = sp + 0x60\n  1440: a1 = sp + 0x220\n  1444: ra = 28, jump @6\n      : @30 [@dyn 14] (gas: 18)\n  1449: a0 = u32 [sp + 0x74]\n  1452: a0 = a0 << 0x20\n  1455: a1 = u64 [sp + 0x78]\n  1458: a0 = a0 | s1\n  1461: a2 = sp + 0x200\n  1465: u64 [a2 + 88] = 0\n  1468: u64 [a2 + 80] = 0\n  1471: u64 [a2 + 72] = 0\n  1474: u64 [a2 + 64] = 0\n  1477: u64 [a2 + 0x78] = a1\n  1480: a1 = u64 [sp + 0x30]\n  1483: u64 [a2 + 0x68] = a1\n  1486: a1 = u64 [sp + 0x38]\n  1489: u64 [a2 + 0x60] = a1\n  1492: u64 [a2 + 0x70] = a0\n  1495: a0 = sp + 0x240\n  1499: a1 = sp + 0x260\n  1503: ra = 30, jump @7\n      : @31 [@dyn 15] (gas: 3)\n  1508: a0 = sp + 0x40\n  1511: a1 = 0x40\n  1514: ra = 32, jump @2\n      : @32 [@dyn 16] (gas: 5)\n  1519: a0 = u64 [sp + 0x58]\n  1522: a1 = u64 [sp + 0x50]\n  1525: a2 = u64 [sp + 0x48]\n  1528: s1 = u64 [sp + 0x40]\n  1531: t0 = 34, jump @143\n      : @33 [@dyn 17] (gas: 1)\n  1536: jump @36 if a0 == 0\n      : @34 (gas: 1)\n  1539: trap\n      : @35 (gas: 7)\n  1540: a1 = 0x20060\n  1545: i32 a1 = a1 + 0\n  1547: a0 = 0x1\n  1550: a2 = 0\n  1552: ra = 0x28\n  1555: ecalli 11 // 'seal_return'\n  1557: jump @40\n      : @36 (gas: 3)\n  1559: a0 = s1\n  1561: a1 = 0\n  1563: ra = 36, jump @9\n      : @37 [@dyn 18] (gas: 5)\n  1568: i32 a0 = a0 + 0\n  1570: a1 = 0\n  1572: a2 = 0\n  1574: ecalli 2 // 'call_data_copy'\n  1576: jump @0\n      : @38 (gas: 3)\n  1579: a0 = s1\n  1581: a1 = 0\n  1583: ra = 38, jump @9\n      : @39 [@dyn 19] (gas: 6)\n  1588: i32 a1 = a0 + 0\n  1590: a0 = 0\n  1592: a2 = 0\n  1594: ra = 0x28\n  1597: ecalli 11 // 'seal_return'\n  1599: fallthrough\n      : @40 [@dyn 20] (gas: 15)\n  1600: sp = sp + 0xfffffffffffffa20\n  1604: a0 = sp + 0x500\n  1608: u64 [a0 + 0xd8] = ra\n  1612: u64 [a0 + 0xd0] = s0\n  1616: u64 [a0 + 0xc8] = s1\n  1620: s0 = sp + 0x5e0\n  1624: sp = sp & 0xffffffffffffffe0\n  1627: a2 = sp + 0x300\n  1631: u64 [a2 + 216] = 0\n  1635: u64 [a2 + 208] = 0\n  1639: u64 [a2 + 192] = 0x80\n  1645: a0 = 0x40\n  1648: a1 = sp + 0x3c0\n  1652: u64 [a2 + 200] = 0\n  1656: ra = 42, jump @4\n      : @41 [@dyn 21] (gas: 3)\n  1661: s1 = 0x20048\n  1666: a0 = i32 [0x20048]\n  1671: jump @109 if a0 <u 4\n      : @42 (gas: 4)\n  1676: i32 a0 = sp + 0x3e0\n  1680: a1 = 0\n  1682: ecalli 3 // 'call_data_load'\n  1684: fallthrough\n      : @43 (gas: 2)\n  1685: a0 = i32 [sp + 0x3fc]\n  1689: jump @69 if a0 == 3351576390\n      : @44 (gas: 1)\n  1697: jump @61 if a0 == 4263895050\n      : @45 (gas: 1)\n  1705: jump @77 if a0 != 306335295\n      : @46 (gas: 8)\n  1713: a0 = sp + 0x400\n  1717: u64 [a0 + 24] = 0\n  1720: u64 [a0 + 16] = 0\n  1723: u64 [a0 + 8] = 0\n  1726: u64 [a0 + 0] = 0\n  1728: i32 a0 = sp + 0x400\n  1732: ecalli 14 // 'value_transferred'\n  1734: fallthrough\n      : @47 (gas: 9)\n  1735: a4 = sp + 0x400\n  1739: a0 = u64 [a4 + 0x10]\n  1742: a1 = u64 [a4 + 0x18]\n  1745: a2 = u64 [a4 + 0x8]\n  1748: a3 = u64 [a4]\n  1750: a1 = a1 | a2\n  1753: a0 = a0 | a3\n  1756: a0 = a0 | a1\n  1759: jump @115 if a0 != 0\n      : @48 (gas: 2)\n  1763: a0 = i32 [0x20048]\n  1768: jump @116 if a0 <=u 3\n      : @49 (gas: 8)\n  1773: a1 = sp + 0x400\n  1777: u64 [a1 + 56] = 0\n  1780: u64 [a1 + 48] = 0\n  1783: u64 [a1 + 40] = 0\n  1786: u64 [a1 + 32] = 0x2\n  1790: a0 = sp + 0x280\n  1794: a1 = sp + 0x420\n  1798: ra = 44, jump @6\n      : @50 [@dyn 22] (gas: 10)\n  1803: a0 = u64 [sp + 0x288]\n  1807: u64 [sp + 0x58] = a0\n  1810: a0 = u64 [sp + 0x280]\n  1814: u64 [sp + 0x50] = a0\n  1817: a0 = u32 [sp + 0x290]\n  1821: u64 [sp + 0x48] = a0\n  1824: s1 = 0x30060\n  1829: i32 a0 = s1 + 0\n  1831: ecalli 5 // 'caller'\n  1833: fallthrough\n      : @51 (gas: 22)\n  1834: a0 = u64 [0x30068]\n  1839: a1 = u64 [0x30060]\n  1844: a2 = i32 [0x30070]\n  1849: a0 = reverse a0\n  1851: a3 = a0 >> 0x20\n  1854: a1 = reverse a1\n  1856: a4 = a1 << 0x20\n  1859: a3 = a3 | a4\n  1862: a0 = a0 << 0x20\n  1865: a2 = reverse a2\n  1867: a2 = a2 >> 0x20\n  1870: a0 = a0 | a2\n  1873: a1 = a1 >> 0x20\n  1876: a2 = u64 [sp + 0x48]\n  1879: a1 = a1 ^ a2\n  1882: a2 = u64 [sp + 0x50]\n  1885: a0 = a0 ^ a2\n  1888: a0 = a0 | a1\n  1891: a1 = u64 [sp + 0x58]\n  1894: a1 = a1 ^ a3\n  1897: a0 = a0 | a1\n  1900: jump @117 if a0 != 0\n      : @52 (gas: 18)\n  1904: i32 a0 = sp + 0x440\n  1908: ecalli 0 // 'balance'\n  1909: a1 = sp + 0x400\n  1913: a0 = u64 [a1 + 0x58]\n  1916: u64 [sp + 0x58] = a0\n  1919: a0 = u64 [a1 + 0x50]\n  1922: u64 [sp + 0x50] = a0\n  1925: a0 = u64 [a1 + 0x48]\n  1928: u64 [sp + 0x48] = a0\n  1931: a0 = u64 [a1 + 0x40]\n  1934: u64 [sp + 0x40] = a0\n  1937: u64 [a1 + 120] = 0\n  1940: u64 [a1 + 112] = 0\n  1943: u64 [a1 + 104] = 0\n  1946: u64 [a1 + 96] = 0x1\n  1950: a0 = sp + 0x1e0\n  1954: a1 = sp + 0x460\n  1958: ra = 46, jump @6\n      : @53 [@dyn 23] (gas: 62)\n  1963: a0 = u64 [sp + 0x1e0]\n  1967: u64 [sp + 0x38] = a0\n  1970: a0 = u64 [sp + 0x1f0]\n  1974: u64 [sp + 0x30] = a0\n  1977: a0 = u64 [sp + 0x1e8]\n  1981: u64 [sp + 0x28] = a0\n  1984: ecalli 8 // 'ref_time_left'\n  1986: a1 = u64 [sp + 0x28]\n  1989: a1 = reverse a1\n  1991: a2 = a1 << 0x20\n  1994: a3 = u64 [sp + 0x30]\n  1997: a3 = reverse a3\n  1999: a3 = a3 >> 0x20\n  2002: a2 = a2 | a3\n  2005: a1 = a1 >> 0x20\n  2008: a3 = u64 [sp + 0x38]\n  2011: a3 = reverse a3\n  2013: a4 = a3 << 0x20\n  2016: a1 = a1 | a4\n  2019: a3 = a3 >> 0x20\n  2022: u32 [s1 + 0x10] = a3\n  2025: u64 [s1 + 0x8] = a1\n  2028: u64 [s1] = a2\n  2030: a1 = u64 [sp + 0x58]\n  2033: a2 = sp + 0x400\n  2037: u64 [a2 + 0x98] = a1\n  2041: a1 = u64 [sp + 0x50]\n  2044: u64 [a2 + 0x90] = a1\n  2048: a1 = u64 [sp + 0x48]\n  2051: u64 [a2 + 0x88] = a1\n  2055: a1 = u64 [sp + 0x40]\n  2058: u64 [a2 + 0x80] = a1\n  2062: u32 [sp + 1184] = 0\n  2066: a0 = a0 >u 0x8fc\n  2070: a1 = -a0\n  2072: u64 [a2 + 0xd8] = a1\n  2076: u64 [a2 + 0xd0] = a1\n  2080: u64 [a2 + 0xc8] = a1\n  2084: u64 [a2 + 0xc0] = a1\n  2088: s1 = s1 << 0x20\n  2091: s1 = s1 >> 0x20\n  2094: a0 = a0 << 0x23\n  2097: a0 = a0 | s1\n  2100: a1 = sp + 0x480\n  2104: a1 = a1 << 0x20\n  2107: a1 = a1 >> 0x20\n  2110: a4 = 0x20060\n  2115: a2 = sp + 0x4c0\n  2119: a2 = a2 << 0x20\n  2122: a3 = a2 | a1\n  2125: u64 [sp + 0x28] = a4\n  2128: a4 = a4 << 0x20\n  2131: a4 = a4 >> 0x20\n  2134: a1 = sp + 0x4a0\n  2138: a1 = a1 << 0x20\n  2141: a5 = a1 | a4\n  2144: a1 = 0xffffffffffffffff\n  2147: a2 = 0xffffffffffffffff\n  2150: ecalli 1 // 'call'\n  2152: s1 = a0\n  2154: ecalli 10 // 'return_data_size'\n  2156: fallthrough\n      : @54 (gas: 1)\n  2157: jump @86 if a0 != 0\n      : @55 (gas: 3)\n  2161: a0 = sp + 0x120\n  2165: a1 = 0x40\n  2168: ra = 48, jump @2\n      : @56 [@dyn 24] (gas: 6)\n  2173: a5 = u64 [sp + 0x138]\n  2177: a4 = u64 [sp + 0x130]\n  2181: a3 = u64 [sp + 0x128]\n  2185: a2 = u64 [sp + 0x120]\n  2189: a0 = a2 | a4\n  2192: jump @99 if s1 != 0\n      : @57 (gas: 7)\n  2196: a1 = a3 | a5\n  2199: a0 = a0 | a1\n  2202: a0 = a0 >> 0x20\n  2205: a1 = a1 | a4\n  2208: a1 = a1 << 0x20\n  2211: a0 = a0 | a1\n  2214: jump @85 if a0 != 0\n      : @58 (gas: 12)\n  2218: a0 = u64 [sp + 0x40]\n  2221: u64 [sp + 0x80] = a0\n  2225: a0 = u64 [sp + 0x48]\n  2228: u64 [sp + 0x88] = a0\n  2232: a0 = u64 [sp + 0x50]\n  2235: u64 [sp + 0x90] = a0\n  2239: a1 = sp + 0x80\n  2243: a0 = u64 [sp + 0x58]\n  2246: u64 [sp + 0x98] = a0\n  2250: a0 = a2\n  2252: s1 = a2\n  2254: ra = 50, jump @4\n      : @59 [@dyn 25] (gas: 29)\n  2259: a0 = u64 [0x20028]\n  2264: a1 = u64 [0x20030]\n  2269: u64 [sp + 0x78] = a0\n  2272: a0 = u64 [0x20038]\n  2277: u64 [sp + 0x70] = a1\n  2280: a3 = u64 [0x20040]\n  2285: u64 [sp + 0x68] = a0\n  2288: a1 = 0x20\n  2291: a2 = sp + 0x60\n  2294: u64 [sp + 0x60] = a3\n  2297: a0 = s1\n  2299: ra = 0x34\n  2302: sp = sp + 0xffffffffffffffa0\n  2305: u64 [sp + 0x58] = ra\n  2308: u64 [sp + 0x50] = s0\n  2311: u64 [sp + 0x48] = s1\n  2314: s0 = sp + 0x60\n  2317: sp = sp & 0xffffffffffffffe0\n  2320: a3 = u64 [a2]\n  2322: u64 [sp + 0x18] = a3\n  2325: a3 = u64 [a2 + 0x8]\n  2328: u64 [sp + 0x10] = a3\n  2331: a3 = u64 [a2 + 0x10]\n  2334: u64 [sp + 0x8] = a3\n  2337: a2 = u64 [a2 + 0x18]\n  2340: u64 [sp] = a2\n  2342: s1 = a1\n  2344: ra = 0x6\n  2347: jump @9\n      : @60 [@dyn 26] (gas: 6)\n  2350: a1 = i32 [sp + 0x28]\n  2353: a0 = 0\n  2355: a2 = 0\n  2357: ecalli 11 // 'seal_return'\n  2359: a1 = 0x20060\n  2364: jump @110\n      : @61 (gas: 8)\n  2367: a0 = sp + 0x500\n  2371: u64 [a0 + 152] = 0\n  2375: u64 [a0 + 144] = 0\n  2379: u64 [a0 + 136] = 0\n  2383: u64 [a0 + 128] = 0\n  2387: i32 a0 = sp + 0x580\n  2391: ecalli 14 // 'value_transferred'\n  2393: fallthrough\n      : @62 (gas: 9)\n  2394: a4 = sp + 0x500\n  2398: a0 = u64 [a4 + 0x90]\n  2402: a1 = u64 [a4 + 0x98]\n  2406: a2 = u64 [a4 + 0x88]\n  2410: a3 = u64 [a4 + 0x80]\n  2414: a1 = a1 | a2\n  2417: a0 = a0 | a3\n  2420: a0 = a0 | a1\n  2423: jump @111 if a0 != 0\n      : @63 (gas: 2)\n  2427: a0 = i32 [0x20048]\n  2432: jump @112 if a0 <=u 3\n      : @64 (gas: 8)\n  2437: a1 = sp + 0x500\n  2441: u64 [a1 + 184] = 0\n  2445: u64 [a1 + 176] = 0\n  2449: u64 [a1 + 168] = 0\n  2453: u64 [a1 + 160] = 0x2\n  2458: a0 = sp + 0x3a0\n  2462: a1 = sp + 0x5a0\n  2466: ra = 54, jump @6\n      : @65 [@dyn 27] (gas: 10)\n  2471: a1 = sp + 0x300\n  2475: a0 = u64 [a1 + 0xb0]\n  2479: u64 [sp + 0x48] = a0\n  2482: a0 = u64 [a1 + 0xa8]\n  2486: u64 [sp + 0x58] = a0\n  2489: a0 = u64 [a1 + 0xa0]\n  2493: u64 [sp + 0x50] = a0\n  2496: a0 = sp + 0x380\n  2500: a1 = 0x40\n  2503: ra = 56, jump @2\n      : @66 [@dyn 28] (gas: 6)\n  2508: a3 = sp + 0x300\n  2512: a0 = u64 [a3 + 0x98]\n  2516: a1 = u64 [a3 + 0x90]\n  2520: a2 = u64 [a3 + 0x88]\n  2524: s1 = u64 [a3 + 0x80]\n  2528: t0 = 58, jump @143\n      : @67 [@dyn 29] (gas: 1)\n  2533: jump @85 if a0 != 0\n      : @68 (gas: 14)\n  2537: a0 = u64 [sp + 0x48]\n  2540: a0 = a0 << 0x20\n  2543: a0 = a0 >> 0x20\n  2546: a2 = sp + 0x300\n  2550: u64 [a2 + 120] = 0\n  2553: a1 = u64 [sp + 0x50]\n  2556: u64 [a2 + 0x60] = a1\n  2559: a1 = u64 [sp + 0x58]\n  2562: u64 [a2 + 0x68] = a1\n  2565: a1 = sp + 0x360\n  2569: u64 [a2 + 0x70] = a0\n  2572: a0 = s1\n  2574: ra = 0x62\n  2577: jump @4\n      : @69 (gas: 8)\n  2580: a0 = sp + 0x500\n  2584: u64 [a0 + 88] = 0\n  2587: u64 [a0 + 80] = 0\n  2590: u64 [a0 + 72] = 0\n  2593: u64 [a0 + 64] = 0\n  2596: i32 a0 = sp + 0x540\n  2600: ecalli 14 // 'value_transferred'\n  2602: fallthrough\n      : @70 (gas: 9)\n  2603: a4 = sp + 0x500\n  2607: a0 = u64 [a4 + 0x50]\n  2610: a1 = u64 [a4 + 0x58]\n  2613: a2 = u64 [a4 + 0x48]\n  2616: a3 = u64 [a4 + 0x40]\n  2619: a1 = a1 | a2\n  2622: a0 = a0 | a3\n  2625: a0 = a0 | a1\n  2628: jump @113 if a0 != 0\n      : @71 (gas: 2)\n  2632: a0 = i32 [0x20048]\n  2637: jump @114 if a0 <=u 3\n      : @72 (gas: 8)\n  2642: a0 = sp + 0x500\n  2646: u64 [a0 + 120] = 0\n  2649: u64 [a0 + 112] = 0\n  2652: u64 [a0 + 104] = 0\n  2655: u64 [a0 + 96] = 0\n  2658: a0 = sp + 0x340\n  2662: a1 = sp + 0x560\n  2666: ra = 60, jump @6\n      : @73 [@dyn 30] (gas: 10)\n  2671: a1 = sp + 0x300\n  2675: a0 = u64 [a1 + 0x50]\n  2678: u64 [sp + 0x48] = a0\n  2681: a0 = u64 [a1 + 0x48]\n  2684: u64 [sp + 0x58] = a0\n  2687: a0 = u64 [a1 + 0x40]\n  2690: u64 [sp + 0x50] = a0\n  2693: a0 = sp + 0x320\n  2697: a1 = 0x40\n  2700: ra = 62, jump @2\n      : @74 [@dyn 31] (gas: 6)\n  2705: a3 = sp + 0x300\n  2709: a0 = u64 [a3 + 0x38]\n  2712: a1 = u64 [a3 + 0x30]\n  2715: a2 = u64 [a3 + 0x28]\n  2718: s1 = u64 [a3 + 0x20]\n  2721: t0 = 64, jump @143\n      : @75 [@dyn 32] (gas: 1)\n  2726: jump @85 if a0 != 0\n      : @76 (gas: 14)\n  2730: a0 = u64 [sp + 0x48]\n  2733: a0 = a0 << 0x20\n  2736: a0 = a0 >> 0x20\n  2739: a2 = sp + 0x300\n  2743: u64 [a2 + 24] = 0\n  2746: a1 = u64 [sp + 0x50]\n  2749: u64 [a2] = a1\n  2751: a1 = u64 [sp + 0x58]\n  2754: u64 [a2 + 0x8] = a1\n  2757: a1 = sp + 0x300\n  2761: u64 [a2 + 0x10] = a0\n  2764: a0 = s1\n  2766: ra = 0x62\n  2769: jump @4\n      : @77 (gas: 1)\n  2772: jump @109 if a0 != 951009005\n      : @78 (gas: 8)\n  2780: a0 = sp + 0x500\n  2784: u64 [a0 + 24] = 0\n  2787: u64 [a0 + 16] = 0\n  2790: u64 [a0 + 8] = 0\n  2793: u64 [a0 + 0] = 0\n  2795: i32 a0 = sp + 0x500\n  2799: ecalli 14 // 'value_transferred'\n  2801: fallthrough\n      : @79 (gas: 9)\n  2802: a4 = sp + 0x500\n  2806: a0 = u64 [a4 + 0x10]\n  2809: a1 = u64 [a4 + 0x18]\n  2812: a2 = u64 [a4 + 0x8]\n  2815: a3 = u64 [a4]\n  2817: a1 = a1 | a2\n  2820: a0 = a0 | a3\n  2823: a0 = a0 | a1\n  2826: jump @125 if a0 != 0\n      : @80 (gas: 2)\n  2830: a0 = i32 [0x20048]\n  2835: jump @126 if a0 <=u 3\n      : @81 (gas: 8)\n  2840: a1 = sp + 0x500\n  2844: u64 [a1 + 56] = 0\n  2847: u64 [a1 + 48] = 0\n  2850: u64 [a1 + 40] = 0\n  2853: u64 [a1 + 32] = 0x1\n  2857: a0 = sp + 0x2e0\n  2861: a1 = sp + 0x520\n  2865: ra = 66, jump @6\n      : @82 [@dyn 33] (gas: 10)\n  2870: a1 = sp + 0x200\n  2874: a0 = u64 [a1 + 0xf0]\n  2878: u64 [sp + 0x48] = a0\n  2881: a0 = u64 [a1 + 0xe8]\n  2885: u64 [sp + 0x58] = a0\n  2888: a0 = u64 [a1 + 0xe0]\n  2892: u64 [sp + 0x50] = a0\n  2895: a0 = sp + 0x2c0\n  2899: a1 = 0x40\n  2902: ra = 68, jump @2\n      : @83 [@dyn 34] (gas: 6)\n  2907: a3 = sp + 0x200\n  2911: a0 = u64 [a3 + 0xd8]\n  2915: a1 = u64 [a3 + 0xd0]\n  2919: a2 = u64 [a3 + 0xc8]\n  2923: s1 = u64 [a3 + 0xc0]\n  2927: t0 = 70, jump @143\n      : @84 [@dyn 35] (gas: 1)\n  2932: jump @127 if a0 == 0\n      : @85 (gas: 1)\n  2936: trap\n      : @86 (gas: 6)\n  2937: u64 [sp + 0x10] = s1\n  2940: ecalli 10 // 'return_data_size'\n  2942: s1 = a0\n  2944: a0 = sp + 0x1c0\n  2948: a1 = 0x40\n  2951: ra = 72, jump @2\n      : @87 [@dyn 36] (gas: 30)\n  2956: ra = u64 [sp + 0x1d8]\n  2960: a5 = u64 [sp + 0x1d0]\n  2964: t2 = u64 [sp + 0x1c8]\n  2968: t1 = u64 [sp + 0x1c0]\n  2972: a0 = s1 + 0x1f\n  2975: u64 [sp + 0x18] = s1\n  2978: a1 = a0 <u s1\n  2981: a0 = a0 & 0xffffffffffffffe0\n  2984: a2 = a0 + 0x3f\n  2987: a0 = a2 <u a0\n  2990: a3 = a1 + a0\n  2993: a2 = a2 & 0xffffffffffffffe0\n  2996: a1 = a3 + t2\n  2999: t0 = a2 + t1\n  3002: a2 = t0 <u a2\n  3005: a1 = a1 + a2\n  3008: a4 = a1 ^ a3\n  3011: a3 = a1 <u a3\n  3014: a3 = a2 if a4 == 0\n  3017: a3 = a3 + a5\n  3020: u64 [sp + 0x38] = a5\n  3023: a4 = a3 <u a5\n  3026: a2 = ra + a4\n  3029: a5 = a3 >u 0\n  3031: s1 = a2 >u 0\n  3033: s1 = a5 if a2 == 0\n  3036: a5 = a3 | a2\n  3039: a0 = a1 >u 0\n  3041: a0 = s1 if a5 != 0\n  3044: jump @130 if a0 != 0\n      : @88 (gas: 12)\n  3048: a0 = t0 <u t1\n  3051: a5 = a1 ^ t2\n  3054: s1 = a1 <u t2\n  3057: s1 = a0 if a5 == 0\n  3060: a0 = a2 ^ ra\n  3063: a5 = a2 <u ra\n  3066: a4 = a5 if a0 != 0\n  3069: a5 = u64 [sp + 0x38]\n  3072: a5 = a5 ^ a3\n  3075: a0 = a0 | a5\n  3078: a4 = s1 if a0 == 0\n  3081: jump @130 if a4 != 0\n      : @89 (gas: 10)\n  3085: u64 [sp + 0x1a0] = t0\n  3089: u64 [sp + 0x1a8] = a1\n  3093: u64 [sp + 0x1b0] = a3\n  3097: a0 = 0x40\n  3100: a1 = sp + 0x1a0\n  3104: u64 [sp + 0x1b8] = a2\n  3108: u64 [sp + 0x30] = t1\n  3111: s1 = t2\n  3113: u64 [sp + 0x20] = ra\n  3116: ra = 74, jump @4\n      : @90 [@dyn 37] (gas: 11)\n  3121: a4 = u64 [sp + 0x20]\n  3124: a0 = u64 [sp + 0x30]\n  3127: a5 = u64 [sp + 0x38]\n  3130: a2 = a0 | a5\n  3133: a1 = s1 | a4\n  3136: a2 = a2 | a1\n  3139: a2 = a2 >> 0x20\n  3142: a1 = a1 | a5\n  3145: a1 = a1 << 0x20\n  3148: a1 = a1 | a2\n  3151: jump @85 if a1 != 0\n      : @91 (gas: 9)\n  3155: u64 [sp + 408] = 0\n  3159: u64 [sp + 400] = 0\n  3163: u64 [sp + 392] = 0\n  3167: a1 = sp + 0x180\n  3171: a2 = u64 [sp + 0x18]\n  3174: u64 [sp + 0x180] = a2\n  3178: u64 [sp + 0x18] = s1\n  3181: s1 = a4\n  3183: ra = 76, jump @4\n      : @92 [@dyn 38] (gas: 2)\n  3188: ecalli 10 // 'return_data_size'\n  3190: fallthrough\n      : @93 (gas: 9)\n  3191: a3 = u64 [sp + 0x30]\n  3194: a1 = u64 [sp + 0x38]\n  3197: a1 = a1 | s1\n  3200: a2 = 0xffffffe0\n  3210: a2 = a3 <u a2\n  3213: a4 = u64 [sp + 0x18]\n  3216: a2 = 0 if a4 != 0\n  3218: a2 = 0 if a1 != 0\n  3220: jump @85 if a2 == 0\n      : @94 (gas: 3)\n  3224: s1 = a0\n  3226: a0 = a0 >> 0x20\n  3229: jump @85 if a0 != 0\n      : @95 (gas: 5)\n  3233: i32 a0 = a3 + 0x20\n  3236: i32 a1 = s1 + 0\n  3238: u64 [sp + 0x38] = a1\n  3241: a1 = s1\n  3243: ra = 78, jump @9\n      : @96 [@dyn 39] (gas: 6)\n  3248: u32 [sp + 0x4e0] = s1\n  3252: i32 a0 = a0 + 0\n  3254: i32 a1 = sp + 0x4e0\n  3258: a2 = 0\n  3260: ecalli 9 // 'return_data_copy'\n  3262: fallthrough\n      : @97 (gas: 4)\n  3263: a0 = i32 [sp + 0x4e0]\n  3267: s1 = u64 [sp + 0x10]\n  3270: a1 = u64 [sp + 0x38]\n  3273: jump @55 if a0 >=u a1\n      : @98 (gas: 1)\n  3277: jump @85\n      : @99 (gas: 7)\n  3280: a1 = a3 | a5\n  3283: a0 = a0 | a1\n  3286: a0 = a0 >> 0x20\n  3289: a1 = a1 | a4\n  3292: a1 = a1 << 0x20\n  3295: a0 = a0 | a1\n  3298: jump @85 if a0 != 0\n      : @100 (gas: 12)\n  3302: u64 [sp + 272] = 0\n  3306: u64 [sp + 264] = 0\n  3310: u64 [sp + 256] = 0\n  3314: a0 = 0x8c379a000000000\n  3324: a1 = sp + 0x100\n  3328: u64 [sp + 0x118] = a0\n  3332: a0 = a2\n  3334: u64 [sp + 0x58] = a2\n  3337: u64 [sp + 0x50] = a3\n  3340: u64 [sp + 0x48] = a4\n  3343: s1 = a5\n  3345: ra = 80, jump @4\n      : @101 [@dyn 40] (gas: 10)\n  3350: a1 = u64 [sp + 0x58]\n  3353: a3 = u64 [sp + 0x48]\n  3356: a3 = a3 | s1\n  3359: s1 = 0x100000000\n  3369: a0 = 0xfffffffc\n  3379: a0 = a1 <u a0\n  3382: a2 = u64 [sp + 0x50]\n  3385: a0 = 0 if a2 != 0\n  3387: a0 = 0 if a3 != 0\n  3389: jump @85 if a0 == 0\n      : @102 (gas: 8)\n  3393: i32 a0 = a1 + 0x4\n  3396: u64 [sp + 248] = 0\n  3400: u64 [sp + 240] = 0\n  3404: u64 [sp + 224] = 0x20\n  3409: a1 = sp + 0xe0\n  3413: u64 [sp + 232] = 0\n  3417: u64 [sp + 0x48] = a3\n  3420: ra = 82, jump @4\n      : @103 [@dyn 41] (gas: 8)\n  3425: a3 = u64 [sp + 0x48]\n  3428: a2 = u64 [sp + 0x50]\n  3431: a1 = u64 [sp + 0x58]\n  3434: a0 = s1 + 0xffffffffffffffdc\n  3437: a0 = a1 <u a0\n  3440: a0 = 0 if a2 != 0\n  3442: a0 = 0 if a3 != 0\n  3444: jump @85 if a0 == 0\n      : @104 (gas: 8)\n  3448: i32 a0 = a1 + 0x24\n  3451: u64 [sp + 216] = 0\n  3455: u64 [sp + 208] = 0\n  3459: u64 [sp + 192] = 0x14\n  3464: a1 = sp + 0xc0\n  3468: u64 [sp + 200] = 0\n  3472: s1 = a2\n  3474: ra = 84, jump @4\n      : @105 [@dyn 42] (gas: 7)\n  3479: a2 = u64 [sp + 0x58]\n  3482: a0 = 0xffffffbc\n  3492: a0 = a2 <u a0\n  3495: a0 = 0 if s1 != 0\n  3497: a1 = u64 [sp + 0x48]\n  3500: a0 = 0 if a1 != 0\n  3502: jump @85 if a0 == 0\n      : @106 (gas: 11)\n  3506: i32 a0 = a2 + 0x44\n  3509: a1 = u64 [0x20018]\n  3514: s1 = a2\n  3516: a2 = u64 [0x20020]\n  3521: u64 [sp + 0xb8] = a1\n  3525: u64 [sp + 0xb0] = a2\n  3529: a1 = 0x7468657200000000\n  3539: u64 [sp + 0xa8] = a1\n  3543: a1 = sp + 0xa0\n  3547: u64 [sp + 160] = 0\n  3551: ra = 86, jump @4\n      : @107 [@dyn 43] (gas: 3)\n  3556: a1 = 0x64\n  3559: a0 = s1\n  3561: ra = 88, jump @9\n      : @108 [@dyn 44] (gas: 2)\n  3566: i32 a1 = a0 + 0\n  3568: jump @124\n      : @109 (gas: 7)\n  3571: a1 = 0x20060\n  3576: i32 a1 = a1 + 0\n  3578: a0 = 0x1\n  3581: a2 = 0\n  3583: ecalli 11 // 'seal_return'\n  3585: a1 = 0x20060\n  3590: fallthrough\n      : @110 (gas: 6)\n  3591: i32 a1 = a1 + 0\n  3593: a0 = 0x1\n  3596: a2 = 0\n  3598: ecalli 11 // 'seal_return'\n  3600: a1 = 0x20060\n  3605: jump @110\n      : @111 (gas: 2)\n  3607: a1 = 0x20060\n  3612: jump @110\n      : @112 (gas: 2)\n  3614: a1 = 0x20060\n  3619: jump @110\n      : @113 (gas: 2)\n  3621: a1 = 0x20060\n  3626: jump @110\n      : @114 (gas: 2)\n  3628: a1 = 0x20060\n  3633: jump @110\n      : @115 (gas: 2)\n  3635: a1 = 0x20060\n  3640: jump @110\n      : @116 (gas: 2)\n  3642: a1 = 0x20060\n  3647: jump @110\n      : @117 (gas: 9)\n  3649: a2 = sp + 0x200\n  3653: u64 [a2 + 112] = 0\n  3656: u64 [a2 + 104] = 0\n  3659: a0 = 0x8c379a000000000\n  3669: u64 [a2 + 0x78] = a0\n  3672: a0 = 0x80\n  3676: a1 = sp + 0x260\n  3680: u64 [a2 + 96] = 0\n  3683: ra = 90, jump @4\n      : @118 [@dyn 45] (gas: 8)\n  3688: a2 = sp + 0x200\n  3692: u64 [a2 + 88] = 0\n  3695: u64 [a2 + 80] = 0\n  3698: u64 [a2 + 64] = 0x20\n  3702: a0 = 0x84\n  3706: a1 = sp + 0x240\n  3710: u64 [a2 + 72] = 0\n  3713: ra = 92, jump @4\n      : @119 [@dyn 46] (gas: 8)\n  3718: a2 = sp + 0x200\n  3722: u64 [a2 + 56] = 0\n  3725: u64 [a2 + 48] = 0\n  3728: u64 [a2 + 32] = 0x18\n  3732: a0 = 0xa4\n  3736: a1 = sp + 0x220\n  3740: u64 [a2 + 40] = 0\n  3743: ra = 94, jump @4\n      : @120 [@dyn 47] (gas: 11)\n  3748: a0 = u64 [0x20000]\n  3753: a1 = u64 [0x20008]\n  3758: a2 = u64 [0x20010]\n  3763: a3 = sp + 0x200\n  3767: u64 [a3 + 0x18] = a0\n  3770: u64 [a3 + 0x10] = a1\n  3773: u64 [a3 + 0x8] = a2\n  3776: a0 = 0xc4\n  3780: a1 = sp + 0x200\n  3784: u64 [a3 + 0] = 0\n  3786: ra = 96, jump @4\n      : @121 [@dyn 48] (gas: 2)\n  3791: a1 = i32 [0x2004c]\n  3796: jump @123 if a1 >u 255\n      : @122 (gas: 4)\n  3801: u32 [0x2004c] = 0x100\n  3808: a0 = 0x20060\n  3813: i32 a1 = a0 + 0x80\n  3817: jump @124\n      : @123 (gas: 3)\n  3819: a0 = 0x20060\n  3824: i32 a1 = a0 + 0x80\n  3828: fallthrough\n      : @124 (gas: 5)\n  3829: a0 = 0x1\n  3832: a2 = 0x64\n  3835: ecalli 11 // 'seal_return'\n  3837: a1 = 0x20060\n  3842: jump @110\n      : @125 (gas: 2)\n  3845: a1 = 0x20060\n  3850: jump @110\n      : @126 (gas: 2)\n  3853: a1 = 0x20060\n  3858: jump @110\n      : @127 (gas: 13)\n  3861: a0 = u64 [sp + 0x48]\n  3864: a0 = a0 << 0x20\n  3867: a0 = a0 >> 0x20\n  3870: a2 = sp + 0x200\n  3874: u64 [a2 + 184] = 0\n  3878: a1 = u64 [sp + 0x50]\n  3881: u64 [a2 + 0xa0] = a1\n  3885: a1 = u64 [sp + 0x58]\n  3888: u64 [a2 + 0xa8] = a1\n  3892: a1 = sp + 0x2a0\n  3896: u64 [a2 + 0xb0] = a0\n  3900: a0 = s1\n  3902: ra = 98, jump @4\n      : @128 [@dyn 49] (gas: 3)\n  3907: a1 = 0x20\n  3910: a0 = s1\n  3912: ra = 100, jump @9\n      : @129 [@dyn 50] (gas: 5)\n  3917: i32 a1 = a0 + 0\n  3919: a2 = 0x20\n  3922: a0 = 0\n  3924: ecalli 11 // 'seal_return'\n  3926: fallthrough\n      : @130 (gas: 8)\n  3927: u64 [sp + 368] = 0\n  3931: u64 [sp + 360] = 0\n  3935: u64 [sp + 352] = 0\n  3939: a0 = 0x4e487b7100000000\n  3949: a1 = sp + 0x160\n  3953: u64 [sp + 0x178] = a0\n  3957: a0 = 0\n  3959: ra = 102, jump @4\n      : @131 [@dyn 51] (gas: 7)\n  3964: u64 [sp + 344] = 0\n  3968: u64 [sp + 336] = 0\n  3972: u64 [sp + 320] = 0x41\n  3977: a0 = 0x4\n  3980: a1 = sp + 0x140\n  3984: u64 [sp + 328] = 0\n  3988: ra = 104, jump @4\n      : @132 [@dyn 52] (gas: 2)\n  3993: a1 = i32 [0x2004c]\n  3998: jump @134 if a1 >u 63\n      : @133 (gas: 2)\n  4002: u32 [0x2004c] = 0x40\n  4008: fallthrough\n      : @134 (gas: 6)\n  4009: a1 = i32 [sp + 0x28]\n  4012: a0 = 0x1\n  4015: a2 = 0x24\n  4018: ra = 0x6a\n  4021: ecalli 11 // 'seal_return'\n  4023: fallthrough\n      : @135 [@dyn 53] (gas: 18)\n  4024: sp = sp + 0xffffffffffffffc0\n  4027: u64 [sp + 0x38] = ra\n  4030: u64 [sp + 0x30] = s0\n  4033: u64 [sp + 0x28] = s1\n  4036: s0 = sp + 0x40\n  4039: sp = sp & 0xfffffffffffffff0\n  4042: a2 = u64 [a1 + 0x10]\n  4045: a3 = u64 [a1 + 0x18]\n  4048: a4 = u64 [a1 + 0x8]\n  4051: a1 = u64 [a1]\n  4053: a3 = a3 | a4\n  4056: a4 = a1 | a2\n  4059: a4 = a4 | a3\n  4062: a4 = a4 >> 0x20\n  4065: a2 = a2 | a3\n  4068: a2 = a2 << 0x20\n  4071: a2 = a2 | a4\n  4074: jump @139 if a2 != 0\n      : @136 (gas: 3)\n  4077: s1 = a0\n  4079: a0 = sp\n  4081: ra = 108, jump @2\n      : @137 [@dyn 54] (gas: 10)\n  4086: a0 = u64 [sp + 0x10]\n  4089: a1 = u64 [sp + 0x18]\n  4092: a2 = 0x100000000\n  4102: a2 = a2 ^ a0\n  4105: a2 = a2 | a1\n  4108: a3 = a0 >> 0x20\n  4111: a3 = a3 <u 0x1\n  4114: a3 = 0 if a1 != 0\n  4116: a3 = 0 if a2 == 0\n  4118: jump @140 if a3 == 0\n      : @138 (gas: 12)\n  4121: a2 = u64 [sp]\n  4123: a3 = u64 [sp + 0x8]\n  4126: u64 [s1] = a2\n  4128: u64 [s1 + 0x8] = a3\n  4131: u64 [s1 + 0x10] = a0\n  4134: u64 [s1 + 0x18] = a1\n  4137: sp = s0 + 0xffffffffffffffc0\n  4140: ra = u64 [sp + 0x38]\n  4143: s0 = u64 [sp + 0x30]\n  4146: s1 = u64 [sp + 0x28]\n  4149: sp = sp + 0x40\n  4152: ret\n      : @139 (gas: 1)\n  4154: trap\n      : @140 (gas: 8)\n  4155: a1 = 0x20060\n  4160: i32 a1 = a1 + 0\n  4162: a0 = 0x1\n  4165: a2 = 0\n  4167: ecalli 11 // 'seal_return'\n  4169: a0 = 0\n  4171: ra = 0x6e\n  4174: jump @15\n      : @141 [export #0: 'call'] (gas: 2)\n  4177: a0 = 0\n  4179: ra = 110, jump @15\n      : @142 [@dyn 55] [export #1: 'deploy'] (gas: 2)\n  4184: a0 = 0x1\n  4187: ra = 112, jump @15\n      : @143 [@dyn 56] (gas: 8)\n  4192: a0 = a0 | a2\n  4195: a2 = s1 | a1\n  4198: a2 = a2 | a0\n  4201: a2 = a2 >> 0x20\n  4204: a0 = a0 | a1\n  4207: a0 = a0 << 0x20\n  4210: a0 = a0 | a2\n  4213: jump [t0]\n",
            "bytecode": {
              "object": "50564d00006a14000000000000010700c18000c00080034862726120796c6e4f6e6163207265746965766f7270706120742064656c6961464520646e6573206f7b96b73cf63ad93a287d7d0b50fbe4231f34cf5d321675b0cbc1829d95bfbe880480f60f00000000070000000b0000001900000027000000350000003b00000048000000530000006000000070000000800000008b0000009d000000a800000062616c616e636563616c6c63616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a6563616c6c65726465706f7369745f6576656e746765745f73746f726167657265665f74696d655f6c65667472657475726e5f646174615f636f707972657475726e5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e7366657272656405110290510463616c6c9058066465706c6f790692fa380290772b0073012b03b603bb030c04170444047804ad04f10411055405a905e405ef0500062006340640067d060b07ab077d08d3082e09a709cc09e5096f0a910aa60a360b5b0b740b8c0b310c740cb00c160d610d970de40dee0d680e860ea40ecf0e430f4d0f7c0f990fb80ff60f58106010390850000251082606330780000383770a0c2819069511f07b10087b1564896475330820649750100241037c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511d87b10207b15187b161082897b19088289087b19828510828618330820501004f9016f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832009511a07b10587b15507b16489515608411e06476828718828910828a0882886f776f996faa6f887b18187b1a107b19087b17491138491130491128491120481140208318831a20831b403309ff33070a07821738821830821928821a206f776f886f996faa7b6a187b69107b68087b679551a082105882155082164895116032009511a07b10587b15509515608411e08272827a08827b108277188283828908828c108288186f746fbb6faa6f276f826fcc6f996f387b17187b1a107b1b087b147b18387b19307b1c287b12208318831a203309ff330b2033070a0d9551a0821058821550951160320082186f888219086f99821a106faa821b186fbb7b1b387b1a307b19287b18208379836a8317203308010a069551a082105882155082164895116032008b7910520931c8780883881f8488e056380000012533094c0002390a4c0002ae8a093d084c00020133086000028377c887073200009511f07b10087b158475010a04013d074800025105075010080950100a8a02951160fd951700027b7098007b7590007b7688009515a0028411e0390648000297672098772095771f8477e095788000d87807492158017b1840017b17480194777b1750013307409518400150100c48fd33078000646850100e55ff8377646833090a0201531640e4014921180149211001492100018000951720019518000149210801501010790b821720017b1720821728017b1718801730017b17104921d8004921d0004921c000a0009517e0009518c0004921c800501012450b8217e0007b17388217e8007b17308017f0007b17284921780149217001492168013306027b1660019517a0009518600150101499fd8017b4009777208218b800821910d497074921980149219001492188017b1680018219187b19a8018219207b19a0017b18b8017b17b001951780019518a001501016d6fd4921d8014921d0014921c8013306017b16c001951780009518c00150101835fd8017940097772082189800821928d497074921f8014921f0014921e8017b16e001821930951a00027ba9088219387ba97ba8187ba7109517e0019518000250101a73fd330660000383670a053a0768000339087000033a096000036f77977a206f88988820d4a8087b18389877206f98978920d497077b1730988620951700024917384917304917284917209517609518200250101c9dfc801774977720821878d46707951900024919584919504919484919407b98788218307b98688218387b98607b9770951740029518600250101ee3fc9517403308405010202bfa821758821850821948821640501222650a510717003308600002838833070133093300280a0b282b646733085010244cfd8377330833090a0228d8f96467330850102638fd8378330733093300280a0b01951120fa951700057b70d8007b75d0007b76c8009515e0058411e0951900034929d8004929d0004929c00080003307409518c0034929c80050102ad7fa330648000239074800025317046c078317e00333080a03018117fc03514746ffc4c77b0351470ae025fe9e0252473f4e42122b04951700044917184917104917084907831700040a0e01951b000482b71082b81882b90882bad49808d4a707d4870752075407390748000254170352079518000449183849183049182849182002951780029518200450102c3bfb821788027b1758821780027b1750801790027b1748330660000383670a05013a076800033a0860000339097000036f77987a206f88978b20d4ba0a9777206f99989920d49707988820821948d39808821950d39707d48707821858d3a808d487075207d506831740040a951800048287587b17588287507b17508287487b17488287407b1740491878491870491868491860019517e0019518600450102e9bfa8217e0017b17388217f0017b17308217e8017b17280a088218286f88978920821a306faa98aa20d4a909988820821a386faa97ab20d4b80898aa207a6a107b68087b69821858951900047b9898008218507b9890008218487b9888008218407b9880004821a0048e77fc089a787b98d8007b98d0007b98c8007b98c000976620986620977723d4670795188004978820988820330b6000029519c004979920d4890a7b1b2897bb2098bb209518a004978820d4b80c3308ff3309ff0a0164760a0a0152070c03951720013308405010309df7821c3801821b3001821a280182192001d4b90752064004d4ca08d48707987720d4b808978820d487075207d2028217407b1780008217487b1788008217507b179000951880008217587b1798006497649650103281f83a072800023a083000027b17783a073800027b18703a0a4000027b17683308209519607b1a6064673300349511a07b10587b15507b16489515608411e0829a7b1a18829a087b1a10829a107b1a088299187b196486330006283cfa811828330733090a0b330860000228cb049517000549279800492790004927880049278000831780050a0e01951b000582b7900082b8980082b9880082ba8000d49808d4a707d487075207a00439074800025417039e04951800054928b8004928b0004928a8004928a000029517a0039518a0055010369ff8951800038287b0007b17488287a8007b17588287a0007b1750951780033308405010384ef6951a000382a7980082a8900082a9880082a6800050123a800652079301821748977720987720951900034919788218507b98608218587b9868951860037b97706467330062283ef795170005491758491750491748491740831740050a0e01951b000582b75082b85882b94882ba40d49808d4a707d487075207e1033907480002541703df0395170005491778491770491768491760951740039518600550103cd7f7951800038287507b17488287487b17588287407b17509517200333084050103e89f5951a000382a73882a83082a92882a620501240bf055207d200821748977720987720951900034919188218507b988218587b9808951800037b97106467330062287ef65247ed3eaf381f03951700054917184917104917084907831700050a0e01951b000582b71082b81882b90882bad49808d4a707d487075207fb033907480002541703fa0395180005491838491830491828491820019517e0029518200550104210f7951800028287f0007b17488287e8007b17588287e0007b17509517c002330840501044bff4951a000282a7d80082a8d00082a9c80082a6c000501246f1045107a103007b16100a0a64769517c0013308405010488ef48210d801821cd0018214c8018213c00195671f7b1618d867088477e095793fd87907c8780a8499e0c84a08c83902d89209c89808d3a80bd8a80adab90ac8ca0a7b1c38d8ca0bc8b0098eac8e96da9c06d49a0c8e87dbc60752077303d83207d3480cd84806dac706d30907d8090cdb7c0b821c38d3ac0cd4c707da760b520b4e037b12a0017b18a8017b1ab0013307409518a0017b19b8017b133064467b102050104a23f5821b20821730821c38d4c709d4b608d48909989920d4c808978820d49808520829ff492198014921900149218801951880018219187b1980017b161864b650104ce0f40a0a01821a30821838d468081409e0ffffff00000000d89a09821b1894b994895109e4fe64769877205207dbfe83a72083687b1838646850104ebcf67a16e00483778318e00433090a09018117e004821610821838ae87a8fb28abfed4ca08d48707987720d4b808978820d48707520796fe492110014921080149210001140700000000a079c308951800017b17180164977b19587b1a507b1b4864c65010503ef4821858821a48d46a0a140600000000010000001407fcffffff00000000d87807821950949794a751073bfe8387044921f8004921f0004921e000209518e0004921e8007b1a48501052f3f3821a488219508218589567dcd87807949794a7510704fe8387244921d8004921d0004921c000149518c0004921c8006496501054bdf38219581407bcffffff00000000d87907946782184894875107cafd8397443a0818000264963a092000027b18b8007b19b000140800000000726568747b18a8009518a0004921a00050105670f333086464675010587ef583782805013308600002838833070133090a0b330860000201838833070133090a0b330860000228f2330860000228eb330860000228e4330860000228dd330860000228d6330860000228cf330860000228c895190002491970491968140700000000a079c3087b9778330780009518600249196050105aecf29519000249195849195049194020330784009518400249194850105ccef295190002491938491930491920183307a4009518200249192850105eb0f23a070000023a080800023a09100002951a00027ba7187ba8107ba9083307c40095180002490a50106085f239084c00025628ff001720034c00020001330760000283788000280c330760000283788000013307013309640a0b33086000022805ff330860000228fdfe330860000228f5fe821748977720987720951900024929b8008218507b98a0008218587b98a8009518a0027b97b000646750106211f233082064675010641ff4837833092033070a0b01492170014921680149216001140700000000717b484e951860017b1778013307501066d8f1492158014921500149214001413307049518400149214801501068bbf139084c000256183f0b20034c0002400181182833070133092433006a0a0b019511c07b10387b15307b16289515408411f0828910828a18828b088288d4ba0ad4980bd4ab0b98bb20d4a909979920d4b9095209506476641750106c24f082171082181814090000000001000000d37909d48909987a2088aa01948a939a510a258219821a087b697b6a087b67107b68189551c08210388215308216289511403200003308600002838833070133090a0b330733006e284ef3330750106e49f333070150107041f3d49707d48609d47909989920d48707977720d497073202214225a952484992244992244992244992244992244992244992244992244992244992244992542529a524292949a84a494a922449922449922449922449922449922449922449929224294955494a92284925495592922425494a5292aaaa242549492a49aa945292545292a424491042c2509a948644888888484892484414891085aa2122888810894422828808914824221211211249444422111111222211112291444424929288102a84504a9292249224119224922449928890842409194aa90a55a950a511111189882011218410350202022249d14852920821924444884422a186104a494a9224491231922449924444884422a5a4242949522212894444111149124988244924493522212222912449241289485408212121494a922425495249aa9088888846444492082122224484884422911011112192449224521249128d2449122144924484489224122249422489a424521210498a46929244089124224244229148888888105391101191244992244992a4921249922449222212911292244992888848a4d02401241525520a51d44822499244440410519242920002482a1211221292241589081185049052241422028888904209a5c252a15028140a852209201109914444422411911042882411851002210a3129242424494422115148a1d4880820a210111211420493a4499224294992a442124092544a4992240da54a0a0949922400"
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "approve()": "12424e3f",
              "arbiter()": "fe25e00a",
              "beneficiary()": "38af3eed",
              "depositor()": "c7c4ff46"
            }
          },
          "irOptimized": "/// @use-src 12:\"contracts/Escrow.sol\"\nobject \"Escrow_1581\" {\n    code {\n        {\n            /// @src 12:629:2029  \"contract Escrow {...\"\n            let _1 := memoryguard(0x80)\n            let programSize := datasize(\"Escrow_1581\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:629:2029  \"contract Escrow {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:629:2029  \"contract Escrow {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:629:2029  \"contract Escrow {...\"\n            let value0 := abi_decode_address_fromMemory(_1)\n            let value1 := abi_decode_address_fromMemory(add(_1, 32))\n            sstore(/** @src 12:1445:1463  \"arbiter = _arbiter\" */ 0x02, /** @src 12:629:2029  \"contract Escrow {...\" */ or(and(sload(/** @src 12:1445:1463  \"arbiter = _arbiter\" */ 0x02), /** @src 12:629:2029  \"contract Escrow {...\" */ not(sub(shl(160, 1), 1))), and(value0, sub(shl(160, 1), 1))))\n            sstore(/** @src 12:1473:1499  \"beneficiary = _beneficiary\" */ 0x01, /** @src 12:629:2029  \"contract Escrow {...\" */ or(and(sload(/** @src 12:1473:1499  \"beneficiary = _beneficiary\" */ 0x01), /** @src 12:629:2029  \"contract Escrow {...\" */ not(sub(shl(160, 1), 1))), and(value1, sub(shl(160, 1), 1))))\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 12:629:2029  \"contract Escrow {...\" */ or(and(sload(/** @src -1:-1:-1 */ 0), /** @src 12:629:2029  \"contract Escrow {...\" */ not(sub(shl(160, 1), 1))), /** @src 12:1521:1531  \"msg.sender\" */ caller()))\n            /// @src 12:629:2029  \"contract Escrow {...\"\n            let _2 := mload(64)\n            let _3 := datasize(\"Escrow_1581_deployed\")\n            codecopy(_2, dataoffset(\"Escrow_1581_deployed\"), _3)\n            return(_2, _3)\n        }\n        function abi_decode_address_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n    }\n    /// @use-src 12:\"contracts/Escrow.sol\"\n    object \"Escrow_1581_deployed\" {\n        code {\n            {\n                /// @src 12:629:2029  \"contract Escrow {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x12424e3f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        if iszero(/** @src 12:1780:1801  \"msg.sender == arbiter\" */ eq(/** @src 12:1780:1790  \"msg.sender\" */ caller(), /** @src 12:629:2029  \"contract Escrow {...\" */ and(sload(/** @src 12:1794:1801  \"arbiter\" */ 0x02), /** @src 12:629:2029  \"contract Escrow {...\" */ sub(shl(160, 1), 1))))\n                        {\n                            mstore(_1, shl(229, 4594637))\n                            mstore(add(_1, 4), 32)\n                            mstore(add(_1, 36), 24)\n                            mstore(add(_1, 68), \"Only arbiter can approve\")\n                            revert(_1, 100)\n                        }\n                        /// @src 12:1858:1879  \"address(this).balance\"\n                        let expr := selfbalance()\n                        /// @src 12:1905:1941  \"beneficiary.call{value: balance}(\\\"\\\")\"\n                        let expr_component := call(gas(), /** @src 12:629:2029  \"contract Escrow {...\" */ and(sload(/** @src 12:1905:1916  \"beneficiary\" */ 0x01), /** @src 12:629:2029  \"contract Escrow {...\" */ sub(shl(160, 1), 1)), /** @src 12:1905:1941  \"beneficiary.call{value: balance}(\\\"\\\")\" */ expr, /** @src 12:629:2029  \"contract Escrow {...\" */ 0, 0, 0, 0)\n                        /// @src 12:1905:1941  \"beneficiary.call{value: balance}(\\\"\\\")\"\n                        let data := /** @src 12:629:2029  \"contract Escrow {...\" */ 0\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _2 := returndatasize()\n                            if gt(_2, 0xffffffffffffffff)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            let memPtr := mload(64)\n                            let newFreePtr := add(memPtr, and(add(and(add(_2, 31), not(31)), 63), not(31)))\n                            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            mstore(64, newFreePtr)\n                            mstore(memPtr, _2)\n                            data := memPtr\n                            returndatacopy(add(memPtr, 0x20), 0, returndatasize())\n                        }\n                        if iszero(expr_component)\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 20)\n                            mstore(add(memPtr_1, 68), \"Failed to send Ether\")\n                            revert(memPtr_1, 100)\n                        }\n                        /// @src 12:2003:2020  \"Approved(balance)\"\n                        let _3 := /** @src 12:629:2029  \"contract Escrow {...\" */ mload(64)\n                        mstore(_3, expr)\n                        /// @src 12:2003:2020  \"Approved(balance)\"\n                        log1(_3, /** @src 12:629:2029  \"contract Escrow {...\" */ 32, /** @src 12:2003:2020  \"Approved(balance)\" */ 0x3ad93af63cb7967b23e4fb500b7d7d28b07516325dcf341f88bebf959d82c1cb)\n                        /// @src 12:629:2029  \"contract Escrow {...\"\n                        return(0, 0)\n                    }\n                    case 0x38af3eed {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value := and(sload(/** @src 12:1004:1030  \"address public beneficiary\" */ 1), /** @src 12:629:2029  \"contract Escrow {...\" */ sub(shl(160, 1), 1))\n                        let memPos := mload(64)\n                        mstore(memPos, value)\n                        return(memPos, 32)\n                    }\n                    case 0xc7c4ff46 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_1 := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, value_1)\n                        return(memPos_1, 32)\n                    }\n                    case 0xfe25e00a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_2 := and(sload(/** @src 12:1104:1126  \"address public arbiter\" */ 2), /** @src 12:629:2029  \"contract Escrow {...\" */ sub(shl(160, 1), 1))\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, value_2)\n                        return(memPos_2, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122070eb185356d4515e59ef94c17b8d510b8a01449b4cc816f8810fa8999a16aceb64736f6c634300081a0033\"\n    }\n}\n",
          "hash": "7af38a87a6fbb67ab05122d6abb1242928d4c5fb2941625d44a1e97038b0adff",
          "factoryDependencies": {}
        }
      },
      "contracts/LendingBorrowing.sol": {
        "LendingBorrowing": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "_collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_lendingToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_collateralFactor",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "CollateralDeposited",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "CollateralWithdrawn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "LoanRepaid",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "LoanTaken",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "collateralBalances",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "collateralFactor",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "collateralToken",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "depositCollateral",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_user",
                  "type": "address"
                }
              ],
              "name": "getLoanDetails",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateral",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "lendingToken",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "loans",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateral",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "repayLoan",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newFactor",
                  "type": "uint256"
                }
              ],
              "name": "setCollateralFactor",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "takeLoan",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawCollateral",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_lendingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LoanTaken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getLoanDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lendingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"repayLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFactor\",\"type\":\"uint256\"}],\"name\":\"setCollateralFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"takeLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LendingBorrowing.sol\":\"LendingBorrowing\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/LendingBorrowing.sol\":{\"keccak256\":\"0xfce3f914be468f21b65157accdddff6efd981f21e78b4e49a96d14f7b55a0a13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb7a0b444c66981bf59a1301d6dd3b4e4df5baf8b25b3560e8ca174c757033ee\",\"dweb:/ipfs/QmUwkewn5ggFa1Wjh5EgNEUY1Mkr3PLgQqWG89TzM9usAZ\"]}},\"version\":1}",
            "solc_version": "0.8.26+commit.8a97fa7a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 452/66096 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 7990\n// Code size = 27916 bytes\n\n      : @0 (gas: 7)\n     0: sp = sp + 0xffffffffffffffe8\n     3: u64 [sp + 0x10] = ra\n     6: u64 [sp + 0x8] = s0\n     9: u64 [sp] = s1\n    11: s1 = 0x201c0\n    16: s0 = i32 [0x201c0]\n    21: jump @3 if s0 == 0\n      : @1 (gas: 5)\n    24: a0 = 0x301f0\n    29: i32 a0 = a0 + 0\n    31: i32 a1 = s1 + 0\n    33: ecalli 7 // 'get_immutable_data'\n    35: fallthrough\n      : @2 (gas: 3)\n    36: a0 = i32 [0x201c0]\n    41: u32 [0x201c0] = 0\n    46: jump @4 if a0 <u s0\n      : @3 (gas: 5)\n    49: ra = u64 [sp + 0x10]\n    52: s0 = u64 [sp + 0x8]\n    55: s1 = u64 [sp]\n    57: sp = sp + 0x18\n    60: ret\n      : @4 (gas: 1)\n    62: trap\n      : @5 (gas: 2)\n    63: a1 = i32 [0x201c0]\n    68: jump @75 if a1 == 0\n      : @6 (gas: 4)\n    72: a0 = 0x301f0\n    77: i32 a0 = a0 + 0\n    79: ecalli 14 // 'set_immutable_data'\n    81: jump @75\n      : @7 (gas: 8)\n    84: sp = sp + 0xfffffffffffffff0\n    87: u64 [sp + 0x8] = ra\n    90: u64 [sp] = s0\n    92: a2 = a1\n    94: s0 = a0\n    96: a1 = 0x20\n    99: a0 = a2\n   101: ra = 2, jump @18\n      : @8 [@dyn 1] (gas: 100)\n   106: a1 = u8 [a0 + 0x1]\n   109: a2 = u8 [a0]\n   111: a3 = u8 [a0 + 0x2]\n   114: a4 = u8 [a0 + 0x3]\n   117: a1 = a1 << 0x8\n   120: a1 = a1 | a2\n   123: a3 = a3 << 0x10\n   126: a4 = a4 << 0x18\n   129: a3 = a3 | a4\n   132: a1 = a1 | a3\n   135: a2 = u8 [a0 + 0x5]\n   138: a3 = u8 [a0 + 0x4]\n   141: a4 = u8 [a0 + 0x6]\n   144: a5 = u8 [a0 + 0x7]\n   147: a2 = a2 << 0x8\n   150: a2 = a2 | a3\n   153: a4 = a4 << 0x10\n   156: a5 = a5 << 0x18\n   159: a4 = a4 | a5\n   162: a2 = a2 | a4\n   165: a2 = a2 << 0x20\n   168: t0 = a2 | a1\n   171: a2 = u8 [a0 + 0x9]\n   174: a3 = u8 [a0 + 0x8]\n   177: a4 = u8 [a0 + 0xa]\n   180: a5 = u8 [a0 + 0xb]\n   183: a2 = a2 << 0x8\n   186: a2 = a2 | a3\n   189: a4 = a4 << 0x10\n   192: a5 = a5 << 0x18\n   195: a4 = a4 | a5\n   198: a2 = a2 | a4\n   201: a3 = u8 [a0 + 0xd]\n   204: a4 = u8 [a0 + 0xc]\n   207: a5 = u8 [a0 + 0xe]\n   210: a1 = u8 [a0 + 0xf]\n   213: a3 = a3 << 0x8\n   216: a3 = a3 | a4\n   219: a5 = a5 << 0x10\n   222: a1 = a1 << 0x18\n   225: a1 = a1 | a5\n   228: a1 = a1 | a3\n   231: a1 = a1 << 0x20\n   234: t1 = a1 | a2\n   237: a1 = u8 [a0 + 0x11]\n   240: a3 = u8 [a0 + 0x10]\n   243: a4 = u8 [a0 + 0x12]\n   246: a5 = u8 [a0 + 0x13]\n   249: a1 = a1 << 0x8\n   252: a1 = a1 | a3\n   255: a4 = a4 << 0x10\n   258: a5 = a5 << 0x18\n   261: a4 = a4 | a5\n   264: a1 = a1 | a4\n   267: a3 = u8 [a0 + 0x15]\n   270: a4 = u8 [a0 + 0x14]\n   273: a5 = u8 [a0 + 0x16]\n   276: a2 = u8 [a0 + 0x17]\n   279: a3 = a3 << 0x8\n   282: a3 = a3 | a4\n   285: a5 = a5 << 0x10\n   288: a2 = a2 << 0x18\n   291: a2 = a2 | a5\n   294: a2 = a2 | a3\n   297: a2 = a2 << 0x20\n   300: a3 = a2 | a1\n   303: a1 = u8 [a0 + 0x19]\n   306: a2 = u8 [a0 + 0x18]\n   309: a4 = u8 [a0 + 0x1a]\n   312: a5 = u8 [a0 + 0x1b]\n   315: a1 = a1 << 0x8\n   318: a1 = a1 | a2\n   321: a4 = a4 << 0x10\n   324: a5 = a5 << 0x18\n   327: a4 = a4 | a5\n   330: a1 = a1 | a4\n   333: a2 = u8 [a0 + 0x1d]\n   336: a4 = u8 [a0 + 0x1c]\n   339: a5 = u8 [a0 + 0x1e]\n   342: a0 = u8 [a0 + 0x1f]\n   345: a2 = a2 << 0x8\n   348: a2 = a2 | a4\n   351: a5 = a5 << 0x10\n   354: a0 = a0 << 0x18\n   357: a0 = a0 | a5\n   360: a0 = a0 | a2\n   363: a0 = a0 << 0x20\n   366: a0 = a0 | a1\n   369: a0 = reverse a0\n   371: a1 = reverse a3\n   373: a2 = reverse t1\n   375: a3 = reverse t0\n   377: u64 [s0 + 0x18] = a3\n   380: u64 [s0 + 0x10] = a2\n   383: u64 [s0 + 0x8] = a1\n   386: u64 [s0] = a0\n   388: ra = u64 [sp + 0x8]\n   391: s0 = u64 [sp]\n   393: sp = sp + 0x10\n   396: ret\n      : @9 (gas: 12)\n   398: sp = sp + 0xffffffffffffffd8\n   401: u64 [sp + 0x20] = ra\n   404: u64 [sp + 0x18] = s0\n   407: u64 [sp + 0x10] = s1\n   410: a2 = u64 [a1]\n   412: u64 [sp + 0x8] = a2\n   415: a2 = u64 [a1 + 0x8]\n   418: u64 [sp] = a2\n   420: s0 = u64 [a1 + 0x10]\n   423: s1 = u64 [a1 + 0x18]\n   426: a1 = 0x20\n   429: ra = 4, jump @18\n      : @10 [@dyn 2] (gas: 71)\n   434: a1 = reverse s1\n   436: a2 = reverse s0\n   438: a3 = u64 [sp]\n   440: a3 = reverse a3\n   442: a4 = u64 [sp + 0x8]\n   445: a4 = reverse a4\n   447: u8 [a0 + 0x18] = a4\n   450: u8 [a0 + 0x10] = a3\n   453: u8 [a0 + 0x8] = a2\n   456: u8 [a0] = a1\n   458: a5 = a4 >> 0x38\n   461: u8 [a0 + 0x1f] = a5\n   464: a5 = a4 >> 0x30\n   467: u8 [a0 + 0x1e] = a5\n   470: a5 = a4 >> 0x28\n   473: u8 [a0 + 0x1d] = a5\n   476: a5 = a4 >> 0x20\n   479: u8 [a0 + 0x1c] = a5\n   482: a5 = a4 >> 0x18\n   485: u8 [a0 + 0x1b] = a5\n   488: a5 = a4 >> 0x10\n   491: u8 [a0 + 0x1a] = a5\n   494: a4 = a4 >> 0x8\n   497: u8 [a0 + 0x19] = a4\n   500: a4 = a3 >> 0x38\n   503: u8 [a0 + 0x17] = a4\n   506: a4 = a3 >> 0x30\n   509: u8 [a0 + 0x16] = a4\n   512: a4 = a3 >> 0x28\n   515: u8 [a0 + 0x15] = a4\n   518: a4 = a3 >> 0x20\n   521: u8 [a0 + 0x14] = a4\n   524: a4 = a3 >> 0x18\n   527: u8 [a0 + 0x13] = a4\n   530: a4 = a3 >> 0x10\n   533: u8 [a0 + 0x12] = a4\n   536: a3 = a3 >> 0x8\n   539: u8 [a0 + 0x11] = a3\n   542: a3 = a2 >> 0x38\n   545: u8 [a0 + 0xf] = a3\n   548: a3 = a2 >> 0x30\n   551: u8 [a0 + 0xe] = a3\n   554: a3 = a2 >> 0x28\n   557: u8 [a0 + 0xd] = a3\n   560: a3 = a2 >> 0x20\n   563: u8 [a0 + 0xc] = a3\n   566: a3 = a2 >> 0x18\n   569: u8 [a0 + 0xb] = a3\n   572: a3 = a2 >> 0x10\n   575: u8 [a0 + 0xa] = a3\n   578: a2 = a2 >> 0x8\n   581: u8 [a0 + 0x9] = a2\n   584: a2 = a1 >> 0x38\n   587: u8 [a0 + 0x7] = a2\n   590: a2 = a1 >> 0x30\n   593: u8 [a0 + 0x6] = a2\n   596: a2 = a1 >> 0x28\n   599: u8 [a0 + 0x5] = a2\n   602: a2 = a1 >> 0x20\n   605: u8 [a0 + 0x4] = a2\n   608: a2 = a1 >> 0x18\n   611: u8 [a0 + 0x3] = a2\n   614: a2 = a1 >> 0x10\n   617: u8 [a0 + 0x2] = a2\n   620: a1 = a1 >> 0x8\n   623: u8 [a0 + 0x1] = a1\n   626: ra = u64 [sp + 0x20]\n   629: s0 = u64 [sp + 0x18]\n   632: s1 = u64 [sp + 0x10]\n   635: sp = sp + 0x28\n   638: ret\n      : @11 (gas: 48)\n   640: sp = sp + 0xffffffffffffffa0\n   643: u64 [sp + 0x58] = ra\n   646: u64 [sp + 0x50] = s0\n   649: u64 [sp + 0x48] = s1\n   652: s0 = sp + 0x60\n   655: sp = sp & 0xffffffffffffffe0\n   658: s1 = a0\n   660: a0 = u64 [a1 + 0x18]\n   663: a2 = u64 [a1 + 0x10]\n   666: a3 = u64 [a1 + 0x8]\n   669: a1 = u64 [a1]\n   671: a0 = reverse a0\n   673: a2 = reverse a2\n   675: a3 = reverse a3\n   677: a1 = reverse a1\n   679: u64 [sp + 0x18] = a1\n   682: u64 [sp + 0x10] = a3\n   685: u64 [sp + 0x8] = a2\n   688: u64 [sp] = a0\n   690: u64 [sp + 56] = 0\n   693: u64 [sp + 48] = 0\n   696: u64 [sp + 40] = 0\n   699: u64 [sp + 32] = 0\n   702: u32 [sp + 64] = 0x20\n   706: i32 a1 = sp + 0\n   708: i32 a3 = sp + 0x20\n   711: i32 a4 = sp + 0x40\n   714: a2 = 0xffffffffffffffff\n   717: a0 = 0\n   719: ecalli 8 // 'get_storage'\n   721: a0 = u64 [sp + 0x38]\n   724: a1 = u64 [sp + 0x30]\n   727: a2 = u64 [sp + 0x28]\n   730: a3 = u64 [sp + 0x20]\n   733: a0 = reverse a0\n   735: a1 = reverse a1\n   737: a2 = reverse a2\n   739: a3 = reverse a3\n   741: u64 [s1 + 0x18] = a3\n   744: u64 [s1 + 0x10] = a2\n   747: u64 [s1 + 0x8] = a1\n   750: u64 [s1] = a0\n   752: sp = s0 + 0xffffffffffffffa0\n   755: ra = u64 [sp + 0x58]\n   758: s0 = u64 [sp + 0x50]\n   761: s1 = u64 [sp + 0x48]\n   764: sp = sp + 0x60\n   767: ret\n      : @12 (gas: 40)\n   769: sp = sp + 0xffffffffffffffa0\n   772: u64 [sp + 0x58] = ra\n   775: u64 [sp + 0x50] = s0\n   778: s0 = sp + 0x60\n   781: sp = sp & 0xffffffffffffffe0\n   784: t0 = u64 [a0]\n   786: a3 = u64 [a0 + 0x8]\n   789: a4 = u64 [a0 + 0x10]\n   792: a0 = u64 [a0 + 0x18]\n   795: t1 = u64 [a1]\n   797: a2 = u64 [a1 + 0x8]\n   800: a5 = u64 [a1 + 0x10]\n   803: a1 = u64 [a1 + 0x18]\n   806: t2 = reverse a0\n   808: a4 = reverse a4\n   810: a3 = reverse a3\n   812: a0 = reverse t0\n   814: t0 = reverse a1\n   816: a5 = reverse a5\n   818: a2 = reverse a2\n   820: a1 = reverse t1\n   822: u64 [sp + 0x18] = a0\n   825: u64 [sp + 0x10] = a3\n   828: u64 [sp + 0x8] = a4\n   831: u64 [sp] = t2\n   833: u64 [sp + 0x38] = a1\n   836: u64 [sp + 0x30] = a2\n   839: u64 [sp + 0x28] = a5\n   842: u64 [sp + 0x20] = t0\n   845: i32 a1 = sp + 0\n   847: i32 a3 = sp + 0x20\n   850: a2 = 0xffffffffffffffff\n   853: a4 = 0x20\n   856: a0 = 0\n   858: ecalli 15 // 'set_storage'\n   860: sp = s0 + 0xffffffffffffffa0\n   863: ra = u64 [sp + 0x58]\n   866: s0 = u64 [sp + 0x50]\n   869: sp = sp + 0x60\n   872: ret\n      : @13 (gas: 24)\n   874: sp = sp + 0xffffffffffffff60\n   878: u64 [sp + 0x98] = ra\n   882: u64 [sp + 0x90] = s0\n   886: u64 [sp + 0x88] = s1\n   890: s0 = sp + 0xa0\n   894: sp = sp & 0xffffffffffffffe0\n   897: a4 = u64 [a3]\n   899: u64 [sp + 0x38] = a4\n   902: a4 = u64 [a3 + 0x8]\n   905: u64 [sp + 0x30] = a4\n   908: a4 = u64 [a3 + 0x10]\n   911: u64 [sp + 0x28] = a4\n   914: a3 = u64 [a3 + 0x18]\n   917: u64 [sp + 0x20] = a3\n   920: a3 = u64 [a2]\n   922: u64 [sp + 0x18] = a3\n   925: a3 = u64 [a2 + 0x8]\n   928: u64 [sp + 0x10] = a3\n   931: a3 = u64 [a2 + 0x10]\n   934: u64 [sp + 0x8] = a3\n   937: a2 = u64 [a2 + 0x18]\n   940: u64 [sp] = a2\n   942: s1 = a1\n   944: ra = 6, jump @18\n      : @14 [@dyn 3] (gas: 35)\n   949: a1 = u64 [sp]\n   951: a1 = reverse a1\n   953: a2 = u64 [sp + 0x8]\n   956: a2 = reverse a2\n   958: a3 = u64 [sp + 0x10]\n   961: a3 = reverse a3\n   963: a4 = u64 [sp + 0x18]\n   966: a4 = reverse a4\n   968: u64 [sp + 0x58] = a4\n   971: u64 [sp + 0x50] = a3\n   974: u64 [sp + 0x48] = a2\n   977: u64 [sp + 0x40] = a1\n   980: a1 = u64 [sp + 0x20]\n   983: a1 = reverse a1\n   985: a2 = u64 [sp + 0x28]\n   988: a2 = reverse a2\n   990: a3 = u64 [sp + 0x30]\n   993: a3 = reverse a3\n   995: a4 = u64 [sp + 0x38]\n   998: a4 = reverse a4\n  1000: u64 [sp + 0x78] = a4\n  1003: u64 [sp + 0x70] = a3\n  1006: u64 [sp + 0x68] = a2\n  1009: u64 [sp + 0x60] = a1\n  1012: i32 a2 = a0 + 0\n  1014: i32 a3 = s1 + 0\n  1016: i32 a0 = sp + 0x40\n  1019: a1 = 0x2\n  1022: ecalli 6 // 'deposit_event'\n  1024: sp = s0 + 0xffffffffffffff60\n  1028: ra = u64 [sp + 0x98]\n  1032: s0 = u64 [sp + 0x90]\n  1036: s1 = u64 [sp + 0x88]\n  1040: sp = sp + 0xa0\n  1044: ret\n      : @15 (gas: 33)\n  1046: sp = sp + 0xffffffffffffff20\n  1050: u64 [sp + 0xd8] = ra\n  1054: u64 [sp + 0xd0] = s0\n  1058: u64 [sp + 0xc8] = s1\n  1062: s0 = sp + 0xe0\n  1066: sp = sp & 0xffffffffffffffe0\n  1069: a5 = u64 [a4]\n  1071: u64 [sp + 0x40] = a5\n  1074: a5 = u64 [a4 + 0x8]\n  1077: u64 [sp + 0x48] = a5\n  1080: a5 = u64 [a4 + 0x10]\n  1083: u64 [sp + 0x50] = a5\n  1086: a4 = u64 [a4 + 0x18]\n  1089: u64 [sp + 0x58] = a4\n  1092: t0 = 0x8\n  1095: a4 = u64 [a3]\n  1097: u64 [sp + 0x18] = a4\n  1100: a4 = u64 [a3 + 0x8]\n  1103: u64 [sp + 0x20] = a4\n  1106: a4 = u64 [a3 + 0x10]\n  1109: u64 [sp + 0x28] = a4\n  1112: a3 = u64 [a3 + 0x18]\n  1115: u64 [sp + 0x30] = a3\n  1118: s1 = u64 [a2]\n  1120: a3 = u64 [a2 + 0x8]\n  1123: u64 [sp] = a3\n  1125: a3 = u64 [a2 + 0x10]\n  1128: u64 [sp + 0x8] = a3\n  1131: a2 = u64 [a2 + 0x18]\n  1134: u64 [sp + 0x10] = a2\n  1137: u64 [sp + 56] = 0\n  1140: ra = 0xa\n  1143: jump @18\n      : @16 [@dyn 4] (gas: 2)\n  1146: u64 [sp + 0x38] = a1\n  1149: ra = 10, jump @18\n      : @17 [@dyn 5] (gas: 46)\n  1154: a1 = reverse s1\n  1156: u64 [sp + 0x78] = a1\n  1159: a1 = u64 [sp]\n  1161: a1 = reverse a1\n  1163: u64 [sp + 0x70] = a1\n  1166: a1 = u64 [sp + 0x8]\n  1169: a1 = reverse a1\n  1171: u64 [sp + 0x68] = a1\n  1174: a1 = u64 [sp + 0x10]\n  1177: a1 = reverse a1\n  1179: u64 [sp + 0x60] = a1\n  1182: a1 = u64 [sp + 0x18]\n  1185: a1 = reverse a1\n  1187: u64 [sp + 0x98] = a1\n  1191: a1 = u64 [sp + 0x20]\n  1194: a1 = reverse a1\n  1196: u64 [sp + 0x90] = a1\n  1200: a1 = u64 [sp + 0x28]\n  1203: a1 = reverse a1\n  1205: u64 [sp + 0x88] = a1\n  1209: a1 = u64 [sp + 0x30]\n  1212: a1 = reverse a1\n  1214: u64 [sp + 0x80] = a1\n  1218: a1 = u64 [sp + 0x40]\n  1221: a1 = reverse a1\n  1223: u64 [sp + 0xb8] = a1\n  1227: a1 = u64 [sp + 0x48]\n  1230: a1 = reverse a1\n  1232: u64 [sp + 0xb0] = a1\n  1236: a1 = u64 [sp + 0x50]\n  1239: a1 = reverse a1\n  1241: u64 [sp + 0xa8] = a1\n  1245: a1 = u64 [sp + 0x58]\n  1248: a1 = reverse a1\n  1250: u64 [sp + 0xa0] = a1\n  1254: i32 a2 = a0 + 0\n  1256: a3 = i32 [sp + 0x38]\n  1259: i32 a0 = sp + 0x60\n  1262: a1 = 0x3\n  1265: ecalli 6 // 'deposit_event'\n  1267: sp = s0 + 0xffffffffffffff20\n  1271: ra = u64 [sp + 0xd8]\n  1275: s0 = u64 [sp + 0xd0]\n  1279: s1 = u64 [sp + 0xc8]\n  1283: sp = sp + 0xe0\n  1287: ret\n      : @18 (gas: 2)\n  1289: i32 a2 = a0 >> 0x10\n  1292: jump @23 if a2 != 0\n      : @19 (gas: 4)\n  1295: a1 = a1 + a0\n  1298: i32 a1 = a1 + 0x1f\n  1301: a1 = a1 & 0xffffffffffffffe0\n  1304: jump @23 if a1 >u 65536\n      : @20 (gas: 3)\n  1310: a2 = 0x201c8\n  1315: a3 = i32 [0x201c8]\n  1320: jump @22 if a3 >=u a1\n      : @21 (gas: 2)\n  1323: u32 [0x201c8] = a1\n  1328: fallthrough\n      : @22 (gas: 4)\n  1329: a1 = 0x201d0\n  1334: i32 a0 = a0 + 0\n  1336: a0 = a0 + a1\n  1339: ret\n      : @23 (gas: 1)\n  1341: trap\n      : @24 (gas: 6)\n  1342: sp = sp + 0xfffffffffffffff0\n  1345: u64 [sp + 0x8] = ra\n  1348: u64 [sp] = s0\n  1350: s0 = a0 & 0x1\n  1353: ecalli 4 // 'call_data_size'\n  1355: fallthrough\n      : @25 (gas: 2)\n  1356: u32 [0x201c4] = a0\n  1361: jump @27 if s0 == 0\n      : @26 (gas: 1)\n  1364: ra = 12, jump @28\n      : @27 [@dyn 6] (gas: 18)\n  1368: ra = 0xe\n  1371: sp = sp + 0xfffffffffffffe10\n  1375: u64 [sp + 0x1e8] = ra\n  1379: u64 [sp + 0x1e0] = s0\n  1383: u64 [sp + 0x1d8] = s1\n  1387: s0 = sp + 0x1f0\n  1391: sp = sp + 0xffffffffffffde30\n  1395: sp = sp & 0xffffffffffffffe0\n  1398: s1 = sp\n  1400: a2 = s1 + 0x1878\n  1404: u64 [a2 + 736] = 0\n  1408: u64 [a2 + 728] = 0\n  1412: u64 [a2 + 712] = 0x80\n  1418: a0 = 0x40\n  1421: a1 = s1 + 0x1b40\n  1425: u64 [a2 + 720] = 0\n  1429: ra = 0x48\n  1432: jump @9\n      : @28 [@dyn 7] (gas: 15)\n  1435: sp = sp + 0xfffffffffffffbc0\n  1439: a0 = sp + 0x400\n  1443: u64 [a0 + 0x38] = ra\n  1446: u64 [a0 + 0x30] = s0\n  1449: u64 [a0 + 0x28] = s1\n  1452: s0 = sp + 0x440\n  1456: sp = sp & 0xffffffffffffffe0\n  1459: s1 = sp\n  1461: u64 [s1 + 920] = 0\n  1465: u64 [s1 + 912] = 0\n  1469: u64 [s1 + 904] = 0\n  1473: u64 [s1 + 896] = 0\n  1477: i32 a0 = s1 + 0x380\n  1481: ecalli 16 // 'value_transferred'\n  1483: fallthrough\n      : @29 (gas: 9)\n  1484: a4 = s1 + 0x300\n  1488: a0 = u64 [a4 + 0x90]\n  1492: a1 = u64 [a4 + 0x98]\n  1496: a2 = u64 [a4 + 0x88]\n  1500: a3 = u64 [a4 + 0x80]\n  1504: a1 = a1 | a2\n  1507: a0 = a0 | a3\n  1510: a0 = a0 | a1\n  1513: jump @64 if a0 != 0\n      : @30 (gas: 17)\n  1517: a0 = i32 [0x201c4]\n  1522: u64 [s1 + 0xb8] = a0\n  1526: a0 = a0 << 0x20\n  1529: a0 = a0 >> 0x20\n  1532: a0 = a0 + 0x1f\n  1535: a0 = a0 & 0xffffffffffffffe0\n  1538: a1 = a0 + 0xc0\n  1542: a0 = a1 <u a0\n  1545: a2 = s1 + 0x300\n  1549: u64 [a2 + 0x60] = a1\n  1552: u64 [a2 + 0x68] = a0\n  1555: a0 = 0 if a0 != 0\n  1557: u64 [a2 + 0x70] = a0\n  1560: a0 = 0x40\n  1563: a1 = s1 + 0x360\n  1567: u64 [s1 + 888] = 0\n  1571: ra = 16, jump @9\n      : @31 [@dyn 8] (gas: 3)\n  1576: a0 = 0xc0\n  1580: a1 = u64 [s1 + 0xb8]\n  1584: ra = 18, jump @18\n      : @32 [@dyn 9] (gas: 5)\n  1589: i32 a0 = a0 + 0\n  1591: a1 = u64 [s1 + 0xb8]\n  1595: a2 = 0\n  1597: ecalli 2 // 'call_data_copy'\n  1599: fallthrough\n      : @33 (gas: 2)\n  1600: a1 = u64 [s1 + 0xb8]\n  1604: jump @65 if a1 <=u 95\n      : @34 (gas: 7)\n  1609: u64 [s1 + 824] = 0\n  1613: u64 [s1 + 816] = 0\n  1617: u64 [s1 + 800] = 0xc0\n  1623: a0 = s1 + 0x340\n  1627: a1 = s1 + 0x320\n  1631: u64 [s1 + 808] = 0\n  1635: ra = 20, jump @754\n      : @35 [@dyn 10] (gas: 15)\n  1640: a0 = u64 [s1 + 0x358]\n  1644: u64 [s1 + 0x48] = a0\n  1647: a0 = u64 [s1 + 0x350]\n  1651: u64 [s1 + 0x40] = a0\n  1654: a0 = u64 [s1 + 0x348]\n  1658: u64 [s1 + 0x30] = a0\n  1661: a0 = u64 [s1 + 0x340]\n  1665: u64 [s1 + 0x28] = a0\n  1668: u64 [s1 + 760] = 0\n  1672: u64 [s1 + 752] = 0\n  1676: u64 [s1 + 736] = 0xe0\n  1682: a0 = s1 + 0x300\n  1686: a1 = s1 + 0x2e0\n  1690: u64 [s1 + 744] = 0\n  1694: ra = 22, jump @754\n      : @36 [@dyn 11] (gas: 16)\n  1699: a1 = s1 + 0x300\n  1703: a0 = u64 [a1 + 0x18]\n  1706: u64 [s1 + 0x10] = a0\n  1709: a0 = u64 [a1 + 0x10]\n  1712: u64 [s1 + 0x18] = a0\n  1715: a0 = u64 [a1 + 0x8]\n  1718: u64 [s1 + 0x20] = a0\n  1721: a0 = u64 [a1]\n  1723: u64 [s1 + 0x38] = a0\n  1726: a0 = sp + 0xffffffffffffffe0\n  1729: a0 = a0 & 0xffffffffffffffe0\n  1732: u64 [s1 + 0xa0] = a0\n  1736: sp = a0\n  1738: a0 = s1 + 0x2c0\n  1742: a1 = 0x100\n  1746: ra = 24, jump @7\n      : @37 [@dyn 12] (gas: 20)\n  1751: a4 = s1 + 0x200\n  1755: a0 = u64 [a4 + 0xd0]\n  1759: a1 = u64 [a4 + 0xd8]\n  1763: a3 = u64 [a4 + 0xc0]\n  1767: a2 = u64 [a4 + 0xc8]\n  1771: u64 [s1 + 0x90] = a0\n  1775: a4 = u64 [s1 + 0xa0]\n  1779: u64 [a4 + 0x10] = a0\n  1782: u64 [s1 + 0x88] = a1\n  1786: u64 [a4 + 0x18] = a1\n  1789: u64 [s1 + 0x78] = a3\n  1792: u64 [a4] = a3\n  1794: u64 [s1 + 0x80] = a2\n  1798: u64 [a4 + 0x8] = a2\n  1801: a0 = 0x301d0\n  1806: u64 [s1 + 0xb8] = a0\n  1810: i32 a0 = a0 + 0\n  1812: u64 [s1 + 0xb0] = a0\n  1816: ecalli 5 // 'caller'\n  1818: fallthrough\n      : @38 (gas: 7)\n  1819: a2 = u64 [s1 + 0xb8]\n  1823: a0 = u32 [a2 + 0x10]\n  1826: a1 = u64 [a2]\n  1828: a2 = u64 [a2 + 0x8]\n  1831: a0 = a0 | a1\n  1834: a0 = a0 | a2\n  1837: jump @66 if a0 == 0\n      : @39 (gas: 7)\n  1841: u64 [s1 + 952] = 0\n  1845: u64 [s1 + 944] = 0\n  1849: u64 [s1 + 936] = 0\n  1853: u64 [s1 + 928] = 0\n  1857: a0 = s1 + 0x2a0\n  1861: a1 = s1 + 0x3a0\n  1865: ra = 26, jump @11\n      : @40 [@dyn 13] (gas: 14)\n  1870: a0 = u64 [s1 + 0x2a0]\n  1874: u64 [s1 + 0x70] = a0\n  1877: a0 = u64 [s1 + 0x2a8]\n  1881: u64 [s1 + 0x68] = a0\n  1884: a0 = u64 [s1 + 0x2b8]\n  1888: u64 [s1 + 0x98] = a0\n  1892: a0 = u64 [s1 + 0x2b0]\n  1896: u64 [s1 + 0xa8] = a0\n  1900: a0 = u64 [s1 + 0xb0]\n  1904: ra = 0x1c\n  1907: ecalli 5 // 'caller'\n  1909: a2 = u64 [s1 + 0xb8]\n  1913: t0 = 0x1e\n  1916: jump @905\n      : @41 [@dyn 14] (gas: 2)\n  1919: a2 = u64 [s1 + 0xb8]\n  1923: t0 = 30, jump @905\n      : @42 [@dyn 15] (gas: 22)\n  1928: a0 = a0 >> 0x20\n  1931: a2 = reverse a2\n  1933: a3 = a2 << 0x20\n  1936: a0 = a0 | a3\n  1939: a2 = a2 >> 0x20\n  1942: a3 = u64 [s1 + 0xa8]\n  1946: a3 = a3 >> 0x20\n  1949: a3 = a3 << 0x20\n  1952: a2 = a2 | a3\n  1955: u64 [s1 + 984] = 0\n  1959: u64 [s1 + 976] = 0\n  1963: u64 [s1 + 968] = 0\n  1967: u64 [s1 + 960] = 0\n  1971: a3 = u64 [s1 + 0x98]\n  1975: a4 = s1 + 0x300\n  1979: u64 [a4 + 0xf8] = a3\n  1983: u64 [a4 + 0xf0] = a2\n  1987: u64 [a4 + 0xe8] = a0\n  1991: u64 [a4 + 0xe0] = a1\n  1995: a0 = s1 + 0x3c0\n  1999: a1 = s1 + 0x3e0\n  2003: ra = 32, jump @12\n      : @43 [@dyn 16] (gas: 3)\n  2008: a0 = s1 + 0x280\n  2012: a1 = 0x40\n  2015: ra = 34, jump @7\n      : @44 [@dyn 17] (gas: 14)\n  2020: a0 = u64 [s1 + 0x298]\n  2024: u64 [s1 + 0x58] = a0\n  2027: a0 = u64 [s1 + 0x290]\n  2031: u64 [s1 + 0x50] = a0\n  2034: a0 = u64 [s1 + 0x288]\n  2038: u64 [s1 + 0x60] = a0\n  2041: a0 = u64 [s1 + 0x280]\n  2045: u64 [s1 + 0x98] = a0\n  2049: a0 = u64 [s1 + 0xb0]\n  2053: ra = 0x24\n  2056: ecalli 5 // 'caller'\n  2058: a2 = u64 [s1 + 0xb8]\n  2062: t0 = 0x26\n  2065: jump @896\n      : @45 [@dyn 18] (gas: 2)\n  2068: a2 = u64 [s1 + 0xb8]\n  2072: t0 = 38, jump @896\n      : @46 [@dyn 19] (gas: 34)\n  2077: t0 = a1 | a0\n  2080: a3 = a3 >> 0x20\n  2083: a2 = reverse a2\n  2085: a1 = a2 << 0x20\n  2088: a1 = a1 | a3\n  2091: a2 = a2 >> 0x20\n  2094: a3 = u64 [s1 + 0xa8]\n  2098: a3 = a3 << 0x20\n  2101: a3 = a3 >> 0x20\n  2104: u64 [s1 + 568] = 0\n  2108: u64 [s1 + 600] = 0\n  2112: u64 [s1 + 0x250] = a3\n  2116: a0 = u64 [s1 + 0x68]\n  2119: u64 [s1 + 0x248] = a0\n  2123: a0 = u64 [s1 + 0x70]\n  2126: u64 [s1 + 0x240] = a0\n  2130: a3 = u64 [0x20000]\n  2135: a4 = u64 [0x20008]\n  2140: a5 = u64 [0x20010]\n  2145: a0 = u64 [0x20018]\n  2150: u64 [s1 + 0x278] = a3\n  2154: a3 = s1 + 0x200\n  2158: u64 [a3 + 0x70] = a4\n  2161: u64 [a3 + 0x68] = a5\n  2164: u64 [a3 + 0x60] = a0\n  2167: u64 [a3 + 0x30] = a2\n  2170: u64 [a3 + 0x28] = a1\n  2173: a2 = s1 + 0x260\n  2177: a3 = s1 + 0x240\n  2181: a4 = s1 + 0x220\n  2185: u64 [s1 + 0x220] = t0\n  2189: a0 = 0\n  2191: a1 = 0\n  2193: ra = 40, jump @15\n      : @47 [@dyn 20] (gas: 14)\n  2198: a2 = u64 [s1 + 0x80]\n  2202: a0 = a2 >u 0\n  2204: a1 = u64 [s1 + 0x78]\n  2207: a1 = a1 <u 0x65\n  2210: a1 = a1 ^ 0x1\n  2213: a1 = a0 if a2 != 0\n  2216: a3 = u64 [s1 + 0x90]\n  2220: a0 = a3 >u 0\n  2222: a4 = u64 [s1 + 0x88]\n  2226: a2 = a4 >u 0\n  2228: a2 = a0 if a4 == 0\n  2231: a0 = a3 | a4\n  2234: a2 = a1 if a0 == 0\n  2237: jump @58 if a2 == 0\n      : @48 (gas: 12)\n  2241: a0 = u64 [s1 + 0x98]\n  2245: a3 = u64 [s1 + 0x50]\n  2248: a0 = a0 | a3\n  2251: a1 = u64 [s1 + 0x60]\n  2254: a2 = u64 [s1 + 0x58]\n  2257: a1 = a1 | a2\n  2260: a0 = a0 | a1\n  2263: a0 = a0 >> 0x20\n  2266: a1 = a1 | a3\n  2269: a1 = a1 << 0x20\n  2272: a0 = a0 | a1\n  2275: jump @63 if a0 != 0\n      : @49 (gas: 8)\n  2279: u64 [s1 + 368] = 0\n  2283: u64 [s1 + 360] = 0\n  2287: u64 [s1 + 352] = 0\n  2291: a0 = 0x8c379a000000000\n  2301: a1 = s1 + 0x160\n  2305: u64 [s1 + 0x178] = a0\n  2309: a0 = u64 [s1 + 0x98]\n  2313: ra = 42, jump @9\n      : @50 [@dyn 21] (gas: 11)\n  2318: a0 = u64 [s1 + 0x58]\n  2321: a1 = u64 [s1 + 0x50]\n  2324: a2 = a1 | a0\n  2327: a3 = 0x100000000\n  2337: a0 = 0xfffffffc\n  2347: a1 = u64 [s1 + 0x98]\n  2351: a0 = a1 <u a0\n  2354: a1 = u64 [s1 + 0x60]\n  2357: a0 = 0 if a1 != 0\n  2359: a0 = 0 if a2 != 0\n  2361: jump @63 if a0 == 0\n      : @51 (gas: 11)\n  2365: a0 = u64 [s1 + 0x98]\n  2369: i32 a0 = a0 + 0x4\n  2372: u64 [s1 + 344] = 0\n  2376: u64 [s1 + 336] = 0\n  2380: u64 [s1 + 328] = 0\n  2384: a4 = 0x20\n  2387: a1 = s1 + 0x140\n  2391: u64 [s1 + 0x140] = a4\n  2395: u64 [s1 + 0xb8] = a2\n  2399: u64 [s1 + 0xb0] = a3\n  2403: ra = 44, jump @9\n      : @52 [@dyn 22] (gas: 9)\n  2408: a2 = u64 [s1 + 0xb8]\n  2412: a0 = u64 [s1 + 0xb0]\n  2416: a0 = a0 + 0xffffffffffffffdc\n  2419: a1 = u64 [s1 + 0x98]\n  2423: a0 = a1 <u a0\n  2426: a1 = u64 [s1 + 0x60]\n  2429: a0 = 0 if a1 != 0\n  2431: a0 = 0 if a2 != 0\n  2433: jump @63 if a0 == 0\n      : @53 (gas: 8)\n  2437: a0 = u64 [s1 + 0x98]\n  2441: i32 a0 = a0 + 0x24\n  2444: u64 [s1 + 312] = 0\n  2448: u64 [s1 + 304] = 0\n  2452: u64 [s1 + 288] = 0x20\n  2457: a1 = s1 + 0x120\n  2461: u64 [s1 + 296] = 0\n  2465: ra = 46, jump @9\n      : @54 [@dyn 23] (gas: 8)\n  2470: a0 = 0xffffffbc\n  2480: a1 = u64 [s1 + 0x98]\n  2484: a0 = a1 <u a0\n  2487: a1 = u64 [s1 + 0x60]\n  2490: a0 = 0 if a1 != 0\n  2492: a1 = u64 [s1 + 0xb8]\n  2496: a0 = 0 if a1 != 0\n  2498: jump @63 if a0 == 0\n      : @55 (gas: 13)\n  2502: a0 = u64 [s1 + 0x98]\n  2506: i32 a0 = a0 + 0x44\n  2509: a1 = u64 [0x20020]\n  2514: a4 = s1 + 0x100\n  2518: u64 [a4 + 0x18] = a1\n  2521: a1 = u64 [0x20028]\n  2526: a2 = u64 [0x20030]\n  2531: a3 = u64 [0x20038]\n  2536: u64 [a4 + 0x10] = a1\n  2539: u64 [a4 + 0x8] = a2\n  2542: a1 = s1 + 0x100\n  2546: u64 [a4] = a3\n  2548: ra = 48, jump @9\n      : @56 [@dyn 24] (gas: 3)\n  2553: a1 = 0x64\n  2556: a0 = u64 [s1 + 0x98]\n  2560: ra = 50, jump @18\n      : @57 [@dyn 25] (gas: 5)\n  2565: i32 a1 = a0 + 0\n  2567: a0 = 0x1\n  2570: a2 = 0x64\n  2573: ecalli 13 // 'seal_return'\n  2575: fallthrough\n      : @58 (gas: 12)\n  2576: a0 = u64 [s1 + 0x28]\n  2579: a3 = s1 + 0x200\n  2583: u64 [a3] = a0\n  2585: a0 = u64 [s1 + 0x30]\n  2588: u64 [a3 + 0x8] = a0\n  2591: a0 = u64 [s1 + 0x40]\n  2594: u64 [a3 + 0x10] = a0\n  2597: a0 = 0x80\n  2601: a1 = s1 + 0x200\n  2605: a2 = u64 [s1 + 0x48]\n  2608: u64 [a3 + 0x18] = a2\n  2611: ra = 52, jump @9\n      : @59 [@dyn 26] (gas: 11)\n  2616: a0 = u64 [s1 + 0x10]\n  2619: u64 [s1 + 0x1f8] = a0\n  2623: a0 = u64 [s1 + 0x18]\n  2626: u64 [s1 + 0x1f0] = a0\n  2630: a0 = u64 [s1 + 0x20]\n  2633: u64 [s1 + 0x1e8] = a0\n  2637: a0 = 0xa0\n  2641: a1 = s1 + 0x1e0\n  2645: a2 = u64 [s1 + 0x38]\n  2648: u64 [s1 + 0x1e0] = a2\n  2652: ra = 54, jump @9\n      : @60 [@dyn 27] (gas: 7)\n  2657: u64 [s1 + 1048] = 0\n  2661: u64 [s1 + 1040] = 0\n  2665: u64 [s1 + 1032] = 0\n  2669: u64 [s1 + 1024] = 0x1\n  2674: a0 = s1 + 0x400\n  2678: a1 = u64 [s1 + 0xa0]\n  2682: ra = 56, jump @12\n      : @61 [@dyn 28] (gas: 3)\n  2687: a0 = s1 + 0x1c0\n  2691: a1 = 0x40\n  2694: ra = 58, jump @7\n      : @62 [@dyn 29] (gas: 13)\n  2699: a4 = s1 + 0x100\n  2703: a3 = u64 [a4 + 0xd8]\n  2707: a1 = u64 [a4 + 0xd0]\n  2711: a2 = u64 [a4 + 0xc8]\n  2715: a0 = u64 [a4 + 0xc0]\n  2719: a3 = a3 | a2\n  2722: a2 = a0 | a1\n  2725: a2 = a2 | a3\n  2728: a2 = a2 >> 0x20\n  2731: a1 = a1 | a3\n  2734: a1 = a1 << 0x20\n  2737: a1 = a1 | a2\n  2740: jump @71 if a1 == 0\n      : @63 (gas: 1)\n  2744: trap\n      : @64 (gas: 6)\n  2745: a1 = 0x201d0\n  2750: i32 a1 = a1 + 0\n  2752: a0 = 0x1\n  2755: a2 = 0\n  2757: ecalli 13 // 'seal_return'\n  2759: jump @66\n      : @65 (gas: 6)\n  2761: a1 = 0x201d0\n  2766: i32 a1 = a1 + 0\n  2768: a0 = 0x1\n  2771: a2 = 0\n  2773: ecalli 13 // 'seal_return'\n  2775: fallthrough\n      : @66 (gas: 8)\n  2776: u64 [s1 + 240] = 0\n  2780: u64 [s1 + 232] = 0\n  2784: u64 [s1 + 224] = 0\n  2788: a0 = 0x1e4fbdf700000000\n  2798: a1 = s1 + 0xe0\n  2802: u64 [s1 + 0xf8] = a0\n  2806: a0 = 0\n  2808: ra = 60, jump @9\n      : @67 [@dyn 30] (gas: 7)\n  2813: u64 [s1 + 216] = 0\n  2817: u64 [s1 + 208] = 0\n  2821: u64 [s1 + 200] = 0\n  2825: a0 = 0x4\n  2828: a1 = s1 + 0xc0\n  2832: u64 [s1 + 192] = 0\n  2836: ra = 62, jump @9\n      : @68 [@dyn 31] (gas: 2)\n  2841: a1 = i32 [0x201c8]\n  2846: jump @70 if a1 >u 63\n      : @69 (gas: 2)\n  2850: u32 [0x201c8] = 0x40\n  2856: fallthrough\n      : @70 (gas: 8)\n  2857: a1 = 0x201d0\n  2862: i32 a1 = a1 + 0\n  2864: a0 = 0x1\n  2867: a2 = 0x24\n  2870: ecalli 13 // 'seal_return'\n  2872: u64 [s1 + 0xb8] = a0\n  2876: ra = 0x40\n  2879: jump @18\n      : @71 (gas: 2)\n  2882: u64 [s1 + 0xb8] = a0\n  2886: ra = 64, jump @18\n      : @72 [@dyn 32] (gas: 7)\n  2891: i32 a0 = a0 + 0\n  2893: a1 = 0\n  2895: a2 = 0\n  2897: ecalli 2 // 'call_data_copy'\n  2899: a0 = s1 + 0x1a0\n  2903: a1 = 0x80\n  2907: ra = 66, jump @7\n      : @73 [@dyn 33] (gas: 13)\n  2912: a0 = u64 [s1 + 0x1b8]\n  2916: a4 = 0x301f0\n  2921: u64 [s1 + 0xb0] = a4\n  2925: a1 = u64 [s1 + 0x1b0]\n  2929: a2 = u64 [s1 + 0x1a8]\n  2933: a3 = u64 [s1 + 0x1a0]\n  2937: u64 [0x30208] = a0\n  2942: u64 [0x30200] = a1\n  2947: u64 [0x301f8] = a2\n  2952: u64 [0x301f0] = a3\n  2957: a0 = s1 + 0x180\n  2961: a1 = 0xa0\n  2965: ra = 68, jump @7\n      : @74 [@dyn 34] (gas: 11)\n  2970: a4 = s1 + 0x100\n  2974: a0 = u64 [a4 + 0x98]\n  2978: a1 = u64 [a4 + 0x90]\n  2982: a2 = u64 [a4 + 0x88]\n  2986: a3 = u64 [a4 + 0x80]\n  2990: a4 = u64 [s1 + 0xb0]\n  2994: u64 [a4 + 0x38] = a0\n  2997: u64 [a4 + 0x30] = a1\n  3000: u64 [a4 + 0x28] = a2\n  3003: u64 [a4 + 0x20] = a3\n  3006: jump @5\n      : @75 (gas: 3)\n  3009: a0 = u64 [s1 + 0xb8]\n  3013: a1 = 0\n  3015: ra = 70, jump @18\n      : @76 [@dyn 35] (gas: 5)\n  3020: i32 a1 = a0 + 0\n  3022: a0 = 0\n  3024: a2 = 0\n  3026: ecalli 13 // 'seal_return'\n  3028: jump @66\n      : @77 [@dyn 36] (gas: 4)\n  3031: a0 = 0x201c4\n  3036: u64 [s1 + 0xd8] = a0\n  3040: a0 = i32 [0x201c4]\n  3045: jump @79 if a0 >=u 4\n      : @78 (gas: 1)\n  3049: jump @712\n      : @79 (gas: 6)\n  3052: a0 = s1 + 0x2000\n  3056: i32 a0 = a0 + 0xfffffffffffffb60\n  3060: a1 = 0\n  3062: ra = 0x4a\n  3065: ecalli 3 // 'call_data_load'\n  3067: fallthrough\n      : @80 [@dyn 37] (gas: 3)\n  3068: a2 = s1 + 0x1878\n  3072: a0 = i32 [a2 + 0x304]\n  3076: jump @82 if a0 != 2357215170\n      : @81 (gas: 1)\n  3083: jump @327\n      : @82 (gas: 1)\n  3086: jump @183 if a0 == 2376452955\n      : @83 (gas: 1)\n  3094: jump @85 if a0 != 2863441240\n      : @84 (gas: 1)\n  3101: jump @369\n      : @85 (gas: 2)\n  3104: a3 = s1 + 0x2078\n  3108: jump @87 if a0 != 2876972169\n      : @86 (gas: 1)\n  3115: jump @243\n      : @87 (gas: 1)\n  3118: jump @89 if a0 != 2986437588\n      : @88 (gas: 1)\n  3125: jump @317\n      : @89 (gas: 1)\n  3128: jump @91 if a0 != 3049398615\n      : @90 (gas: 1)\n  3135: jump @297\n      : @91 (gas: 1)\n  3138: jump @130 if a0 == 3134496799\n      : @92 (gas: 1)\n  3146: jump @94 if a0 != 3741391937\n      : @93 (gas: 1)\n  3153: jump @231\n      : @94 (gas: 1)\n  3156: jump @194 if a0 == 3903314574\n      : @95 (gas: 1)\n  3164: jump @97 if a0 == 1628634670\n      : @96 (gas: 1)\n  3171: jump @269\n      : @97 (gas: 8)\n  3174: u64 [a2 + 896] = 0\n  3178: u64 [a2 + 888] = 0\n  3182: u64 [a2 + 880] = 0\n  3186: u64 [a2 + 872] = 0\n  3190: a0 = s1 + 0x2000\n  3194: i32 a0 = a0 + 0xfffffffffffffbe0\n  3198: ecalli 16 // 'value_transferred'\n  3200: fallthrough\n      : @98 (gas: 10)\n  3201: a3 = s1 + 0x1878\n  3205: a4 = a3 + 0x300\n  3209: a0 = u64 [a4 + 0x78]\n  3212: a1 = u64 [a4 + 0x80]\n  3216: a2 = u64 [a4 + 0x70]\n  3219: a3 = u64 [a4 + 0x68]\n  3222: a1 = a1 | a2\n  3225: a0 = a0 | a3\n  3228: a0 = a0 | a1\n  3231: jump @100 if a0 == 0\n      : @99 (gas: 1)\n  3234: jump @654\n      : @100 (gas: 3)\n  3237: a0 = u64 [s1 + 0xd8]\n  3241: a0 = i32 [a0]\n  3243: jump @102 if a0 >u 35\n      : @101 (gas: 1)\n  3247: jump @655\n      : @102 (gas: 24)\n  3250: a0 = s1 + 0x2000\n  3254: i32 a0 = a0 + 0xfffffffffffffc00\n  3258: a1 = 0x4\n  3261: ecalli 3 // 'call_data_load'\n  3263: a0 = s1 + 0x1878\n  3267: a5 = a0 + 0x300\n  3271: a1 = u64 [a5 + 0xa0]\n  3275: a2 = u64 [a5 + 0x98]\n  3279: a3 = u64 [a5 + 0x90]\n  3283: a4 = u64 [a5 + 0x88]\n  3287: u64 [s1 + 0xd0] = a1\n  3291: u64 [s1 + 0xc0] = a3\n  3295: a0 = a3 | a1\n  3298: u64 [s1 + 0xc8] = a2\n  3302: u64 [s1 + 0xb8] = a4\n  3306: a1 = a4 | a2\n  3309: a0 = a0 | a1\n  3312: a0 = a0 >u 0\n  3314: u64 [s1 + 1784] = 0\n  3318: u64 [s1 + 1776] = 0\n  3322: u64 [s1 + 0x6e0] = a0\n  3326: a0 = s1 + 0x6e0\n  3330: u64 [s1 + 1768] = 0\n  3334: ra = 76, jump @768\n      : @103 [@dyn 38] (gas: 8)\n  3339: a0 = 0x301d0\n  3344: u64 [s1 + 0xd8] = a0\n  3348: i32 a0 = a0 + 0\n  3350: u64 [s1 + 0xb0] = a0\n  3354: ra = 0x4e\n  3357: ecalli 5 // 'caller'\n  3359: t0 = 0x50\n  3362: jump @894\n      : @104 [@dyn 39] (gas: 1)\n  3365: t0 = 80, jump @894\n      : @105 [@dyn 40] (gas: 7)\n  3370: u64 [s1 + 1752] = 0\n  3374: u64 [s1 + 0x6d0] = a1\n  3378: u64 [s1 + 0x6c8] = a0\n  3382: a1 = s1 + 0x6c0\n  3386: u64 [s1 + 0x6c0] = a3\n  3390: a0 = 0\n  3392: ra = 82, jump @9\n      : @106 [@dyn 41] (gas: 7)\n  3397: u64 [s1 + 1720] = 0\n  3401: u64 [s1 + 1712] = 0\n  3405: u64 [s1 + 1696] = 0x2\n  3410: a0 = 0x20\n  3413: a1 = s1 + 0x6a0\n  3417: u64 [s1 + 1704] = 0\n  3421: ra = 84, jump @9\n      : @107 [@dyn 42] (gas: 3)\n  3426: a2 = 0x201c8\n  3431: a0 = i32 [0x201c8]\n  3436: jump @109 if a0 >u 63\n      : @108 (gas: 2)\n  3440: u32 [0x201c8] = 0x40\n  3446: fallthrough\n      : @109 (gas: 15)\n  3447: u64 [s1 + 0x98] = a2\n  3451: a0 = sp + 0xffffffffffffffe0\n  3454: a2 = a0 & 0xffffffffffffffe0\n  3457: u64 [s1 + 0xa8] = a2\n  3461: sp = a2\n  3463: a0 = 0x201d0\n  3468: i32 a0 = a0 + 0\n  3470: i32 a2 = a2 + 0\n  3472: a1 = 0x40\n  3475: u64 [s1 + 0xa0] = a0\n  3479: ra = 0x56\n  3482: ecalli 9 // 'hash_keccak_256'\n  3484: a3 = u64 [s1 + 0xa8]\n  3488: t0 = 0x58\n  3491: jump @898\n      : @110 [@dyn 43] (gas: 2)\n  3494: a3 = u64 [s1 + 0xa8]\n  3498: t0 = 88, jump @898\n      : @111 [@dyn 44] (gas: 7)\n  3503: u64 [a5 + 0xc0] = a3\n  3507: u64 [a5 + 0xb8] = a2\n  3511: u64 [a5 + 0xb0] = a1\n  3515: u64 [a5 + 0xa8] = a0\n  3519: a0 = s1 + 0x680\n  3523: a1 = s1 + 0x1c20\n  3527: ra = 90, jump @11\n      : @112 [@dyn 45] (gas: 21)\n  3532: a1 = s1 + 0x600\n  3536: a0 = u64 [a1 + 0x98]\n  3540: t0 = u64 [s1 + 0x680]\n  3544: a2 = u64 [a1 + 0x90]\n  3548: a3 = u64 [a1 + 0x88]\n  3552: a5 = u64 [s1 + 0xd0]\n  3556: a4 = a0 ^ a5\n  3559: a1 = a0 <u a5\n  3562: a0 = u64 [s1 + 0xc8]\n  3566: a5 = a2 <u a0\n  3569: a5 = a1 if a4 != 0\n  3572: a1 = u64 [s1 + 0xc0]\n  3576: t1 = a3 ^ a1\n  3579: a3 = a3 <u a1\n  3582: a1 = u64 [s1 + 0xb8]\n  3586: a1 = t0 <u a1\n  3589: a1 = a3 if t1 != 0\n  3592: a0 = a0 ^ a2\n  3595: a0 = a0 | a4\n  3598: a1 = a5 if a0 != 0\n  3601: jump @114 if a1 != 0\n      : @113 (gas: 1)\n  3604: jump @394\n      : @114 (gas: 3)\n  3607: a0 = s1 + 0x1e0\n  3611: a1 = 0x40\n  3614: ra = 92, jump @7\n      : @115 [@dyn 46] (gas: 6)\n  3619: a1 = s1 + 0x100\n  3623: a4 = u64 [a1 + 0xf8]\n  3627: a5 = u64 [a1 + 0xf0]\n  3631: a3 = u64 [a1 + 0xe8]\n  3635: a0 = u64 [a1 + 0xe0]\n  3639: t0 = 94, jump @904\n      : @116 [@dyn 47] (gas: 1)\n  3644: jump @118 if a1 == 0\n      : @117 (gas: 1)\n  3647: jump @381\n      : @118 (gas: 11)\n  3650: u64 [s1 + 464] = 0\n  3654: u64 [s1 + 456] = 0\n  3658: u64 [s1 + 448] = 0\n  3662: a2 = 0x8c379a000000000\n  3672: a1 = s1 + 0x1c0\n  3676: u64 [s1 + 0x1d8] = a2\n  3680: u64 [s1 + 0xd8] = a0\n  3684: u64 [s1 + 0xd0] = a3\n  3688: u64 [s1 + 0xc8] = a4\n  3692: u64 [s1 + 0xc0] = a5\n  3696: ra = 96, jump @9\n      : @119 [@dyn 48] (gas: 5)\n  3701: a1 = u64 [s1 + 0xd8]\n  3705: a0 = u64 [s1 + 0xc8]\n  3709: a3 = u64 [s1 + 0xc0]\n  3713: a3 = a3 | a0\n  3716: t0 = 98, jump @897\n      : @120 [@dyn 49] (gas: 1)\n  3721: jump @122 if a0 != 0\n      : @121 (gas: 1)\n  3724: jump @381\n      : @122 (gas: 9)\n  3727: i32 a0 = a1 + 0x4\n  3730: u64 [s1 + 440] = 0\n  3734: u64 [s1 + 432] = 0\n  3738: u64 [s1 + 416] = 0x20\n  3743: a1 = s1 + 0x1a0\n  3747: u64 [s1 + 424] = 0\n  3751: u64 [s1 + 0xc8] = a3\n  3755: u64 [s1 + 0xc0] = a4\n  3759: ra = 100, jump @9\n      : @123 [@dyn 50] (gas: 9)\n  3764: a3 = u64 [s1 + 0xc8]\n  3768: a2 = u64 [s1 + 0xd0]\n  3772: a1 = u64 [s1 + 0xd8]\n  3776: a0 = u64 [s1 + 0xc0]\n  3780: a0 = a0 + 0xffffffffffffffdc\n  3783: a0 = a1 <u a0\n  3786: a0 = 0 if a2 != 0\n  3788: a0 = 0 if a3 != 0\n  3790: jump @125 if a0 != 0\n      : @124 (gas: 1)\n  3793: jump @381\n      : @125 (gas: 7)\n  3796: i32 a0 = a1 + 0x24\n  3799: u64 [s1 + 408] = 0\n  3803: u64 [s1 + 400] = 0\n  3807: u64 [s1 + 384] = 0x17\n  3812: a1 = s1 + 0x180\n  3816: u64 [s1 + 392] = 0\n  3820: ra = 102, jump @9\n      : @126 [@dyn 51] (gas: 3)\n  3825: a2 = u64 [s1 + 0xd8]\n  3829: a0 = 0xffffffbc\n  3839: t0 = 104, jump @907\n      : @127 [@dyn 52] (gas: 1)\n  3844: jump @129 if a0 != 0\n      : @128 (gas: 1)\n  3847: jump @381\n      : @129 (gas: 12)\n  3850: i32 a0 = a2 + 0x44\n  3853: a1 = u64 [0x20188]\n  3858: a2 = u64 [0x20190]\n  3863: a3 = u64 [0x20198]\n  3868: a4 = s1 + 0x100\n  3872: u64 [a4 + 0x78] = a1\n  3875: u64 [a4 + 0x70] = a2\n  3878: u64 [a4 + 0x68] = a3\n  3881: a1 = s1 + 0x160\n  3885: u64 [s1 + 352] = 0\n  3889: ra = 0x234\n  3893: jump @9\n      : @130 (gas: 9)\n  3896: u64 [a3 + 288] = 0\n  3900: u64 [a3 + 280] = 0\n  3904: u64 [a3 + 272] = 0\n  3908: u64 [a3 + 264] = 0\n  3912: a0 = s1 + 0x2000\n  3916: i32 a0 = a0 + 0x180\n  3920: ra = 0x6a\n  3923: ecalli 16 // 'value_transferred'\n  3925: fallthrough\n      : @131 [@dyn 53] (gas: 3)\n  3926: a3 = s1 + 0x2078\n  3930: a4 = a3 + 0x100\n  3934: t0 = 108, jump @911\n      : @132 [@dyn 54] (gas: 1)\n  3939: jump @134 if a0 == 0\n      : @133 (gas: 1)\n  3942: jump @656\n      : @134 (gas: 3)\n  3945: a0 = u64 [s1 + 0xd8]\n  3949: a0 = i32 [a0]\n  3951: jump @136 if a0 >u 35\n      : @135 (gas: 1)\n  3955: jump @657\n      : @136 (gas: 25)\n  3958: a0 = s1 + 0x2000\n  3962: i32 a0 = a0 + 0x1a0\n  3966: a1 = 0x4\n  3969: ecalli 3 // 'call_data_load'\n  3971: a0 = s1 + 0x2078\n  3975: a5 = a0 + 0x100\n  3979: a1 = u64 [a5 + 0x40]\n  3982: a2 = u64 [a5 + 0x38]\n  3985: a3 = u64 [a5 + 0x30]\n  3988: a4 = u64 [a5 + 0x28]\n  3991: u64 [s1 + 0xc8] = a1\n  3995: u64 [s1 + 0xb8] = a3\n  3999: a0 = a3 | a1\n  4002: u64 [s1 + 0xc0] = a2\n  4006: u64 [s1 + 0xb0] = a4\n  4010: a1 = a4 | a2\n  4013: a0 = a0 | a1\n  4016: a0 = a0 >u 0\n  4018: a1 = s1 + 0x1078\n  4022: u64 [a1 + 1952] = 0\n  4026: u64 [a1 + 1944] = 0\n  4030: u64 [a1 + 0x788] = a0\n  4034: a0 = s1 + 0x1800\n  4038: u64 [a1 + 1936] = 0\n  4042: ra = 110, jump @768\n      : @137 [@dyn 55] (gas: 8)\n  4047: a0 = 0x301d0\n  4052: u64 [s1 + 0xd8] = a0\n  4056: i32 a0 = a0 + 0\n  4058: u64 [s1 + 0xa8] = a0\n  4062: ra = 0x70\n  4065: ecalli 5 // 'caller'\n  4067: t0 = 0x72\n  4070: jump @894\n      : @138 [@dyn 56] (gas: 1)\n  4073: t0 = 114, jump @894\n      : @139 [@dyn 57] (gas: 9)\n  4078: a2 = s1 + 0x1078\n  4082: u64 [a2 + 1920] = 0\n  4086: a4 = a2 + 0x700\n  4090: u64 [a4 + 0x78] = a1\n  4093: u64 [a4 + 0x70] = a0\n  4096: a1 = s1 + 0x17e0\n  4100: u64 [a4 + 0x68] = a3\n  4103: a0 = 0\n  4105: ra = 116, jump @9\n      : @140 [@dyn 58] (gas: 9)\n  4110: a1 = s1 + 0x1078\n  4114: u64 [a1 + 1888] = 0\n  4118: u64 [a1 + 1880] = 0\n  4122: u64 [a1 + 1864] = 0x2\n  4127: a2 = a1\n  4129: a0 = 0x20\n  4132: a1 = s1 + 0x17c0\n  4136: u64 [a2 + 1872] = 0\n  4140: ra = 118, jump @9\n      : @141 [@dyn 59] (gas: 7)\n  4145: a0 = sp + 0xffffffffffffffe0\n  4148: a0 = a0 & 0xffffffffffffffe0\n  4151: u64 [s1 + 0xd0] = a0\n  4155: sp = a0\n  4157: a2 = 0x201c8\n  4162: a0 = i32 [0x201c8]\n  4167: jump @143 if a0 >u 63\n      : @142 (gas: 2)\n  4171: u32 [0x201c8] = 0x40\n  4177: fallthrough\n      : @143 (gas: 15)\n  4178: u64 [s1 + 0x98] = a2\n  4182: a0 = sp + 0xffffffffffffffe0\n  4185: a2 = a0 & 0xffffffffffffffe0\n  4188: u64 [s1 + 0xa0] = a2\n  4192: sp = a2\n  4194: a0 = 0x201d0\n  4199: i32 a0 = a0 + 0\n  4201: i32 a2 = a2 + 0\n  4203: a1 = 0x40\n  4206: u64 [s1 + 0x80] = a0\n  4210: ra = 0x78\n  4213: ecalli 9 // 'hash_keccak_256'\n  4215: a3 = u64 [s1 + 0xa0]\n  4219: t0 = 0x7a\n  4222: jump @916\n      : @144 [@dyn 60] (gas: 2)\n  4225: a3 = u64 [s1 + 0xa0]\n  4229: t0 = 122, jump @916\n      : @145 [@dyn 61] (gas: 7)\n  4234: a1 = u64 [s1 + 0xd0]\n  4238: u64 [a1 + 0x18] = a3\n  4241: u64 [a1 + 0x10] = a2\n  4244: u64 [a1 + 0x8] = a4\n  4247: u64 [a1] = a0\n  4249: a0 = s1 + 0x17a0\n  4253: ra = 124, jump @11\n      : @146 [@dyn 62] (gas: 39)\n  4258: a1 = s1 + 0x1078\n  4262: t2 = u64 [a1 + 0x740]\n  4266: a2 = a1 + 0x700\n  4270: a0 = u64 [a2 + 0x38]\n  4273: a4 = u64 [a2 + 0x28]\n  4276: a5 = u64 [a2 + 0x30]\n  4279: a1 = sp + 0xffffffffffffffe0\n  4282: a1 = a1 & 0xffffffffffffffe0\n  4285: sp = a1\n  4287: a3 = u64 [s1 + 0xb8]\n  4291: a3 = a3 + a5\n  4294: t0 = u64 [s1 + 0xb0]\n  4298: t0 = t0 + a4\n  4301: a4 = t0 <u a4\n  4304: a3 = a3 + a4\n  4307: t1 = a3 ^ a5\n  4310: a2 = a3 <u a5\n  4313: a2 = a4 if t1 == 0\n  4316: a4 = u64 [s1 + 0xc0]\n  4320: a4 = a4 + a0\n  4323: a5 = a4 + a2\n  4326: t1 = a5 <u a4\n  4329: ra = u64 [s1 + 0xc8]\n  4333: ra = ra + t2\n  4336: a4 = a4 <u a0\n  4339: a4 = a4 + ra\n  4342: ra = a4 + t1\n  4345: t1 = a5 <u a0\n  4348: a4 = t2 ^ ra\n  4351: t2 = ra <u t2\n  4354: t2 = t1 if a4 == 0\n  4357: a0 = a0 ^ a5\n  4360: a0 = a0 | a4\n  4363: t2 = a2 if a0 == 0\n  4366: u64 [a1 + 0x10] = a5\n  4369: u64 [a1 + 0x8] = a3\n  4372: u64 [a1] = t0\n  4374: u64 [a1 + 0x18] = ra\n  4377: jump @148 if t2 == 0\n      : @147 (gas: 1)\n  4380: jump @658\n      : @148 (gas: 2)\n  4383: a0 = u64 [s1 + 0xd0]\n  4387: ra = 126, jump @12\n      : @149 [@dyn 63] (gas: 3)\n  4392: a0 = s1 + 0x1780\n  4396: a1 = 0x40\n  4399: ra = 128, jump @7\n      : @150 [@dyn 64] (gas: 14)\n  4405: a5 = s1 + 0x1078\n  4409: t0 = u64 [a5 + 0x720]\n  4413: a1 = a5 + 0x700\n  4417: a4 = u64 [a1 + 0x18]\n  4420: a3 = u64 [a1 + 0x10]\n  4423: a0 = u64 [a1 + 0x8]\n  4426: a2 = a3 | t0\n  4429: a1 = a0 | a4\n  4432: a1 = a1 | a2\n  4435: a1 = a1 >> 0x20\n  4438: a2 = a2 | a4\n  4441: a2 = a2 << 0x20\n  4444: a1 = a1 | a2\n  4447: jump @152 if a1 == 0\n      : @151 (gas: 1)\n  4450: jump @381\n      : @152 (gas: 11)\n  4453: u64 [a5 + 1784] = 0\n  4457: u64 [a5 + 1776] = 0\n  4461: u64 [a5 + 1768] = 0\n  4465: u64 [s1 + 0xa0] = a3\n  4469: a3 = 0x23b872dd00000000\n  4479: a1 = s1 + 0x1760\n  4483: u64 [a5 + 0x700] = a3\n  4487: u64 [s1 + 0xd0] = a0\n  4491: u64 [s1 + 0x98] = a4\n  4495: u64 [s1 + 0x90] = t0\n  4499: ra = 130, jump @9\n      : @153 [@dyn 65] (gas: 6)\n  4505: a0 = u64 [s1 + 0xa8]\n  4509: ra = 0x84\n  4513: ecalli 0 // 'address'\n  4514: a2 = u64 [s1 + 0xd8]\n  4518: t0 = 0x86\n  4522: jump @905\n      : @154 [@dyn 66] (gas: 2)\n  4525: a2 = u64 [s1 + 0xd8]\n  4529: t0 = 134, jump @905\n      : @155 [@dyn 67] (gas: 14)\n  4535: u64 [s1 + 0x88] = a1\n  4539: a0 = a0 >> 0x20\n  4542: a1 = reverse a2\n  4544: a2 = a1 << 0x20\n  4547: a0 = a0 | a2\n  4550: u64 [s1 + 0x78] = a0\n  4553: a1 = a1 >> 0x20\n  4556: u64 [s1 + 0x70] = a1\n  4559: a0 = u64 [s1 + 0xa8]\n  4563: ra = 0x88\n  4567: ecalli 5 // 'caller'\n  4569: a2 = u64 [s1 + 0xd8]\n  4573: t0 = 0x8a\n  4577: jump @896\n      : @156 [@dyn 68] (gas: 2)\n  4580: a2 = u64 [s1 + 0xd8]\n  4584: t0 = 138, jump @896\n      : @157 [@dyn 69] (gas: 50)\n  4590: t0 = a1 | a0\n  4593: a3 = a3 >> 0x20\n  4596: a2 = reverse a2\n  4598: a1 = a2 << 0x20\n  4601: t1 = a1 | a3\n  4604: t2 = a2 >> 0x20\n  4607: a0 = u64 [s1 + 0xd0]\n  4611: a3 = a0 + 0x4\n  4614: a5 = a3 <u a0\n  4617: a0 = u64 [s1 + 0xa0]\n  4621: a1 = a0 + a5\n  4624: a0 = a1 <u a0\n  4627: a0 = a5 if a5 == 0\n  4630: a4 = u64 [s1 + 0x98]\n  4634: a0 = a0 + a4\n  4637: a5 = a0 <u a4\n  4640: a4 = u64 [s1 + 0x90]\n  4644: a5 = a5 + a4\n  4647: a4 = s1 + 0x1078\n  4651: a2 = u64 [s1 + 0x70]\n  4654: u64 [a4 + 0x678] = a2\n  4658: a2 = u64 [s1 + 0x78]\n  4661: u64 [a4 + 0x670] = a2\n  4665: a2 = u64 [s1 + 0x88]\n  4669: u64 [a4 + 0x668] = a2\n  4673: a2 = a4 + 0x600\n  4677: u64 [a2 + 0xc0] = a5\n  4681: u64 [a2 + 0xb8] = a0\n  4685: a0 = u64 [s1 + 0xc8]\n  4689: u64 [a2 + 0x60] = a0\n  4692: a0 = u64 [s1 + 0xc0]\n  4696: u64 [a2 + 0x58] = a0\n  4699: a0 = u64 [s1 + 0xb8]\n  4703: u64 [a2 + 0x50] = a0\n  4706: a0 = u64 [s1 + 0xb0]\n  4710: u64 [a2 + 0x48] = a0\n  4713: u64 [a4 + 1664] = 0\n  4717: u64 [a2 + 0xb0] = a1\n  4721: u64 [a2 + 0xa8] = a3\n  4725: u64 [a4 + 0x698] = t2\n  4729: u64 [a4 + 0x690] = t1\n  4733: u64 [a4 + 0x688] = t0\n  4737: a5 = a4\n  4739: a0 = s1 + 0x1740\n  4743: a1 = s1 + 0x1720\n  4747: a2 = s1 + 0x1700\n  4751: a3 = s1 + 0x16e0\n  4755: a4 = s1 + 0x16c0\n  4759: u64 [a5 + 1696] = 0\n  4763: ra = 140, jump @824\n      : @158 [@dyn 70] (gas: 17)\n  4769: a1 = s1 + 0x1078\n  4773: a0 = u64 [a1 + 0x6d0]\n  4777: t0 = u64 [a1 + 0x6e0]\n  4781: t1 = u64 [a1 + 0x6c8]\n  4785: a3 = u64 [a1 + 0x6d8]\n  4789: a1 = u64 [s1 + 0xa0]\n  4793: a4 = a0 ^ a1\n  4796: a5 = a0 <u a1\n  4799: ra = u64 [s1 + 0xd0]\n  4803: t2 = t1 <u ra\n  4806: a5 = t2 if a4 == 0\n  4809: a2 = u64 [s1 + 0x98]\n  4813: a4 = a3 - a2\n  4816: a3 = a3 <u a2\n  4819: a2 = u64 [s1 + 0x90]\n  4823: a2 = t0 - a2\n  4826: t0 = 142, jump @912\n      : @159 [@dyn 71] (gas: 2)\n  4832: u64 [s1 + 0x88] = a0\n  4836: ra = 144, jump @0\n      : @160 [@dyn 72] (gas: 10)\n  4842: a1 = u64 [0x301f0]\n  4847: u64 [s1 + 0x60] = a1\n  4850: a1 = u64 [0x30200]\n  4855: u64 [s1 + 0x58] = a1\n  4858: a0 = u64 [0x301f8]\n  4863: u64 [s1 + 0x50] = a0\n  4866: ra = 0x92\n  4870: ecalli 10 // 'ref_time_left'\n  4872: t0 = 0x94\n  4876: jump @900\n      : @161 [@dyn 73] (gas: 1)\n  4879: t0 = 148, jump @900\n      : @162 [@dyn 74] (gas: 19)\n  4885: i32 a0 = a0 + 0x78\n  4888: a2 = s1 + a0\n  4891: u64 [a2 + 352] = 0\n  4895: u64 [a2 + 344] = 0\n  4899: u64 [a2 + 336] = 0\n  4903: a0 = u64 [s1 + 0x88]\n  4907: t0 = a0\n  4909: a5 = u64 [s1 + 0x70]\n  4912: a0 = a0 | a5\n  4915: a1 = u64 [s1 + 0x78]\n  4918: a4 = u64 [s1 + 0x68]\n  4921: a1 = a1 | a4\n  4924: a0 = a0 | a1\n  4927: a0 = a0 >> 0x20\n  4930: a1 = a1 | a5\n  4933: a1 = a1 << 0x20\n  4936: a0 = a0 | a1\n  4939: u64 [a2 + 328] = 0\n  4943: jump @164 if a0 == 0\n      : @163 (gas: 1)\n  4946: jump @381\n      : @164 (gas: 3)\n  4949: a0 = u64 [s1 + 0xd0]\n  4953: a1 = t0\n  4955: ra = 150, jump @18\n      : @165 [@dyn 75] (gas: 4)\n  4961: u64 [s1 + 0x78] = a0\n  4964: a1 = 0x20\n  4967: a0 = u64 [s1 + 0xd0]\n  4971: ra = 152, jump @18\n      : @166 [@dyn 76] (gas: 34)\n  4977: a2 = s1 + 0x2078\n  4981: a3 = a2 + 0x100\n  4985: u32 [a3 + 104] = 0x20\n  4989: u64 [a3 + 160] = 0xffffffffffffffff\n  4994: u64 [a3 + 152] = 0xffffffffffffffff\n  4999: u64 [a3 + 144] = 0xffffffffffffffff\n  5004: u64 [a3 + 136] = 0xffffffffffffffff\n  5009: a1 = u64 [s1 + 0xd8]\n  5013: a1 = a1 << 0x20\n  5016: a1 = a1 >> 0x20\n  5019: a2 = 0x800000000\n  5029: t0 = a1 | a2\n  5032: a1 = s1 + 0x21c0\n  5036: a1 = a1 << 0x20\n  5039: a1 = a1 >> 0x20\n  5042: a2 = s1 + 0x2200\n  5046: a2 = a2 << 0x20\n  5049: a3 = a2 | a1\n  5052: a1 = u64 [s1 + 0x78]\n  5055: a1 = a1 << 0x20\n  5058: a1 = a1 >> 0x20\n  5061: a4 = u64 [s1 + 0x88]\n  5065: a4 = a4 << 0x20\n  5068: a4 = a4 | a1\n  5071: a0 = a0 << 0x20\n  5074: a0 = a0 >> 0x20\n  5077: a1 = s1 + 0x21e0\n  5081: a1 = a1 << 0x20\n  5084: a5 = a1 | a0\n  5087: a1 = 0xffffffffffffffff\n  5090: a2 = 0xffffffffffffffff\n  5093: a0 = t0\n  5095: ecalli 1 // 'call'\n  5097: fallthrough\n      : @167 (gas: 1)\n  5098: jump @169 if a0 == 0\n      : @168 (gas: 1)\n  5101: jump @513\n      : @169 (gas: 2)\n  5104: ecalli 12 // 'return_data_size'\n  5106: fallthrough\n      : @170 (gas: 2)\n  5107: a1 = 0x20\n  5110: jump @172 if a0 >=u a1\n      : @171 (gas: 3)\n  5113: ecalli 12 // 'return_data_size'\n  5115: a1 = a0\n  5117: fallthrough\n      : @172 (gas: 18)\n  5118: a2 = s1 + 0x1078\n  5122: a3 = u64 [s1 + 0xd0]\n  5126: a4 = u64 [s1 + 0x98]\n  5130: a5 = u64 [s1 + 0x90]\n  5134: u64 [s1 + 0x78] = a1\n  5137: u64 [s1 + 136] = 0\n  5141: u64 [a2 + 0x5e8] = a1\n  5145: u64 [a2 + 0x608] = a3\n  5149: u64 [a2 + 1520] = 0\n  5153: a3 = u64 [s1 + 0xa0]\n  5157: u64 [a2 + 0x610] = a3\n  5161: u64 [a2 + 1528] = 0\n  5165: u64 [a2 + 0x618] = a4\n  5169: u64 [a2 + 1536] = 0\n  5173: a0 = s1 + 0x1680\n  5177: a1 = s1 + 0x1660\n  5181: u64 [a2 + 0x620] = a5\n  5185: ra = 154, jump @799\n      : @173 [@dyn 77] (gas: 40)\n  5191: t1 = u64 [s1 + 0xd0]\n  5195: a1 = u64 [s1 + 0x78]\n  5198: a0 = a1 + t1\n  5201: a1 = a0 <u a1\n  5204: t0 = u64 [s1 + 0xa0]\n  5208: a5 = u64 [s1 + 0x88]\n  5212: a2 = a5 + t0\n  5215: a2 = a2 + a1\n  5218: a3 = a2 ^ a5\n  5221: a4 = a2 <u a5\n  5224: a4 = a1 if a3 == 0\n  5227: ra = u64 [s1 + 0x98]\n  5231: a1 = a5 + ra\n  5234: a4 = a4 + a1\n  5237: t2 = a4 <u a1\n  5240: a1 = a1 <u a5\n  5243: a3 = u64 [s1 + 0x90]\n  5247: a5 = a5 + a3\n  5250: a1 = a1 + a5\n  5253: t2 = t2 + a1\n  5256: a1 = s1 + 0x1078\n  5260: u64 [a1 + 0x598] = a4\n  5264: a1 = s1 + 0x1078\n  5268: u64 [a1 + 0x590] = a2\n  5272: a1 = s1 + 0x1078\n  5276: u64 [a1 + 0x588] = a0\n  5280: a0 = s1 + 0x1078\n  5284: u64 [a0 + 0x5c0] = a3\n  5288: a0 = s1 + 0x1078\n  5292: u64 [a0 + 0x5b8] = ra\n  5296: a0 = s1 + 0x1078\n  5300: u64 [a0 + 0x5b0] = t0\n  5304: a0 = s1 + 0x1078\n  5308: u64 [a0 + 0x5a8] = t1\n  5312: a0 = s1 + 0x1640\n  5316: a1 = s1 + 0x1620\n  5320: a2 = s1 + 0x1600\n  5324: a4 = s1 + 0x1078\n  5328: u64 [a4 + 0x5a0] = t2\n  5332: ra = 156, jump @809\n      : @174 [@dyn 78] (gas: 3)\n  5338: a0 = s1 + 0x15e0\n  5342: a1 = 0x40\n  5345: ra = 158, jump @7\n      : @175 [@dyn 79] (gas: 7)\n  5351: a3 = s1 + 0x1078\n  5355: a5 = a3 + 0x500\n  5359: a0 = u64 [a5 + 0x80]\n  5363: a1 = u64 [a5 + 0x78]\n  5366: a2 = u64 [a5 + 0x70]\n  5369: a4 = u64 [a5 + 0x68]\n  5372: t0 = 160, jump @908\n      : @176 [@dyn 80] (gas: 1)\n  5378: jump @178 if a0 == 0\n      : @177 (gas: 1)\n  5381: jump @381\n      : @178 (gas: 13)\n  5384: a0 = u64 [s1 + 0xb0]\n  5388: a2 = a3 + 0x500\n  5392: u64 [a2 + 0x48] = a0\n  5395: a0 = u64 [s1 + 0xb8]\n  5399: u64 [a2 + 0x50] = a0\n  5402: a0 = u64 [s1 + 0xc0]\n  5406: u64 [a2 + 0x58] = a0\n  5409: a1 = s1 + 0x15c0\n  5413: a0 = u64 [s1 + 0xc8]\n  5417: u64 [a2 + 0x60] = a0\n  5420: a0 = a4\n  5422: u64 [s1 + 0xd0] = a4\n  5426: ra = 162, jump @9\n      : @179 [@dyn 81] (gas: 6)\n  5432: a0 = u64 [s1 + 0xa8]\n  5436: ra = 0xa4\n  5440: ecalli 5 // 'caller'\n  5442: a2 = u64 [s1 + 0xd8]\n  5446: t0 = 0xa6\n  5450: jump @896\n      : @180 [@dyn 82] (gas: 2)\n  5453: a2 = u64 [s1 + 0xd8]\n  5457: t0 = 166, jump @896\n      : @181 [@dyn 83] (gas: 25)\n  5463: t0 = a1 | a0\n  5466: a3 = a3 >> 0x20\n  5469: a2 = reverse a2\n  5471: a1 = a2 << 0x20\n  5474: a1 = a1 | a3\n  5477: a2 = a2 >> 0x20\n  5480: a3 = u64 [0x20060]\n  5485: a0 = s1 + 0x1078\n  5489: u64 [a0 + 0x540] = a3\n  5493: a3 = u64 [0x20068]\n  5498: a4 = u64 [0x20070]\n  5503: a5 = u64 [0x20078]\n  5508: u64 [a0 + 0x538] = a3\n  5512: a3 = a0 + 0x500\n  5516: u64 [a3 + 0x30] = a4\n  5519: u64 [a0 + 1312] = 0\n  5523: u64 [a3 + 0x28] = a5\n  5526: u64 [a3 + 0x18] = a2\n  5529: u64 [a3 + 0x10] = a1\n  5532: a1 = 0x20\n  5535: a2 = s1 + 0x15a0\n  5539: a3 = s1 + 0x1580\n  5543: u64 [a0 + 0x508] = t0\n  5547: a0 = u64 [s1 + 0xd0]\n  5551: ra = 168, jump @13\n      : @182 [@dyn 84] (gas: 5)\n  5557: a0 = 0\n  5559: a1 = u64 [s1 + 0x80]\n  5563: a2 = 0\n  5565: ecalli 13 // 'seal_return'\n  5567: jump @714\n      : @183 (gas: 10)\n  5570: u64 [a2 + 1888] = 0\n  5574: u64 [a2 + 1880] = 0\n  5578: u64 [a2 + 1872] = 0\n  5582: u64 [a2 + 1864] = 0\n  5586: a0 = s1 + 0x2000\n  5590: i32 a0 = a0 + 0xffffffffffffffc0\n  5593: ra = 0xaa\n  5597: ecalli 16 // 'value_transferred'\n  5599: t0 = 0xac\n  5603: jump @917\n      : @184 [@dyn 85] (gas: 1)\n  5606: t0 = 172, jump @917\n      : @185 [@dyn 86] (gas: 8)\n  5612: a0 = u64 [a4 + 0x58]\n  5615: a1 = u64 [a4 + 0x60]\n  5618: a2 = u64 [a4 + 0x50]\n  5621: a3 = u64 [a4 + 0x48]\n  5624: a1 = a1 | a2\n  5627: a0 = a0 | a3\n  5630: a0 = a0 | a1\n  5633: jump @187 if a0 == 0\n      : @186 (gas: 1)\n  5636: jump @664\n      : @187 (gas: 3)\n  5639: a0 = u64 [s1 + 0xd8]\n  5643: a0 = i32 [a0]\n  5645: jump @189 if a0 >u 3\n      : @188 (gas: 1)\n  5649: jump @665\n      : @189 (gas: 9)\n  5652: a0 = s1 + 0x1878\n  5656: u64 [a0 + 1920] = 0\n  5660: u64 [a0 + 1912] = 0\n  5664: u64 [a0 + 1904] = 0\n  5668: u64 [a0 + 1896] = 0\n  5672: a0 = s1 + 0x7ff\n  5676: a0 = a0 + 0x781\n  5680: a1 = s1 + 0x1fe0\n  5684: ra = 174, jump @11\n      : @190 [@dyn 87] (gas: 13)\n  5690: a0 = s1 + 0x7ff\n  5694: a0 = a0 + 0x61\n  5697: a2 = a0 + 0x700\n  5701: a1 = u64 [a2 + 0x30]\n  5704: u64 [s1 + 0xc8] = a1\n  5708: a1 = u64 [a2 + 0x28]\n  5711: u64 [s1 + 0xd8] = a1\n  5715: a0 = u64 [a2 + 0x20]\n  5718: u64 [s1 + 0xd0] = a0\n  5722: a0 = s1 + 0x7ff\n  5726: a0 = a0 + 0x761\n  5730: a1 = 0x40\n  5733: ra = 176, jump @7\n      : @191 [@dyn 88] (gas: 15)\n  5739: a3 = s1 + 0x7ff\n  5743: a3 = a3 + 0x61\n  5746: a5 = a3 + 0x700\n  5750: a4 = u64 [a5 + 0x18]\n  5753: a1 = u64 [a5 + 0x10]\n  5756: a2 = u64 [a5 + 0x8]\n  5759: a0 = u64 [a5]\n  5761: a4 = a4 | a2\n  5764: a2 = a0 | a1\n  5767: a2 = a2 | a4\n  5770: a2 = a2 >> 0x20\n  5773: a1 = a1 | a4\n  5776: a1 = a1 << 0x20\n  5779: a1 = a1 | a2\n  5782: jump @193 if a1 == 0\n      : @192 (gas: 1)\n  5785: jump @381\n      : @193 (gas: 15)\n  5788: a1 = u64 [s1 + 0xc8]\n  5792: a1 = a1 << 0x20\n  5795: a2 = a1 >> 0x20\n  5798: u64 [a3 + 1784] = 0\n  5802: a1 = u64 [s1 + 0xd0]\n  5806: a4 = a3 + 0x600\n  5810: u64 [a4 + 0xe0] = a1\n  5814: a1 = u64 [s1 + 0xd8]\n  5818: u64 [a4 + 0xe8] = a1\n  5822: a1 = s1 + 0x7ff\n  5826: a1 = a1 + 0x741\n  5830: u64 [a4 + 0xf0] = a2\n  5834: u64 [s1 + 0xd8] = a0\n  5838: ra = 0xe0\n  5842: jump @9\n      : @194 (gas: 9)\n  5845: u64 [a3 + 544] = 0\n  5849: u64 [a3 + 536] = 0\n  5853: u64 [a3 + 528] = 0\n  5857: u64 [a3 + 520] = 0\n  5861: a0 = s1 + 0x2000\n  5865: i32 a0 = a0 + 0x280\n  5869: ra = 0xb2\n  5873: ecalli 16 // 'value_transferred'\n  5875: fallthrough\n      : @195 [@dyn 89] (gas: 3)\n  5876: a3 = s1 + 0x2078\n  5880: a4 = a3 + 0x200\n  5884: t0 = 180, jump @911\n      : @196 [@dyn 90] (gas: 1)\n  5890: jump @198 if a0 == 0\n      : @197 (gas: 1)\n  5893: jump @666\n      : @198 (gas: 3)\n  5896: a0 = u64 [s1 + 0xd8]\n  5900: a0 = i32 [a0]\n  5902: jump @200 if a0 >u 35\n      : @199 (gas: 1)\n  5906: jump @667\n      : @200 (gas: 6)\n  5909: a0 = s1 + 0x2000\n  5913: i32 a0 = a0 + 0x2a0\n  5917: a1 = 0x4\n  5920: ra = 0xb6\n  5924: ecalli 3 // 'call_data_load'\n  5926: fallthrough\n      : @201 [@dyn 91] (gas: 4)\n  5927: a4 = s1 + 0x2078\n  5931: a1 = u64 [a4 + 0x238]\n  5935: a0 = u64 [a4 + 0x240]\n  5939: t0 = 184, jump @903\n      : @202 [@dyn 92] (gas: 1)\n  5945: jump @204 if a3 != 0\n      : @203 (gas: 1)\n  5948: jump @668\n      : @204 (gas: 11)\n  5951: a2 = u64 [a4 + 0x230]\n  5955: a3 = u64 [a4 + 0x228]\n  5959: a4 = s1 + 0x1878\n  5963: a5 = a4 + 0x100\n  5967: u64 [a5 + 0xe8] = a3\n  5971: u64 [a5 + 0xf0] = a2\n  5975: u64 [a5 + 0xf8] = a1\n  5979: a1 = s1 + 0x1a60\n  5983: u64 [a4 + 0x200] = a0\n  5987: a0 = 0\n  5989: ra = 186, jump @9\n      : @205 [@dyn 93] (gas: 9)\n  5995: a1 = s1 + 0x1878\n  5999: u64 [a1 + 480] = 0\n  6003: u64 [a1 + 472] = 0\n  6007: u64 [a1 + 456] = 0x3\n  6012: a2 = a1\n  6014: a0 = 0x20\n  6017: a1 = s1 + 0x1a40\n  6021: u64 [a2 + 464] = 0\n  6025: ra = 188, jump @9\n      : @206 [@dyn 94] (gas: 6)\n  6031: a0 = sp + 0xffffffffffffffe0\n  6034: a0 = a0 & 0xffffffffffffffe0\n  6037: u64 [s1 + 0xd0] = a0\n  6041: sp = a0\n  6043: a1 = i32 [0x201c8]\n  6048: jump @208 if a1 >u 63\n      : @207 (gas: 2)\n  6052: u32 [0x201c8] = 0x40\n  6058: fallthrough\n      : @208 (gas: 13)\n  6059: a0 = sp + 0xffffffffffffffe0\n  6062: a2 = a0 & 0xffffffffffffffe0\n  6065: u64 [s1 + 0xd8] = a2\n  6069: sp = a2\n  6071: a0 = 0x201d0\n  6076: i32 a0 = a0 + 0\n  6078: i32 a2 = a2 + 0\n  6080: a1 = 0x40\n  6083: ra = 0xbe\n  6087: ecalli 9 // 'hash_keccak_256'\n  6089: a3 = u64 [s1 + 0xd8]\n  6093: t0 = 0xc0\n  6097: jump @915\n      : @209 [@dyn 95] (gas: 2)\n  6100: a3 = u64 [s1 + 0xd8]\n  6104: t0 = 192, jump @915\n      : @210 [@dyn 96] (gas: 12)\n  6110: u64 [s1 + 0xa8] = a1\n  6114: a2 = u64 [s1 + 0xd0]\n  6118: u64 [a2 + 0x18] = a1\n  6121: u64 [s1 + 0xb0] = a0\n  6125: u64 [a2 + 0x10] = a0\n  6128: u64 [s1 + 0xa0] = a4\n  6132: u64 [a2 + 0x8] = a4\n  6135: u64 [s1 + 0x98] = a5\n  6139: u64 [a2] = a5\n  6141: a0 = s1 + 0x1a20\n  6145: a1 = 0x40\n  6148: ra = 194, jump @7\n      : @211 [@dyn 97] (gas: 16)\n  6154: a1 = s1 + 0x1878\n  6158: a5 = a1 + 0x100\n  6162: a0 = u64 [a5 + 0xc0]\n  6166: u64 [s1 + 0xc0] = a0\n  6170: a2 = u64 [a5 + 0xb8]\n  6174: u64 [s1 + 0xb8] = a2\n  6178: a4 = u64 [a5 + 0xb0]\n  6182: u64 [s1 + 0xc8] = a4\n  6186: a3 = u64 [a5 + 0xa8]\n  6190: u64 [s1 + 0xd8] = a3\n  6194: u64 [a5 + 0xa0] = a0\n  6198: u64 [a5 + 0x98] = a2\n  6202: u64 [a5 + 0x90] = a4\n  6206: a0 = s1 + 0x1a00\n  6210: u64 [a5 + 0x88] = a3\n  6214: ra = 196, jump @790\n      : @212 [@dyn 98] (gas: 3)\n  6220: a0 = s1 + 0x19e0\n  6224: a1 = u64 [s1 + 0xd0]\n  6228: ra = 198, jump @11\n      : @213 [@dyn 99] (gas: 6)\n  6234: a0 = u64 [s1 + 0xc0]\n  6238: a1 = u64 [s1 + 0xc8]\n  6242: a0 = a0 | a1\n  6245: a2 = u64 [s1 + 0xb8]\n  6249: a1 = u64 [s1 + 0xd8]\n  6253: t0 = 200, jump @914\n      : @214 [@dyn 100] (gas: 1)\n  6259: jump @216 if a0 == 0\n      : @215 (gas: 1)\n  6262: jump @381\n      : @216 (gas: 17)\n  6265: a0 = s1 + 0x1878\n  6269: a5 = a0 + 0x100\n  6273: a4 = u64 [a5 + 0x80]\n  6277: a3 = u64 [a5 + 0x78]\n  6280: a2 = u64 [a5 + 0x70]\n  6283: a1 = u64 [a5 + 0x68]\n  6286: u64 [s1 + 0xd0] = a1\n  6290: u64 [a5 + 0x48] = a1\n  6293: u64 [s1 + 0x90] = a2\n  6297: u64 [a5 + 0x50] = a2\n  6300: u64 [s1 + 0x88] = a3\n  6304: u64 [a5 + 0x58] = a3\n  6307: a1 = s1 + 0x19c0\n  6311: u64 [s1 + 0x80] = a4\n  6315: u64 [a5 + 0x60] = a4\n  6318: a0 = u64 [s1 + 0xd8]\n  6322: ra = 202, jump @9\n      : @217 [@dyn 101] (gas: 21)\n  6328: a0 = u64 [s1 + 0x98]\n  6332: a0 = a0 + 0x1\n  6335: a1 = a0 <u 0x1\n  6338: a2 = u64 [s1 + 0xa0]\n  6342: a1 = a1 + a2\n  6345: a2 = a0 | a1\n  6348: a2 = a2 <u 0x1\n  6351: a3 = u64 [s1 + 0xb0]\n  6355: a2 = a2 + a3\n  6358: a3 = a2 <u a3\n  6361: a4 = u64 [s1 + 0xa8]\n  6365: a3 = a3 + a4\n  6368: a4 = s1 + 0x2078\n  6372: a5 = a4 + 0x200\n  6376: u64 [a5 + 0x50] = a1\n  6379: u64 [a5 + 0x48] = a0\n  6382: u64 [a5 + 0x58] = a2\n  6385: u64 [a5 + 0x60] = a3\n  6388: a0 = s1 + 0x19a0\n  6392: a1 = s1 + 0x22c0\n  6396: ra = 204, jump @11\n      : @218 [@dyn 102] (gas: 11)\n  6402: a0 = u64 [s1 + 0xc0]\n  6406: a1 = u64 [s1 + 0xb8]\n  6410: a2 = a1 | a0\n  6413: a3 = 0x100000000\n  6423: a0 = 0xffffffe0\n  6433: a1 = u64 [s1 + 0xd8]\n  6437: a0 = a1 <u a0\n  6440: a1 = u64 [s1 + 0xc8]\n  6444: a0 = 0 if a1 != 0\n  6446: a0 = 0 if a2 != 0\n  6448: jump @220 if a0 != 0\n      : @219 (gas: 1)\n  6451: jump @381\n      : @220 (gas: 22)\n  6454: a0 = s1 + 0x1878\n  6458: u64 [s1 + 0xc0] = a2\n  6462: a2 = a0\n  6464: t0 = u64 [a0 + 0x140]\n  6468: a5 = a0 + 0x100\n  6472: a4 = u64 [a5 + 0x38]\n  6475: u64 [s1 + 0xb8] = a3\n  6479: a3 = u64 [a5 + 0x30]\n  6482: a1 = u64 [a5 + 0x28]\n  6485: a0 = u64 [s1 + 0xd8]\n  6489: i32 a0 = a0 + 0x20\n  6492: u64 [s1 + 0x78] = a1\n  6495: a5 = a2 + 0x100\n  6499: u64 [a5 + 0x8] = a1\n  6502: u64 [s1 + 0x70] = a3\n  6505: u64 [a5 + 0x10] = a3\n  6508: u64 [s1 + 0x68] = a4\n  6511: u64 [a5 + 0x18] = a4\n  6514: a1 = s1 + 0x1980\n  6518: u64 [s1 + 0x60] = t0\n  6521: u64 [a2 + 0x120] = t0\n  6525: ra = 206, jump @9\n      : @221 [@dyn 103] (gas: 5)\n  6531: a1 = u64 [s1 + 0x98]\n  6535: a0 = a1 + 0x2\n  6538: a1 = a0 <u a1\n  6541: a3 = u64 [s1 + 0xa0]\n  6545: t0 = 208, jump @920\n      : @222 [@dyn 104] (gas: 14)\n  6551: a1 = u64 [s1 + 0xb0]\n  6555: a3 = a3 + a1\n  6558: a1 = a3 <u a1\n  6561: a4 = u64 [s1 + 0xa8]\n  6565: a1 = a1 + a4\n  6568: a4 = s1 + 0x2078\n  6572: a5 = a4 + 0x200\n  6576: u64 [a5 + 0x70] = a2\n  6579: u64 [a5 + 0x68] = a0\n  6582: u64 [a5 + 0x78] = a3\n  6585: u64 [a5 + 0x80] = a1\n  6589: a0 = s1 + 0x1960\n  6593: a1 = s1 + 0x22e0\n  6597: ra = 210, jump @11\n      : @223 [@dyn 105] (gas: 9)\n  6603: a0 = u64 [s1 + 0xb8]\n  6607: a0 = a0 + 0xffffffffffffffc0\n  6610: a1 = u64 [s1 + 0xd8]\n  6614: a0 = a1 <u a0\n  6617: a1 = u64 [s1 + 0xc8]\n  6621: a0 = 0 if a1 != 0\n  6623: a1 = u64 [s1 + 0xc0]\n  6627: a0 = 0 if a1 != 0\n  6629: jump @225 if a0 != 0\n      : @224 (gas: 1)\n  6632: jump @381\n      : @225 (gas: 13)\n  6635: a3 = s1 + 0x1878\n  6639: a0 = u64 [a3 + 0xe8]\n  6643: a0 = a0 & 0xff\n  6647: a2 = a0 >u 0\n  6649: u64 [s1 + 0xc8] = a2\n  6653: a0 = u64 [s1 + 0xd8]\n  6657: i32 a0 = a0 + 0x40\n  6660: u64 [a3 + 224] = 0\n  6664: u64 [a3 + 216] = 0\n  6668: u64 [a3 + 208] = 0\n  6672: a1 = s1 + 0x1940\n  6676: u64 [a3 + 0xc8] = a2\n  6680: ra = 212, jump @9\n      : @226 [@dyn 106] (gas: 3)\n  6686: a0 = s1 + 0x1920\n  6690: a1 = 0x40\n  6693: ra = 214, jump @7\n      : @227 [@dyn 107] (gas: 41)\n  6699: a1 = s1 + 0x1878\n  6703: a3 = u64 [a1 + 0xc0]\n  6707: u64 [s1 + 0xd8] = a3\n  6711: a2 = u64 [a1 + 0xb8]\n  6715: u64 [s1 + 0xc0] = a2\n  6719: a4 = u64 [a1 + 0xb0]\n  6723: u64 [s1 + 0xb8] = a4\n  6727: a5 = u64 [a1 + 0xa8]\n  6731: u64 [s1 + 0xb0] = a5\n  6735: a0 = u64 [s1 + 0xc8]\n  6739: u64 [a1 + 0x8] = a0\n  6742: a0 = u64 [s1 + 0x60]\n  6745: u64 [a1 + 0x40] = a0\n  6748: a0 = u64 [s1 + 0x68]\n  6751: u64 [a1 + 0x38] = a0\n  6754: a0 = u64 [s1 + 0x70]\n  6757: u64 [a1 + 0x30] = a0\n  6760: u64 [a1 + 32] = 0\n  6763: u64 [a1 + 24] = 0\n  6766: u64 [a1 + 16] = 0\n  6769: a0 = u64 [s1 + 0x78]\n  6772: u64 [a1 + 0x28] = a0\n  6775: a0 = u64 [s1 + 0x80]\n  6779: u64 [a1 + 0x60] = a0\n  6782: a0 = u64 [s1 + 0x88]\n  6786: u64 [a1 + 0x58] = a0\n  6789: a0 = u64 [s1 + 0x90]\n  6793: u64 [a1 + 0x50] = a0\n  6796: a0 = u64 [s1 + 0xd0]\n  6800: u64 [a1 + 0x48] = a0\n  6803: u64 [a1 + 0x80] = a3\n  6807: u64 [a1 + 0x78] = a2\n  6810: u64 [a1 + 0x70] = a4\n  6813: t0 = a1\n  6815: a0 = s1 + 0x1900\n  6819: a1 = s1 + 0x18e0\n  6823: a2 = s1 + 0x18c0\n  6827: a3 = s1 + 0x18a0\n  6831: a4 = s1 + 0x1880\n  6835: u64 [t0 + 0x68] = a5\n  6838: ra = 216, jump @760\n      : @228 [@dyn 108] (gas: 12)\n  6844: a4 = u64 [s1 + 0xb8]\n  6848: a2 = u64 [s1 + 0xb0]\n  6852: a0 = u64 [s1 + 0xd8]\n  6856: a0 = a0 | a4\n  6859: a3 = u64 [s1 + 0xc0]\n  6863: a1 = a2 | a3\n  6866: a1 = a1 | a0\n  6869: a1 = a1 >> 0x20\n  6872: a0 = a0 | a3\n  6875: a0 = a0 << 0x20\n  6878: a0 = a0 | a1\n  6881: jump @230 if a0 == 0\n      : @229 (gas: 1)\n  6884: jump @381\n      : @230 (gas: 8)\n  6887: t0 = a3\n  6889: a1 = s1 + 0x1878\n  6893: a0 = u64 [a1 + 0x90]\n  6897: a3 = u64 [a1 + 0xa0]\n  6901: u64 [s1 + 0xd0] = a3\n  6905: t1 = u64 [a1 + 0x88]\n  6909: a3 = u64 [a1 + 0x98]\n  6913: jump @294\n      : @231 (gas: 8)\n  6916: u64 [a3 + 480] = 0\n  6920: u64 [a3 + 472] = 0\n  6924: u64 [a3 + 464] = 0\n  6928: u64 [a3 + 456] = 0\n  6932: a0 = s1 + 0x2000\n  6936: i32 a0 = a0 + 0x240\n  6940: ecalli 16 // 'value_transferred'\n  6942: fallthrough\n      : @232 (gas: 11)\n  6943: a3 = s1 + 0x2078\n  6947: a5 = a3 + 0x100\n  6951: a0 = u64 [a5 + 0xd8]\n  6955: a1 = u64 [a5 + 0xe0]\n  6959: a2 = u64 [a5 + 0xd0]\n  6963: a4 = a3\n  6965: a3 = u64 [a5 + 0xc8]\n  6969: a1 = a1 | a2\n  6972: a0 = a0 | a3\n  6975: a0 = a0 | a1\n  6978: jump @234 if a0 == 0\n      : @233 (gas: 1)\n  6981: jump @669\n      : @234 (gas: 3)\n  6984: a0 = u64 [s1 + 0xd8]\n  6988: a0 = i32 [a0]\n  6990: jump @236 if a0 >u 3\n      : @235 (gas: 1)\n  6994: jump @670\n      : @236 (gas: 7)\n  6997: u64 [a4 + 512] = 0\n  7001: u64 [a4 + 504] = 0\n  7005: u64 [a4 + 496] = 0\n  7009: u64 [a4 + 488] = 0x1\n  7014: a0 = s1 + 0x1860\n  7018: a1 = s1 + 0x2260\n  7022: ra = 218, jump @11\n      : @237 [@dyn 109] (gas: 13)\n  7028: a0 = s1 + 0x1878\n  7032: a1 = u64 [a0]\n  7034: u64 [s1 + 0xd8] = a1\n  7038: a2 = a0 + 0xffffffffffffff00\n  7042: a1 = u64 [a2 + 0xf8]\n  7046: u64 [s1 + 0xd0] = a1\n  7050: a1 = u64 [a2 + 0xf0]\n  7054: u64 [s1 + 0xc8] = a1\n  7058: a0 = u64 [a2 + 0xe8]\n  7062: u64 [s1 + 0xc0] = a0\n  7066: a0 = s1 + 0x1840\n  7070: a1 = 0x40\n  7073: ra = 220, jump @7\n      : @238 [@dyn 110] (gas: 7)\n  7079: a3 = s1 + 0x1078\n  7083: a5 = a3 + 0x700\n  7087: a0 = u64 [a5 + 0xe0]\n  7091: a1 = u64 [a5 + 0xd8]\n  7095: a2 = u64 [a5 + 0xd0]\n  7099: a4 = u64 [a5 + 0xc8]\n  7103: t0 = 222, jump @908\n      : @239 [@dyn 111] (gas: 1)\n  7109: jump @241 if a0 == 0\n      : @240 (gas: 1)\n  7112: jump @381\n      : @241 (gas: 13)\n  7115: a0 = u64 [s1 + 0xc0]\n  7119: a2 = a3 + 0x700\n  7123: u64 [a2 + 0xa8] = a0\n  7127: a0 = u64 [s1 + 0xc8]\n  7131: u64 [a2 + 0xb0] = a0\n  7135: a0 = u64 [s1 + 0xd0]\n  7139: u64 [a2 + 0xb8] = a0\n  7143: a1 = s1 + 0x1820\n  7147: a0 = u64 [s1 + 0xd8]\n  7151: u64 [a2 + 0xc0] = a0\n  7155: a0 = a4\n  7157: u64 [s1 + 0xd8] = a4\n  7161: ra = 224, jump @9\n      : @242 [@dyn 112] (gas: 4)\n  7167: a1 = 0x20\n  7170: a0 = u64 [s1 + 0xd8]\n  7174: ra = 0x2be\n  7178: jump @18\n      : @243 (gas: 10)\n  7181: u64 [a2 + 1984] = 0\n  7185: u64 [a2 + 1976] = 0\n  7189: u64 [a2 + 1968] = 0\n  7193: u64 [a2 + 1960] = 0\n  7197: a0 = s1 + 0x2000\n  7201: i32 a0 = a0 + 0x20\n  7204: ra = 0xe2\n  7208: ecalli 16 // 'value_transferred'\n  7210: t0 = 0xe4\n  7214: jump @917\n      : @244 [@dyn 113] (gas: 1)\n  7217: t0 = 228, jump @917\n      : @245 [@dyn 114] (gas: 8)\n  7223: a0 = u64 [a4 + 0xb8]\n  7227: a1 = u64 [a4 + 0xc0]\n  7231: a2 = u64 [a4 + 0xb0]\n  7235: a3 = u64 [a4 + 0xa8]\n  7239: a1 = a1 | a2\n  7242: a0 = a0 | a3\n  7245: a0 = a0 | a1\n  7248: jump @247 if a0 == 0\n      : @246 (gas: 1)\n  7251: jump @671\n      : @247 (gas: 3)\n  7254: a0 = u64 [s1 + 0xd8]\n  7258: a0 = i32 [a0]\n  7260: jump @249 if a0 >u 35\n      : @248 (gas: 1)\n  7264: jump @672\n      : @249 (gas: 25)\n  7267: a0 = s1 + 0x2000\n  7271: i32 a0 = a0 + 0x40\n  7274: a1 = 0x4\n  7277: ecalli 3 // 'call_data_load'\n  7279: a0 = s1 + 0x1878\n  7283: a5 = a0 + 0x700\n  7287: a1 = u64 [a5 + 0xe0]\n  7291: a2 = u64 [a5 + 0xd8]\n  7295: a3 = u64 [a5 + 0xd0]\n  7299: a4 = u64 [a5 + 0xc8]\n  7303: u64 [s1 + 0xc0] = a1\n  7307: u64 [s1 + 0xb0] = a3\n  7311: a0 = a3 | a1\n  7314: u64 [s1 + 0xb8] = a2\n  7318: u64 [s1 + 0xa8] = a4\n  7322: a1 = a4 | a2\n  7325: a0 = a0 | a1\n  7328: a0 = a0 >u 0\n  7330: a1 = s1 + 0x1078\n  7334: u64 [a1 + 992] = 0\n  7338: u64 [a1 + 984] = 0\n  7342: u64 [a1 + 0x3c8] = a0\n  7346: a0 = s1 + 0x1440\n  7350: u64 [a1 + 976] = 0\n  7354: ra = 230, jump @768\n      : @250 [@dyn 115] (gas: 28)\n  7360: a0 = 0x301d0\n  7365: u64 [s1 + 0xd0] = a0\n  7369: i32 a0 = a0 + 0\n  7371: u64 [s1 + 0xa0] = a0\n  7375: ecalli 5 // 'caller'\n  7377: a2 = u64 [s1 + 0xd0]\n  7381: a0 = u64 [a2 + 0x8]\n  7384: a1 = i32 [a2 + 0x10]\n  7387: a2 = u64 [a2]\n  7389: a0 = reverse a0\n  7391: a3 = a0 << 0x20\n  7394: a1 = reverse a1\n  7396: a1 = a1 >> 0x20\n  7399: a3 = a3 | a1\n  7402: a0 = a0 >> 0x20\n  7405: a1 = reverse a2\n  7407: a2 = a1 << 0x20\n  7410: a0 = a0 | a2\n  7413: a1 = a1 >> 0x20\n  7416: a2 = s1 + 0x1078\n  7420: u64 [a2 + 960] = 0\n  7424: a4 = a2 + 0x300\n  7428: u64 [a4 + 0xb8] = a1\n  7432: u64 [a4 + 0xb0] = a0\n  7436: a1 = s1 + 0x1420\n  7440: u64 [a4 + 0xa8] = a3\n  7444: a0 = 0\n  7446: ra = 232, jump @9\n      : @251 [@dyn 116] (gas: 9)\n  7452: a1 = s1 + 0x1078\n  7456: u64 [a1 + 928] = 0\n  7460: u64 [a1 + 920] = 0\n  7464: u64 [a1 + 904] = 0x3\n  7469: a2 = a1\n  7471: a0 = 0x20\n  7474: a1 = s1 + 0x1400\n  7478: u64 [a2 + 912] = 0\n  7482: ra = 234, jump @9\n      : @252 [@dyn 117] (gas: 6)\n  7488: a0 = sp + 0xffffffffffffffe0\n  7491: a0 = a0 & 0xffffffffffffffe0\n  7494: u64 [s1 + 0xd8] = a0\n  7498: sp = a0\n  7500: a1 = i32 [0x201c8]\n  7505: jump @254 if a1 >u 63\n      : @253 (gas: 2)\n  7509: u32 [0x201c8] = 0x40\n  7515: fallthrough\n      : @254 (gas: 42)\n  7516: a0 = sp + 0xffffffffffffffe0\n  7519: a2 = a0 & 0xffffffffffffffe0\n  7522: u64 [s1 + 0xc8] = a2\n  7526: sp = a2\n  7528: a0 = 0x201d0\n  7533: i32 a0 = a0 + 0\n  7535: i32 a2 = a2 + 0\n  7537: a1 = 0x40\n  7540: u64 [s1 + 0x98] = a0\n  7544: ecalli 9 // 'hash_keccak_256'\n  7546: a3 = u64 [s1 + 0xc8]\n  7550: a0 = u64 [a3 + 0x18]\n  7553: a1 = u64 [a3 + 0x10]\n  7556: a2 = u64 [a3 + 0x8]\n  7559: a3 = u64 [a3]\n  7561: a0 = reverse a0\n  7563: a5 = reverse a1\n  7565: a2 = reverse a2\n  7567: t0 = reverse a3\n  7569: a1 = u64 [s1 + 0xd8]\n  7573: u64 [a1 + 0x18] = t0\n  7576: u64 [a1 + 0x10] = a2\n  7579: u64 [a1 + 0x8] = a5\n  7582: u64 [a1] = a0\n  7584: a4 = sp + 0xffffffffffffffe0\n  7587: a1 = a4 & 0xffffffffffffffe0\n  7590: sp = a1\n  7592: a4 = a0 + 0x2\n  7595: a0 = a4 <u a0\n  7598: a3 = a5 + a0\n  7601: a5 = a3 <u a5\n  7604: a5 = a0 if a0 == 0\n  7607: a5 = a5 + a2\n  7610: a0 = a5 <u a2\n  7613: a0 = a0 + t0\n  7616: u64 [a1 + 0x10] = a5\n  7619: u64 [a1 + 0x8] = a3\n  7622: u64 [a1] = a4\n  7624: u64 [a1 + 0x18] = a0\n  7627: a0 = s1 + 0x13e0\n  7631: u64 [s1 + 0xc8] = a1\n  7635: ra = 236, jump @11\n      : @255 [@dyn 118] (gas: 3)\n  7641: a0 = s1 + 0x1078\n  7645: a0 = u8 [a0 + 0x368]\n  7649: jump @382 if a0 != 0\n      : @256 (gas: 3)\n  7653: a0 = s1 + 0x1060\n  7657: a1 = 0x40\n  7660: ra = 238, jump @7\n      : @257 [@dyn 119] (gas: 7)\n  7666: a0 = s1 + 0x1078\n  7670: a4 = u64 [a0]\n  7672: a1 = a0 + 0xffffffffffffff00\n  7676: a5 = u64 [a1 + 0xf8]\n  7680: a3 = u64 [a1 + 0xf0]\n  7684: a0 = u64 [a1 + 0xe8]\n  7688: t0 = 240, jump @904\n      : @258 [@dyn 120] (gas: 1)\n  7694: jump @381 if a1 != 0\n      : @259 (gas: 13)\n  7698: u64 [s1 + 0xd0] = a3\n  7702: a3 = s1 + 0x7ff\n  7706: a3 = a3 + 0x61\n  7709: u64 [a3 + 2032] = 0\n  7713: u64 [a3 + 2024] = 0\n  7717: u64 [a3 + 2016] = 0\n  7721: a2 = 0x8c379a000000000\n  7731: a1 = s1 + 0x1040\n  7735: u64 [a3 + 0x7f8] = a2\n  7739: u64 [s1 + 0xd8] = a0\n  7743: u64 [s1 + 0xc0] = a4\n  7747: u64 [s1 + 0xc8] = a5\n  7751: ra = 242, jump @9\n      : @260 [@dyn 121] (gas: 5)\n  7757: a1 = u64 [s1 + 0xd8]\n  7761: a0 = u64 [s1 + 0xc8]\n  7765: a3 = u64 [s1 + 0xc0]\n  7769: a3 = a3 | a0\n  7772: t0 = 244, jump @897\n      : @261 [@dyn 122] (gas: 1)\n  7778: jump @381 if a0 == 0\n      : @262 (gas: 11)\n  7782: i32 a0 = a1 + 0x4\n  7785: a2 = s1 + 0x7ff\n  7789: a2 = a2 + 0x61\n  7792: u64 [a2 + 2008] = 0\n  7796: u64 [a2 + 2000] = 0\n  7800: u64 [a2 + 1984] = 0x20\n  7805: a1 = s1 + 0x1020\n  7809: u64 [a2 + 1992] = 0\n  7813: u64 [s1 + 0xc8] = a3\n  7817: u64 [s1 + 0xc0] = a4\n  7821: ra = 246, jump @9\n      : @263 [@dyn 123] (gas: 1)\n  7827: t0 = 248, jump @901\n      : @264 [@dyn 124] (gas: 1)\n  7833: jump @381 if a0 == 0\n      : @265 (gas: 9)\n  7837: i32 a0 = a1 + 0x24\n  7840: a2 = s1 + 0x7ff\n  7844: a2 = a2 + 0x61\n  7847: u64 [a2 + 1976] = 0\n  7851: u64 [a2 + 1968] = 0\n  7855: u64 [a2 + 1952] = 0xe\n  7860: a1 = s1 + 0x1000\n  7864: u64 [a2 + 1960] = 0\n  7868: ra = 250, jump @9\n      : @266 [@dyn 125] (gas: 3)\n  7874: a2 = u64 [s1 + 0xd8]\n  7878: a0 = 0xffffffbc\n  7888: t0 = 252, jump @907\n      : @267 [@dyn 126] (gas: 1)\n  7894: jump @381 if a0 == 0\n      : @268 (gas: 13)\n  7898: i32 a0 = a2 + 0x44\n  7901: a1 = u64 [0x200d8]\n  7906: a2 = u64 [0x200e0]\n  7911: a3 = s1 + 0x7ff\n  7915: a3 = a3 + 0x61\n  7918: u64 [a3 + 0x798] = a1\n  7922: u64 [a3 + 1928] = 0\n  7926: u64 [a3 + 0x790] = a2\n  7930: a1 = s1 + 0x7ff\n  7934: a1 = a1 + 0x7e1\n  7938: u64 [a3 + 1920] = 0\n  7942: ra = 0x234\n  7946: jump @9\n      : @269 (gas: 1)\n  7949: jump @271 if a0 == 1941178475\n      : @270 (gas: 1)\n  7956: jump @673\n      : @271 (gas: 9)\n  7959: u64 [a2 + 1312] = 0\n  7963: u64 [a2 + 1304] = 0\n  7967: u64 [a2 + 1296] = 0\n  7971: u64 [a2 + 1288] = 0\n  7975: a0 = s1 + 0x2000\n  7979: i32 a0 = a0 + 0xfffffffffffffd80\n  7983: ra = 0xfe\n  7987: ecalli 16 // 'value_transferred'\n  7989: fallthrough\n      : @272 [@dyn 127] (gas: 3)\n  7990: a3 = s1 + 0x1878\n  7994: a4 = a3 + 0x500\n  7998: t0 = 256, jump @911\n      : @273 [@dyn 128] (gas: 1)\n  8004: jump @275 if a0 == 0\n      : @274 (gas: 1)\n  8007: jump @678\n      : @275 (gas: 3)\n  8010: a0 = u64 [s1 + 0xd8]\n  8014: a0 = i32 [a0]\n  8016: jump @277 if a0 >u 35\n      : @276 (gas: 1)\n  8020: jump @679\n      : @277 (gas: 6)\n  8023: a0 = s1 + 0x2000\n  8027: i32 a0 = a0 + 0xfffffffffffffda0\n  8031: a1 = 0x4\n  8034: ra = 0x102\n  8038: ecalli 3 // 'call_data_load'\n  8040: fallthrough\n      : @278 [@dyn 129] (gas: 4)\n  8041: a4 = s1 + 0x1878\n  8045: a1 = u64 [a4 + 0x538]\n  8049: a0 = u64 [a4 + 0x540]\n  8053: t0 = 260, jump @903\n      : @279 [@dyn 130] (gas: 1)\n  8059: jump @281 if a3 != 0\n      : @280 (gas: 1)\n  8062: jump @680\n      : @281 (gas: 12)\n  8065: a2 = u64 [a4 + 0x530]\n  8069: a3 = u64 [a4 + 0x528]\n  8073: a4 = s1 + 0x7ff\n  8077: a4 = a4 + 0x61\n  8080: u64 [a4 + 0x60] = a3\n  8083: u64 [a4 + 0x68] = a2\n  8086: u64 [a4 + 0x70] = a1\n  8089: a1 = s1 + 0x7ff\n  8093: a1 = a1 + 0xc1\n  8097: u64 [a4 + 0x78] = a0\n  8100: a0 = 0\n  8102: ra = 262, jump @9\n      : @282 [@dyn 131] (gas: 7)\n  8108: a1 = s1 + 0x7ff\n  8112: a1 = a1 + 0x61\n  8115: a3 = 0\n  8117: u64 [a1 + 88] = 0\n  8120: u64 [a1 + 80] = 0\n  8123: u64 [a1 + 64] = 0x3\n  8127: t0 = 264, jump @902\n      : @283 [@dyn 132] (gas: 3)\n  8133: a1 = a1 + 0xa1\n  8137: u64 [a2 + 0x48] = a3\n  8140: ra = 266, jump @9\n      : @284 [@dyn 133] (gas: 6)\n  8146: a0 = sp + 0xffffffffffffffe0\n  8149: a0 = a0 & 0xffffffffffffffe0\n  8152: u64 [s1 + 0xb8] = a0\n  8156: sp = a0\n  8158: a1 = i32 [0x201c8]\n  8163: jump @286 if a1 >u 63\n      : @285 (gas: 2)\n  8167: u32 [0x201c8] = 0x40\n  8173: fallthrough\n      : @286 (gas: 30)\n  8174: a0 = sp + 0xffffffffffffffe0\n  8177: a2 = a0 & 0xffffffffffffffe0\n  8180: u64 [s1 + 0xd8] = a2\n  8184: sp = a2\n  8186: a0 = 0x201d0\n  8191: i32 a0 = a0 + 0\n  8193: i32 a2 = a2 + 0\n  8195: a1 = 0x40\n  8198: ecalli 9 // 'hash_keccak_256'\n  8200: a3 = u64 [s1 + 0xd8]\n  8204: a0 = u64 [a3 + 0x18]\n  8207: a1 = u64 [a3 + 0x10]\n  8210: a2 = u64 [a3 + 0x8]\n  8213: a3 = u64 [a3]\n  8215: a5 = reverse a0\n  8217: u64 [s1 + 0xc8] = a5\n  8221: a4 = reverse a1\n  8223: u64 [s1 + 0xd0] = a4\n  8227: a2 = reverse a2\n  8229: u64 [s1 + 0xc0] = a2\n  8233: a0 = reverse a3\n  8235: u64 [s1 + 0xd8] = a0\n  8239: a1 = u64 [s1 + 0xb8]\n  8243: u64 [a1 + 0x18] = a0\n  8246: u64 [a1 + 0x10] = a2\n  8249: u64 [a1 + 0x8] = a4\n  8252: u64 [a1] = a5\n  8254: a0 = s1 + 0x7ff\n  8258: a0 = a0 + 0x81\n  8262: ra = 268, jump @11\n      : @287 [@dyn 134] (gas: 32)\n  8268: a1 = s1 + 0x7ff\n  8272: a1 = a1 + 0x61\n  8275: a0 = u64 [a1 + 0x20]\n  8278: u64 [s1 + 0xb8] = a0\n  8282: a0 = u64 [a1 + 0x28]\n  8285: u64 [s1 + 0xb0] = a0\n  8289: a0 = u64 [a1 + 0x30]\n  8292: u64 [s1 + 0xa8] = a0\n  8296: a0 = u64 [a1 + 0x38]\n  8299: u64 [s1 + 0xa0] = a0\n  8303: a0 = u64 [s1 + 0xc8]\n  8307: a0 = a0 + 0x1\n  8310: a1 = a0 <u 0x1\n  8313: a2 = u64 [s1 + 0xd0]\n  8317: a1 = a1 + a2\n  8320: a2 = s1 + 0x1878\n  8324: a3 = a2 + 0x500\n  8328: u64 [a3 + 0x50] = a1\n  8331: a1 = a1 | a0\n  8334: u64 [a3 + 0x48] = a0\n  8337: a0 = a1 <u 0x1\n  8340: a1 = u64 [s1 + 0xc0]\n  8344: a0 = a0 + a1\n  8347: u64 [a3 + 0x58] = a0\n  8350: a0 = a0 <u a1\n  8353: a1 = u64 [s1 + 0xd8]\n  8357: a0 = a0 + a1\n  8360: u64 [a3 + 0x60] = a0\n  8363: a0 = s1 + 0x7ff\n  8367: a0 = a0 + 0x61\n  8370: a1 = s1 + 0x1dc0\n  8374: ra = 270, jump @11\n      : @288 [@dyn 135] (gas: 9)\n  8380: a5 = s1 + 0x7ff\n  8384: a5 = a5 + 0x61\n  8387: a0 = u64 [a5]\n  8389: u64 [s1 + 0x98] = a0\n  8393: a1 = u64 [s1 + 0xc8]\n  8397: a0 = a1 + 0x2\n  8400: a1 = a0 <u a1\n  8403: a3 = u64 [s1 + 0xd0]\n  8407: t0 = 272, jump @920\n      : @289 [@dyn 136] (gas: 21)\n  8413: a1 = u64 [a5 + 0x8]\n  8416: u64 [s1 + 0xd0] = a1\n  8420: a1 = u64 [s1 + 0xc0]\n  8424: a3 = a3 + a1\n  8427: a1 = a3 <u a1\n  8430: a4 = u64 [s1 + 0xd8]\n  8434: a1 = a1 + a4\n  8437: a4 = u64 [a5 + 0x10]\n  8440: u64 [s1 + 0xc8] = a4\n  8444: a4 = u64 [a5 + 0x18]\n  8447: u64 [s1 + 0xc0] = a4\n  8451: a4 = s1 + 0x1878\n  8455: a5 = a4 + 0x500\n  8459: u64 [a5 + 0x80] = a1\n  8463: u64 [a5 + 0x78] = a3\n  8466: u64 [a5 + 0x70] = a2\n  8469: u64 [a5 + 0x68] = a0\n  8472: a0 = s1 + 0x7ff\n  8476: a0 = a0 + 0x41\n  8479: a1 = s1 + 0x1de0\n  8483: ra = 274, jump @11\n      : @290 [@dyn 137] (gas: 7)\n  8489: a0 = s1 + 0x1000\n  8493: a0 = u8 [a0 + 0xfffffffffffff840]\n  8497: u64 [s1 + 0x90] = a0\n  8501: a0 = s1 + 0x7ff\n  8505: a0 = a0 + 0x21\n  8508: a1 = 0x40\n  8511: ra = 276, jump @7\n      : @291 [@dyn 138] (gas: 44)\n  8517: a0 = s1 + 0x1000\n  8521: a2 = u64 [a0 + 0xfffffffffffff838]\n  8525: u64 [s1 + 0xd8] = a2\n  8529: a0 = s1 + 0x1000\n  8533: a1 = u64 [a0 + 0xfffffffffffff830]\n  8537: u64 [s1 + 0x88] = a1\n  8541: a0 = s1 + 0x1000\n  8545: a3 = u64 [a0 + 0xfffffffffffff828]\n  8549: u64 [s1 + 0x80] = a3\n  8553: a0 = s1 + 0x1000\n  8557: a5 = u64 [a0 + 0xfffffffffffff820]\n  8561: u64 [s1 + 0x78] = a5\n  8564: a0 = u64 [s1 + 0x90]\n  8568: u64 [s1 + 0x780] = a0\n  8572: u64 [s1 + 1944] = 0\n  8576: u64 [s1 + 1936] = 0\n  8580: u64 [s1 + 1928] = 0\n  8584: a0 = u64 [s1 + 0xc0]\n  8588: u64 [s1 + 0x7b8] = a0\n  8592: a0 = u64 [s1 + 0xc8]\n  8596: u64 [s1 + 0x7b0] = a0\n  8600: a0 = u64 [s1 + 0xd0]\n  8604: u64 [s1 + 0x7a8] = a0\n  8608: a0 = u64 [s1 + 0x98]\n  8612: u64 [s1 + 0x7a0] = a0\n  8616: a0 = u64 [s1 + 0xa0]\n  8620: u64 [s1 + 0x7d8] = a0\n  8624: a0 = u64 [s1 + 0xa8]\n  8628: u64 [s1 + 0x7d0] = a0\n  8632: a0 = u64 [s1 + 0xb0]\n  8636: u64 [s1 + 0x7c8] = a0\n  8640: a0 = u64 [s1 + 0xb8]\n  8644: u64 [s1 + 0x7c0] = a0\n  8648: u64 [s1 + 0x7f8] = a2\n  8652: u64 [s1 + 0x7f0] = a1\n  8656: u64 [s1 + 0x7e8] = a3\n  8660: a0 = s1 + 0x7ff\n  8664: a0 = a0 + 0x1\n  8667: a1 = s1 + 0x7e0\n  8671: a2 = s1 + 0x7c0\n  8675: a3 = s1 + 0x7a0\n  8679: a4 = s1 + 0x780\n  8683: u64 [s1 + 0x7e0] = a5\n  8687: ra = 278, jump @760\n      : @292 [@dyn 139] (gas: 12)\n  8693: a4 = u64 [s1 + 0x80]\n  8697: a2 = u64 [s1 + 0x78]\n  8700: a0 = u64 [s1 + 0xd8]\n  8704: a0 = a0 | a4\n  8707: a3 = u64 [s1 + 0x88]\n  8711: a1 = a2 | a3\n  8714: a1 = a1 | a0\n  8717: a1 = a1 >> 0x20\n  8720: a0 = a0 | a3\n  8723: a0 = a0 << 0x20\n  8726: a0 = a0 | a1\n  8729: jump @381 if a0 != 0\n      : @293 (gas: 11)\n  8733: t0 = a3\n  8735: a0 = s1 + 0x1000\n  8739: a0 = u64 [a0 + 0xfffffffffffff808]\n  8743: a1 = s1 + 0x1000\n  8747: a1 = u64 [a1 + 0xfffffffffffff818]\n  8751: u64 [s1 + 0xd0] = a1\n  8755: a1 = s1 + 0x1000\n  8759: t1 = u64 [a1 + 0xfffffffffffff800]\n  8763: a1 = s1 + 0x1000\n  8767: a3 = u64 [a1 + 0xfffffffffffff810]\n  8771: fallthrough\n      : @294 (gas: 26)\n  8772: t2 = a0 ^ a4\n  8775: a5 = a0 <u a4\n  8778: ra = t1 <u a2\n  8781: a5 = ra if t2 == 0\n  8784: a1 = a3 - t0\n  8787: t2 = a1 - a5\n  8790: a1 = a1 <u a5\n  8793: u64 [s1 + 0xc8] = a1\n  8797: a3 = a3 <u t0\n  8800: a5 = u64 [s1 + 0xd8]\n  8804: a1 = u64 [s1 + 0xd0]\n  8808: a5 = a1 - a5\n  8811: a5 = a5 - a3\n  8814: a1 = u64 [s1 + 0xc8]\n  8818: a5 = a5 - a1\n  8821: a0 = a0 - a4\n  8824: a0 = a0 - ra\n  8827: a1 = t1 - a2\n  8830: a0 = a0 | a5\n  8833: a3 = a1 | t2\n  8836: a3 = a3 | a0\n  8839: a0 = a0 | t2\n  8842: a3 = a3 >> 0x20\n  8845: a0 = a0 << 0x20\n  8848: a0 = a0 | a3\n  8851: jump @381 if a0 != 0\n      : @295 (gas: 3)\n  8855: a0 = a2\n  8857: u64 [s1 + 0xd8] = a1\n  8861: ra = 280, jump @18\n      : @296 [@dyn 140] (gas: 5)\n  8867: i32 a1 = a0 + 0\n  8869: a2 = i32 [s1 + 0xd8]\n  8873: a0 = 0\n  8875: ecalli 13 // 'seal_return'\n  8877: jump @696\n      : @297 (gas: 8)\n  8880: u64 [a3 + 192] = 0\n  8884: u64 [a3 + 184] = 0\n  8888: u64 [a3 + 176] = 0\n  8892: u64 [a3 + 168] = 0\n  8896: a0 = s1 + 0x2000\n  8900: i32 a0 = a0 + 0x120\n  8904: ecalli 16 // 'value_transferred'\n  8906: fallthrough\n      : @298 (gas: 9)\n  8907: a3 = s1 + 0x2078\n  8911: a0 = u64 [a3 + 0xb8]\n  8915: a1 = u64 [a3 + 0xc0]\n  8919: a2 = u64 [a3 + 0xb0]\n  8923: a3 = u64 [a3 + 0xa8]\n  8927: a1 = a1 | a2\n  8930: a0 = a0 | a3\n  8933: a0 = a0 | a1\n  8936: jump @300 if a0 == 0\n      : @299 (gas: 1)\n  8939: jump @681\n      : @300 (gas: 3)\n  8942: a0 = u64 [s1 + 0xd8]\n  8946: a0 = i32 [a0]\n  8948: jump @302 if a0 >u 35\n      : @301 (gas: 1)\n  8952: jump @682\n      : @302 (gas: 23)\n  8955: a0 = sp + 0xffffffffffffffe0\n  8958: a0 = a0 & 0xffffffffffffffe0\n  8961: u64 [s1 + 0xd8] = a0\n  8965: sp = a0\n  8967: a0 = s1 + 0x2000\n  8971: i32 a0 = a0 + 0x140\n  8975: a1 = 0x4\n  8978: ecalli 3 // 'call_data_load'\n  8980: a0 = s1 + 0x2078\n  8984: a2 = u64 [a0 + 0xe0]\n  8988: u64 [s1 + 0xc8] = a2\n  8992: a3 = u64 [a0 + 0xd8]\n  8996: u64 [s1 + 0xc0] = a3\n  9000: a1 = u64 [a0 + 0xd0]\n  9004: u64 [s1 + 0xd0] = a1\n  9008: a4 = u64 [a0 + 0xc8]\n  9012: u64 [s1 + 0xb8] = a4\n  9016: a0 = u64 [s1 + 0xd8]\n  9020: u64 [a0 + 0x18] = a2\n  9023: u64 [a0 + 0x10] = a3\n  9026: u64 [a0 + 0x8] = a1\n  9029: u64 [a0] = a4\n  9031: ra = 282, jump @883\n      : @303 [@dyn 141] (gas: 9)\n  9037: a0 = u64 [s1 + 0xc8]\n  9041: a1 = u64 [s1 + 0xc0]\n  9045: a0 = a0 | a1\n  9048: a1 = u64 [s1 + 0xb8]\n  9052: a1 = a1 <u 0x65\n  9055: a2 = u64 [s1 + 0xd0]\n  9059: a1 = 0 if a2 != 0\n  9061: a1 = 0 if a0 != 0\n  9063: jump @305 if a1 == 0\n      : @304 (gas: 1)\n  9066: jump @683\n      : @305 (gas: 3)\n  9069: a0 = s1 + 0x1520\n  9073: a1 = 0x40\n  9076: ra = 284, jump @7\n      : @306 [@dyn 142] (gas: 14)\n  9082: a2 = s1 + 0x1078\n  9086: t0 = u64 [a2 + 0x4c0]\n  9090: a1 = a2 + 0x400\n  9094: a5 = u64 [a1 + 0xb8]\n  9098: a4 = u64 [a1 + 0xb0]\n  9102: a0 = u64 [a1 + 0xa8]\n  9106: a3 = a4 | t0\n  9109: a1 = a0 | a5\n  9112: a1 = a1 | a3\n  9115: a1 = a1 >> 0x20\n  9118: a3 = a3 | a5\n  9121: a3 = a3 << 0x20\n  9124: a1 = a1 | a3\n  9127: jump @381 if a1 != 0\n      : @307 (gas: 11)\n  9131: u64 [a2 + 1176] = 0\n  9135: u64 [a2 + 1168] = 0\n  9139: u64 [a2 + 1160] = 0\n  9143: a3 = 0x8c379a000000000\n  9153: a1 = s1 + 0x1500\n  9157: u64 [a2 + 0x4a0] = a3\n  9161: u64 [s1 + 0xd8] = a0\n  9165: u64 [s1 + 0xd0] = a4\n  9169: u64 [s1 + 0xc0] = t0\n  9173: u64 [s1 + 0xc8] = a5\n  9177: ra = 286, jump @9\n      : @308 [@dyn 143] (gas: 5)\n  9183: a1 = u64 [s1 + 0xd8]\n  9187: a0 = u64 [s1 + 0xc8]\n  9191: a3 = u64 [s1 + 0xc0]\n  9195: a3 = a3 | a0\n  9198: t0 = 288, jump @897\n      : @309 [@dyn 144] (gas: 1)\n  9204: jump @381 if a0 == 0\n      : @310 (gas: 11)\n  9208: i32 a0 = a1 + 0x4\n  9211: a2 = s1 + 0x1078\n  9215: u64 [a2 + 1152] = 0\n  9219: u64 [a2 + 1144] = 0\n  9223: u64 [a2 + 1136] = 0\n  9227: a5 = 0x20\n  9230: a1 = s1 + 0x14e0\n  9234: u64 [a2 + 0x468] = a5\n  9238: u64 [s1 + 0xc8] = a3\n  9242: u64 [s1 + 0xc0] = a4\n  9246: ra = 290, jump @9\n      : @311 [@dyn 145] (gas: 1)\n  9252: t0 = 292, jump @901\n      : @312 [@dyn 146] (gas: 1)\n  9258: jump @381 if a0 == 0\n      : @313 (gas: 8)\n  9262: i32 a0 = a1 + 0x24\n  9265: a2 = s1 + 0x1078\n  9269: u64 [a2 + 1120] = 0\n  9273: u64 [a2 + 1112] = 0\n  9277: u64 [a2 + 1096] = 0x20\n  9282: a1 = s1 + 0x14c0\n  9286: u64 [a2 + 1104] = 0\n  9290: ra = 294, jump @9\n      : @314 [@dyn 147] (gas: 1)\n  9296: t0 = 296, jump @910\n      : @315 [@dyn 148] (gas: 1)\n  9302: jump @381 if a0 == 0\n      : @316 (gas: 14)\n  9306: i32 a0 = a3 + 0x44\n  9309: a1 = u64 [0x20080]\n  9314: a4 = s1 + 0x1078\n  9318: a5 = a4 + 0x400\n  9322: u64 [a5 + 0x40] = a1\n  9325: a1 = u64 [0x20088]\n  9330: a2 = u64 [0x20090]\n  9335: a3 = u64 [0x20098]\n  9340: u64 [a5 + 0x38] = a1\n  9343: u64 [a5 + 0x30] = a2\n  9346: a1 = s1 + 0x14a0\n  9350: u64 [a5 + 0x28] = a3\n  9353: ra = 0x234\n  9357: jump @9\n      : @317 (gas: 8)\n  9360: u64 [a3 + 160] = 0\n  9364: u64 [a3 + 152] = 0\n  9368: u64 [a3 + 144] = 0\n  9372: u64 [a3 + 136] = 0\n  9376: a0 = s1 + 0x2000\n  9380: i32 a0 = a0 + 0x100\n  9384: ecalli 16 // 'value_transferred'\n  9386: fallthrough\n      : @318 (gas: 9)\n  9387: a3 = s1 + 0x2078\n  9391: a0 = u64 [a3 + 0x98]\n  9395: a1 = u64 [a3 + 0xa0]\n  9399: a2 = u64 [a3 + 0x90]\n  9403: a3 = u64 [a3 + 0x88]\n  9407: a1 = a1 | a2\n  9410: a0 = a0 | a3\n  9413: a0 = a0 | a1\n  9416: jump @320 if a0 == 0\n      : @319 (gas: 1)\n  9419: jump @686\n      : @320 (gas: 3)\n  9422: a0 = u64 [s1 + 0xd8]\n  9426: a0 = i32 [a0]\n  9428: jump @322 if a0 >u 3\n      : @321 (gas: 1)\n  9432: jump @687\n      : @322 (gas: 3)\n  9435: a0 = s1 + 0x1480\n  9439: a1 = 0x40\n  9442: ra = 298, jump @7\n      : @323 [@dyn 149] (gas: 11)\n  9448: a0 = s1 + 0x1078\n  9452: a2 = a0 + 0x400\n  9456: a1 = u64 [a2 + 0x20]\n  9459: u64 [s1 + 0xd8] = a1\n  9463: a1 = u64 [a2 + 0x18]\n  9466: u64 [s1 + 0xd0] = a1\n  9470: a1 = u64 [a2 + 0x10]\n  9473: u64 [s1 + 0xc0] = a1\n  9477: a0 = u64 [a2 + 0x8]\n  9480: u64 [s1 + 0xc8] = a0\n  9484: ra = 300, jump @0\n      : @324 [@dyn 150] (gas: 7)\n  9490: a0 = u64 [s1 + 0xd8]\n  9494: a1 = u64 [s1 + 0xc0]\n  9498: a0 = a0 | a1\n  9501: a1 = u64 [s1 + 0xc8]\n  9505: a3 = a1\n  9507: a2 = u64 [s1 + 0xd0]\n  9511: t0 = 302, jump @914\n      : @325 [@dyn 151] (gas: 1)\n  9517: jump @381 if a0 != 0\n      : @326 (gas: 13)\n  9521: a2 = u64 [0x301f0]\n  9526: a1 = u64 [0x301f8]\n  9531: a0 = u32 [0x30200]\n  9536: a4 = s1 + 0x1078\n  9540: u64 [a4 + 1024] = 0\n  9544: a5 = a4 + 0x300\n  9548: u64 [a5 + 0xf8] = a0\n  9552: u64 [a5 + 0xf0] = a1\n  9556: a1 = s1 + 0x1460\n  9560: u64 [a5 + 0xe8] = a2\n  9564: a0 = a3\n  9566: ra = 0x2bc\n  9570: jump @9\n      : @327 (gas: 9)\n  9573: u64 [a2 + 1440] = 0\n  9577: u64 [a2 + 1432] = 0\n  9581: u64 [a2 + 1424] = 0\n  9585: u64 [a2 + 1416] = 0\n  9589: a0 = s1 + 0x2000\n  9593: i32 a0 = a0 + 0xfffffffffffffe00\n  9597: ra = 0x130\n  9601: ecalli 16 // 'value_transferred'\n  9603: fallthrough\n      : @328 [@dyn 152] (gas: 3)\n  9604: a3 = s1 + 0x1878\n  9608: a4 = a3 + 0x500\n  9612: t0 = 306, jump @909\n      : @329 [@dyn 153] (gas: 1)\n  9618: jump @331 if a0 == 0\n      : @330 (gas: 1)\n  9621: jump @688\n      : @331 (gas: 3)\n  9624: a0 = u64 [s1 + 0xd8]\n  9628: a0 = i32 [a0]\n  9630: jump @333 if a0 >u 35\n      : @332 (gas: 1)\n  9634: jump @689\n      : @333 (gas: 27)\n  9637: a0 = s1 + 0x2000\n  9641: i32 a0 = a0 + 0xfffffffffffffe20\n  9645: a1 = 0x4\n  9648: ecalli 3 // 'call_data_load'\n  9650: a0 = s1 + 0x1878\n  9654: a5 = a0 + 0x500\n  9658: a1 = u64 [a5 + 0xc0]\n  9662: a2 = u64 [a5 + 0xb8]\n  9666: a3 = u64 [a5 + 0xb0]\n  9670: a4 = u64 [a5 + 0xa8]\n  9674: u64 [s1 + 0x40] = a1\n  9677: u64 [s1 + 0x30] = a3\n  9680: a0 = a3 | a1\n  9683: u64 [s1 + 0x38] = a2\n  9686: u64 [s1 + 0x28] = a4\n  9689: a1 = a4 | a2\n  9692: a0 = a0 | a1\n  9695: a0 = a0 >u 0\n  9697: a1 = s1 + 0x7ff\n  9701: a1 = a1 + 0x61\n  9704: u64 [a1 + 1752] = 0\n  9708: u64 [a1 + 1744] = 0\n  9712: u64 [a1 + 0x6c0] = a0\n  9716: a0 = s1 + 0x7ff\n  9720: a0 = a0 + 0x721\n  9724: u64 [a1 + 1736] = 0\n  9728: ra = 308, jump @768\n      : @334 [@dyn 154] (gas: 8)\n  9734: a0 = 0x301d0\n  9739: u64 [s1 + 0x60] = a0\n  9742: i32 a0 = a0 + 0\n  9744: u64 [s1 + 0x58] = a0\n  9747: ra = 0x136\n  9751: ecalli 5 // 'caller'\n  9753: t0 = 0x138\n  9757: jump @895\n      : @335 [@dyn 155] (gas: 1)\n  9760: t0 = 312, jump @895\n      : @336 [@dyn 156] (gas: 9)\n  9766: u64 [a2 + 1720] = 0\n  9770: a4 = a2 + 0x600\n  9774: u64 [a4 + 0xb0] = a1\n  9778: u64 [a4 + 0xa8] = a0\n  9782: a1 = s1 + 0x7ff\n  9786: a1 = a1 + 0x701\n  9790: u64 [a4 + 0xa0] = a3\n  9794: a0 = 0\n  9796: ra = 314, jump @9\n      : @337 [@dyn 157] (gas: 6)\n  9802: a1 = s1 + 0x7ff\n  9806: a1 = a1 + 0x61\n  9809: u64 [a1 + 1688] = 0\n  9813: u64 [a1 + 1680] = 0\n  9817: u64 [a1 + 1664] = 0x3\n  9822: t0 = 316, jump @902\n      : @338 [@dyn 158] (gas: 3)\n  9828: a1 = a1 + 0x6e1\n  9832: u64 [a2 + 1672] = 0\n  9836: ra = 318, jump @9\n      : @339 [@dyn 159] (gas: 3)\n  9842: a2 = 0x201c8\n  9847: a0 = i32 [0x201c8]\n  9852: jump @341 if a0 >u 63\n      : @340 (gas: 2)\n  9856: u32 [0x201c8] = 0x40\n  9862: fallthrough\n      : @341 (gas: 38)\n  9863: u64 [s1 + 0x48] = a2\n  9866: a0 = sp + 0xffffffffffffffe0\n  9869: a2 = a0 & 0xffffffffffffffe0\n  9872: u64 [s1 + 0xd8] = a2\n  9876: sp = a2\n  9878: a0 = 0x201d0\n  9883: i32 a0 = a0 + 0\n  9885: i32 a2 = a2 + 0\n  9887: a1 = 0x40\n  9890: u64 [s1 + 0x50] = a0\n  9893: ecalli 9 // 'hash_keccak_256'\n  9895: a3 = u64 [s1 + 0xd8]\n  9899: a0 = u64 [a3]\n  9901: a1 = u64 [a3 + 0x8]\n  9904: a2 = u64 [a3 + 0x10]\n  9907: a3 = u64 [a3 + 0x18]\n  9910: a0 = reverse a0\n  9912: a1 = reverse a1\n  9914: a2 = reverse a2\n  9916: a3 = reverse a3\n  9918: a4 = a3 + 0x2\n  9921: a3 = a4 <u a3\n  9924: a5 = a2 + a3\n  9927: a2 = a5 <u a2\n  9930: a2 = a3 if a3 == 0\n  9933: a2 = a2 + a1\n  9936: a1 = a2 <u a1\n  9939: a0 = a0 + a1\n  9942: a1 = s1 + 0x1878\n  9946: a3 = a1 + 0x500\n  9950: u64 [a3 + 0xc8] = a4\n  9954: u64 [a3 + 0xd0] = a5\n  9958: u64 [a3 + 0xd8] = a2\n  9962: u64 [a3 + 0xe0] = a0\n  9966: a0 = s1 + 0x7ff\n  9970: a0 = a0 + 0x6c1\n  9974: a1 = s1 + 0x1e40\n  9978: ra = 320, jump @11\n      : @342 [@dyn 160] (gas: 4)\n  9984: a0 = s1 + 0x7ff\n  9988: a0 = a0 + 0x61\n  9991: a0 = u8 [a0 + 0x660]\n  9995: jump @423 if a0 != 0\n      : @343 (gas: 5)\n  9999: a0 = u64 [s1 + 0x58]\n 10002: ra = 0x142\n 10006: ecalli 5 // 'caller'\n 10008: t0 = 0x144\n 10012: jump @895\n      : @344 [@dyn 161] (gas: 1)\n 10015: t0 = 324, jump @895\n      : @345 [@dyn 162] (gas: 9)\n 10021: u64 [a2 + 1432] = 0\n 10025: a4 = a2 + 0x500\n 10029: u64 [a4 + 0x90] = a1\n 10033: u64 [a4 + 0x88] = a0\n 10037: a1 = s1 + 0x7ff\n 10041: a1 = a1 + 0x5e1\n 10045: u64 [a4 + 0x80] = a3\n 10049: a0 = 0\n 10051: ra = 326, jump @9\n      : @346 [@dyn 163] (gas: 6)\n 10057: a1 = s1 + 0x7ff\n 10061: a1 = a1 + 0x61\n 10064: u64 [a1 + 1400] = 0\n 10068: u64 [a1 + 1392] = 0\n 10072: u64 [a1 + 1376] = 0x2\n 10077: t0 = 328, jump @902\n      : @347 [@dyn 164] (gas: 3)\n 10083: a1 = a1 + 0x5c1\n 10087: u64 [a2 + 1384] = 0\n 10091: ra = 330, jump @9\n      : @348 [@dyn 165] (gas: 3)\n 10097: a2 = u64 [s1 + 0x48]\n 10100: a0 = i32 [a2]\n 10102: jump @350 if a0 >u 63\n      : @349 (gas: 3)\n 10106: u32 [a2 + 0] = 0x40\n 10109: t0 = 0x14c\n 10113: jump @918\n      : @350 (gas: 1)\n 10116: t0 = 332, jump @918\n      : @351 [@dyn 166] (gas: 4)\n 10122: ra = 0x14e\n 10126: ecalli 9 // 'hash_keccak_256'\n 10128: t0 = 0x150\n 10132: jump @906\n      : @352 [@dyn 167] (gas: 1)\n 10135: t0 = 336, jump @906\n      : @353 [@dyn 168] (gas: 9)\n 10141: u64 [a4 + 0x600] = a3\n 10145: a3 = a4 + 0x500\n 10149: u64 [a3 + 0xf8] = a2\n 10153: u64 [a3 + 0xf0] = a1\n 10157: u64 [a3 + 0xe8] = a0\n 10161: a0 = s1 + 0x7ff\n 10165: a0 = a0 + 0x5a1\n 10169: a1 = s1 + 0x1e60\n 10173: ra = 338, jump @11\n      : @354 [@dyn 169] (gas: 21)\n 10179: a1 = s1 + 0x7ff\n 10183: a1 = a1 + 0x61\n 10186: a2 = a1 + 0x500\n 10190: a0 = u64 [a2 + 0x58]\n 10193: u64 [s1 + 0xd0] = a0\n 10197: a0 = u64 [a2 + 0x50]\n 10200: u64 [s1 + 0xc8] = a0\n 10204: a0 = u64 [a2 + 0x48]\n 10207: u64 [s1 + 0xc0] = a0\n 10211: a0 = u64 [a2 + 0x40]\n 10214: u64 [s1 + 0xd8] = a0\n 10218: a0 = s1 + 0x1878\n 10222: u64 [a0 + 1568] = 0\n 10226: u64 [a0 + 1560] = 0\n 10230: u64 [a0 + 1552] = 0\n 10234: a1 = a0\n 10236: u64 [a1 + 1544] = 0x1\n 10241: a0 = s1 + 0x7ff\n 10245: a0 = a0 + 0x581\n 10249: a1 = s1 + 0x1e80\n 10253: ra = 340, jump @11\n      : @355 [@dyn 170] (gas: 69)\n 10259: a1 = s1 + 0x7ff\n 10263: a1 = a1 + 0x61\n 10266: t2 = u64 [a1 + 0x520]\n 10270: a2 = a1 + 0x500\n 10274: a0 = u64 [a2 + 0x38]\n 10277: u64 [s1 + 0xb8] = a0\n 10281: a3 = u64 [a2 + 0x30]\n 10284: a5 = u64 [a2 + 0x28]\n 10287: ra = u64 [s1 + 0xd8]\n 10291: a1 = ra mulhu t2\n 10294: a0 = u64 [s1 + 0xc0]\n 10298: a2 = a0 * t2\n 10301: a1 = a1 + a2\n 10304: a2 = a1 <u a2\n 10307: a4 = a0 mulhu t2\n 10310: t1 = a4 + a2\n 10313: a4 = ra * a5\n 10316: a1 = a1 + a4\n 10319: u64 [s1 + 0x98] = a1\n 10323: a1 = a1 <u a4\n 10326: a4 = ra mulhu a5\n 10329: a1 = a1 + a4\n 10332: t0 = t1 + a1\n 10335: a2 = a0 * a5\n 10338: a1 = a2 + t0\n 10341: u64 [s1 + 0xb0] = a1\n 10345: a4 = a1 <u a2\n 10348: a1 = t0 <u t1\n 10351: a2 = a0 mulhu a5\n 10354: a1 = a1 + a2\n 10357: a1 = a1 + a4\n 10360: u64 [s1 + 0xa8] = a1\n 10364: a1 = a0 * a3\n 10367: a2 = u64 [s1 + 0xb8]\n 10371: a2 = a2 * ra\n 10374: a1 = a1 + a2\n 10377: u64 [s1 + 0xa0] = a1\n 10381: t0 = u64 [s1 + 0xc8]\n 10385: u64 [s1 + 0x78] = a5\n 10388: a2 = a5 * t0\n 10391: a4 = u64 [s1 + 0xd0]\n 10395: a5 = a4 * t2\n 10398: a5 = a5 + a2\n 10401: a2 = a3 * ra\n 10404: t1 = t0 * t2\n 10407: a2 = a2 + t1\n 10410: u64 [s1 + 0x88] = a3\n 10414: a3 = a3 mulhu ra\n 10417: u64 [s1 + 0x68] = a3\n 10420: a1 = u64 [s1 + 0xa0]\n 10424: a3 = a3 + a1\n 10427: a1 = t0 mulhu t2\n 10430: u64 [s1 + 0xa0] = a1\n 10434: a1 = a1 + a5\n 10437: a5 = a2 <u t1\n 10440: u64 [s1 + 0x70] = a1\n 10443: a1 = a1 + a3\n 10446: t1 = a1 + a5\n 10449: a5 = a0 | a4\n 10452: a1 = ra | t0\n 10455: a1 = a1 | a5\n 10458: a0 = u64 [s1 + 0xb0]\n 10462: a2 = a2 + a0\n 10465: a4 = a2 <u a0\n 10468: a0 = u64 [s1 + 0xa8]\n 10472: t1 = t1 + a0\n 10475: a5 = t1 + a4\n 10478: u64 [s1 + 0x80] = a2\n 10482: jump @358 if a1 == 0\n      : @356 (gas: 52)\n 10486: a1 = a5 ^ a0\n 10489: a2 = a5 <u a0\n 10492: a4 = a2 if a1 != 0\n 10495: a0 = u64 [s1 + 0x68]\n 10498: a3 = a3 <u a0\n 10501: a1 = u64 [s1 + 0xc0]\n 10505: a2 = a1 >u 0\n 10507: ra = a5\n 10509: t0 = u64 [s1 + 0xb8]\n 10513: a5 = t0 >u 0\n 10515: a2 = a2 & a5\n 10518: a5 = u64 [s1 + 0xd8]\n 10522: a5 = t0 mulhu a5\n 10525: a5 = a5 >u 0\n 10527: a2 = a2 | a5\n 10530: t1 = u64 [s1 + 0x88]\n 10534: a5 = a1 mulhu t1\n 10537: a5 = a5 >u 0\n 10539: a2 = a2 | a5\n 10542: a2 = a2 | a3\n 10545: u64 [s1 + 0xc0] = a2\n 10549: a0 = u64 [s1 + 0xa0]\n 10553: a1 = u64 [s1 + 0x70]\n 10556: a0 = a1 <u a0\n 10559: u64 [s1 + 0xb0] = a0\n 10563: a2 = u64 [s1 + 0xd0]\n 10567: a5 = a2 >u 0\n 10569: a0 = u64 [s1 + 0x78]\n 10572: a1 = a0 >u 0\n 10574: a1 = a1 & a5\n 10577: a5 = a2 mulhu t2\n 10580: a5 = a5 >u 0\n 10582: a1 = a1 | a5\n 10585: a5 = ra\n 10587: ra = u64 [s1 + 0xc8]\n 10591: a3 = a0 mulhu ra\n 10594: a3 = a3 >u 0\n 10596: a1 = a1 | a3\n 10599: a0 = u64 [s1 + 0xb0]\n 10603: a1 = a1 | a0\n 10606: a2 = ra | a2\n 10609: a3 = t1 | t0\n 10612: a2 = a2 >u 0\n 10614: a3 = a3 >u 0\n 10616: a2 = a2 & a3\n 10619: a1 = a1 | a2\n 10622: a2 = u64 [s1 + 0x80]\n 10626: a0 = u64 [s1 + 0xc0]\n 10630: a1 = a1 | a0\n 10633: a1 = a1 | a4\n 10636: a1 = a1 & 0x1\n 10639: jump @358 if a1 == 0\n      : @357 (gas: 1)\n 10642: jump @701\n      : @358 (gas: 56)\n 10645: u64 [s1 + 0x90] = a5\n 10649: a1 = u64 [s1 + 0xd8]\n 10653: t0 = a1 * t2\n 10656: a0 = t0 | a2\n 10659: a1 = u64 [s1 + 0x98]\n 10663: t2 = a2\n 10665: a2 = a1 | a5\n 10668: a0 = a0 | a2\n 10671: a0 = a0 <u 0x1\n 10674: u64 [s1 + 0xd8] = a0\n 10678: a0 = clz t2\n 10680: a0 = a0 + 0x40\n 10683: a2 = clz a5\n 10685: a2 = a0 if a5 == 0\n 10688: a0 = clz t0\n 10690: a0 = a0 + 0x40\n 10693: a3 = clz a1\n 10695: a3 = a0 if a1 == 0\n 10698: a0 = a3 + 0x80\n 10702: a4 = t2 | a5\n 10705: a2 = a0 if a4 == 0\n 10708: a5 = a0 <u a3\n 10711: a5 = 0 if a4 != 0\n 10713: a3 = a5 >u 0\n 10715: a0 = a2 <u 0xfa\n 10719: a4 = a0 ^ 0x1\n 10722: a3 = a4 if a5 == 0\n 10725: a0 = a3 <u 0x1\n 10728: a0 = a0 + 0xffffffffffffffff\n 10731: ra = -a3\n 10733: a5 = -a5\n 10735: t1 = a5 - a4\n 10738: a2 = 0xf9 - a2\n 10742: u64 [s1 + 0xc0] = ra\n 10746: a4 = ra >u 0\n 10748: a5 = a0 >u 0\n 10750: u64 [s1 + 0xc8] = a0\n 10754: a5 = a4 if a0 == 0\n 10757: a0 = t1 >u 0\n 10759: u64 [s1 + 0xd0] = a2\n 10763: a2 = a2 <u 0x100\n 10767: a2 = a2 ^ 0x1\n 10770: a2 = a0 if t1 != 0\n 10773: a2 = a5 if a3 != 0\n 10776: a0 = u64 [s1 + 0xd8]\n 10780: a0 = a0 | a2\n 10783: a2 = u64 [s1 + 0x90]\n 10787: a2 = 0 if a0 != 0\n 10789: a3 = t2\n 10791: a3 = 0 if a0 != 0\n 10793: a5 = a1\n 10795: a5 = 0 if a0 != 0\n 10797: u64 [s1 + 0x88] = t0\n 10801: a4 = t0\n 10803: a4 = 0 if a0 != 0\n 10805: jump @360 if a0 == 0\n      : @359 (gas: 1)\n 10808: jump @537\n      : @360 (gas: 8)\n 10811: a0 = u64 [s1 + 0xd0]\n 10815: a0 = a0 ^ 0xff\n 10819: t2 = u64 [s1 + 0xc0]\n 10823: t0 = a0 | t2\n 10826: ra = u64 [s1 + 0xc8]\n 10830: a0 = t1 | ra\n 10833: a0 = t0 | a0\n 10836: jump @362 if a0 != 0\n      : @361 (gas: 1)\n 10839: jump @537\n      : @362 (gas: 18)\n 10842: a3 = u64 [s1 + 0xd0]\n 10846: a2 = a3 + 0x1\n 10849: u64 [s1 + 0xd8] = a2\n 10853: a0 = a2 <u 0x1\n 10856: a0 = a0 + t1\n 10859: u64 [s1 + 0xb0] = a0\n 10863: a0 = a0 | a2\n 10866: a0 = a0 <u 0x1\n 10869: a0 = a0 + t2\n 10872: u64 [s1 + 0xa0] = a0\n 10876: a0 = a0 <u t2\n 10879: a0 = a0 + ra\n 10882: u64 [s1 + 0xa8] = a0\n 10886: a2 = 0xff - a3\n 10890: u64 [s1 + 0xb8] = a2\n 10894: a2 = 0x80 - a2\n 10898: a0 = u64 [s1 + 0x88]\n 10902: ra = 342, jump @921\n      : @363 [@dyn 171] (gas: 6)\n 10908: u64 [s1 + 0xc8] = a0\n 10912: u64 [s1 + 0xc0] = a1\n 10916: a0 = u64 [s1 + 0x80]\n 10920: a1 = u64 [s1 + 0x90]\n 10924: a2 = u64 [s1 + 0xb8]\n 10928: ra = 344, jump @926\n      : @364 [@dyn 172] (gas: 9)\n 10934: u64 [s1 + 0x78] = a0\n 10937: a0 = u64 [s1 + 0xc0]\n 10941: a0 = a0 | a1\n 10944: u64 [s1 + 0xc0] = a0\n 10948: a1 = u64 [s1 + 0xd0]\n 10952: a2 = 0x7f - a1\n 10955: a0 = u64 [s1 + 0x88]\n 10959: a1 = u64 [s1 + 0x98]\n 10963: ra = 346, jump @926\n      : @365 [@dyn 173] (gas: 18)\n 10969: a2 = u64 [s1 + 0xb8]\n 10973: a3 = a2 <u 0x80\n 10977: u64 [s1 + 0xd0] = a3\n 10981: a4 = u64 [s1 + 0xc0]\n 10985: a1 = a4 if a3 != 0\n 10988: a4 = u64 [s1 + 0x90]\n 10992: a1 = a4 if a2 == 0\n 10995: u64 [s1 + 0xc0] = a1\n 10999: a1 = u64 [s1 + 0xc8]\n 11003: a4 = u64 [s1 + 0x78]\n 11006: a1 = a1 | a4\n 11009: a1 = a0 if a3 == 0\n 11012: a0 = u64 [s1 + 0x80]\n 11016: a1 = a0 if a2 == 0\n 11019: u64 [s1 + 0xc8] = a1\n 11023: a0 = u64 [s1 + 0x88]\n 11027: a1 = u64 [s1 + 0x98]\n 11031: ra = 348, jump @926\n      : @366 [@dyn 174] (gas: 13)\n 11037: a3 = u64 [s1 + 0xa0]\n 11041: a4 = u64 [s1 + 0xa8]\n 11045: a2 = u64 [s1 + 0xb0]\n 11049: a2 = a2 | a4\n 11052: a5 = u64 [s1 + 0xd8]\n 11056: a5 = a5 | a3\n 11059: a2 = a2 | a5\n 11062: a3 = u64 [s1 + 0xd0]\n 11066: a1 = 0 if a3 == 0\n 11068: u64 [s1 + 0xb8] = a1\n 11072: a0 = 0 if a3 == 0\n 11074: u64 [s1 + 0xd0] = a0\n 11078: jump @368 if a2 == 0\n      : @367 (gas: 1)\n 11081: jump @530\n      : @368 (gas: 3)\n 11084: a5 = 0\n 11086: u64 [s1 + 120] = 0\n 11089: jump @536\n      : @369 (gas: 10)\n 11092: u64 [a2 + 1952] = 0\n 11096: u64 [a2 + 1944] = 0\n 11100: u64 [a2 + 1936] = 0\n 11104: u64 [a2 + 1928] = 0\n 11108: a0 = s1 + 0x2000\n 11112: i32 a0 = a0 + 0\n 11114: ra = 0x15e\n 11118: ecalli 16 // 'value_transferred'\n 11120: t0 = 0x160\n 11124: jump @917\n      : @370 [@dyn 175] (gas: 1)\n 11127: t0 = 352, jump @917\n      : @371 [@dyn 176] (gas: 1)\n 11133: t0 = 354, jump @909\n      : @372 [@dyn 177] (gas: 1)\n 11139: jump @374 if a0 == 0\n      : @373 (gas: 1)\n 11142: jump @690\n      : @374 (gas: 3)\n 11145: a0 = u64 [s1 + 0xd8]\n 11149: a0 = i32 [a0]\n 11151: jump @376 if a0 >u 3\n      : @375 (gas: 1)\n 11155: jump @691\n      : @376 (gas: 4)\n 11158: a0 = s1 + 0x7ff\n 11162: a0 = a0 + 0x7c1\n 11166: a1 = 0x40\n 11169: ra = 356, jump @7\n      : @377 [@dyn 178] (gas: 12)\n 11175: a0 = s1 + 0x7ff\n 11179: a0 = a0 + 0x61\n 11182: a2 = a0 + 0x700\n 11186: a1 = u64 [a2 + 0x78]\n 11189: u64 [s1 + 0xd8] = a1\n 11193: a1 = u64 [a2 + 0x70]\n 11196: u64 [s1 + 0xd0] = a1\n 11200: a1 = u64 [a2 + 0x68]\n 11203: u64 [s1 + 0xc0] = a1\n 11207: a0 = u64 [a2 + 0x60]\n 11210: u64 [s1 + 0xc8] = a0\n 11214: ra = 358, jump @0\n      : @378 [@dyn 179] (gas: 7)\n 11220: a0 = u64 [s1 + 0xd8]\n 11224: a1 = u64 [s1 + 0xc0]\n 11228: a0 = a0 | a1\n 11231: a1 = u64 [s1 + 0xc8]\n 11235: a3 = a1\n 11237: a2 = u64 [s1 + 0xd0]\n 11241: t0 = 360, jump @914\n      : @379 [@dyn 180] (gas: 1)\n 11247: jump @381 if a0 != 0\n      : @380 (gas: 1)\n 11250: jump @692\n      : @381 (gas: 1)\n 11253: trap\n      : @382 (gas: 3)\n 11254: a0 = s1 + 0x13c0\n 11258: a1 = u64 [s1 + 0xd8]\n 11262: ra = 362, jump @11\n      : @383 [@dyn 181] (gas: 25)\n 11268: a3 = s1 + 0x1078\n 11272: a4 = a3 + 0x300\n 11276: a0 = u64 [a4 + 0x50]\n 11279: a1 = u64 [a4 + 0x60]\n 11282: a2 = u64 [a4 + 0x48]\n 11285: a3 = u64 [a4 + 0x58]\n 11288: a5 = u64 [s1 + 0xb0]\n 11292: a4 = a5 ^ a0\n 11295: a0 = a0 <u a5\n 11298: a5 = u64 [s1 + 0xa8]\n 11302: a2 = a2 <u a5\n 11305: a2 = a0 if a4 != 0\n 11308: a0 = u64 [s1 + 0xb8]\n 11312: t0 = a3 <u a0\n 11315: a5 = u64 [s1 + 0xc0]\n 11319: a4 = a5 ^ a1\n 11322: a1 = a1 <u a5\n 11325: a1 = t0 if a4 == 0\n 11328: a0 = a0 ^ a3\n 11331: a0 = a0 | a4\n 11334: a1 = a2 if a0 == 0\n 11337: u64 [s1 + 0x90] = a1\n 11341: a0 = s1 + 0x13a0\n 11345: a1 = 0x40\n 11348: ra = 364, jump @7\n      : @384 [@dyn 182] (gas: 8)\n 11354: t0 = s1 + 0x1078\n 11358: a0 = t0 + 0x300\n 11362: a2 = u64 [a0 + 0x40]\n 11365: a5 = u64 [a0 + 0x38]\n 11368: a4 = u64 [a0 + 0x30]\n 11371: a3 = u64 [a0 + 0x28]\n 11374: a0 = u64 [s1 + 0x90]\n 11378: jump @440 if a0 == 0\n      : @385 (gas: 8)\n 11382: a0 = a3 | a5\n 11385: a1 = a4 | a2\n 11388: a0 = a0 | a1\n 11391: a0 = a0 >> 0x20\n 11394: a1 = a1 | a5\n 11397: a1 = a1 << 0x20\n 11400: a0 = a0 | a1\n 11403: jump @381 if a0 != 0\n      : @386 (gas: 12)\n 11407: u64 [t0 + 120] = 0\n 11410: u64 [t0 + 112] = 0\n 11413: u64 [t0 + 104] = 0\n 11416: a0 = 0x8c379a000000000\n 11426: a1 = s1 + 0x10e0\n 11430: u64 [t0 + 0x80] = a0\n 11434: a0 = a3\n 11436: u64 [s1 + 0x88] = a3\n 11440: u64 [s1 + 0x80] = a4\n 11444: u64 [s1 + 0x78] = a5\n 11447: u64 [s1 + 0x70] = a2\n 11450: ra = 366, jump @9\n      : @387 [@dyn 183] (gas: 11)\n 11456: a1 = u64 [s1 + 0x88]\n 11460: a0 = u64 [s1 + 0x70]\n 11463: a3 = u64 [s1 + 0x78]\n 11466: a3 = a3 | a0\n 11469: a4 = 0x100000000\n 11479: a0 = 0xfffffffc\n 11489: a0 = a1 <u a0\n 11492: a2 = u64 [s1 + 0x80]\n 11496: a0 = 0 if a2 != 0\n 11498: a0 = 0 if a3 != 0\n 11500: jump @381 if a0 == 0\n      : @388 (gas: 11)\n 11504: i32 a0 = a1 + 0x4\n 11507: a2 = s1 + 0x1078\n 11511: a5 = 0\n 11513: u64 [a2 + 96] = 0\n 11516: u64 [a2 + 88] = 0\n 11519: u64 [a2 + 72] = 0x20\n 11523: a1 = s1 + 0x10c0\n 11527: u64 [a2 + 80] = 0\n 11530: u64 [s1 + 0xd8] = a3\n 11534: u64 [s1 + 0xd0] = a4\n 11538: ra = 368, jump @9\n      : @389 [@dyn 184] (gas: 9)\n 11544: a3 = u64 [s1 + 0xd8]\n 11548: a2 = u64 [s1 + 0x80]\n 11552: a1 = u64 [s1 + 0x88]\n 11556: a0 = u64 [s1 + 0xd0]\n 11560: a0 = a0 + 0xffffffffffffffdc\n 11563: a0 = a1 <u a0\n 11566: a0 = 0 if a2 != 0\n 11568: a0 = 0 if a3 != 0\n 11570: jump @381 if a0 == 0\n      : @390 (gas: 8)\n 11574: i32 a0 = a1 + 0x24\n 11577: a3 = s1 + 0x1078\n 11581: u64 [a3 + 64] = 0\n 11584: u64 [a3 + 56] = 0\n 11587: u64 [a3 + 40] = 0x19\n 11591: a1 = s1 + 0x10a0\n 11595: u64 [a3 + 48] = 0\n 11598: ra = 370, jump @9\n      : @391 [@dyn 185] (gas: 8)\n 11604: a3 = u64 [s1 + 0x88]\n 11608: a0 = 0xffffffbc\n 11618: a0 = a3 <u a0\n 11621: a1 = u64 [s1 + 0x80]\n 11625: a0 = 0 if a1 != 0\n 11627: a1 = u64 [s1 + 0xd8]\n 11631: a0 = 0 if a1 != 0\n 11633: jump @381 if a0 == 0\n      : @392 (gas: 12)\n 11637: i32 a0 = a3 + 0x44\n 11640: a1 = u64 [0x200c0]\n 11645: a2 = u64 [0x200c8]\n 11650: a3 = u64 [0x200d0]\n 11655: a4 = s1 + 0x1078\n 11659: u64 [a4 + 0x20] = a1\n 11662: u64 [a4 + 0x18] = a2\n 11665: u64 [a4 + 0x10] = a3\n 11668: a2 = 0x6e00000000000000\n 11678: a1 = s1 + 0x1080\n 11682: u64 [a4 + 0x8] = a2\n 11685: ra = 372, jump @9\n      : @393 [@dyn 186] (gas: 4)\n 11691: a1 = 0x64\n 11694: a0 = u64 [s1 + 0x88]\n 11698: ra = 0x236\n 11702: jump @18\n      : @394 (gas: 5)\n 11705: a0 = u64 [s1 + 0xb0]\n 11709: ra = 0x176\n 11713: ecalli 5 // 'caller'\n 11715: t0 = 0x178\n 11719: jump @894\n      : @395 [@dyn 187] (gas: 1)\n 11722: t0 = 376, jump @894\n      : @396 [@dyn 188] (gas: 7)\n 11728: u64 [s1 + 1656] = 0\n 11732: u64 [s1 + 0x670] = a1\n 11736: u64 [s1 + 0x668] = a0\n 11740: a1 = s1 + 0x660\n 11744: u64 [s1 + 0x660] = a3\n 11748: a0 = 0\n 11750: ra = 378, jump @9\n      : @397 [@dyn 189] (gas: 7)\n 11756: u64 [s1 + 1624] = 0\n 11760: u64 [s1 + 1616] = 0\n 11764: u64 [s1 + 1600] = 0x2\n 11769: a0 = 0x20\n 11772: a1 = s1 + 0x640\n 11776: u64 [s1 + 1608] = 0\n 11780: ra = 380, jump @9\n      : @398 [@dyn 190] (gas: 3)\n 11786: a2 = u64 [s1 + 0x98]\n 11790: a0 = i32 [a2]\n 11792: jump @400 if a0 >u 63\n      : @399 (gas: 2)\n 11796: u32 [a2 + 0] = 0x40\n 11799: fallthrough\n      : @400 (gas: 12)\n 11800: a0 = sp + 0xffffffffffffffe0\n 11803: a0 = a0 & 0xffffffffffffffe0\n 11806: u64 [s1 + 0xa8] = a0\n 11810: sp = a0\n 11812: i32 a2 = a0 + 0\n 11814: a1 = 0x40\n 11817: a0 = u64 [s1 + 0xa0]\n 11821: ra = 0x17e\n 11825: ecalli 9 // 'hash_keccak_256'\n 11827: a3 = u64 [s1 + 0xa8]\n 11831: t0 = 0x180\n 11835: jump @898\n      : @401 [@dyn 191] (gas: 2)\n 11838: a3 = u64 [s1 + 0xa8]\n 11842: t0 = 384, jump @898\n      : @402 [@dyn 192] (gas: 7)\n 11848: u64 [a5 + 0xe0] = a3\n 11852: u64 [a5 + 0xd8] = a2\n 11856: u64 [a5 + 0xd0] = a1\n 11860: u64 [a5 + 0xc8] = a0\n 11864: a0 = s1 + 0x620\n 11868: a1 = s1 + 0x1c40\n 11872: ra = 386, jump @11\n      : @403 [@dyn 193] (gas: 13)\n 11878: a0 = u64 [s1 + 0x620]\n 11882: u64 [s1 + 0xa8] = a0\n 11886: a0 = u64 [s1 + 0x628]\n 11890: u64 [s1 + 0x90] = a0\n 11894: a0 = u64 [s1 + 0x630]\n 11898: u64 [s1 + 0x88] = a0\n 11902: a0 = u64 [s1 + 0x638]\n 11906: u64 [s1 + 0x80] = a0\n 11910: a0 = u64 [s1 + 0xb0]\n 11914: ra = 0x184\n 11918: ecalli 5 // 'caller'\n 11920: t0 = 0x186\n 11924: jump @894\n      : @404 [@dyn 194] (gas: 1)\n 11927: t0 = 390, jump @894\n      : @405 [@dyn 195] (gas: 27)\n 11933: u64 [s1 + 1528] = 0\n 11937: u64 [s1 + 0x5f0] = a1\n 11941: u64 [s1 + 0x5e8] = a0\n 11945: a0 = s1 + 0x600\n 11949: a1 = s1 + 0x5e0\n 11953: u64 [s1 + 0x5e0] = a3\n 11957: ra = 0x188\n 11961: sp = sp + 0xfffffffffffffcc0\n 11965: a2 = sp + 0x300\n 11969: u64 [a2 + 0x38] = ra\n 11972: u64 [a2 + 0x30] = s0\n 11975: u64 [a2 + 0x28] = s1\n 11978: s0 = sp + 0x340\n 11982: sp = sp & 0xffffffffffffffe0\n 11985: s1 = sp\n 11987: a2 = u64 [a1]\n 11989: a3 = u64 [a1 + 0x8]\n 11992: a1 = u32 [a1 + 0x10]\n 11995: u64 [s1 + 0x8] = a0\n 11998: u64 [s1 + 664] = 0\n 12002: u64 [s1 + 0x290] = a1\n 12006: u64 [s1 + 0x288] = a3\n 12010: a1 = s1 + 0x280\n 12014: u64 [s1 + 0x280] = a2\n 12018: a0 = 0\n 12020: ra = 0x336\n 12024: jump @9\n      : @406 [@dyn 196] (gas: 21)\n 12027: a4 = s1 + 0x600\n 12031: a0 = u64 [a4]\n 12033: a1 = u64 [a4 + 0x8]\n 12036: a2 = u64 [a4 + 0x10]\n 12039: a3 = u64 [a4 + 0x18]\n 12042: u64 [s1 + 0x598] = a3\n 12046: u64 [s1 + 0x590] = a2\n 12050: u64 [s1 + 0x588] = a1\n 12054: u64 [s1 + 0x580] = a0\n 12058: a0 = u64 [s1 + 0x80]\n 12062: u64 [s1 + 0x5b8] = a0\n 12066: a0 = u64 [s1 + 0x88]\n 12070: u64 [s1 + 0x5b0] = a0\n 12074: a0 = u64 [s1 + 0x90]\n 12078: u64 [s1 + 0x5a8] = a0\n 12082: a0 = s1 + 0x5c0\n 12086: a1 = s1 + 0x5a0\n 12090: a2 = s1 + 0x580\n 12094: a3 = u64 [s1 + 0xa8]\n 12098: u64 [s1 + 0x5a0] = a3\n 12102: ra = 394, jump @782\n      : @407 [@dyn 197] (gas: 21)\n 12108: a1 = s1 + 0x500\n 12112: a0 = u64 [a1 + 0xd8]\n 12116: t0 = u64 [s1 + 0x5c0]\n 12120: a2 = u64 [a1 + 0xd0]\n 12124: a3 = u64 [a1 + 0xc8]\n 12128: a5 = u64 [s1 + 0xd0]\n 12132: a4 = a5 ^ a0\n 12135: a1 = a0 <u a5\n 12138: a0 = u64 [s1 + 0xc8]\n 12142: a5 = a2 <u a0\n 12145: a5 = a1 if a4 != 0\n 12148: a1 = u64 [s1 + 0xc0]\n 12152: t1 = a1 ^ a3\n 12155: a3 = a3 <u a1\n 12158: a1 = u64 [s1 + 0xb8]\n 12162: a1 = t0 <u a1\n 12165: a1 = a3 if t1 != 0\n 12168: a0 = a0 ^ a2\n 12171: a0 = a0 | a4\n 12174: a1 = a5 if a0 != 0\n 12177: jump @474 if a1 == 0\n      : @408 (gas: 3)\n 12181: a0 = s1 + 0x2a0\n 12185: a1 = 0x40\n 12188: ra = 396, jump @7\n      : @409 [@dyn 198] (gas: 6)\n 12194: a1 = s1 + 0x200\n 12198: a4 = u64 [a1 + 0xb8]\n 12202: a5 = u64 [a1 + 0xb0]\n 12206: a3 = u64 [a1 + 0xa8]\n 12210: a0 = u64 [a1 + 0xa0]\n 12214: t0 = 398, jump @904\n      : @410 [@dyn 199] (gas: 1)\n 12220: jump @381 if a1 != 0\n      : @411 (gas: 11)\n 12224: u64 [s1 + 656] = 0\n 12228: u64 [s1 + 648] = 0\n 12232: u64 [s1 + 640] = 0\n 12236: a2 = 0x8c379a000000000\n 12246: a1 = s1 + 0x280\n 12250: u64 [s1 + 0x298] = a2\n 12254: u64 [s1 + 0xd8] = a0\n 12258: u64 [s1 + 0xd0] = a3\n 12262: u64 [s1 + 0xc8] = a4\n 12266: u64 [s1 + 0xc0] = a5\n 12270: ra = 400, jump @9\n      : @412 [@dyn 200] (gas: 5)\n 12276: a1 = u64 [s1 + 0xd8]\n 12280: a0 = u64 [s1 + 0xc8]\n 12284: a3 = u64 [s1 + 0xc0]\n 12288: a3 = a3 | a0\n 12291: t0 = 402, jump @897\n      : @413 [@dyn 201] (gas: 1)\n 12297: jump @381 if a0 == 0\n      : @414 (gas: 9)\n 12301: i32 a0 = a1 + 0x4\n 12304: u64 [s1 + 632] = 0\n 12308: u64 [s1 + 624] = 0\n 12312: u64 [s1 + 608] = 0x20\n 12317: a1 = s1 + 0x260\n 12321: u64 [s1 + 616] = 0\n 12325: u64 [s1 + 0xc8] = a3\n 12329: u64 [s1 + 0xc0] = a4\n 12333: ra = 404, jump @9\n      : @415 [@dyn 202] (gas: 4)\n 12339: a1 = u64 [s1 + 0xd8]\n 12343: a0 = u64 [s1 + 0xc0]\n 12347: a0 = a0 + 0xffffffffffffffdc\n 12350: t0 = 406, jump @913\n      : @416 [@dyn 203] (gas: 1)\n 12356: jump @381 if a0 == 0\n      : @417 (gas: 7)\n 12360: i32 a0 = a1 + 0x24\n 12363: u64 [s1 + 600] = 0\n 12367: u64 [s1 + 592] = 0\n 12371: u64 [s1 + 576] = 0x2c\n 12376: a1 = s1 + 0x240\n 12380: u64 [s1 + 584] = 0\n 12384: ra = 408, jump @9\n      : @418 [@dyn 204] (gas: 9)\n 12390: a4 = u64 [s1 + 0xc8]\n 12394: a3 = u64 [s1 + 0xd0]\n 12398: a1 = u64 [s1 + 0xd8]\n 12402: a2 = 0x100000000\n 12412: a0 = 0xffffffbc\n 12422: a0 = a1 <u a0\n 12425: a0 = 0 if a3 != 0\n 12427: a0 = 0 if a4 != 0\n 12429: jump @381 if a0 == 0\n      : @419 (gas: 13)\n 12433: i32 a0 = a1 + 0x44\n 12436: a1 = u64 [0x20160]\n 12441: a4 = s1 + 0x200\n 12445: u64 [a4 + 0x38] = a1\n 12448: a1 = u64 [0x20168]\n 12453: u64 [s1 + 0xc0] = a2\n 12457: a2 = u64 [0x20170]\n 12462: a3 = u64 [0x20178]\n 12467: u64 [a4 + 0x30] = a1\n 12470: u64 [a4 + 0x28] = a2\n 12473: a1 = s1 + 0x220\n 12477: u64 [a4 + 0x20] = a3\n 12480: ra = 410, jump @9\n      : @420 [@dyn 205] (gas: 4)\n 12486: a2 = u64 [s1 + 0xd8]\n 12490: a0 = u64 [s1 + 0xc0]\n 12494: a0 = a0 + 0xffffffffffffff9c\n 12497: t0 = 412, jump @907\n      : @421 [@dyn 206] (gas: 1)\n 12503: jump @381 if a0 == 0\n      : @422 (gas: 10)\n 12507: i32 a0 = a2 + 0x64\n 12510: a1 = u64 [0x20180]\n 12515: u64 [s1 + 520] = 0\n 12519: u64 [s1 + 0x218] = a1\n 12523: a1 = 0x6c6f616e00000000\n 12533: u64 [s1 + 0x210] = a1\n 12537: a1 = s1 + 0x200\n 12541: u64 [s1 + 512] = 0\n 12545: ra = 0x1b0\n 12549: jump @9\n      : @423 (gas: 4)\n 12552: a0 = s1 + 0x7ff\n 12556: a0 = a0 + 0x6a1\n 12560: a1 = 0x40\n 12563: ra = 414, jump @7\n      : @424 [@dyn 207] (gas: 8)\n 12569: a0 = s1 + 0x7ff\n 12573: a0 = a0 + 0x61\n 12576: a1 = a0 + 0x600\n 12580: a4 = u64 [a1 + 0x58]\n 12583: a5 = u64 [a1 + 0x50]\n 12586: a3 = u64 [a1 + 0x48]\n 12589: a0 = u64 [a1 + 0x40]\n 12592: t0 = 416, jump @904\n      : @425 [@dyn 208] (gas: 3)\n 12598: a2 = s1 + 0x7ff\n 12602: a2 = a2 + 0x61\n 12605: jump @381 if a1 != 0\n      : @426 (gas: 12)\n 12609: u64 [a2 + 1584] = 0\n 12613: u64 [a2 + 1576] = 0\n 12617: u64 [a2 + 1568] = 0\n 12621: u64 [s1 + 0xd0] = a3\n 12625: a3 = 0x8c379a000000000\n 12635: a1 = s1 + 0x7ff\n 12639: a1 = a1 + 0x681\n 12643: u64 [a2 + 0x638] = a3\n 12647: u64 [s1 + 0xd8] = a0\n 12651: u64 [s1 + 0xc8] = a4\n 12655: u64 [s1 + 0xc0] = a5\n 12659: ra = 418, jump @9\n      : @427 [@dyn 209] (gas: 5)\n 12665: a1 = u64 [s1 + 0xd8]\n 12669: a0 = u64 [s1 + 0xc8]\n 12673: a3 = u64 [s1 + 0xc0]\n 12677: a3 = a3 | a0\n 12680: t0 = 420, jump @897\n      : @428 [@dyn 210] (gas: 1)\n 12686: jump @381 if a0 == 0\n      : @429 (gas: 12)\n 12690: i32 a0 = a1 + 0x4\n 12693: a2 = s1 + 0x7ff\n 12697: a2 = a2 + 0x61\n 12700: u64 [a2 + 1560] = 0\n 12704: u64 [a2 + 1552] = 0\n 12708: u64 [a2 + 1536] = 0x20\n 12713: a1 = s1 + 0x7ff\n 12717: a1 = a1 + 0x661\n 12721: u64 [a2 + 1544] = 0\n 12725: u64 [s1 + 0xc8] = a3\n 12729: u64 [s1 + 0xc0] = a4\n 12733: ra = 422, jump @9\n      : @430 [@dyn 211] (gas: 4)\n 12739: a1 = u64 [s1 + 0xd8]\n 12743: a0 = u64 [s1 + 0xc0]\n 12747: a0 = a0 + 0xffffffffffffffdc\n 12750: t0 = 424, jump @913\n      : @431 [@dyn 212] (gas: 1)\n 12756: jump @381 if a0 == 0\n      : @432 (gas: 10)\n 12760: i32 a0 = a1 + 0x24\n 12763: a2 = s1 + 0x7ff\n 12767: a2 = a2 + 0x61\n 12770: u64 [a2 + 1528] = 0\n 12774: u64 [a2 + 1520] = 0\n 12778: u64 [a2 + 1504] = 0x22\n 12783: a1 = s1 + 0x7ff\n 12787: a1 = a1 + 0x641\n 12791: u64 [a2 + 1512] = 0\n 12795: ra = 426, jump @9\n      : @433 [@dyn 213] (gas: 9)\n 12801: a2 = u64 [s1 + 0xc8]\n 12805: a3 = u64 [s1 + 0xd0]\n 12809: a1 = u64 [s1 + 0xd8]\n 12813: a4 = 0x100000000\n 12823: a0 = 0xffffffbc\n 12833: a0 = a1 <u a0\n 12836: a0 = 0 if a3 != 0\n 12838: a0 = 0 if a2 != 0\n 12840: jump @381 if a0 == 0\n      : @434 (gas: 16)\n 12844: i32 a0 = a1 + 0x44\n 12847: a1 = u64 [0x200e8]\n 12852: u64 [s1 + 0xc0] = a4\n 12856: a4 = s1 + 0x7ff\n 12860: a4 = a4 + 0x61\n 12863: a5 = a4 + 0x500\n 12867: u64 [a5 + 0xd8] = a1\n 12871: a1 = u64 [0x200f0]\n 12876: a2 = u64 [0x200f8]\n 12881: a3 = u64 [0x20100]\n 12886: u64 [a5 + 0xd0] = a1\n 12890: u64 [a5 + 0xc8] = a2\n 12894: a1 = s1 + 0x7ff\n 12898: a1 = a1 + 0x621\n 12902: u64 [a5 + 0xc0] = a3\n 12906: ra = 428, jump @9\n      : @435 [@dyn 214] (gas: 4)\n 12912: a2 = u64 [s1 + 0xd8]\n 12916: a0 = u64 [s1 + 0xc0]\n 12920: a0 = a0 + 0xffffffffffffff9c\n 12923: t0 = 430, jump @907\n      : @436 [@dyn 215] (gas: 1)\n 12929: jump @381 if a0 == 0\n      : @437 (gas: 11)\n 12933: i32 a0 = a2 + 0x64\n 12936: a3 = s1 + 0x7ff\n 12940: a3 = a3 + 0x61\n 12943: u64 [a3 + 1456] = 0\n 12947: u64 [a3 + 1448] = 0\n 12951: a1 = 0x7374000000000000\n 12961: u64 [a3 + 0x5b8] = a1\n 12965: a1 = s1 + 0x7ff\n 12969: a1 = a1 + 0x601\n 12973: u64 [a3 + 1440] = 0\n 12977: ra = 432, jump @9\n      : @438 [@dyn 216] (gas: 3)\n 12983: a1 = 0x84\n 12987: a0 = u64 [s1 + 0xd8]\n 12991: ra = 434, jump @18\n      : @439 [@dyn 217] (gas: 5)\n 12997: i32 a1 = a0 + 0\n 12999: a0 = 0x1\n 13002: a2 = 0x84\n 13006: ecalli 13 // 'seal_return'\n 13008: fallthrough\n      : @440 (gas: 8)\n 13009: a0 = a3 | a5\n 13012: a1 = a4 | a2\n 13015: a0 = a0 | a1\n 13018: a0 = a0 >> 0x20\n 13021: a1 = a1 | a5\n 13024: a1 = a1 << 0x20\n 13027: a0 = a0 | a1\n 13030: jump @381 if a0 != 0\n      : @441 (gas: 12)\n 13034: u64 [t0 + 792] = 0\n 13038: u64 [t0 + 784] = 0\n 13042: u64 [t0 + 776] = 0\n 13046: a0 = 0x23b872dd00000000\n 13056: a1 = s1 + 0x1380\n 13060: u64 [t0 + 0x320] = a0\n 13064: a0 = a3\n 13066: u64 [s1 + 0x88] = a3\n 13070: u64 [s1 + 0x80] = a4\n 13074: u64 [s1 + 0x78] = a5\n 13077: u64 [s1 + 0x70] = a2\n 13080: ra = 436, jump @9\n      : @442 [@dyn 218] (gas: 6)\n 13086: a0 = u64 [s1 + 0xa0]\n 13090: ra = 0x1b6\n 13094: ecalli 0 // 'address'\n 13095: a2 = u64 [s1 + 0xd0]\n 13099: t0 = 0x1b8\n 13103: jump @905\n      : @443 [@dyn 219] (gas: 2)\n 13106: a2 = u64 [s1 + 0xd0]\n 13110: t0 = 440, jump @905\n      : @444 [@dyn 220] (gas: 14)\n 13116: u64 [s1 + 0x90] = a1\n 13120: a0 = a0 >> 0x20\n 13123: a1 = reverse a2\n 13125: a2 = a1 << 0x20\n 13128: a0 = a0 | a2\n 13131: u64 [s1 + 0x68] = a0\n 13134: a1 = a1 >> 0x20\n 13137: u64 [s1 + 0x60] = a1\n 13140: a0 = u64 [s1 + 0xa0]\n 13144: ra = 0x1ba\n 13148: ecalli 5 // 'caller'\n 13150: a2 = u64 [s1 + 0xd0]\n 13154: t0 = 0x1bc\n 13158: jump @896\n      : @445 [@dyn 221] (gas: 2)\n 13161: a2 = u64 [s1 + 0xd0]\n 13165: t0 = 444, jump @896\n      : @446 [@dyn 222] (gas: 50)\n 13171: t0 = a1 | a0\n 13174: a3 = a3 >> 0x20\n 13177: a2 = reverse a2\n 13179: a1 = a2 << 0x20\n 13182: t1 = a1 | a3\n 13185: t2 = a2 >> 0x20\n 13188: a0 = u64 [s1 + 0x88]\n 13192: a3 = a0 + 0x4\n 13195: a5 = a3 <u a0\n 13198: a0 = u64 [s1 + 0x80]\n 13202: a4 = a0 + a5\n 13205: a0 = a4 <u a0\n 13208: a0 = a5 if a5 == 0\n 13211: a1 = u64 [s1 + 0x78]\n 13214: a0 = a0 + a1\n 13217: a5 = a0 <u a1\n 13220: a1 = u64 [s1 + 0x70]\n 13223: a5 = a5 + a1\n 13226: a1 = s1 + 0x1078\n 13230: a2 = u64 [s1 + 0x60]\n 13233: u64 [a1 + 0x298] = a2\n 13237: a2 = u64 [s1 + 0x68]\n 13240: u64 [a1 + 0x290] = a2\n 13244: a2 = u64 [s1 + 0x90]\n 13248: u64 [a1 + 0x288] = a2\n 13252: a2 = a1 + 0x200\n 13256: u64 [a2 + 0xe0] = a5\n 13260: u64 [a2 + 0xd8] = a0\n 13264: a0 = u64 [s1 + 0xc0]\n 13268: u64 [a2 + 0x80] = a0\n 13272: a0 = u64 [s1 + 0xb8]\n 13276: u64 [a2 + 0x78] = a0\n 13279: a0 = u64 [s1 + 0xb0]\n 13283: u64 [a2 + 0x70] = a0\n 13286: a0 = u64 [s1 + 0xa8]\n 13290: u64 [a2 + 0x68] = a0\n 13293: u64 [a1 + 672] = 0\n 13297: u64 [a2 + 0xd0] = a4\n 13301: u64 [a2 + 0xc8] = a3\n 13305: u64 [a1 + 0x2b8] = t2\n 13309: u64 [a1 + 0x2b0] = t1\n 13313: u64 [a1 + 0x2a8] = t0\n 13317: a5 = a1\n 13319: a0 = s1 + 0x1360\n 13323: a1 = s1 + 0x1340\n 13327: a2 = s1 + 0x1320\n 13331: a3 = s1 + 0x1300\n 13335: a4 = s1 + 0x12e0\n 13339: u64 [a5 + 704] = 0\n 13343: ra = 446, jump @824\n      : @447 [@dyn 223] (gas: 28)\n 13349: a1 = s1 + 0x1078\n 13353: a0 = u64 [a1 + 0x2f0]\n 13357: t0 = u64 [a1 + 0x300]\n 13361: t1 = u64 [a1 + 0x2e8]\n 13365: a3 = u64 [a1 + 0x2f8]\n 13369: a1 = u64 [s1 + 0x80]\n 13373: a4 = a0 ^ a1\n 13376: a5 = a0 <u a1\n 13379: ra = u64 [s1 + 0x88]\n 13383: t2 = t1 <u ra\n 13386: a5 = t2 if a4 == 0\n 13389: a2 = u64 [s1 + 0x78]\n 13392: a4 = a3 - a2\n 13395: a3 = a3 <u a2\n 13398: a2 = u64 [s1 + 0x70]\n 13401: a2 = t0 - a2\n 13404: a2 = a2 - a3\n 13407: a3 = a4 <u a5\n 13410: a2 = a2 - a3\n 13413: u64 [s1 + 0x68] = a2\n 13416: a4 = a4 - a5\n 13419: u64 [s1 + 0x60] = a4\n 13422: a0 = a0 - a1\n 13425: a0 = a0 - t2\n 13428: u64 [s1 + 0x58] = a0\n 13431: a0 = t1 - ra\n 13434: u64 [s1 + 0x90] = a0\n 13438: ra = 448, jump @0\n      : @448 [@dyn 224] (gas: 8)\n 13444: a1 = u64 [0x30210]\n 13449: u64 [s1 + 0x50] = a1\n 13452: a1 = u64 [0x30220]\n 13457: u64 [s1 + 0x48] = a1\n 13460: a0 = u64 [0x30218]\n 13465: u64 [s1 + 0x40] = a0\n 13468: ecalli 10 // 'ref_time_left'\n 13470: fallthrough\n      : @449 (gas: 35)\n 13471: a0 = u64 [s1 + 0x40]\n 13474: a0 = reverse a0\n 13476: a1 = a0 << 0x20\n 13479: a2 = u64 [s1 + 0x48]\n 13482: a2 = reverse a2\n 13484: a2 = a2 >> 0x20\n 13487: a1 = a1 | a2\n 13490: a0 = a0 >> 0x20\n 13493: a2 = u64 [s1 + 0x50]\n 13496: a2 = reverse a2\n 13498: a3 = a2 << 0x20\n 13501: a0 = a0 | a3\n 13504: a3 = u64 [s1 + 0xd0]\n 13508: a2 = a2 >> 0x20\n 13511: u32 [a3 + 0x10] = a2\n 13514: u64 [a3 + 0x8] = a0\n 13517: u64 [a3] = a1\n 13519: a2 = s1 + 0x2078\n 13523: u64 [a2 + 0] = 0\n 13525: u64 [a2 + 4294967288] = 0\n 13528: u64 [a2 + 4294967280] = 0\n 13531: a0 = u64 [s1 + 0x90]\n 13535: t0 = a0\n 13537: a5 = u64 [s1 + 0x60]\n 13540: a0 = a0 | a5\n 13543: a1 = u64 [s1 + 0x68]\n 13546: a4 = u64 [s1 + 0x58]\n 13549: a1 = a1 | a4\n 13552: a0 = a0 | a1\n 13555: a0 = a0 >> 0x20\n 13558: a1 = a1 | a5\n 13561: a1 = a1 << 0x20\n 13564: a0 = a0 | a1\n 13567: u64 [a2 + 4294967272] = 0\n 13570: jump @381 if a0 != 0\n      : @450 (gas: 3)\n 13574: a0 = u64 [s1 + 0x88]\n 13578: a1 = t0\n 13580: ra = 450, jump @18\n      : @451 [@dyn 225] (gas: 4)\n 13586: u64 [s1 + 0x68] = a0\n 13589: a1 = 0x20\n 13592: a0 = u64 [s1 + 0x88]\n 13596: ra = 452, jump @18\n      : @452 [@dyn 226] (gas: 33)\n 13602: a2 = s1 + 0x2078\n 13606: u32 [a2 + 8] = 0x20\n 13610: u64 [a2 + 64] = 0xffffffffffffffff\n 13614: u64 [a2 + 56] = 0xffffffffffffffff\n 13618: u64 [a2 + 48] = 0xffffffffffffffff\n 13622: u64 [a2 + 40] = 0xffffffffffffffff\n 13626: a1 = u64 [s1 + 0xd0]\n 13630: a1 = a1 << 0x20\n 13633: a1 = a1 >> 0x20\n 13636: a2 = 0x800000000\n 13646: t0 = a1 | a2\n 13649: a1 = s1 + 0x2060\n 13653: a1 = a1 << 0x20\n 13656: a1 = a1 >> 0x20\n 13659: a2 = s1 + 0x20a0\n 13663: a2 = a2 << 0x20\n 13666: a3 = a2 | a1\n 13669: a1 = u64 [s1 + 0x68]\n 13672: a1 = a1 << 0x20\n 13675: a1 = a1 >> 0x20\n 13678: a4 = u64 [s1 + 0x90]\n 13682: a4 = a4 << 0x20\n 13685: a4 = a4 | a1\n 13688: a0 = a0 << 0x20\n 13691: a0 = a0 >> 0x20\n 13694: a1 = s1 + 0x2080\n 13698: a1 = a1 << 0x20\n 13701: a5 = a1 | a0\n 13704: a1 = 0xffffffffffffffff\n 13707: a2 = 0xffffffffffffffff\n 13710: a0 = t0\n 13712: ecalli 1 // 'call'\n 13714: fallthrough\n      : @453 (gas: 1)\n 13715: jump @455 if a0 == 0\n      : @454 (gas: 1)\n 13718: jump @624\n      : @455 (gas: 2)\n 13721: ecalli 12 // 'return_data_size'\n 13723: fallthrough\n      : @456 (gas: 2)\n 13724: a1 = 0x20\n 13727: jump @458 if a0 >=u a1\n      : @457 (gas: 3)\n 13730: ecalli 12 // 'return_data_size'\n 13732: a1 = a0\n 13734: fallthrough\n      : @458 (gas: 18)\n 13735: a2 = s1 + 0x1078\n 13739: t0 = u64 [s1 + 0x88]\n 13743: a4 = u64 [s1 + 0x80]\n 13747: a5 = u64 [s1 + 0x78]\n 13750: a3 = u64 [s1 + 0x70]\n 13753: u64 [s1 + 0x68] = a1\n 13756: u64 [s1 + 144] = 0\n 13760: u64 [a2 + 0x208] = a1\n 13764: u64 [a2 + 0x228] = t0\n 13768: u64 [a2 + 528] = 0\n 13772: u64 [a2 + 0x230] = a4\n 13776: u64 [a2 + 536] = 0\n 13780: u64 [a2 + 0x238] = a5\n 13784: u64 [a2 + 544] = 0\n 13788: a0 = s1 + 0x12a0\n 13792: a1 = s1 + 0x1280\n 13796: u64 [a2 + 0x240] = a3\n 13800: ra = 454, jump @799\n      : @459 [@dyn 227] (gas: 35)\n 13806: t0 = u64 [s1 + 0x88]\n 13810: a0 = u64 [s1 + 0x68]\n 13813: ra = a0 + t0\n 13816: a1 = ra <u a0\n 13819: t1 = u64 [s1 + 0x80]\n 13823: a5 = u64 [s1 + 0x90]\n 13827: a2 = a5 + t1\n 13830: a2 = a2 + a1\n 13833: a3 = a2 ^ a5\n 13836: a4 = a2 <u a5\n 13839: a4 = a1 if a3 == 0\n 13842: a3 = u64 [s1 + 0x78]\n 13845: a1 = a5 + a3\n 13848: a4 = a4 + a1\n 13851: t2 = a4 <u a1\n 13854: a1 = a1 <u a5\n 13857: a0 = u64 [s1 + 0x70]\n 13860: a5 = a5 + a0\n 13863: a1 = a1 + a5\n 13866: t2 = t2 + a1\n 13869: a1 = s1 + 0x1078\n 13873: a5 = a1 + 0x100\n 13877: u64 [a5 + 0xb8] = a4\n 13881: u64 [a5 + 0xb0] = a2\n 13885: u64 [a1 + 0x1a8] = ra\n 13889: u64 [a5 + 0xe0] = a0\n 13893: u64 [a5 + 0xd8] = a3\n 13897: u64 [a1 + 0x1d0] = t1\n 13901: u64 [a1 + 0x1c8] = t0\n 13905: a3 = a1\n 13907: a0 = s1 + 0x1260\n 13911: a1 = s1 + 0x1240\n 13915: a2 = s1 + 0x1220\n 13919: u64 [a3 + 0x1c0] = t2\n 13923: ra = 456, jump @809\n      : @460 [@dyn 228] (gas: 7)\n 13929: a0 = sp + 0xffffffffffffffe0\n 13932: a0 = a0 & 0xffffffffffffffe0\n 13935: u64 [s1 + 0x90] = a0\n 13939: sp = a0\n 13941: a0 = s1 + 0x1200\n 13945: a1 = u64 [s1 + 0xd8]\n 13949: ra = 458, jump @11\n      : @461 [@dyn 229] (gas: 22)\n 13955: a5 = s1 + 0x1078\n 13959: a3 = u64 [a5 + 0x188]\n 13963: a0 = u64 [a5 + 0x190]\n 13967: a1 = u64 [a5 + 0x198]\n 13971: a2 = u64 [a5 + 0x1a0]\n 13975: a4 = u64 [s1 + 0xc0]\n 13979: u64 [a5 + 0x140] = a4\n 13983: a4 = u64 [s1 + 0xb8]\n 13987: u64 [a5 + 0x138] = a4\n 13991: a4 = u64 [s1 + 0xb0]\n 13995: u64 [a5 + 0x130] = a4\n 13999: a4 = u64 [s1 + 0xa8]\n 14003: u64 [a5 + 0x128] = a4\n 14007: a4 = a5 + 0x100\n 14011: u64 [a4 + 0x60] = a2\n 14014: u64 [a4 + 0x58] = a1\n 14017: u64 [a4 + 0x50] = a0\n 14020: a0 = s1 + 0x11e0\n 14024: a1 = s1 + 0x11c0\n 14028: a2 = s1 + 0x11a0\n 14032: u64 [a4 + 0x48] = a3\n 14035: ra = 460, jump @782\n      : @462 [@dyn 230] (gas: 17)\n 14041: a0 = s1 + 0x1078\n 14045: a1 = a0 + 0x100\n 14049: a2 = u64 [a1 + 0x78]\n 14052: u64 [s1 + 0x88] = a2\n 14056: a4 = u64 [a1 + 0x80]\n 14060: u64 [s1 + 0x78] = a4\n 14063: a3 = u64 [a1 + 0x68]\n 14066: u64 [s1 + 0x80] = a3\n 14070: a0 = u64 [a1 + 0x70]\n 14073: u64 [s1 + 0x70] = a0\n 14076: a1 = u64 [s1 + 0x90]\n 14080: u64 [a1 + 0x10] = a2\n 14083: u64 [a1 + 0x18] = a4\n 14086: u64 [a1] = a3\n 14088: u64 [a1 + 0x8] = a0\n 14091: a0 = u64 [s1 + 0xd8]\n 14095: ra = 462, jump @12\n      : @463 [@dyn 231] (gas: 8)\n 14101: a0 = u64 [s1 + 0x78]\n 14104: a1 = u64 [s1 + 0x70]\n 14107: a0 = a0 | a1\n 14110: a1 = u64 [s1 + 0x88]\n 14114: a2 = u64 [s1 + 0x80]\n 14118: a1 = a1 | a2\n 14121: a0 = a0 | a1\n 14124: jump @466 if a0 != 0\n      : @464 (gas: 3)\n 14127: a0 = s1 + 0x1180\n 14131: a1 = u64 [s1 + 0xc8]\n 14135: ra = 464, jump @11\n      : @465 [@dyn 232] (gas: 15)\n 14141: a3 = s1 + 0x1078\n 14145: a4 = a3 + 0x100\n 14149: a0 = u64 [a4 + 0x8]\n 14152: a1 = u64 [a4 + 0x20]\n 14155: a2 = u64 [a4 + 0x18]\n 14158: a3 = u64 [a4 + 0x10]\n 14161: a0 = a0 & 0xffffffffffffff00\n 14165: a4 = s1 + 0x2078\n 14169: u64 [a4 + 0x80] = a1\n 14173: u64 [a4 + 0x78] = a2\n 14176: u64 [a4 + 0x70] = a3\n 14179: u64 [a4 + 0x68] = a0\n 14182: a1 = s1 + 0x20e0\n 14186: a0 = u64 [s1 + 0xc8]\n 14190: ra = 466, jump @12\n      : @466 [@dyn 233] (gas: 3)\n 14196: a0 = s1 + 0x1160\n 14200: a1 = 0x40\n 14203: ra = 468, jump @7\n      : @467 [@dyn 234] (gas: 6)\n 14209: a3 = s1 + 0x1078\n 14213: a0 = u64 [a3 + 0x100]\n 14217: a1 = u64 [a3 + 0xf8]\n 14221: a2 = u64 [a3 + 0xf0]\n 14225: a4 = u64 [a3 + 0xe8]\n 14229: t0 = 470, jump @908\n      : @468 [@dyn 235] (gas: 1)\n 14235: jump @381 if a0 != 0\n      : @469 (gas: 12)\n 14239: a0 = u64 [s1 + 0xa8]\n 14243: u64 [a3 + 0xc8] = a0\n 14247: a0 = u64 [s1 + 0xb0]\n 14251: u64 [a3 + 0xd0] = a0\n 14255: a0 = u64 [s1 + 0xb8]\n 14259: u64 [a3 + 0xd8] = a0\n 14263: a1 = s1 + 0x1140\n 14267: a0 = u64 [s1 + 0xc0]\n 14271: u64 [a3 + 0xe0] = a0\n 14275: a0 = a4\n 14277: u64 [s1 + 0xd8] = a4\n 14281: ra = 472, jump @9\n      : @470 [@dyn 236] (gas: 6)\n 14287: a0 = u64 [s1 + 0xa0]\n 14291: ra = 0x1da\n 14295: ecalli 5 // 'caller'\n 14297: a2 = u64 [s1 + 0xd0]\n 14301: t0 = 0x1dc\n 14305: jump @896\n      : @471 [@dyn 237] (gas: 2)\n 14308: a2 = u64 [s1 + 0xd0]\n 14312: t0 = 476, jump @896\n      : @472 [@dyn 238] (gas: 24)\n 14318: t0 = a1 | a0\n 14321: a3 = a3 >> 0x20\n 14324: a2 = reverse a2\n 14326: a1 = a2 << 0x20\n 14329: a1 = a1 | a3\n 14332: a2 = a2 >> 0x20\n 14335: a3 = u64 [0x200a0]\n 14340: a0 = s1 + 0x1078\n 14344: u64 [a0 + 0xc0] = a3\n 14348: a3 = u64 [0x200a8]\n 14353: a4 = u64 [0x200b0]\n 14358: a5 = u64 [0x200b8]\n 14363: u64 [a0 + 0xb8] = a3\n 14367: u64 [a0 + 0xb0] = a4\n 14371: u64 [a0 + 160] = 0\n 14375: u64 [a0 + 0xa8] = a5\n 14379: u64 [a0 + 0x98] = a2\n 14383: u64 [a0 + 0x90] = a1\n 14387: a1 = 0x20\n 14390: a2 = s1 + 0x1120\n 14394: a3 = s1 + 0x1100\n 14398: u64 [a0 + 0x88] = t0\n 14402: a0 = u64 [s1 + 0xd8]\n 14406: ra = 478, jump @13\n      : @473 [@dyn 239] (gas: 5)\n 14412: a0 = 0\n 14414: a1 = u64 [s1 + 0x98]\n 14418: a2 = 0\n 14420: ecalli 13 // 'seal_return'\n 14422: jump @714\n      : @474 (gas: 5)\n 14425: a0 = u64 [s1 + 0xb0]\n 14429: ra = 0x1e0\n 14433: ecalli 5 // 'caller'\n 14435: t0 = 0x1e2\n 14439: jump @894\n      : @475 [@dyn 240] (gas: 1)\n 14442: t0 = 482, jump @894\n      : @476 [@dyn 241] (gas: 7)\n 14448: u64 [s1 + 1400] = 0\n 14452: u64 [s1 + 0x570] = a1\n 14456: u64 [s1 + 0x568] = a0\n 14460: a1 = s1 + 0x560\n 14464: u64 [s1 + 0x560] = a3\n 14468: a0 = 0\n 14470: ra = 484, jump @9\n      : @477 [@dyn 242] (gas: 7)\n 14476: u64 [s1 + 1368] = 0\n 14480: u64 [s1 + 1360] = 0\n 14484: u64 [s1 + 1344] = 0x2\n 14489: a0 = 0x20\n 14492: a1 = s1 + 0x540\n 14496: u64 [s1 + 1352] = 0\n 14500: ra = 486, jump @9\n      : @478 [@dyn 243] (gas: 7)\n 14506: a0 = sp + 0xffffffffffffffe0\n 14509: a0 = a0 & 0xffffffffffffffe0\n 14512: u64 [s1 + 0xa8] = a0\n 14516: sp = a0\n 14518: a2 = u64 [s1 + 0x98]\n 14522: a0 = i32 [a2]\n 14524: jump @480 if a0 >u 63\n      : @479 (gas: 2)\n 14528: u32 [a2 + 0] = 0x40\n 14531: fallthrough\n      : @480 (gas: 12)\n 14532: a0 = sp + 0xffffffffffffffe0\n 14535: a0 = a0 & 0xffffffffffffffe0\n 14538: u64 [s1 + 0x98] = a0\n 14542: sp = a0\n 14544: i32 a2 = a0 + 0\n 14546: a1 = 0x40\n 14549: a0 = u64 [s1 + 0xa0]\n 14553: ra = 0x1e8\n 14557: ecalli 9 // 'hash_keccak_256'\n 14559: a3 = u64 [s1 + 0x98]\n 14563: t0 = 0x1ea\n 14567: jump @916\n      : @481 [@dyn 244] (gas: 2)\n 14570: a3 = u64 [s1 + 0x98]\n 14574: t0 = 490, jump @916\n      : @482 [@dyn 245] (gas: 7)\n 14580: a1 = u64 [s1 + 0xa8]\n 14584: u64 [a1 + 0x18] = a3\n 14587: u64 [a1 + 0x10] = a2\n 14590: u64 [a1 + 0x8] = a4\n 14593: u64 [a1] = a0\n 14595: a0 = s1 + 0x520\n 14599: ra = 492, jump @11\n      : @483 [@dyn 246] (gas: 20)\n 14605: a3 = u64 [s1 + 0x520]\n 14609: a0 = u64 [s1 + 0x528]\n 14613: a1 = u64 [s1 + 0x530]\n 14617: a2 = u64 [s1 + 0x538]\n 14621: a4 = u64 [s1 + 0xd0]\n 14625: u64 [s1 + 0x4d8] = a4\n 14629: a4 = u64 [s1 + 0xc8]\n 14633: u64 [s1 + 0x4d0] = a4\n 14637: a4 = u64 [s1 + 0xc0]\n 14641: u64 [s1 + 0x4c8] = a4\n 14645: a4 = u64 [s1 + 0xb8]\n 14649: u64 [s1 + 0x4c0] = a4\n 14653: u64 [s1 + 0x4f8] = a2\n 14657: u64 [s1 + 0x4f0] = a1\n 14661: u64 [s1 + 0x4e8] = a0\n 14665: a0 = s1 + 0x500\n 14669: a1 = s1 + 0x4e0\n 14673: a2 = s1 + 0x4c0\n 14677: u64 [s1 + 0x4e0] = a3\n 14681: ra = 494, jump @782\n      : @484 [@dyn 247] (gas: 14)\n 14687: a4 = s1 + 0x500\n 14691: a0 = u64 [a4 + 0x18]\n 14694: a1 = u64 [a4 + 0x10]\n 14697: a2 = u64 [a4 + 0x8]\n 14700: a3 = u64 [a4]\n 14702: a4 = s1 + 0x1878\n 14706: u64 [a4 + 0x400] = a0\n 14710: a0 = a4 + 0x300\n 14714: u64 [a0 + 0xf8] = a1\n 14718: u64 [a0 + 0xf0] = a2\n 14722: u64 [a0 + 0xe8] = a3\n 14726: a1 = s1 + 0x1c60\n 14730: a0 = u64 [s1 + 0xa8]\n 14734: ra = 496, jump @12\n      : @485 [@dyn 248] (gas: 3)\n 14740: a0 = s1 + 0x4a0\n 14744: a1 = 0x40\n 14747: ra = 498, jump @7\n      : @486 [@dyn 249] (gas: 13)\n 14753: a1 = s1 + 0x400\n 14757: a5 = u64 [a1 + 0xb8]\n 14761: a4 = u64 [a1 + 0xb0]\n 14765: a3 = u64 [a1 + 0xa8]\n 14769: a0 = u64 [a1 + 0xa0]\n 14773: a2 = a3 | a5\n 14776: a1 = a0 | a4\n 14779: a1 = a1 | a2\n 14782: a1 = a1 >> 0x20\n 14785: a2 = a2 | a4\n 14788: a2 = a2 << 0x20\n 14791: a1 = a1 | a2\n 14794: jump @381 if a1 != 0\n      : @487 (gas: 11)\n 14798: u64 [s1 + 1168] = 0\n 14802: u64 [s1 + 1160] = 0\n 14806: u64 [s1 + 1152] = 0\n 14810: a2 = 0xa9059cbb00000000\n 14820: a1 = s1 + 0x480\n 14824: u64 [s1 + 0x498] = a2\n 14828: u64 [s1 + 0xa8] = a0\n 14832: u64 [s1 + 0x98] = a3\n 14836: u64 [s1 + 0x90] = a4\n 14840: u64 [s1 + 0x88] = a5\n 14844: ra = 500, jump @9\n      : @488 [@dyn 250] (gas: 49)\n 14850: a0 = u64 [s1 + 0xb0]\n 14854: ecalli 5 // 'caller'\n 14856: a2 = u64 [s1 + 0xd8]\n 14860: a0 = u64 [a2 + 0x8]\n 14863: a1 = i32 [a2 + 0x10]\n 14866: a2 = u64 [a2]\n 14868: a0 = reverse a0\n 14870: a3 = a0 << 0x20\n 14873: a1 = reverse a1\n 14875: a1 = a1 >> 0x20\n 14878: t0 = a1 | a3\n 14881: a0 = a0 >> 0x20\n 14884: a1 = reverse a2\n 14886: a2 = a1 << 0x20\n 14889: t1 = a2 | a0\n 14892: a1 = a1 >> 0x20\n 14895: a0 = u64 [s1 + 0xa8]\n 14899: a2 = a0 + 0x4\n 14902: a3 = a2 <u a0\n 14905: a0 = u64 [s1 + 0x98]\n 14909: a5 = a0 + a3\n 14912: a4 = a5 <u a0\n 14915: a4 = a3 if a3 == 0\n 14918: a0 = u64 [s1 + 0x90]\n 14922: a4 = a4 + a0\n 14925: a3 = a4 <u a0\n 14928: a0 = u64 [s1 + 0x88]\n 14932: a3 = a3 + a0\n 14935: a0 = u64 [s1 + 0xd0]\n 14939: u64 [s1 + 0x418] = a0\n 14943: a0 = u64 [s1 + 0xc8]\n 14947: u64 [s1 + 0x410] = a0\n 14951: a0 = u64 [s1 + 0xc0]\n 14955: u64 [s1 + 0x408] = a0\n 14959: a0 = u64 [s1 + 0xb8]\n 14963: u64 [s1 + 0x400] = a0\n 14967: u64 [s1 + 1080] = 0\n 14971: u64 [s1 + 0x458] = a3\n 14975: u64 [s1 + 0x450] = a4\n 14979: u64 [s1 + 0x448] = a5\n 14983: u64 [s1 + 0x440] = a2\n 14987: u64 [s1 + 0x430] = a1\n 14991: u64 [s1 + 0x428] = t1\n 14995: a0 = s1 + 0x460\n 14999: a1 = s1 + 0x440\n 15003: a2 = s1 + 0x420\n 15007: a3 = s1 + 0x400\n 15011: u64 [s1 + 0x420] = t0\n 15015: ra = 502, jump @818\n      : @489 [@dyn 251] (gas: 16)\n 15021: a0 = u64 [s1 + 0x468]\n 15025: t0 = u64 [s1 + 0x478]\n 15029: t1 = u64 [s1 + 0x460]\n 15033: a3 = u64 [s1 + 0x470]\n 15037: a1 = u64 [s1 + 0x98]\n 15041: a4 = a0 ^ a1\n 15044: a5 = a0 <u a1\n 15047: ra = u64 [s1 + 0xa8]\n 15051: t2 = t1 <u ra\n 15054: a5 = t2 if a4 == 0\n 15057: a2 = u64 [s1 + 0x90]\n 15061: a4 = a3 - a2\n 15064: a3 = a3 <u a2\n 15067: a2 = u64 [s1 + 0x88]\n 15071: a2 = t0 - a2\n 15074: t0 = 504, jump @912\n      : @490 [@dyn 252] (gas: 2)\n 15080: u64 [s1 + 0x80] = a0\n 15084: ra = 506, jump @0\n      : @491 [@dyn 253] (gas: 10)\n 15090: a1 = u64 [0x301f0]\n 15095: u64 [s1 + 0x60] = a1\n 15098: a1 = u64 [0x30200]\n 15103: u64 [s1 + 0x58] = a1\n 15106: a0 = u64 [0x301f8]\n 15111: u64 [s1 + 0x50] = a0\n 15114: ra = 0x1fc\n 15118: ecalli 10 // 'ref_time_left'\n 15120: t0 = 0x1fe\n 15124: jump @900\n      : @492 [@dyn 254] (gas: 1)\n 15127: t0 = 510, jump @900\n      : @493 [@dyn 255] (gas: 19)\n 15133: i32 a0 = a0 + 0xfffffffffffff878\n 15137: a2 = s1 + a0\n 15140: u64 [a2 + 1056] = 0\n 15144: u64 [a2 + 1048] = 0\n 15148: u64 [a2 + 1040] = 0\n 15152: a0 = u64 [s1 + 0x80]\n 15156: t0 = a0\n 15158: a5 = u64 [s1 + 0x70]\n 15161: a0 = a0 | a5\n 15164: a1 = u64 [s1 + 0x78]\n 15167: a4 = u64 [s1 + 0x68]\n 15170: a1 = a1 | a4\n 15173: a0 = a0 | a1\n 15176: a0 = a0 >> 0x20\n 15179: a1 = a1 | a5\n 15182: a1 = a1 << 0x20\n 15185: a0 = a0 | a1\n 15188: u64 [a2 + 1032] = 0\n 15192: jump @495 if a0 == 0\n      : @494 (gas: 1)\n 15195: jump @381\n      : @495 (gas: 3)\n 15198: a0 = u64 [s1 + 0xa8]\n 15202: a1 = t0\n 15204: ra = 512, jump @18\n      : @496 [@dyn 256] (gas: 4)\n 15210: u64 [s1 + 0x78] = a0\n 15213: a1 = 0x20\n 15216: a0 = u64 [s1 + 0xa8]\n 15220: ra = 514, jump @18\n      : @497 [@dyn 257] (gas: 34)\n 15226: a2 = s1 + 0x1878\n 15230: a3 = a2 + 0x400\n 15234: u32 [a3 + 40] = 0x20\n 15238: u64 [a3 + 96] = 0xffffffffffffffff\n 15242: u64 [a3 + 88] = 0xffffffffffffffff\n 15246: u64 [a3 + 80] = 0xffffffffffffffff\n 15250: u64 [a3 + 72] = 0xffffffffffffffff\n 15254: a1 = u64 [s1 + 0xd8]\n 15258: a1 = a1 << 0x20\n 15261: a1 = a1 >> 0x20\n 15264: a2 = 0x800000000\n 15274: t0 = a1 | a2\n 15277: a1 = s1 + 0x1c80\n 15281: a1 = a1 << 0x20\n 15284: a1 = a1 >> 0x20\n 15287: a2 = s1 + 0x1cc0\n 15291: a2 = a2 << 0x20\n 15294: a3 = a2 | a1\n 15297: a1 = u64 [s1 + 0x78]\n 15300: a1 = a1 << 0x20\n 15303: a1 = a1 >> 0x20\n 15306: a4 = u64 [s1 + 0x80]\n 15310: a4 = a4 << 0x20\n 15313: a4 = a4 | a1\n 15316: a0 = a0 << 0x20\n 15319: a0 = a0 >> 0x20\n 15322: a1 = s1 + 0x1ca0\n 15326: a1 = a1 << 0x20\n 15329: a5 = a1 | a0\n 15332: a1 = 0xffffffffffffffff\n 15335: a2 = 0xffffffffffffffff\n 15338: a0 = t0\n 15340: ecalli 1 // 'call'\n 15342: fallthrough\n      : @498 (gas: 1)\n 15343: jump @500 if a0 == 0\n      : @499 (gas: 1)\n 15346: jump @634\n      : @500 (gas: 2)\n 15349: ecalli 12 // 'return_data_size'\n 15351: fallthrough\n      : @501 (gas: 2)\n 15352: a1 = 0x20\n 15355: jump @503 if a0 >=u a1\n      : @502 (gas: 3)\n 15358: ecalli 12 // 'return_data_size'\n 15360: a1 = a0\n 15362: fallthrough\n      : @503 (gas: 17)\n 15363: a2 = u64 [s1 + 0xa8]\n 15367: a3 = u64 [s1 + 0x98]\n 15371: a4 = u64 [s1 + 0x90]\n 15375: a5 = u64 [s1 + 0x88]\n 15379: u64 [s1 + 0x78] = a1\n 15382: u64 [s1 + 128] = 0\n 15386: u64 [s1 + 0x3a0] = a1\n 15390: u64 [s1 + 0x3c0] = a2\n 15394: u64 [s1 + 936] = 0\n 15398: u64 [s1 + 0x3c8] = a3\n 15402: u64 [s1 + 944] = 0\n 15406: u64 [s1 + 0x3d0] = a4\n 15410: u64 [s1 + 952] = 0\n 15414: a0 = s1 + 0x3c0\n 15418: a1 = s1 + 0x3a0\n 15422: u64 [s1 + 0x3d8] = a5\n 15426: ra = 516, jump @799\n      : @504 [@dyn 258] (gas: 32)\n 15432: t0 = u64 [s1 + 0xa8]\n 15436: a0 = u64 [s1 + 0x78]\n 15439: ra = a0 + t0\n 15442: a1 = ra <u a0\n 15445: t1 = u64 [s1 + 0x98]\n 15449: a5 = u64 [s1 + 0x80]\n 15453: a2 = a5 + t1\n 15456: a2 = a2 + a1\n 15459: a3 = a2 ^ a5\n 15462: a4 = a2 <u a5\n 15465: a4 = a1 if a3 == 0\n 15468: a3 = u64 [s1 + 0x90]\n 15472: a1 = a5 + a3\n 15475: a4 = a4 + a1\n 15478: t2 = a4 <u a1\n 15481: a1 = a1 <u a5\n 15484: a0 = u64 [s1 + 0x88]\n 15488: a5 = a5 + a0\n 15491: a1 = a1 + a5\n 15494: t2 = t2 + a1\n 15497: u64 [s1 + 0x350] = a4\n 15501: u64 [s1 + 0x348] = a2\n 15505: u64 [s1 + 0x340] = ra\n 15509: u64 [s1 + 0x378] = a0\n 15513: u64 [s1 + 0x370] = a3\n 15517: u64 [s1 + 0x368] = t1\n 15521: u64 [s1 + 0x360] = t0\n 15525: a0 = s1 + 0x380\n 15529: a1 = s1 + 0x360\n 15533: a2 = s1 + 0x340\n 15537: u64 [s1 + 0x358] = t2\n 15541: ra = 518, jump @809\n      : @505 [@dyn 259] (gas: 3)\n 15547: a0 = s1 + 0x320\n 15551: a1 = 0x40\n 15554: ra = 520, jump @7\n      : @506 [@dyn 260] (gas: 13)\n 15560: a4 = s1 + 0x300\n 15564: a0 = u64 [a4 + 0x38]\n 15567: a1 = u64 [a4 + 0x30]\n 15570: a2 = u64 [a4 + 0x28]\n 15573: a3 = u64 [a4 + 0x20]\n 15576: a0 = a0 | a2\n 15579: a2 = a3 | a1\n 15582: a2 = a2 | a0\n 15585: a2 = a2 >> 0x20\n 15588: a0 = a0 | a1\n 15591: a0 = a0 << 0x20\n 15594: a0 = a0 | a2\n 15597: jump @508 if a0 == 0\n      : @507 (gas: 1)\n 15600: jump @381\n      : @508 (gas: 13)\n 15603: a0 = u64 [s1 + 0xb8]\n 15607: a2 = s1 + 0x300\n 15611: u64 [a2] = a0\n 15613: a0 = u64 [s1 + 0xc0]\n 15617: u64 [a2 + 0x8] = a0\n 15620: a0 = u64 [s1 + 0xc8]\n 15624: u64 [a2 + 0x10] = a0\n 15627: a1 = s1 + 0x300\n 15631: a0 = u64 [s1 + 0xd0]\n 15635: u64 [a2 + 0x18] = a0\n 15638: a0 = a3\n 15640: u64 [s1 + 0xd0] = a3\n 15644: ra = 522, jump @9\n      : @509 [@dyn 261] (gas: 6)\n 15650: a0 = u64 [s1 + 0xb0]\n 15654: ra = 0x20c\n 15658: ecalli 5 // 'caller'\n 15660: a2 = u64 [s1 + 0xd8]\n 15664: t0 = 0x20e\n 15668: jump @896\n      : @510 [@dyn 262] (gas: 2)\n 15671: a2 = u64 [s1 + 0xd8]\n 15675: t0 = 526, jump @896\n      : @511 [@dyn 263] (gas: 24)\n 15681: t0 = a1 | a0\n 15684: a3 = a3 >> 0x20\n 15687: a2 = reverse a2\n 15689: a1 = a2 << 0x20\n 15692: a1 = a1 | a3\n 15695: a2 = a2 >> 0x20\n 15698: u64 [s1 + 728] = 0\n 15702: a3 = u64 [0x20140]\n 15707: a4 = u64 [0x20148]\n 15712: a5 = u64 [0x20150]\n 15717: a0 = u64 [0x20158]\n 15722: u64 [s1 + 0x2f8] = a3\n 15726: a3 = s1 + 0x200\n 15730: u64 [a3 + 0xf0] = a4\n 15734: u64 [a3 + 0xe8] = a5\n 15738: u64 [a3 + 0xe0] = a0\n 15742: u64 [a3 + 0xd0] = a2\n 15746: u64 [a3 + 0xc8] = a1\n 15750: a1 = 0x20\n 15753: a2 = s1 + 0x2e0\n 15757: a3 = s1 + 0x2c0\n 15761: u64 [s1 + 0x2c0] = t0\n 15765: a0 = u64 [s1 + 0xd0]\n 15769: ra = 528, jump @13\n      : @512 [@dyn 264] (gas: 5)\n 15775: a0 = 0\n 15777: a1 = u64 [s1 + 0xa0]\n 15781: a2 = 0\n 15783: ecalli 13 // 'seal_return'\n 15785: jump @714\n      : @513 (gas: 3)\n 15788: a0 = s1 + 0x16a0\n 15792: a1 = 0x40\n 15795: ra = 530, jump @7\n      : @514 [@dyn 265] (gas: 14)\n 15801: a0 = s1 + 0x1078\n 15805: a2 = a0 + 0x600\n 15809: a1 = u64 [a2 + 0x40]\n 15812: u64 [s1 + 0xd0] = a1\n 15816: a1 = u64 [a2 + 0x38]\n 15819: u64 [s1 + 0xc8] = a1\n 15823: a1 = u64 [a2 + 0x30]\n 15826: u64 [s1 + 0xc0] = a1\n 15830: a0 = u64 [a2 + 0x28]\n 15833: u64 [s1 + 0xd8] = a0\n 15837: ra = 0x214\n 15841: ecalli 12 // 'return_data_size'\n 15843: t0 = 0x216\n 15847: jump @899\n      : @515 [@dyn 266] (gas: 1)\n 15850: t0 = 534, jump @899\n      : @516 [@dyn 267] (gas: 1)\n 15856: jump @518 if a1 == 0\n      : @517 (gas: 1)\n 15859: jump @381\n      : @518 (gas: 3)\n 15862: a2 = a0\n 15864: a0 = a0 >> 0x20\n 15867: jump @520 if a0 == 0\n      : @519 (gas: 1)\n 15870: jump @381\n      : @520 (gas: 1)\n 15873: t0 = 536, jump @919\n      : @521 [@dyn 268] (gas: 1)\n 15879: ra = 538, jump @18\n      : @522 [@dyn 269] (gas: 11)\n 15885: a1 = s1 + 0x2078\n 15889: a2 = u64 [s1 + 0xc8]\n 15893: u32 [a1 + 0x1a8] = a2\n 15897: i32 a0 = a0 + 0\n 15899: a1 = s1 + 0x2000\n 15903: i32 a1 = a1 + 0x220\n 15907: a2 = 0\n 15909: ecalli 11 // 'return_data_copy'\n 15911: a0 = s1 + 0x2078\n 15915: a0 = i32 [a0 + 0x1a8]\n 15919: fallthrough\n      : @523 (gas: 2)\n 15920: a1 = u64 [s1 + 0xd0]\n 15924: jump @525 if a0 >=u a1\n      : @524 (gas: 1)\n 15927: jump @381\n      : @525 (gas: 2)\n 15930: ecalli 12 // 'return_data_size'\n 15932: fallthrough\n      : @526 (gas: 3)\n 15933: a1 = a0\n 15935: a0 = a0 >> 0x20\n 15938: jump @528 if a0 == 0\n      : @527 (gas: 1)\n 15941: jump @381\n      : @528 (gas: 3)\n 15944: a0 = u64 [s1 + 0xd8]\n 15948: u64 [s1 + 0xd0] = a1\n 15952: ra = 540, jump @18\n      : @529 [@dyn 270] (gas: 5)\n 15958: i32 a1 = a0 + 0\n 15960: a2 = i32 [s1 + 0xd0]\n 15964: a0 = 0x1\n 15967: ecalli 13 // 'seal_return'\n 15969: fallthrough\n      : @530 (gas: 5)\n 15970: a0 = u64 [s1 + 0xd8]\n 15974: a2 = a0 + 0xffffffffffffff80\n 15977: a0 = u64 [s1 + 0x80]\n 15981: a1 = u64 [s1 + 0x90]\n 15985: ra = 542, jump @921\n      : @531 [@dyn 271] (gas: 6)\n 15991: u64 [s1 + 0x78] = a0\n 15994: u64 [s1 + 0x68] = a1\n 15997: a0 = u64 [s1 + 0x88]\n 16001: a1 = u64 [s1 + 0x98]\n 16005: a2 = u64 [s1 + 0xd8]\n 16009: ra = 544, jump @921\n      : @532 [@dyn 272] (gas: 7)\n 16015: u64 [s1 + 0x20] = a0\n 16018: u64 [s1 + 0x70] = a1\n 16021: a1 = u64 [s1 + 0xd8]\n 16025: a2 = 0x80 - a1\n 16029: a0 = u64 [s1 + 0x80]\n 16033: a1 = u64 [s1 + 0x90]\n 16037: ra = 546, jump @926\n      : @533 [@dyn 273] (gas: 21)\n 16043: a2 = u64 [s1 + 0x70]\n 16046: a1 = a1 | a2\n 16049: a3 = u64 [s1 + 0xd8]\n 16053: a4 = a3 <u 0x80\n 16057: u64 [s1 + 0x70] = a4\n 16060: a2 = u64 [s1 + 0x68]\n 16063: a1 = a2 if a4 == 0\n 16066: a2 = u64 [s1 + 0x98]\n 16070: a2 = a1 if a3 != 0\n 16073: u64 [s1 + 0x98] = a2\n 16077: a1 = u64 [s1 + 0x20]\n 16080: a0 = a0 | a1\n 16083: a1 = u64 [s1 + 0x78]\n 16086: a0 = a1 if a4 == 0\n 16089: a1 = u64 [s1 + 0x88]\n 16093: a1 = a0 if a3 != 0\n 16096: a2 = a3\n 16098: u64 [s1 + 0x88] = a1\n 16102: a0 = u64 [s1 + 0x80]\n 16106: a1 = u64 [s1 + 0x90]\n 16110: ra = 548, jump @921\n      : @534 [@dyn 274] (gas: 9)\n 16116: a5 = 0\n 16118: a2 = u64 [s1 + 0x70]\n 16121: a1 = 0 if a2 == 0\n 16123: a0 = 0 if a2 == 0\n 16125: u64 [s1 + 112] = 0x63\n 16129: u64 [s1 + 104] = 0\n 16132: t2 = u64 [s1 + 0x98]\n 16136: t0 = u64 [s1 + 0x88]\n 16140: fallthrough\n      : @535 (gas: 90)\n 16141: u64 [s1 + 0x88] = a1\n 16145: u64 [s1 + 0x90] = a5\n 16149: u64 [s1 + 120] = 0\n 16152: a2 = t0 >> 0x3f\n 16155: a3 = t2 << 0x1\n 16158: a3 = a3 | a2\n 16161: a2 = t0 << 0x1\n 16164: ra = u64 [s1 + 0xc0]\n 16168: a4 = ra >> 0x3f\n 16171: a4 = a4 | a2\n 16174: u64 [s1 + 0x98] = a4\n 16178: a2 = u64 [s1 + 0x68]\n 16181: a1 = a2 ^ a3\n 16184: u64 [s1 + 0x80] = a1\n 16188: a1 = a2 <u a3\n 16191: a5 = u64 [s1 + 0x70]\n 16194: t0 = a5 <u a4\n 16197: a4 = u64 [s1 + 0x80]\n 16201: t0 = a1 if a4 != 0\n 16204: a1 = u64 [s1 + 0x88]\n 16208: a1 = a1 << 0x1\n 16211: a4 = a0 >> 0x3f\n 16214: a1 = a1 | a4\n 16217: u64 [s1 + 0x88] = a1\n 16221: a4 = t2 >> 0x3f\n 16224: a0 = a0 << 0x1\n 16227: a4 = a4 | a0\n 16230: a0 = ra << 0x1\n 16233: a1 = u64 [s1 + 0xc8]\n 16237: a5 = a1 >> 0x3f\n 16240: a0 = a0 | a5\n 16243: u64 [s1 + 0xc0] = a0\n 16247: a5 = a1 << 0x1\n 16250: a0 = u64 [s1 + 0xb8]\n 16254: a1 = a0 >> 0x3f\n 16257: t2 = a5 | a1\n 16260: a5 = a0 << 0x1\n 16263: a0 = u64 [s1 + 0xd0]\n 16267: ra = a0 >> 0x3f\n 16270: a5 = a5 | ra\n 16273: a0 = a0 << 0x1\n 16276: a1 = u64 [s1 + 0x90]\n 16280: a0 = a0 | a1\n 16283: u64 [s1 + 0xd0] = a0\n 16287: a0 = a5 | 0\n 16289: u64 [s1 + 0xb8] = a0\n 16293: a0 = t2 | 0\n 16295: u64 [s1 + 0xc8] = a0\n 16299: a0 = u64 [s1 + 0xc0]\n 16303: a0 = a0 | 0\n 16305: u64 [s1 + 0xc0] = a0\n 16309: a0 = a2 - a4\n 16312: a0 = a0 <u t0\n 16315: a1 = a2 <u a4\n 16318: t1 = u64 [s1 + 0x88]\n 16322: a5 = a2 - t1\n 16325: a5 = a5 - a1\n 16328: a5 = a5 - a0\n 16331: ra = a5 >>a 0x3f\n 16334: a0 = ra & 0x64\n 16337: a1 = u64 [s1 + 0x98]\n 16341: t0 = a1 - a0\n 16344: a1 = a1 <u a0\n 16347: t2 = a3 - a1\n 16350: a1 = 0 if a3 != 0\n 16352: a0 = a4 - a1\n 16355: a1 = a4 <u a1\n 16358: a1 = t1 - a1\n 16361: a3 = u64 [s1 + 0xd8]\n 16365: a5 = u64 [s1 + 0xb0]\n 16369: a2 = a3 | a5\n 16372: a2 = a2 <u 0x1\n 16375: a4 = u64 [s1 + 0xa0]\n 16379: t1 = a4 <u a2\n 16382: a4 = a4 - a2\n 16385: a2 = a3 <u 0x1\n 16388: a5 = a5 - a2\n 16391: a2 = u64 [s1 + 0xa8]\n 16395: a2 = a2 - t1\n 16398: a3 = a3 + 0xffffffffffffffff\n 16401: u64 [s1 + 0xb0] = a5\n 16405: u64 [s1 + 0xa8] = a2\n 16409: a2 = a2 | a5\n 16412: u64 [s1 + 0xd8] = a3\n 16416: a3 = a3 | a4\n 16419: a2 = a2 | a3\n 16422: a5 = ra & 0x1\n 16425: u64 [s1 + 0xa0] = a4\n 16429: t1 = 0\n 16431: jump @535 if a2 != 0\n      : @536 (gas: 20)\n 16435: a2 = u64 [s1 + 0xc8]\n 16439: a0 = a2 >> 0x3f\n 16442: a1 = u64 [s1 + 0xc0]\n 16446: a1 = a1 << 0x1\n 16449: t0 = a1 | a0\n 16452: a0 = u64 [s1 + 0xb8]\n 16456: a1 = a0 >> 0x3f\n 16459: a2 = a2 << 0x1\n 16462: a2 = a2 | a1\n 16465: a1 = u64 [s1 + 0xd0]\n 16469: a3 = a1 >> 0x3f\n 16472: a0 = a0 << 0x1\n 16475: a1 = a1 << 0x1\n 16478: a4 = a5 | a1\n 16481: a1 = u64 [s1 + 0x78]\n 16484: a5 = a1 | a3\n 16487: a5 = a5 | a0\n 16490: a3 = a1 | a2\n 16493: a2 = a1 | t0\n 16496: fallthrough\n      : @537 (gas: 16)\n 16497: a0 = u64 [s1 + 0x28]\n 16500: a0 = a4 <u a0\n 16503: a4 = u64 [s1 + 0x30]\n 16506: a1 = a4 ^ a5\n 16509: a4 = a5 <u a4\n 16512: a4 = a0 if a1 == 0\n 16515: a0 = u64 [s1 + 0x38]\n 16518: t0 = a3 <u a0\n 16521: a5 = u64 [s1 + 0x40]\n 16524: a1 = a5 ^ a2\n 16527: a2 = a2 <u a5\n 16530: a2 = t0 if a1 == 0\n 16533: a0 = a0 ^ a3\n 16536: a0 = a0 | a1\n 16539: a2 = a4 if a0 == 0\n 16542: jump @556 if a2 == 0\n      : @538 (gas: 4)\n 16546: a0 = s1 + 0x7ff\n 16550: a0 = a0 + 0x161\n 16554: a1 = 0x40\n 16557: ra = 550, jump @7\n      : @539 [@dyn 275] (gas: 15)\n 16563: a2 = s1 + 0x7ff\n 16567: a2 = a2 + 0x61\n 16570: t0 = u64 [a2 + 0x118]\n 16574: a1 = a2 + 0x100\n 16578: a5 = u64 [a1 + 0x10]\n 16581: a4 = u64 [a1 + 0x8]\n 16584: a0 = u64 [a1]\n 16586: a3 = a4 | t0\n 16589: a1 = a0 | a5\n 16592: a1 = a1 | a3\n 16595: a1 = a1 >> 0x20\n 16598: a3 = a3 | a5\n 16601: a3 = a3 << 0x20\n 16604: a1 = a1 | a3\n 16607: jump @541 if a1 == 0\n      : @540 (gas: 1)\n 16610: jump @381\n      : @541 (gas: 12)\n 16613: u64 [a2 + 240] = 0\n 16617: u64 [a2 + 232] = 0\n 16621: u64 [a2 + 224] = 0\n 16625: a3 = 0x8c379a000000000\n 16635: a1 = s1 + 0x7ff\n 16639: a1 = a1 + 0x141\n 16643: u64 [a2 + 0xf8] = a3\n 16647: u64 [s1 + 0xd8] = a0\n 16651: u64 [s1 + 0xd0] = a4\n 16655: u64 [s1 + 0xc0] = t0\n 16659: u64 [s1 + 0xc8] = a5\n 16663: ra = 552, jump @9\n      : @542 [@dyn 276] (gas: 5)\n 16669: a1 = u64 [s1 + 0xd8]\n 16673: a0 = u64 [s1 + 0xc8]\n 16677: a3 = u64 [s1 + 0xc0]\n 16681: a3 = a3 | a0\n 16684: t0 = 554, jump @897\n      : @543 [@dyn 277] (gas: 1)\n 16690: jump @545 if a0 != 0\n      : @544 (gas: 1)\n 16693: jump @381\n      : @545 (gas: 13)\n 16696: i32 a0 = a1 + 0x4\n 16699: a2 = s1 + 0x7ff\n 16703: a2 = a2 + 0x61\n 16706: a5 = 0\n 16708: u64 [a2 + 216] = 0\n 16712: u64 [a2 + 208] = 0\n 16716: u64 [a2 + 192] = 0x20\n 16721: a1 = s1 + 0x7ff\n 16725: a1 = a1 + 0x121\n 16729: u64 [a2 + 200] = 0\n 16733: u64 [s1 + 0xc8] = a3\n 16737: u64 [s1 + 0xc0] = a4\n 16741: ra = 556, jump @9\n      : @546 [@dyn 278] (gas: 1)\n 16747: t0 = 558, jump @901\n      : @547 [@dyn 279] (gas: 1)\n 16753: jump @549 if a0 != 0\n      : @548 (gas: 1)\n 16756: jump @381\n      : @549 (gas: 10)\n 16759: i32 a0 = a1 + 0x24\n 16762: a2 = s1 + 0x7ff\n 16766: a2 = a2 + 0x61\n 16769: u64 [a2 + 184] = 0\n 16773: u64 [a2 + 176] = 0\n 16777: u64 [a2 + 160] = 0x1d\n 16782: a1 = s1 + 0x7ff\n 16786: a1 = a1 + 0x101\n 16790: u64 [a2 + 168] = 0\n 16794: ra = 560, jump @9\n      : @550 [@dyn 280] (gas: 1)\n 16800: t0 = 562, jump @910\n      : @551 [@dyn 281] (gas: 1)\n 16806: jump @553 if a0 != 0\n      : @552 (gas: 1)\n 16809: jump @381\n      : @553 (gas: 14)\n 16812: i32 a0 = a3 + 0x44\n 16815: a1 = u64 [0x20128]\n 16820: a2 = u64 [0x20130]\n 16825: a3 = u64 [0x20138]\n 16830: a4 = s1 + 0x7ff\n 16834: a4 = a4 + 0x61\n 16837: u64 [a4 + 0x98] = a1\n 16841: u64 [a4 + 0x90] = a2\n 16845: u64 [a4 + 0x88] = a3\n 16849: a2 = 0x6c696d6974000000\n 16859: a1 = s1 + 0x7ff\n 16863: a1 = a1 + 0xe1\n 16867: u64 [a4 + 0x80] = a2\n 16871: ra = 564, jump @9\n      : @554 [@dyn 282] (gas: 3)\n 16877: a1 = 0x64\n 16880: a0 = u64 [s1 + 0xd8]\n 16884: ra = 566, jump @18\n      : @555 [@dyn 283] (gas: 5)\n 16890: i32 a1 = a0 + 0\n 16892: a0 = 0x1\n 16895: a2 = 0x64\n 16898: ecalli 13 // 'seal_return'\n 16900: fallthrough\n      : @556 (gas: 5)\n 16901: a0 = u64 [s1 + 0x58]\n 16904: ra = 0x238\n 16908: ecalli 5 // 'caller'\n 16910: t0 = 0x23a\n 16914: jump @895\n      : @557 [@dyn 284] (gas: 1)\n 16917: t0 = 570, jump @895\n      : @558 [@dyn 285] (gas: 9)\n 16923: u64 [a2 + 1240] = 0\n 16927: a4 = a2 + 0x400\n 16931: u64 [a4 + 0xd0] = a1\n 16935: u64 [a4 + 0xc8] = a0\n 16939: a1 = s1 + 0x7ff\n 16943: a1 = a1 + 0x521\n 16947: u64 [a4 + 0xc0] = a3\n 16951: a0 = 0\n 16953: ra = 572, jump @9\n      : @559 [@dyn 286] (gas: 6)\n 16959: a1 = s1 + 0x7ff\n 16963: a1 = a1 + 0x61\n 16966: u64 [a1 + 1208] = 0\n 16970: u64 [a1 + 1200] = 0\n 16974: u64 [a1 + 1184] = 0x2\n 16979: t0 = 574, jump @902\n      : @560 [@dyn 287] (gas: 3)\n 16985: a1 = a1 + 0x501\n 16989: u64 [a2 + 1192] = 0\n 16993: ra = 576, jump @9\n      : @561 [@dyn 288] (gas: 3)\n 16999: a2 = u64 [s1 + 0x48]\n 17002: a0 = i32 [a2]\n 17004: jump @563 if a0 >u 63\n      : @562 (gas: 3)\n 17008: u32 [a2 + 0] = 0x40\n 17011: t0 = 0x242\n 17015: jump @918\n      : @563 (gas: 1)\n 17018: t0 = 578, jump @918\n      : @564 [@dyn 289] (gas: 4)\n 17024: ra = 0x244\n 17028: ecalli 9 // 'hash_keccak_256'\n 17030: t0 = 0x246\n 17034: jump @906\n      : @565 [@dyn 290] (gas: 1)\n 17037: t0 = 582, jump @906\n      : @566 [@dyn 291] (gas: 9)\n 17043: a5 = a4 + 0x600\n 17047: u64 [a5 + 0x40] = a3\n 17050: u64 [a5 + 0x38] = a2\n 17053: u64 [a5 + 0x30] = a1\n 17056: u64 [a5 + 0x28] = a0\n 17059: a0 = s1 + 0x7ff\n 17063: a0 = a0 + 0x4e1\n 17067: a1 = s1 + 0x1ea0\n 17071: ra = 584, jump @11\n      : @567 [@dyn 292] (gas: 15)\n 17077: a1 = s1 + 0x7ff\n 17081: a1 = a1 + 0x61\n 17084: a2 = a1 + 0x400\n 17088: a0 = u64 [a2 + 0x98]\n 17092: u64 [s1 + 0xb8] = a0\n 17096: a0 = u64 [a2 + 0x90]\n 17100: u64 [s1 + 0xb0] = a0\n 17104: a0 = u64 [a2 + 0x88]\n 17108: u64 [s1 + 0xa8] = a0\n 17112: a0 = u64 [a2 + 0x80]\n 17116: u64 [s1 + 0xa0] = a0\n 17120: a0 = s1 + 0x7ff\n 17124: a0 = a0 + 0x4c1\n 17128: a1 = 0x40\n 17131: ra = 586, jump @7\n      : @568 [@dyn 293] (gas: 20)\n 17137: a0 = s1 + 0x7ff\n 17141: a0 = a0 + 0x61\n 17144: a5 = a0 + 0x400\n 17148: a1 = u64 [a5 + 0x78]\n 17151: u64 [s1 + 0xc8] = a1\n 17155: a2 = u64 [a5 + 0x70]\n 17158: u64 [s1 + 0xc0] = a2\n 17162: a4 = u64 [a5 + 0x68]\n 17165: u64 [s1 + 0xd0] = a4\n 17169: a3 = u64 [a5 + 0x60]\n 17172: u64 [s1 + 0xd8] = a3\n 17176: u64 [a5 + 0x58] = a1\n 17179: u64 [a5 + 0x50] = a2\n 17182: u64 [a5 + 0x48] = a4\n 17185: a1 = s1 + 0x7ff\n 17189: a1 = a1 + 0x61\n 17192: a0 = s1 + 0x7ff\n 17196: a0 = a0 + 0x4a1\n 17200: u64 [a1 + 0x440] = a3\n 17204: ra = 588, jump @790\n      : @569 [@dyn 294] (gas: 7)\n 17210: a0 = u64 [s1 + 0xc8]\n 17214: a1 = u64 [s1 + 0xd0]\n 17218: a0 = a0 | a1\n 17221: a1 = u64 [s1 + 0xd8]\n 17225: a3 = a1\n 17227: a2 = u64 [s1 + 0xc0]\n 17231: t0 = 590, jump @914\n      : @570 [@dyn 295] (gas: 1)\n 17237: jump @572 if a0 == 0\n      : @571 (gas: 1)\n 17240: jump @381\n      : @572 (gas: 15)\n 17243: a0 = u64 [s1 + 0x28]\n 17246: a2 = s1 + 0x7ff\n 17250: a2 = a2 + 0x61\n 17253: a4 = a2 + 0x400\n 17257: u64 [a4 + 0x20] = a0\n 17260: a0 = u64 [s1 + 0x30]\n 17263: u64 [a4 + 0x28] = a0\n 17266: a0 = u64 [s1 + 0x38]\n 17269: u64 [a4 + 0x30] = a0\n 17272: a1 = s1 + 0x7ff\n 17276: a1 = a1 + 0x481\n 17280: a0 = u64 [s1 + 0x40]\n 17283: u64 [a4 + 0x38] = a0\n 17286: a0 = a3\n 17288: ra = 592, jump @9\n      : @573 [@dyn 296] (gas: 11)\n 17294: a0 = u64 [s1 + 0xc8]\n 17298: a1 = u64 [s1 + 0xc0]\n 17302: a2 = a1 | a0\n 17305: a3 = 0x100000000\n 17315: a0 = 0xffffffe0\n 17325: a4 = u64 [s1 + 0xd8]\n 17329: a0 = a4 <u a0\n 17332: a1 = u64 [s1 + 0xd0]\n 17336: a0 = 0 if a1 != 0\n 17338: a0 = 0 if a2 != 0\n 17340: jump @575 if a0 != 0\n      : @574 (gas: 1)\n 17343: jump @381\n      : @575 (gas: 18)\n 17346: i32 a0 = a4 + 0x20\n 17349: u64 [s1 + 0xc8] = a2\n 17353: a2 = s1 + 0x7ff\n 17357: a2 = a2 + 0x61\n 17360: u64 [s1 + 0xc0] = a3\n 17364: a3 = u64 [s1 + 0xa0]\n 17368: a4 = a2 + 0x400\n 17372: u64 [a4] = a3\n 17374: a3 = u64 [s1 + 0xa8]\n 17378: u64 [a4 + 0x8] = a3\n 17381: a3 = u64 [s1 + 0xb0]\n 17385: u64 [a4 + 0x10] = a3\n 17388: a1 = s1 + 0x7ff\n 17392: a1 = a1 + 0x461\n 17396: a3 = u64 [s1 + 0xb8]\n 17400: u64 [a4 + 0x18] = a3\n 17403: u64 [s1 + 0xb8] = a0\n 17407: ra = 594, jump @9\n      : @576 [@dyn 297] (gas: 4)\n 17413: a1 = u64 [s1 + 0xd8]\n 17417: a0 = u64 [s1 + 0xc0]\n 17421: a0 = a0 + 0xffffffffffffffc0\n 17424: t0 = 596, jump @913\n      : @577 [@dyn 298] (gas: 1)\n 17430: jump @579 if a0 != 0\n      : @578 (gas: 1)\n 17433: jump @381\n      : @579 (gas: 11)\n 17436: i32 a0 = a1 + 0x40\n 17439: a3 = s1 + 0x7ff\n 17443: a3 = a3 + 0x61\n 17446: u64 [a3 + 1016] = 0\n 17450: u64 [a3 + 1008] = 0\n 17454: u64 [a3 + 1000] = 0\n 17458: a1 = s1 + 0x7ff\n 17462: a1 = a1 + 0x441\n 17466: u64 [a3 + 992] = 0x1\n 17471: u64 [s1 + 0xa0] = a0\n 17475: ra = 598, jump @9\n      : @580 [@dyn 299] (gas: 5)\n 17481: a0 = u64 [s1 + 0x58]\n 17484: ra = 0x258\n 17488: ecalli 5 // 'caller'\n 17490: t0 = 0x25a\n 17494: jump @895\n      : @581 [@dyn 300] (gas: 1)\n 17497: t0 = 602, jump @895\n      : @582 [@dyn 301] (gas: 9)\n 17503: u64 [a2 + 984] = 0\n 17507: a4 = a2 + 0x300\n 17511: u64 [a4 + 0xd0] = a1\n 17515: u64 [a4 + 0xc8] = a0\n 17519: a1 = s1 + 0x7ff\n 17523: a1 = a1 + 0x421\n 17527: u64 [a4 + 0xc0] = a3\n 17531: a0 = 0\n 17533: ra = 604, jump @9\n      : @583 [@dyn 302] (gas: 6)\n 17539: a1 = s1 + 0x7ff\n 17543: a1 = a1 + 0x61\n 17546: u64 [a1 + 952] = 0\n 17550: u64 [a1 + 944] = 0\n 17554: u64 [a1 + 928] = 0x3\n 17559: t0 = 606, jump @902\n      : @584 [@dyn 303] (gas: 3)\n 17565: a1 = a1 + 0x401\n 17569: u64 [a2 + 936] = 0\n 17573: ra = 608, jump @9\n      : @585 [@dyn 304] (gas: 7)\n 17579: a0 = sp + 0xffffffffffffffe0\n 17582: a0 = a0 & 0xffffffffffffffe0\n 17585: u64 [s1 + 0xb0] = a0\n 17589: sp = a0\n 17591: a2 = u64 [s1 + 0x48]\n 17594: a0 = i32 [a2]\n 17596: jump @587 if a0 >u 63\n      : @586 (gas: 2)\n 17600: u32 [a2 + 0] = 0x40\n 17603: fallthrough\n      : @587 (gas: 30)\n 17604: a0 = sp + 0xffffffffffffffe0\n 17607: a0 = a0 & 0xffffffffffffffe0\n 17610: u64 [s1 + 0xd0] = a0\n 17614: sp = a0\n 17616: i32 a2 = a0 + 0\n 17618: a1 = 0x40\n 17621: a0 = u64 [s1 + 0x50]\n 17624: ecalli 9 // 'hash_keccak_256'\n 17626: a3 = u64 [s1 + 0xd0]\n 17630: a0 = u64 [a3 + 0x18]\n 17633: a1 = u64 [a3 + 0x10]\n 17636: a2 = u64 [a3 + 0x8]\n 17639: a3 = u64 [a3]\n 17641: a4 = reverse a0\n 17643: u64 [s1 + 0xc0] = a4\n 17647: a1 = reverse a1\n 17649: u64 [s1 + 0xc8] = a1\n 17653: a2 = reverse a2\n 17655: u64 [s1 + 0xa8] = a2\n 17659: a0 = reverse a3\n 17661: u64 [s1 + 0xd0] = a0\n 17665: a3 = u64 [s1 + 0xb0]\n 17669: u64 [a3 + 0x18] = a0\n 17672: u64 [a3 + 0x10] = a2\n 17675: u64 [a3 + 0x8] = a1\n 17678: u64 [a3] = a4\n 17680: a0 = s1 + 0x7ff\n 17684: a0 = a0 + 0x3e1\n 17688: a1 = u64 [s1 + 0xd8]\n 17692: ra = 610, jump @7\n      : @588 [@dyn 305] (gas: 16)\n 17698: a3 = s1 + 0x7ff\n 17702: a3 = a3 + 0x61\n 17705: a4 = a3 + 0x300\n 17709: a0 = u64 [a4 + 0x98]\n 17713: a1 = u64 [a4 + 0x90]\n 17717: a2 = u64 [a4 + 0x88]\n 17721: a3 = u64 [a4 + 0x80]\n 17725: a4 = s1 + 0x1878\n 17729: a5 = a4 + 0x600\n 17733: u64 [a5 + 0x60] = a0\n 17736: u64 [a5 + 0x58] = a1\n 17739: u64 [a5 + 0x50] = a2\n 17742: u64 [a5 + 0x48] = a3\n 17745: a1 = s1 + 0x1ec0\n 17749: a0 = u64 [s1 + 0xb0]\n 17753: ra = 612, jump @12\n      : @589 [@dyn 306] (gas: 4)\n 17759: a0 = s1 + 0x7ff\n 17763: a0 = a0 + 0x3c1\n 17767: a1 = u64 [s1 + 0xb8]\n 17771: ra = 614, jump @7\n      : @590 [@dyn 307] (gas: 31)\n 17777: a0 = s1 + 0x7ff\n 17781: a0 = a0 + 0x61\n 17784: t0 = u64 [a0 + 0x360]\n 17788: t1 = u64 [a0 + 0x368]\n 17792: t2 = u64 [a0 + 0x370]\n 17796: a3 = u64 [a0 + 0x378]\n 17800: a0 = u64 [s1 + 0xc0]\n 17804: a0 = a0 + 0x1\n 17807: a5 = a0 <u 0x1\n 17810: a1 = u64 [s1 + 0xc8]\n 17814: a5 = a5 + a1\n 17817: a4 = a0 | a5\n 17820: a4 = a4 <u 0x1\n 17823: a1 = u64 [s1 + 0xa8]\n 17827: a4 = a4 + a1\n 17830: a1 = a4 <u a1\n 17833: a2 = u64 [s1 + 0xd0]\n 17837: a1 = a1 + a2\n 17840: a2 = s1 + 0x1878\n 17844: u64 [a2 + 0x680] = a1\n 17848: a1 = a2 + 0x600\n 17852: u64 [a1 + 0x78] = a4\n 17855: u64 [a1 + 0x70] = a5\n 17858: u64 [a1 + 0x68] = a0\n 17861: u64 [a1 + 0xa0] = a3\n 17865: u64 [a2 + 0x698] = t2\n 17869: u64 [a2 + 0x690] = t1\n 17873: u64 [a2 + 0x688] = t0\n 17877: a0 = s1 + 0x1ee0\n 17881: a1 = s1 + 0x1f00\n 17885: ra = 616, jump @12\n      : @591 [@dyn 308] (gas: 8)\n 17891: a0 = sp + 0xffffffffffffffe0\n 17894: a5 = a0 & 0xffffffffffffffe0\n 17897: sp = a5\n 17899: a1 = u64 [s1 + 0xc0]\n 17903: a0 = a1 + 0x2\n 17906: a1 = a0 <u a1\n 17909: a3 = u64 [s1 + 0xc8]\n 17913: t0 = 618, jump @920\n      : @592 [@dyn 309] (gas: 14)\n 17919: a1 = u64 [s1 + 0xa8]\n 17923: a3 = a3 + a1\n 17926: a1 = a3 <u a1\n 17929: a4 = u64 [s1 + 0xd0]\n 17933: a1 = a1 + a4\n 17936: u64 [s1 + 0xd8] = a5\n 17940: u64 [a5 + 0x18] = a1\n 17943: u64 [a5 + 0x10] = a3\n 17946: u64 [a5 + 0x8] = a2\n 17949: u64 [a5] = a0\n 17951: a0 = s1 + 0x7ff\n 17955: a0 = a0 + 0x3a1\n 17959: a1 = u64 [s1 + 0xa0]\n 17963: ra = 620, jump @7\n      : @593 [@dyn 310] (gas: 16)\n 17969: a3 = s1 + 0x7ff\n 17973: a3 = a3 + 0x61\n 17976: a4 = a3 + 0x300\n 17980: a0 = u64 [a4 + 0x50]\n 17983: a1 = u64 [a4 + 0x58]\n 17986: a2 = u64 [a4 + 0x48]\n 17989: a3 = u64 [a4 + 0x40]\n 17992: a1 = a1 | a2\n 17995: a0 = a0 | a3\n 17998: a0 = a0 | a1\n 18001: a0 = a0 >u 0\n 18003: u64 [s1 + 0xd0] = a0\n 18007: a0 = s1 + 0x7ff\n 18011: a0 = a0 + 0x381\n 18015: a1 = u64 [s1 + 0xd8]\n 18019: ra = 622, jump @11\n      : @594 [@dyn 311] (gas: 19)\n 18025: a3 = s1 + 0x7ff\n 18029: a3 = a3 + 0x61\n 18032: a4 = a3 + 0x300\n 18036: a0 = u64 [a4 + 0x20]\n 18039: a1 = u64 [a4 + 0x28]\n 18042: a2 = u64 [a4 + 0x38]\n 18045: a3 = u64 [a4 + 0x30]\n 18048: a0 = a0 & 0xffffffffffffff00\n 18052: a4 = u64 [s1 + 0xd0]\n 18056: a0 = a0 | a4\n 18059: a4 = s1 + 0x1878\n 18063: a5 = a4 + 0x600\n 18067: u64 [a5 + 0xc0] = a2\n 18071: u64 [a5 + 0xb8] = a3\n 18075: u64 [a5 + 0xb0] = a1\n 18079: u64 [a5 + 0xa8] = a0\n 18083: a1 = s1 + 0x1f20\n 18087: a0 = u64 [s1 + 0xd8]\n 18091: ra = 624, jump @12\n      : @595 [@dyn 312] (gas: 4)\n 18097: a0 = s1 + 0x7ff\n 18101: a0 = a0 + 0x361\n 18105: a1 = 0x40\n 18108: ra = 626, jump @7\n      : @596 [@dyn 313] (gas: 15)\n 18114: a2 = s1 + 0x7ff\n 18118: a2 = a2 + 0x61\n 18121: t0 = u64 [a2 + 0x318]\n 18125: a1 = a2 + 0x300\n 18129: a5 = u64 [a1 + 0x10]\n 18132: a4 = u64 [a1 + 0x8]\n 18135: a0 = u64 [a1]\n 18137: a3 = a4 | t0\n 18140: a1 = a0 | a5\n 18143: a1 = a1 | a3\n 18146: a1 = a1 >> 0x20\n 18149: a3 = a3 | a5\n 18152: a3 = a3 << 0x20\n 18155: a1 = a1 | a3\n 18158: jump @598 if a1 == 0\n      : @597 (gas: 1)\n 18161: jump @381\n      : @598 (gas: 12)\n 18164: u64 [a2 + 752] = 0\n 18168: u64 [a2 + 744] = 0\n 18172: u64 [a2 + 736] = 0\n 18176: a3 = 0xa9059cbb00000000\n 18186: a1 = s1 + 0x7ff\n 18190: a1 = a1 + 0x341\n 18194: u64 [a2 + 0x2f8] = a3\n 18198: u64 [s1 + 0xd8] = a0\n 18202: u64 [s1 + 0xd0] = a4\n 18206: u64 [s1 + 0xc8] = a5\n 18210: u64 [s1 + 0xc0] = t0\n 18214: ra = 628, jump @9\n      : @599 [@dyn 314] (gas: 6)\n 18220: a0 = u64 [s1 + 0x58]\n 18223: ra = 0x276\n 18227: ecalli 5 // 'caller'\n 18229: a2 = u64 [s1 + 0x60]\n 18232: t0 = 0x278\n 18236: jump @896\n      : @600 [@dyn 315] (gas: 2)\n 18239: a2 = u64 [s1 + 0x60]\n 18242: t0 = 632, jump @896\n      : @601 [@dyn 316] (gas: 48)\n 18248: t0 = a1 | a0\n 18251: a3 = a3 >> 0x20\n 18254: a2 = reverse a2\n 18256: a1 = a2 << 0x20\n 18259: t1 = a1 | a3\n 18262: a2 = a2 >> 0x20\n 18265: a0 = u64 [s1 + 0xd8]\n 18269: a3 = a0 + 0x4\n 18272: a4 = a3 <u a0\n 18275: a0 = u64 [s1 + 0xd0]\n 18279: a5 = a0 + a4\n 18282: a0 = a5 <u a0\n 18285: a0 = a4 if a4 == 0\n 18288: a1 = u64 [s1 + 0xc8]\n 18292: a0 = a0 + a1\n 18295: a4 = a0 <u a1\n 18298: a1 = u64 [s1 + 0xc0]\n 18302: a4 = a4 + a1\n 18305: a1 = s1 + 0x7ff\n 18309: a1 = a1 + 0x61\n 18312: u64 [a1 + 0x2b8] = a4\n 18316: a4 = a1 + 0x200\n 18320: u64 [a4 + 0xb0] = a0\n 18324: u64 [a4 + 0xa8] = a5\n 18328: a0 = u64 [s1 + 0x40]\n 18331: u64 [a4 + 0x78] = a0\n 18334: a0 = u64 [s1 + 0x38]\n 18337: u64 [a4 + 0x70] = a0\n 18340: a0 = u64 [s1 + 0x30]\n 18343: u64 [a4 + 0x68] = a0\n 18346: a0 = u64 [s1 + 0x28]\n 18349: u64 [a4 + 0x60] = a0\n 18352: u64 [a4 + 0xa0] = a3\n 18356: u64 [a4 + 0x90] = a2\n 18360: u64 [a1 + 0x288] = t1\n 18364: u64 [a1 + 0x280] = t0\n 18368: a4 = s1 + 0x7ff\n 18372: a4 = a4 + 0x61\n 18375: a0 = s1 + 0x7ff\n 18379: a0 = a0 + 0x321\n 18383: a1 = s1 + 0x7ff\n 18387: a1 = a1 + 0x301\n 18391: a2 = s1 + 0x7ff\n 18395: a2 = a2 + 0x2e1\n 18399: a3 = s1 + 0x7ff\n 18403: a3 = a3 + 0x2c1\n 18407: u64 [a4 + 664] = 0\n 18411: ra = 634, jump @818\n      : @602 [@dyn 317] (gas: 29)\n 18417: a1 = s1 + 0x7ff\n 18421: a1 = a1 + 0x61\n 18424: a0 = u64 [a1 + 0x2c8]\n 18428: t0 = u64 [a1 + 0x2d8]\n 18432: t1 = u64 [a1 + 0x2c0]\n 18436: a3 = u64 [a1 + 0x2d0]\n 18440: a1 = u64 [s1 + 0xd0]\n 18444: a4 = a0 ^ a1\n 18447: a5 = a0 <u a1\n 18450: ra = u64 [s1 + 0xd8]\n 18454: t2 = t1 <u ra\n 18457: a5 = t2 if a4 == 0\n 18460: a2 = u64 [s1 + 0xc8]\n 18464: a4 = a3 - a2\n 18467: a3 = a3 <u a2\n 18470: a2 = u64 [s1 + 0xc0]\n 18474: a2 = t0 - a2\n 18477: a2 = a2 - a3\n 18480: a3 = a4 <u a5\n 18483: a2 = a2 - a3\n 18486: u64 [s1 + 0xb0] = a2\n 18490: a4 = a4 - a5\n 18493: u64 [s1 + 0xa8] = a4\n 18497: a0 = a0 - a1\n 18500: a0 = a0 - t2\n 18503: u64 [s1 + 0xa0] = a0\n 18507: a0 = t1 - ra\n 18510: u64 [s1 + 0xb8] = a0\n 18514: ra = 636, jump @0\n      : @603 [@dyn 318] (gas: 8)\n 18520: a1 = u64 [0x30210]\n 18525: u64 [s1 + 0x98] = a1\n 18529: a1 = u64 [0x30220]\n 18534: u64 [s1 + 0x90] = a1\n 18538: a0 = u64 [0x30218]\n 18543: u64 [s1 + 0x88] = a0\n 18547: ecalli 10 // 'ref_time_left'\n 18549: fallthrough\n      : @604 (gas: 35)\n 18550: a0 = u64 [s1 + 0x88]\n 18554: a0 = reverse a0\n 18556: a1 = a0 << 0x20\n 18559: a2 = u64 [s1 + 0x90]\n 18563: a2 = reverse a2\n 18565: a2 = a2 >> 0x20\n 18568: a1 = a1 | a2\n 18571: a0 = a0 >> 0x20\n 18574: a2 = u64 [s1 + 0x98]\n 18578: a2 = reverse a2\n 18580: a3 = a2 << 0x20\n 18583: a0 = a0 | a3\n 18586: a3 = u64 [s1 + 0x60]\n 18589: a2 = a2 >> 0x20\n 18592: u32 [a3 + 0x10] = a2\n 18595: u64 [a3 + 0x8] = a0\n 18598: u64 [a3] = a1\n 18600: a2 = s1 + 0x1878\n 18604: u64 [a2 + 1760] = 0\n 18608: u64 [a2 + 1752] = 0\n 18612: u64 [a2 + 1744] = 0\n 18616: a0 = u64 [s1 + 0xb8]\n 18620: t0 = a0\n 18622: a5 = u64 [s1 + 0xa8]\n 18626: a0 = a0 | a5\n 18629: a1 = u64 [s1 + 0xb0]\n 18633: a4 = u64 [s1 + 0xa0]\n 18637: a1 = a1 | a4\n 18640: a0 = a0 | a1\n 18643: a0 = a0 >> 0x20\n 18646: a1 = a1 | a5\n 18649: a1 = a1 << 0x20\n 18652: a0 = a0 | a1\n 18655: u64 [a2 + 1736] = 0\n 18659: jump @606 if a0 == 0\n      : @605 (gas: 1)\n 18662: jump @381\n      : @606 (gas: 3)\n 18665: a0 = u64 [s1 + 0xd8]\n 18669: a1 = t0\n 18671: ra = 638, jump @18\n      : @607 [@dyn 319] (gas: 4)\n 18677: u64 [s1 + 0xb0] = a0\n 18681: a1 = 0x20\n 18684: a0 = u64 [s1 + 0xd8]\n 18688: ra = 640, jump @18\n      : @608 [@dyn 320] (gas: 34)\n 18694: a2 = s1 + 0x1878\n 18698: u32 [a2 + 1768] = 0x20\n 18703: a3 = a2 + 0x700\n 18707: u64 [a3 + 32] = 0xffffffffffffffff\n 18711: u64 [a3 + 24] = 0xffffffffffffffff\n 18715: u64 [a3 + 16] = 0xffffffffffffffff\n 18719: u64 [a3 + 8] = 0xffffffffffffffff\n 18723: a1 = u64 [s1 + 0x60]\n 18726: a1 = a1 << 0x20\n 18729: a1 = a1 >> 0x20\n 18732: a2 = 0x800000000\n 18742: t0 = a1 | a2\n 18745: a1 = s1 + 0x1f40\n 18749: a1 = a1 << 0x20\n 18752: a1 = a1 >> 0x20\n 18755: a2 = s1 + 0x1f80\n 18759: a2 = a2 << 0x20\n 18762: a3 = a2 | a1\n 18765: a1 = u64 [s1 + 0xb0]\n 18769: a1 = a1 << 0x20\n 18772: a1 = a1 >> 0x20\n 18775: a4 = u64 [s1 + 0xb8]\n 18779: a4 = a4 << 0x20\n 18782: a4 = a4 | a1\n 18785: a0 = a0 << 0x20\n 18788: a0 = a0 >> 0x20\n 18791: a1 = s1 + 0x1f60\n 18795: a1 = a1 << 0x20\n 18798: a5 = a1 | a0\n 18801: a1 = 0xffffffffffffffff\n 18804: a2 = 0xffffffffffffffff\n 18807: a0 = t0\n 18809: ecalli 1 // 'call'\n 18811: fallthrough\n      : @609 (gas: 1)\n 18812: jump @644 if a0 != 0\n      : @610 (gas: 2)\n 18816: ecalli 12 // 'return_data_size'\n 18818: fallthrough\n      : @611 (gas: 2)\n 18819: a1 = 0x20\n 18822: jump @613 if a0 >=u a1\n      : @612 (gas: 3)\n 18825: ecalli 12 // 'return_data_size'\n 18827: a1 = a0\n 18829: fallthrough\n      : @613 (gas: 21)\n 18830: a2 = s1 + 0x7ff\n 18834: a2 = a2 + 0x61\n 18837: t0 = u64 [s1 + 0xd8]\n 18841: a4 = u64 [s1 + 0xd0]\n 18845: a5 = u64 [s1 + 0xc8]\n 18849: a3 = u64 [s1 + 0xc0]\n 18853: u64 [s1 + 0xb0] = a1\n 18857: u64 [s1 + 184] = 0\n 18861: u64 [a2 + 0x200] = a1\n 18865: u64 [a2 + 0x220] = t0\n 18869: u64 [a2 + 520] = 0\n 18873: u64 [a2 + 0x228] = a4\n 18877: u64 [a2 + 528] = 0\n 18881: u64 [a2 + 0x230] = a5\n 18885: u64 [a2 + 536] = 0\n 18889: a0 = s1 + 0x7ff\n 18893: a0 = a0 + 0x281\n 18897: a1 = s1 + 0x7ff\n 18901: a1 = a1 + 0x261\n 18905: u64 [a2 + 0x238] = a3\n 18909: ra = 642, jump @799\n      : @614 [@dyn 321] (gas: 51)\n 18915: t0 = u64 [s1 + 0xd8]\n 18919: a1 = u64 [s1 + 0xb0]\n 18923: a0 = a1 + t0\n 18926: a1 = a0 <u a1\n 18929: t1 = u64 [s1 + 0xd0]\n 18933: a5 = u64 [s1 + 0xb8]\n 18937: a2 = a5 + t1\n 18940: a2 = a2 + a1\n 18943: a3 = a2 ^ a5\n 18946: a4 = a2 <u a5\n 18949: a4 = a1 if a3 == 0\n 18952: ra = u64 [s1 + 0xc8]\n 18956: a1 = a5 + ra\n 18959: a4 = a4 + a1\n 18962: t2 = a4 <u a1\n 18965: a1 = a1 <u a5\n 18968: a3 = u64 [s1 + 0xc0]\n 18972: a5 = a5 + a3\n 18975: a1 = a1 + a5\n 18978: t2 = t2 + a1\n 18981: a1 = s1 + 0x7ff\n 18985: a1 = a1 + 0x61\n 18988: u64 [a1 + 0x1b0] = a4\n 18992: a1 = s1 + 0x7ff\n 18996: a1 = a1 + 0x61\n 18999: u64 [a1 + 0x1a8] = a2\n 19003: a1 = s1 + 0x7ff\n 19007: a1 = a1 + 0x61\n 19010: u64 [a1 + 0x1a0] = a0\n 19014: a0 = s1 + 0x7ff\n 19018: a0 = a0 + 0x61\n 19021: u64 [a0 + 0x1d8] = a3\n 19025: a0 = s1 + 0x7ff\n 19029: a0 = a0 + 0x61\n 19032: u64 [a0 + 0x1d0] = ra\n 19036: a0 = s1 + 0x7ff\n 19040: a0 = a0 + 0x61\n 19043: u64 [a0 + 0x1c8] = t1\n 19047: a0 = s1 + 0x7ff\n 19051: a0 = a0 + 0x61\n 19054: u64 [a0 + 0x1c0] = t0\n 19058: a0 = s1 + 0x7ff\n 19062: a0 = a0 + 0x241\n 19066: a1 = s1 + 0x7ff\n 19070: a1 = a1 + 0x221\n 19074: a2 = s1 + 0x7ff\n 19078: a2 = a2 + 0x201\n 19082: a4 = s1 + 0x7ff\n 19086: a4 = a4 + 0x61\n 19089: u64 [a4 + 0x1b8] = t2\n 19093: ra = 644, jump @809\n      : @615 [@dyn 322] (gas: 4)\n 19099: a0 = s1 + 0x7ff\n 19103: a0 = a0 + 0x1e1\n 19107: a1 = 0x40\n 19110: ra = 646, jump @7\n      : @616 [@dyn 323] (gas: 8)\n 19116: a3 = s1 + 0x7ff\n 19120: a3 = a3 + 0x61\n 19123: a5 = a3 + 0x100\n 19127: a0 = u64 [a5 + 0x98]\n 19131: a1 = u64 [a5 + 0x90]\n 19135: a2 = u64 [a5 + 0x88]\n 19139: a4 = u64 [a5 + 0x80]\n 19143: t0 = 648, jump @908\n      : @617 [@dyn 324] (gas: 1)\n 19149: jump @619 if a0 == 0\n      : @618 (gas: 1)\n 19152: jump @381\n      : @619 (gas: 14)\n 19155: a0 = u64 [s1 + 0x28]\n 19158: a2 = a3 + 0x100\n 19162: u64 [a2 + 0x60] = a0\n 19165: a0 = u64 [s1 + 0x30]\n 19168: u64 [a2 + 0x68] = a0\n 19171: a0 = u64 [s1 + 0x38]\n 19174: u64 [a2 + 0x70] = a0\n 19177: a1 = s1 + 0x7ff\n 19181: a1 = a1 + 0x1c1\n 19185: a0 = u64 [s1 + 0x40]\n 19188: u64 [a2 + 0x78] = a0\n 19191: a0 = a4\n 19193: u64 [s1 + 0xd8] = a4\n 19197: ra = 650, jump @9\n      : @620 [@dyn 325] (gas: 6)\n 19203: a0 = u64 [s1 + 0x58]\n 19206: ra = 0x28c\n 19210: ecalli 5 // 'caller'\n 19212: a2 = u64 [s1 + 0x60]\n 19215: t0 = 0x28e\n 19219: jump @896\n      : @621 [@dyn 326] (gas: 2)\n 19222: a2 = u64 [s1 + 0x60]\n 19225: t0 = 654, jump @896\n      : @622 [@dyn 327] (gas: 30)\n 19231: t0 = a1 | a0\n 19234: a3 = a3 >> 0x20\n 19237: a2 = reverse a2\n 19239: a1 = a2 << 0x20\n 19242: a1 = a1 | a3\n 19245: a2 = a2 >> 0x20\n 19248: a3 = u64 [0x20108]\n 19253: a0 = s1 + 0x7ff\n 19257: a0 = a0 + 0x61\n 19260: u64 [a0 + 0x158] = a3\n 19264: a3 = u64 [0x20110]\n 19269: a4 = u64 [0x20118]\n 19274: a5 = u64 [0x20120]\n 19279: u64 [a0 + 0x150] = a3\n 19283: a3 = a0 + 0x100\n 19287: u64 [a3 + 0x48] = a4\n 19290: u64 [a0 + 312] = 0\n 19294: u64 [a3 + 0x40] = a5\n 19297: u64 [a3 + 0x30] = a2\n 19300: u64 [a3 + 0x28] = a1\n 19303: a0 = s1 + 0x7ff\n 19307: a0 = a0 + 0x61\n 19310: a1 = 0x20\n 19313: a2 = s1 + 0x7ff\n 19317: a2 = a2 + 0x1a1\n 19321: a3 = s1 + 0x7ff\n 19325: a3 = a3 + 0x181\n 19329: u64 [a0 + 0x120] = t0\n 19333: a0 = u64 [s1 + 0xd8]\n 19337: ra = 656, jump @13\n      : @623 [@dyn 328] (gas: 5)\n 19343: a0 = 0\n 19345: a1 = u64 [s1 + 0x50]\n 19348: a2 = 0\n 19350: ecalli 13 // 'seal_return'\n 19352: jump @714\n      : @624 (gas: 3)\n 19355: a0 = s1 + 0x12c0\n 19359: a1 = 0x40\n 19362: ra = 658, jump @7\n      : @625 [@dyn 329] (gas: 14)\n 19368: a0 = s1 + 0x1078\n 19372: a2 = a0 + 0x200\n 19376: a1 = u64 [a2 + 0x60]\n 19379: u64 [s1 + 0xd0] = a1\n 19383: a1 = u64 [a2 + 0x58]\n 19386: u64 [s1 + 0xc8] = a1\n 19390: a1 = u64 [a2 + 0x50]\n 19393: u64 [s1 + 0xc0] = a1\n 19397: a0 = u64 [a2 + 0x48]\n 19400: u64 [s1 + 0xd8] = a0\n 19404: ra = 0x294\n 19408: ecalli 12 // 'return_data_size'\n 19410: t0 = 0x296\n 19414: jump @899\n      : @626 [@dyn 330] (gas: 1)\n 19417: t0 = 662, jump @899\n      : @627 [@dyn 331] (gas: 1)\n 19423: jump @629 if a1 == 0\n      : @628 (gas: 1)\n 19426: jump @381\n      : @629 (gas: 3)\n 19429: a2 = a0\n 19431: a0 = a0 >> 0x20\n 19434: jump @631 if a0 == 0\n      : @630 (gas: 1)\n 19437: jump @381\n      : @631 (gas: 1)\n 19440: t0 = 664, jump @919\n      : @632 [@dyn 332] (gas: 1)\n 19446: ra = 666, jump @18\n      : @633 [@dyn 333] (gas: 11)\n 19452: a1 = s1 + 0x2078\n 19456: a2 = u64 [s1 + 0xc8]\n 19460: u32 [a1 + 0x48] = a2\n 19463: i32 a0 = a0 + 0\n 19465: a1 = s1 + 0x2000\n 19469: i32 a1 = a1 + 0xc0\n 19473: a2 = 0\n 19475: ecalli 11 // 'return_data_copy'\n 19477: a0 = s1 + 0x2078\n 19481: a0 = i32 [a0 + 0x48]\n 19484: jump @523\n      : @634 (gas: 3)\n 19487: a0 = s1 + 0x3e0\n 19491: a1 = 0x40\n 19494: ra = 668, jump @7\n      : @635 [@dyn 334] (gas: 13)\n 19500: a1 = s1 + 0x300\n 19504: a0 = u64 [a1 + 0xf8]\n 19508: u64 [s1 + 0xd0] = a0\n 19512: a0 = u64 [a1 + 0xf0]\n 19516: u64 [s1 + 0xc8] = a0\n 19520: a0 = u64 [a1 + 0xe8]\n 19524: u64 [s1 + 0xc0] = a0\n 19528: a0 = u64 [a1 + 0xe0]\n 19532: u64 [s1 + 0xd8] = a0\n 19536: ra = 0x29e\n 19540: ecalli 12 // 'return_data_size'\n 19542: t0 = 0x2a0\n 19546: jump @899\n      : @636 [@dyn 335] (gas: 1)\n 19549: t0 = 672, jump @899\n      : @637 [@dyn 336] (gas: 1)\n 19555: jump @639 if a1 == 0\n      : @638 (gas: 1)\n 19558: jump @381\n      : @639 (gas: 3)\n 19561: a2 = a0\n 19563: a0 = a0 >> 0x20\n 19566: jump @641 if a0 == 0\n      : @640 (gas: 1)\n 19569: jump @381\n      : @641 (gas: 1)\n 19572: t0 = 674, jump @919\n      : @642 [@dyn 337] (gas: 1)\n 19578: ra = 676, jump @18\n      : @643 [@dyn 338] (gas: 11)\n 19584: a1 = s1 + 0x1878\n 19588: a2 = u64 [s1 + 0xc8]\n 19592: u32 [a1 + 0x468] = a2\n 19596: i32 a0 = a0 + 0\n 19598: a1 = s1 + 0x2000\n 19602: i32 a1 = a1 + 0xfffffffffffffce0\n 19606: a2 = 0\n 19608: ecalli 11 // 'return_data_copy'\n 19610: a0 = s1 + 0x1878\n 19614: a0 = i32 [a0 + 0x468]\n 19618: jump @523\n      : @644 (gas: 4)\n 19621: a0 = s1 + 0x7ff\n 19625: a0 = a0 + 0x2a1\n 19629: a1 = 0x40\n 19632: ra = 678, jump @7\n      : @645 [@dyn 339] (gas: 15)\n 19638: a0 = s1 + 0x7ff\n 19642: a0 = a0 + 0x61\n 19645: a2 = a0 + 0x200\n 19649: a1 = u64 [a2 + 0x58]\n 19652: u64 [s1 + 0xd0] = a1\n 19656: a1 = u64 [a2 + 0x50]\n 19659: u64 [s1 + 0xc8] = a1\n 19663: a1 = u64 [a2 + 0x48]\n 19666: u64 [s1 + 0xc0] = a1\n 19670: a0 = u64 [a2 + 0x40]\n 19673: u64 [s1 + 0xd8] = a0\n 19677: ra = 0x2a8\n 19681: ecalli 12 // 'return_data_size'\n 19683: t0 = 0x2aa\n 19687: jump @899\n      : @646 [@dyn 340] (gas: 1)\n 19690: t0 = 682, jump @899\n      : @647 [@dyn 341] (gas: 1)\n 19696: jump @649 if a1 == 0\n      : @648 (gas: 1)\n 19699: jump @381\n      : @649 (gas: 3)\n 19702: a2 = a0\n 19704: a0 = a0 >> 0x20\n 19707: jump @651 if a0 == 0\n      : @650 (gas: 1)\n 19710: jump @381\n      : @651 (gas: 1)\n 19713: t0 = 684, jump @919\n      : @652 [@dyn 342] (gas: 1)\n 19719: ra = 686, jump @18\n      : @653 [@dyn 343] (gas: 11)\n 19725: a1 = s1 + 0x1878\n 19729: a2 = u64 [s1 + 0xc8]\n 19733: u32 [a1 + 0x728] = a2\n 19737: i32 a0 = a0 + 0\n 19739: a1 = s1 + 0x2000\n 19743: i32 a1 = a1 + 0xffffffffffffffa0\n 19746: a2 = 0\n 19748: ecalli 11 // 'return_data_copy'\n 19750: a0 = s1 + 0x1878\n 19754: a0 = i32 [a0 + 0x728]\n 19758: jump @523\n      : @654 (gas: 6)\n 19761: a1 = 0x201d0\n 19766: i32 a1 = a1 + 0\n 19768: a0 = 0x1\n 19771: a2 = 0\n 19773: ecalli 13 // 'seal_return'\n 19775: jump @714\n      : @655 (gas: 6)\n 19778: a1 = 0x201d0\n 19783: i32 a1 = a1 + 0\n 19785: a0 = 0x1\n 19788: a2 = 0\n 19790: ecalli 13 // 'seal_return'\n 19792: jump @714\n      : @656 (gas: 6)\n 19795: a1 = 0x201d0\n 19800: i32 a1 = a1 + 0\n 19802: a0 = 0x1\n 19805: a2 = 0\n 19807: ecalli 13 // 'seal_return'\n 19809: jump @714\n      : @657 (gas: 6)\n 19812: a1 = 0x201d0\n 19817: i32 a1 = a1 + 0\n 19819: a0 = 0x1\n 19822: a2 = 0\n 19824: ecalli 13 // 'seal_return'\n 19826: jump @714\n      : @658 (gas: 8)\n 19829: a0 = s1 + 0x1078\n 19833: u64 [a0 + 1272] = 0\n 19837: u64 [a0 + 1264] = 0\n 19841: u64 [a0 + 1256] = 0\n 19845: a2 = a0\n 19847: t0 = 0x2b0\n 19851: a0 = 0x4e487b7100000000\n 19861: fallthrough\n      : @659 [@dyn 344] (gas: 4)\n 19862: a1 = s1 + 0x1560\n 19866: u64 [a2 + 0x500] = a0\n 19870: a0 = 0\n 19872: ra = 690, jump @9\n      : @660 [@dyn 345] (gas: 9)\n 19878: a1 = s1 + 0x1078\n 19882: u64 [a1 + 1248] = 0\n 19886: u64 [a1 + 1240] = 0\n 19890: u64 [a1 + 1224] = 0x11\n 19895: a2 = a1\n 19897: a0 = 0x4\n 19900: a1 = s1 + 0x1540\n 19904: u64 [a2 + 1232] = 0\n 19908: ra = 692, jump @9\n      : @661 [@dyn 346] (gas: 3)\n 19914: a0 = u64 [s1 + 0x98]\n 19918: a0 = i32 [a0]\n 19920: jump @663 if a0 >u 63\n      : @662 (gas: 3)\n 19924: a1 = u64 [s1 + 0x98]\n 19928: u32 [a1 + 0] = 0x40\n 19931: fallthrough\n      : @663 (gas: 5)\n 19932: a0 = 0x1\n 19935: a2 = 0x24\n 19938: a1 = u64 [s1 + 0x80]\n 19942: ecalli 13 // 'seal_return'\n 19944: fallthrough\n      : @664 (gas: 6)\n 19945: a1 = 0x201d0\n 19950: i32 a1 = a1 + 0\n 19952: a0 = 0x1\n 19955: a2 = 0\n 19957: ecalli 13 // 'seal_return'\n 19959: jump @714\n      : @665 (gas: 6)\n 19962: a1 = 0x201d0\n 19967: i32 a1 = a1 + 0\n 19969: a0 = 0x1\n 19972: a2 = 0\n 19974: ecalli 13 // 'seal_return'\n 19976: jump @714\n      : @666 (gas: 6)\n 19979: a1 = 0x201d0\n 19984: i32 a1 = a1 + 0\n 19986: a0 = 0x1\n 19989: a2 = 0\n 19991: ecalli 13 // 'seal_return'\n 19993: jump @714\n      : @667 (gas: 6)\n 19996: a1 = 0x201d0\n 20001: i32 a1 = a1 + 0\n 20003: a0 = 0x1\n 20006: a2 = 0\n 20008: ecalli 13 // 'seal_return'\n 20010: jump @714\n      : @668 (gas: 6)\n 20013: a1 = 0x201d0\n 20018: i32 a1 = a1 + 0\n 20020: a0 = 0x1\n 20023: a2 = 0\n 20025: ecalli 13 // 'seal_return'\n 20027: jump @714\n      : @669 (gas: 6)\n 20030: a1 = 0x201d0\n 20035: i32 a1 = a1 + 0\n 20037: a0 = 0x1\n 20040: a2 = 0\n 20042: ecalli 13 // 'seal_return'\n 20044: jump @714\n      : @670 (gas: 6)\n 20047: a1 = 0x201d0\n 20052: i32 a1 = a1 + 0\n 20054: a0 = 0x1\n 20057: a2 = 0\n 20059: ecalli 13 // 'seal_return'\n 20061: jump @714\n      : @671 (gas: 6)\n 20064: a1 = 0x201d0\n 20069: i32 a1 = a1 + 0\n 20071: a0 = 0x1\n 20074: a2 = 0\n 20076: ecalli 13 // 'seal_return'\n 20078: jump @714\n      : @672 (gas: 6)\n 20081: a1 = 0x201d0\n 20086: i32 a1 = a1 + 0\n 20088: a0 = 0x1\n 20091: a2 = 0\n 20093: ecalli 13 // 'seal_return'\n 20095: jump @714\n      : @673 (gas: 1)\n 20098: jump @696 if a0 != 4076725131\n      : @674 (gas: 10)\n 20106: a0 = s1 + 0x2078\n 20110: u64 [a0 + 672] = 0\n 20114: u64 [a0 + 664] = 0\n 20118: u64 [a0 + 656] = 0\n 20122: u64 [a0 + 648] = 0\n 20126: a0 = s1 + 0x2000\n 20130: i32 a0 = a0 + 0x300\n 20134: ra = 0x2b6\n 20138: ecalli 16 // 'value_transferred'\n 20140: fallthrough\n      : @675 [@dyn 347] (gas: 3)\n 20141: a3 = s1 + 0x2078\n 20145: a4 = a3 + 0x200\n 20149: t0 = 696, jump @909\n      : @676 [@dyn 348] (gas: 1)\n 20155: jump @714 if a0 == 0\n      : @677 (gas: 6)\n 20159: a1 = 0x201d0\n 20164: i32 a1 = a1 + 0\n 20166: a0 = 0x1\n 20169: a2 = 0\n 20171: ecalli 13 // 'seal_return'\n 20173: jump @714\n      : @678 (gas: 6)\n 20176: a1 = 0x201d0\n 20181: i32 a1 = a1 + 0\n 20183: a0 = 0x1\n 20186: a2 = 0\n 20188: ecalli 13 // 'seal_return'\n 20190: jump @714\n      : @679 (gas: 6)\n 20193: a1 = 0x201d0\n 20198: i32 a1 = a1 + 0\n 20200: a0 = 0x1\n 20203: a2 = 0\n 20205: ecalli 13 // 'seal_return'\n 20207: jump @714\n      : @680 (gas: 6)\n 20210: a1 = 0x201d0\n 20215: i32 a1 = a1 + 0\n 20217: a0 = 0x1\n 20220: a2 = 0\n 20222: ecalli 13 // 'seal_return'\n 20224: jump @714\n      : @681 (gas: 6)\n 20227: a1 = 0x201d0\n 20232: i32 a1 = a1 + 0\n 20234: a0 = 0x1\n 20237: a2 = 0\n 20239: ecalli 13 // 'seal_return'\n 20241: jump @714\n      : @682 (gas: 6)\n 20244: a1 = 0x201d0\n 20249: i32 a1 = a1 + 0\n 20251: a0 = 0x1\n 20254: a2 = 0\n 20256: ecalli 13 // 'seal_return'\n 20258: jump @714\n      : @683 (gas: 8)\n 20261: a1 = s1 + 0x2078\n 20265: u64 [a1 + 256] = 0\n 20269: u64 [a1 + 248] = 0\n 20273: u64 [a1 + 240] = 0\n 20277: u64 [a1 + 232] = 0x1\n 20282: a0 = s1 + 0x2160\n 20286: a1 = u64 [s1 + 0xd8]\n 20290: ra = 698, jump @12\n      : @684 [@dyn 349] (gas: 6)\n 20296: a1 = 0x201d0\n 20301: i32 a1 = a1 + 0\n 20303: a0 = 0\n 20305: a2 = 0\n 20307: ecalli 13 // 'seal_return'\n 20309: jump @714\n      : @685 (gas: 5)\n 20312: i32 a1 = a1 + 0\n 20314: a0 = 0\n 20316: a2 = 0\n 20318: ecalli 13 // 'seal_return'\n 20320: jump @714\n      : @686 (gas: 6)\n 20323: a1 = 0x201d0\n 20328: i32 a1 = a1 + 0\n 20330: a0 = 0x1\n 20333: a2 = 0\n 20335: ecalli 13 // 'seal_return'\n 20337: jump @714\n      : @687 (gas: 6)\n 20340: a1 = 0x201d0\n 20345: i32 a1 = a1 + 0\n 20347: a0 = 0x1\n 20350: a2 = 0\n 20352: ecalli 13 // 'seal_return'\n 20354: jump @714\n      : @688 (gas: 6)\n 20357: a1 = 0x201d0\n 20362: i32 a1 = a1 + 0\n 20364: a0 = 0x1\n 20367: a2 = 0\n 20369: ecalli 13 // 'seal_return'\n 20371: jump @714\n      : @689 (gas: 6)\n 20374: a1 = 0x201d0\n 20379: i32 a1 = a1 + 0\n 20381: a0 = 0x1\n 20384: a2 = 0\n 20386: ecalli 13 // 'seal_return'\n 20388: jump @714\n      : @690 (gas: 6)\n 20391: a1 = 0x201d0\n 20396: i32 a1 = a1 + 0\n 20398: a0 = 0x1\n 20401: a2 = 0\n 20403: ecalli 13 // 'seal_return'\n 20405: jump @714\n      : @691 (gas: 6)\n 20408: a1 = 0x201d0\n 20413: i32 a1 = a1 + 0\n 20415: a0 = 0x1\n 20418: a2 = 0\n 20420: ecalli 13 // 'seal_return'\n 20422: jump @714\n      : @692 (gas: 14)\n 20425: a2 = u64 [0x30210]\n 20430: a1 = u64 [0x30218]\n 20435: a0 = u32 [0x30220]\n 20440: a4 = s1 + 0x7ff\n 20444: a4 = a4 + 0x61\n 20447: u64 [a4 + 1880] = 0\n 20451: a5 = a4 + 0x700\n 20455: u64 [a5 + 0x50] = a0\n 20458: u64 [a5 + 0x48] = a1\n 20461: a1 = s1 + 0x7ff\n 20465: a1 = a1 + 0x7a1\n 20469: u64 [a5 + 0x40] = a2\n 20472: a0 = a3\n 20474: ra = 700, jump @9\n      : @693 [@dyn 350] (gas: 3)\n 20480: a1 = 0x20\n 20483: a0 = u64 [s1 + 0xc8]\n 20487: ra = 702, jump @18\n      : @694 [@dyn 351] (gas: 5)\n 20493: i32 a1 = a0 + 0\n 20495: a2 = 0x20\n 20498: a0 = 0\n 20500: ecalli 13 // 'seal_return'\n 20502: jump @696\n      : @695 (gas: 4)\n 20504: a2 = 0x20\n 20507: a0 = 0\n 20509: ecalli 13 // 'seal_return'\n 20511: fallthrough\n      : @696 (gas: 1)\n 20512: jump @707 if a0 != 700225181\n      : @697 (gas: 10)\n 20520: a0 = s1 + 0x1878\n 20524: u64 [a0 + 800] = 0\n 20528: u64 [a0 + 792] = 0\n 20532: u64 [a0 + 784] = 0\n 20536: u64 [a0 + 776] = 0\n 20540: a0 = s1 + 0x2000\n 20544: i32 a0 = a0 + 0xfffffffffffffb80\n 20548: ra = 0x2c0\n 20552: ecalli 16 // 'value_transferred'\n 20554: fallthrough\n      : @698 [@dyn 352] (gas: 3)\n 20555: a3 = s1 + 0x1878\n 20559: a4 = a3 + 0x300\n 20563: t0 = 706, jump @911\n      : @699 [@dyn 353] (gas: 1)\n 20569: jump @716 if a0 == 0\n      : @700 (gas: 6)\n 20573: a1 = 0x201d0\n 20578: i32 a1 = a1 + 0\n 20580: a0 = 0x1\n 20583: a2 = 0\n 20585: ecalli 13 // 'seal_return'\n 20587: jump @714\n      : @701 (gas: 10)\n 20590: a0 = s1 + 0x7ff\n 20594: a0 = a0 + 0x61\n 20597: u64 [a0 + 1296] = 0\n 20601: u64 [a0 + 1288] = 0\n 20605: u64 [a0 + 1280] = 0\n 20609: a2 = s1 + 0x7ff\n 20613: a2 = a2 + 0x61\n 20616: t0 = 0x2c4\n 20620: a0 = 0x4e487b7100000000\n 20630: fallthrough\n      : @702 [@dyn 354] (gas: 5)\n 20631: a1 = s1 + 0x7ff\n 20635: a1 = a1 + 0x561\n 20639: u64 [a2 + 0x518] = a0\n 20643: a0 = 0\n 20645: ra = 710, jump @9\n      : @703 [@dyn 355] (gas: 12)\n 20651: a1 = s1 + 0x7ff\n 20655: a1 = a1 + 0x61\n 20658: u64 [a1 + 1272] = 0\n 20662: u64 [a1 + 1264] = 0\n 20666: u64 [a1 + 1248] = 0x11\n 20671: a2 = s1 + 0x7ff\n 20675: a2 = a2 + 0x61\n 20678: a0 = 0x4\n 20681: a1 = s1 + 0x7ff\n 20685: a1 = a1 + 0x541\n 20689: u64 [a2 + 1256] = 0\n 20693: ra = 712, jump @9\n      : @704 [@dyn 356] (gas: 3)\n 20699: a0 = u64 [s1 + 0x48]\n 20702: a0 = i32 [a0]\n 20704: jump @706 if a0 >u 63\n      : @705 (gas: 3)\n 20708: a1 = u64 [s1 + 0x48]\n 20711: u32 [a1 + 0] = 0x40\n 20714: fallthrough\n      : @706 (gas: 5)\n 20715: a0 = 0x1\n 20718: a2 = 0x24\n 20721: a1 = u64 [s1 + 0x50]\n 20724: ecalli 13 // 'seal_return'\n 20726: fallthrough\n      : @707 (gas: 2)\n 20727: a2 = s1 + 0x1878\n 20731: jump @712 if a0 != 1901074598\n      : @708 (gas: 9)\n 20738: u64 [a2 + 1184] = 0\n 20742: u64 [a2 + 1176] = 0\n 20746: u64 [a2 + 1168] = 0\n 20750: u64 [a2 + 1160] = 0\n 20754: a0 = s1 + 0x2000\n 20758: i32 a0 = a0 + 0xfffffffffffffd00\n 20762: ra = 0x2ca\n 20766: ecalli 16 // 'value_transferred'\n 20768: fallthrough\n      : @709 [@dyn 357] (gas: 3)\n 20769: a3 = s1 + 0x1878\n 20773: a4 = a3 + 0x400\n 20777: t0 = 716, jump @909\n      : @710 [@dyn 358] (gas: 1)\n 20783: jump @721 if a0 == 0\n      : @711 (gas: 6)\n 20787: a1 = 0x201d0\n 20792: i32 a1 = a1 + 0\n 20794: a0 = 0x1\n 20797: a2 = 0\n 20799: ecalli 13 // 'seal_return'\n 20801: jump @714\n      : @712 (gas: 6)\n 20803: a1 = 0x201d0\n 20808: i32 a1 = a1 + 0\n 20810: a0 = 0x1\n 20813: a2 = 0\n 20815: ecalli 13 // 'seal_return'\n 20817: jump @714\n      : @713 (gas: 5)\n 20819: i32 a1 = a1 + 0\n 20821: a0 = 0x1\n 20824: a2 = 0\n 20826: ecalli 13 // 'seal_return'\n 20828: fallthrough\n      : @714 (gas: 3)\n 20829: a0 = u64 [s1 + 0xd8]\n 20833: a0 = i32 [a0]\n 20835: jump @718 if a0 >u 35\n      : @715 (gas: 2)\n 20839: a1 = 0x201d0\n 20844: jump @713\n      : @716 (gas: 3)\n 20846: a0 = u64 [s1 + 0xd8]\n 20850: a0 = i32 [a0]\n 20852: jump @723 if a0 >u 35\n      : @717 (gas: 2)\n 20856: a1 = 0x201d0\n 20861: jump @713\n      : @718 (gas: 5)\n 20863: a0 = s1 + 0x2000\n 20867: i32 a0 = a0 + 0x320\n 20871: a1 = 0x4\n 20874: ecalli 3 // 'call_data_load'\n 20876: fallthrough\n      : @719 (gas: 13)\n 20877: a0 = s1 + 0x2078\n 20881: a1 = u64 [a0 + 0x2b8]\n 20885: a2 = u64 [a0 + 0x2c0]\n 20889: a0 = 0x100000000\n 20899: a0 = a0 ^ a1\n 20902: a0 = a0 | a2\n 20905: u64 [s1 + 0xd8] = a1\n 20909: a1 = a1 >> 0x20\n 20912: a1 = a1 <u 0x1\n 20915: u64 [s1 + 0xb8] = a2\n 20919: a1 = 0 if a2 != 0\n 20921: a1 = 0 if a0 == 0\n 20923: jump @727 if a1 != 0\n      : @720 (gas: 2)\n 20926: a1 = 0x201d0\n 20931: jump @713\n      : @721 (gas: 3)\n 20933: a0 = u64 [s1 + 0xd8]\n 20937: a0 = i32 [a0]\n 20939: jump @733 if a0 >u 3\n      : @722 (gas: 2)\n 20944: a1 = 0x201d0\n 20949: jump @713\n      : @723 (gas: 6)\n 20952: a0 = s1 + 0x2000\n 20956: i32 a0 = a0 + 0xfffffffffffffba0\n 20960: a1 = 0x4\n 20963: ra = 0x2ce\n 20967: ecalli 3 // 'call_data_load'\n 20969: fallthrough\n      : @724 [@dyn 359] (gas: 4)\n 20970: a0 = s1 + 0x1878\n 20974: a1 = u64 [a0 + 0x338]\n 20978: a0 = u64 [a0 + 0x340]\n 20982: t0 = 720, jump @903\n      : @725 [@dyn 360] (gas: 1)\n 20988: jump @738 if a3 != 0\n      : @726 (gas: 2)\n 20992: a1 = 0x201d0\n 20997: jump @713\n      : @727 (gas: 10)\n 21000: a0 = s1 + 0x2078\n 21004: a1 = u64 [a0 + 0x2b0]\n 21008: u64 [s1 + 0xc8] = a1\n 21012: a0 = u64 [a0 + 0x2a8]\n 21016: u64 [s1 + 0xd0] = a0\n 21020: a0 = u64 [s1 + 0xd8]\n 21024: a0 = a0 << 0x20\n 21027: a0 = a0 >> 0x20\n 21030: u64 [s1 + 0xc0] = a0\n 21034: ra = 722, jump @883\n      : @728 [@dyn 361] (gas: 6)\n 21040: a0 = u64 [s1 + 0xc8]\n 21044: a1 = u64 [s1 + 0xd0]\n 21048: a0 = a0 | a1\n 21051: a1 = u64 [s1 + 0xc0]\n 21055: a0 = a0 | a1\n 21058: jump @749 if a0 == 0\n      : @729 (gas: 10)\n 21062: a0 = 0xffffffff\n 21072: u64 [s1 + 0xb0] = a0\n 21076: a0 = s1 + 0x2078\n 21080: u64 [a0 + 736] = 0\n 21084: u64 [a0 + 728] = 0\n 21088: u64 [a0 + 720] = 0\n 21092: u64 [a0 + 712] = 0\n 21096: a0 = s1 + 0x1b20\n 21100: a1 = s1 + 0x2340\n 21104: ra = 724, jump @11\n      : @730 [@dyn 362] (gas: 30)\n 21110: a3 = s1 + 0x1878\n 21114: a4 = a3 + 0x200\n 21118: a1 = u64 [a4 + 0xb8]\n 21122: u64 [s1 + 0xa8] = a1\n 21126: a0 = u64 [a4 + 0xc0]\n 21130: a1 = a1 >> 0x20\n 21133: a1 = a1 << 0x20\n 21136: a2 = u64 [s1 + 0xd8]\n 21140: a1 = a1 | a2\n 21143: a2 = u64 [a4 + 0xb0]\n 21147: u64 [s1 + 0xd8] = a2\n 21151: a2 = u64 [s1 + 0xb8]\n 21155: a0 = a0 | a2\n 21158: a2 = u64 [a4 + 0xa8]\n 21162: u64 [s1 + 0xb8] = a2\n 21166: a2 = s1 + 0x2078\n 21170: a3 = a2 + 0x300\n 21174: u64 [a3 + 0x20] = a0\n 21177: u64 [a3 + 0x18] = a1\n 21180: u64 [a2 + 768] = 0\n 21184: u64 [a2 + 760] = 0\n 21188: u64 [a2 + 752] = 0\n 21192: u64 [a2 + 744] = 0\n 21196: a0 = u64 [s1 + 0xc8]\n 21200: u64 [a3 + 0x10] = a0\n 21203: a0 = u64 [s1 + 0xd0]\n 21207: u64 [a3 + 0x8] = a0\n 21210: a0 = s1 + 0x2360\n 21214: a1 = s1 + 0x2380\n 21218: ra = 726, jump @12\n      : @731 [@dyn 363] (gas: 35)\n 21224: a0 = u64 [s1 + 0xb8]\n 21228: a0 = a0 & 0xffffffffffffffff\n 21231: a2 = u64 [s1 + 0xd8]\n 21235: a1 = a2 & 0xffffffffffffffff\n 21238: a2 = u64 [s1 + 0xb0]\n 21242: a3 = u64 [s1 + 0xa8]\n 21246: a2 = a2 & a3\n 21249: a4 = s1 + 0x1878\n 21253: u64 [a4 + 608] = 0\n 21257: a3 = u64 [s1 + 0xc0]\n 21261: a5 = a4 + 0x200\n 21265: u64 [a5 + 0x58] = a3\n 21268: a3 = u64 [s1 + 0xc8]\n 21272: u64 [a5 + 0x50] = a3\n 21275: a3 = u64 [s1 + 0xd0]\n 21279: u64 [a5 + 0x48] = a3\n 21282: u64 [a4 + 640] = 0\n 21286: u64 [a5 + 0x78] = a2\n 21289: u64 [a5 + 0x70] = a1\n 21292: a1 = u64 [0x20040]\n 21297: a2 = u64 [0x20048]\n 21302: a3 = u64 [0x20050]\n 21307: u64 [a5 + 0x68] = a0\n 21310: u64 [a5 + 0xa0] = a1\n 21314: u64 [a5 + 0x98] = a2\n 21318: u64 [a5 + 0x90] = a3\n 21322: a1 = a4\n 21324: a0 = u64 [0x20058]\n 21329: a2 = s1 + 0x1b00\n 21333: a3 = s1 + 0x1ae0\n 21337: a4 = s1 + 0x1ac0\n 21341: u64 [a1 + 0x288] = a0\n 21345: a0 = 0\n 21347: a1 = 0\n 21349: ra = 728, jump @15\n      : @732 [@dyn 364] (gas: 2)\n 21355: a1 = 0x201d0\n 21360: jump @685\n      : @733 (gas: 1)\n 21363: ra = 730, jump @883\n      : @734 [@dyn 365] (gas: 8)\n 21369: a0 = s1 + 0x1878\n 21373: u64 [a0 + 1216] = 0\n 21377: u64 [a0 + 1208] = 0\n 21381: u64 [a0 + 1200] = 0\n 21385: u64 [a0 + 1192] = 0\n 21389: a0 = s1 + 0x760\n 21393: a1 = s1 + 0x1d20\n 21397: ra = 732, jump @11\n      : @735 [@dyn 366] (gas: 21)\n 21403: a1 = u64 [s1 + 0x770]\n 21407: u64 [s1 + 0xc8] = a1\n 21411: a0 = u64 [s1 + 0x760]\n 21415: u64 [s1 + 0xd8] = a0\n 21419: a0 = u64 [s1 + 0x768]\n 21423: u64 [s1 + 0xd0] = a0\n 21427: a0 = u64 [s1 + 0x778]\n 21431: a1 = a1 >> 0x20\n 21434: a1 = a1 << 0x20\n 21437: a2 = s1 + 0x1878\n 21441: u64 [a2 + 1248] = 0\n 21445: u64 [a2 + 1240] = 0\n 21449: u64 [a2 + 1232] = 0\n 21453: u64 [a2 + 1224] = 0\n 21457: u64 [a2 + 1264] = 0\n 21461: u64 [a2 + 1256] = 0\n 21465: u64 [a2 + 0x500] = a0\n 21469: u64 [a2 + 0x4f8] = a1\n 21473: a0 = s1 + 0x1d40\n 21477: a1 = s1 + 0x1d60\n 21481: ra = 734, jump @12\n      : @736 [@dyn 367] (gas: 28)\n 21487: a0 = u64 [s1 + 0xc8]\n 21491: a0 = a0 << 0x20\n 21494: a0 = a0 >> 0x20\n 21497: u64 [s1 + 1816] = 0\n 21501: u64 [s1 + 1808] = 0\n 21505: u64 [s1 + 1800] = 0\n 21509: u64 [s1 + 1792] = 0\n 21513: u64 [s1 + 1848] = 0\n 21517: a5 = s1 + 0x700\n 21521: u64 [a5 + 0x30] = a0\n 21524: a0 = u64 [s1 + 0xd0]\n 21528: u64 [a5 + 0x28] = a0\n 21531: a0 = u64 [0x20040]\n 21536: a1 = u64 [0x20048]\n 21541: a2 = u64 [0x20050]\n 21546: a3 = u64 [s1 + 0xd8]\n 21550: u64 [a5 + 0x20] = a3\n 21553: u64 [a5 + 0x58] = a0\n 21556: u64 [a5 + 0x50] = a1\n 21559: u64 [a5 + 0x48] = a2\n 21562: a0 = u64 [0x20058]\n 21567: a2 = s1 + 0x740\n 21571: a3 = s1 + 0x720\n 21575: a4 = s1 + 0x700\n 21579: u64 [a5 + 0x40] = a0\n 21582: a0 = 0\n 21584: a1 = 0\n 21586: ra = 736, jump @15\n      : @737 [@dyn 368] (gas: 2)\n 21592: a1 = 0x201d0\n 21597: jump @685\n      : @738 (gas: 10)\n 21600: a3 = s1 + 0x1878\n 21604: a2 = u64 [a3 + 0x330]\n 21608: a3 = u64 [a3 + 0x328]\n 21612: u64 [s1 + 0x140] = a3\n 21616: u64 [s1 + 0x148] = a2\n 21620: u64 [s1 + 0x150] = a1\n 21624: a1 = s1 + 0x140\n 21628: u64 [s1 + 0x158] = a0\n 21632: a0 = 0\n 21634: ra = 738, jump @9\n      : @739 [@dyn 369] (gas: 7)\n 21640: u64 [s1 + 312] = 0\n 21644: u64 [s1 + 304] = 0\n 21648: u64 [s1 + 288] = 0x2\n 21653: a0 = 0x20\n 21656: a1 = s1 + 0x120\n 21660: u64 [s1 + 296] = 0\n 21664: ra = 740, jump @9\n      : @740 [@dyn 370] (gas: 4)\n 21670: a0 = 0x201c8\n 21675: u64 [s1 + 0xd8] = a0\n 21679: a0 = i32 [0x201c8]\n 21684: jump @742 if a0 >u 63\n      : @741 (gas: 3)\n 21688: a1 = u64 [s1 + 0xd8]\n 21692: u32 [a1 + 0] = 0x40\n 21695: fallthrough\n      : @742 (gas: 14)\n 21696: a0 = sp + 0xffffffffffffffe0\n 21699: a2 = a0 & 0xffffffffffffffe0\n 21702: u64 [s1 + 0xc8] = a2\n 21706: sp = a2\n 21708: a0 = 0x201d0\n 21713: u64 [s1 + 0xd0] = a0\n 21717: i32 a0 = a0 + 0\n 21719: i32 a2 = a2 + 0\n 21721: a1 = 0x40\n 21724: ra = 0x2e6\n 21728: ecalli 9 // 'hash_keccak_256'\n 21730: a3 = u64 [s1 + 0xc8]\n 21734: t0 = 0x2e8\n 21738: jump @898\n      : @743 [@dyn 371] (gas: 2)\n 21741: a3 = u64 [s1 + 0xc8]\n 21745: t0 = 744, jump @898\n      : @744 [@dyn 372] (gas: 7)\n 21751: u64 [a5 + 0x60] = a3\n 21754: u64 [a5 + 0x58] = a2\n 21757: u64 [a5 + 0x50] = a1\n 21760: u64 [a5 + 0x48] = a0\n 21763: a0 = s1 + 0x100\n 21767: a1 = s1 + 0x1bc0\n 21771: ra = 746, jump @11\n      : @745 [@dyn 373] (gas: 12)\n 21777: a4 = s1 + 0x100\n 21781: a2 = u64 [a4]\n 21783: a0 = u64 [a4 + 0x8]\n 21786: a1 = u64 [a4 + 0x10]\n 21789: a3 = u64 [a4 + 0x18]\n 21792: u64 [s1 + 0xf8] = a3\n 21796: u64 [s1 + 0xf0] = a1\n 21800: u64 [s1 + 0xe8] = a0\n 21804: a0 = 0x80\n 21808: a1 = s1 + 0xe0\n 21812: u64 [s1 + 0xe0] = a2\n 21816: ra = 748, jump @9\n      : @746 [@dyn 374] (gas: 3)\n 21822: a0 = u64 [s1 + 0xd8]\n 21826: a0 = i32 [a0]\n 21828: jump @748 if a0 >u 159\n      : @747 (gas: 5)\n 21833: a1 = u64 [s1 + 0xd8]\n 21837: u32 [a1 + 0] = 0xa0\n 21841: a0 = u64 [s1 + 0xd0]\n 21845: i32 a1 = a0 + 0x80\n 21849: jump @695\n      : @748 (gas: 3)\n 21852: a0 = u64 [s1 + 0xd0]\n 21856: i32 a1 = a0 + 0x80\n 21860: jump @695\n      : @749 (gas: 10)\n 21863: a0 = s1 + 0x1878\n 21867: u64 [a0 + 568] = 0\n 21871: u64 [a0 + 560] = 0\n 21875: u64 [a0 + 552] = 0\n 21879: a2 = a0\n 21881: a0 = 0x1e4fbdf700000000\n 21891: a1 = s1 + 0x1aa0\n 21895: u64 [a2 + 0x240] = a0\n 21899: a0 = 0\n 21901: ra = 750, jump @9\n      : @750 [@dyn 375] (gas: 9)\n 21907: a0 = s1 + 0x1878\n 21911: u64 [a0 + 544] = 0\n 21915: u64 [a0 + 536] = 0\n 21919: u64 [a0 + 528] = 0\n 21923: a2 = a0\n 21925: a0 = 0x4\n 21928: a1 = s1 + 0x1a80\n 21932: u64 [a2 + 520] = 0\n 21936: ra = 752, jump @9\n      : @751 [@dyn 376] (gas: 2)\n 21942: a1 = i32 [0x201c8]\n 21947: jump @753 if a1 >u 63\n      : @752 (gas: 2)\n 21951: u32 [0x201c8] = 0x40\n 21957: fallthrough\n      : @753 (gas: 7)\n 21958: a1 = 0x201d0\n 21963: i32 a1 = a1 + 0\n 21965: a0 = 0x1\n 21968: a2 = 0x24\n 21971: ra = 0x2f2\n 21975: ecalli 13 // 'seal_return'\n 21977: fallthrough\n      : @754 [@dyn 377] (gas: 18)\n 21978: sp = sp + 0xffffffffffffffc0\n 21981: u64 [sp + 0x38] = ra\n 21984: u64 [sp + 0x30] = s0\n 21987: u64 [sp + 0x28] = s1\n 21990: s0 = sp + 0x40\n 21993: sp = sp & 0xfffffffffffffff0\n 21996: a2 = u64 [a1 + 0x10]\n 21999: a3 = u64 [a1 + 0x18]\n 22002: a4 = u64 [a1 + 0x8]\n 22005: a1 = u64 [a1]\n 22007: a3 = a3 | a4\n 22010: a4 = a1 | a2\n 22013: a4 = a4 | a3\n 22016: a4 = a4 >> 0x20\n 22019: a2 = a2 | a3\n 22022: a2 = a2 << 0x20\n 22025: a2 = a2 | a4\n 22028: jump @758 if a2 != 0\n      : @755 (gas: 3)\n 22031: s1 = a0\n 22033: a0 = sp\n 22035: ra = 756, jump @7\n      : @756 [@dyn 378] (gas: 10)\n 22041: a0 = u64 [sp + 0x10]\n 22044: a1 = u64 [sp + 0x18]\n 22047: a2 = 0x100000000\n 22057: a2 = a2 ^ a0\n 22060: a2 = a2 | a1\n 22063: a3 = a0 >> 0x20\n 22066: a3 = a3 <u 0x1\n 22069: a3 = 0 if a1 != 0\n 22071: a3 = 0 if a2 == 0\n 22073: jump @759 if a3 == 0\n      : @757 (gas: 12)\n 22076: a2 = u64 [sp]\n 22078: a3 = u64 [sp + 0x8]\n 22081: u64 [s1] = a2\n 22083: u64 [s1 + 0x8] = a3\n 22086: u64 [s1 + 0x10] = a0\n 22089: u64 [s1 + 0x18] = a1\n 22092: sp = s0 + 0xffffffffffffffc0\n 22095: ra = u64 [sp + 0x38]\n 22098: s0 = u64 [sp + 0x30]\n 22101: s1 = u64 [sp + 0x28]\n 22104: sp = sp + 0x40\n 22107: ret\n      : @758 (gas: 1)\n 22109: trap\n      : @759 (gas: 7)\n 22110: a1 = 0x201d0\n 22115: i32 a1 = a1 + 0\n 22117: a0 = 0x1\n 22120: a2 = 0\n 22122: ra = 0x2f6\n 22126: ecalli 13 // 'seal_return'\n 22128: fallthrough\n      : @760 [@dyn 379] (gas: 23)\n 22129: sp = sp + 0xffffffffffffff10\n 22133: u64 [sp + 0xe8] = ra\n 22137: u64 [sp + 0xe0] = s0\n 22141: u64 [sp + 0xd8] = s1\n 22145: s0 = sp + 0xf0\n 22149: sp = sp & 0xfffffffffffffff0\n 22152: s1 = u64 [a1 + 0x10]\n 22155: t0 = u64 [a1 + 0x18]\n 22158: a5 = u64 [a1 + 0x8]\n 22161: a1 = u64 [a1]\n 22163: u64 [sp + 0x68] = a5\n 22166: u64 [sp + 0x58] = t0\n 22169: t1 = a5 | t0\n 22172: t0 = a1\n 22174: a5 = a1 | s1\n 22177: a5 = a5 | t1\n 22180: a5 = a5 >> 0x20\n 22183: u64 [sp + 0x60] = s1\n 22186: a1 = t1 | s1\n 22189: a1 = a1 << 0x20\n 22192: a1 = a1 | a5\n 22195: u64 [sp + 0x50] = a0\n 22198: jump @767 if a1 != 0\n      : @761 (gas: 28)\n 22202: a0 = u64 [a4 + 0x18]\n 22205: u64 [sp + 0x18] = a0\n 22208: a0 = u64 [a4 + 0x10]\n 22211: u64 [sp + 0x8] = a0\n 22214: a0 = u64 [a4 + 0x8]\n 22217: u64 [sp + 0x10] = a0\n 22220: a0 = u64 [a4]\n 22222: u64 [sp] = a0\n 22224: a0 = u64 [a3 + 0x18]\n 22227: u64 [sp + 0x48] = a0\n 22230: a0 = u64 [a3 + 0x10]\n 22233: u64 [sp + 0x40] = a0\n 22236: a0 = u64 [a3 + 0x8]\n 22239: u64 [sp + 0x38] = a0\n 22242: a0 = u64 [a3]\n 22244: u64 [sp + 0x30] = a0\n 22247: a0 = u64 [a2 + 0x18]\n 22250: a1 = u64 [a2 + 0x10]\n 22253: a3 = u64 [a2 + 0x8]\n 22256: a2 = u64 [a2]\n 22258: u64 [sp + 0xb0] = a2\n 22262: u64 [sp + 0xb8] = a3\n 22266: u64 [sp + 0xc0] = a1\n 22270: a1 = sp + 0xb0\n 22274: u64 [sp + 0xc8] = a0\n 22278: s1 = t0\n 22280: a0 = t0\n 22282: ra = 760, jump @9\n      : @762 [@dyn 380] (gas: 12)\n 22288: a0 = u64 [sp + 0x60]\n 22291: a1 = u64 [sp + 0x58]\n 22294: a2 = a0 | a1\n 22297: a0 = 0x100000000\n 22307: u64 [sp + 0x20] = a0\n 22310: a0 = 0xffffffe0\n 22320: a0 = s1 <u a0\n 22323: a1 = u64 [sp + 0x68]\n 22326: a0 = 0 if a1 != 0\n 22328: u64 [sp + 0x28] = a2\n 22331: a0 = 0 if a2 != 0\n 22333: jump @767 if a0 == 0\n      : @763 (gas: 11)\n 22337: i32 a0 = s1 + 0x20\n 22340: a1 = u64 [sp + 0x30]\n 22343: u64 [sp + 0x90] = a1\n 22347: a1 = u64 [sp + 0x38]\n 22350: u64 [sp + 0x98] = a1\n 22354: a1 = u64 [sp + 0x40]\n 22357: u64 [sp + 0xa0] = a1\n 22361: a1 = sp + 0x90\n 22365: a2 = u64 [sp + 0x48]\n 22368: u64 [sp + 0xa8] = a2\n 22372: ra = 762, jump @9\n      : @764 [@dyn 381] (gas: 8)\n 22378: a0 = u64 [sp + 0x20]\n 22381: a0 = a0 + 0xffffffffffffffc0\n 22384: a0 = s1 <u a0\n 22387: a1 = u64 [sp + 0x68]\n 22390: a0 = 0 if a1 != 0\n 22392: a1 = u64 [sp + 0x28]\n 22395: a0 = 0 if a1 != 0\n 22397: jump @767 if a0 == 0\n      : @765 (gas: 30)\n 22401: a0 = u64 [sp + 0x8]\n 22404: a1 = u64 [sp]\n 22406: a0 = a0 | a1\n 22409: a1 = u64 [sp + 0x18]\n 22412: a2 = u64 [sp + 0x10]\n 22415: a1 = a1 | a2\n 22418: a0 = a0 | a1\n 22421: a1 = a0 >u 0\n 22423: a0 = s1 + 0x60\n 22426: u64 [sp + 0x48] = a0\n 22429: a0 = a0 <u s1\n 22432: a2 = u64 [sp + 0x68]\n 22435: a3 = a2 + a0\n 22438: u64 [sp + 0x40] = a3\n 22441: a2 = a3 <u a2\n 22444: a2 = a0 if a0 == 0\n 22447: a0 = u64 [sp + 0x60]\n 22450: a2 = a2 + a0\n 22453: u64 [sp + 0x68] = a2\n 22456: a0 = a2 <u a0\n 22459: a2 = u64 [sp + 0x58]\n 22462: a0 = a0 + a2\n 22465: u64 [sp + 0x60] = a0\n 22468: i32 a0 = s1 + 0x40\n 22471: u64 [sp + 136] = 0\n 22475: u64 [sp + 128] = 0\n 22479: u64 [sp + 0x70] = a1\n 22482: a1 = sp + 0x70\n 22485: u64 [sp + 120] = 0\n 22488: ra = 764, jump @9\n      : @766 [@dyn 382] (gas: 15)\n 22494: a0 = u64 [sp + 0x50]\n 22497: a1 = u64 [sp + 0x60]\n 22500: u64 [a0 + 0x18] = a1\n 22503: a1 = u64 [sp + 0x68]\n 22506: u64 [a0 + 0x10] = a1\n 22509: a1 = u64 [sp + 0x40]\n 22512: u64 [a0 + 0x8] = a1\n 22515: a1 = u64 [sp + 0x48]\n 22518: u64 [a0] = a1\n 22520: sp = s0 + 0xffffffffffffff10\n 22524: ra = u64 [sp + 0xe8]\n 22528: s0 = u64 [sp + 0xe0]\n 22532: s1 = u64 [sp + 0xd8]\n 22536: sp = sp + 0xf0\n 22540: ret\n      : @767 (gas: 1)\n 22542: trap\n      : @768 (gas: 14)\n 22543: sp = sp + 0xffffffffffffff20\n 22547: u64 [sp + 0xd8] = ra\n 22551: u64 [sp + 0xd0] = s0\n 22555: u64 [sp + 0xc8] = s1\n 22559: s0 = sp + 0xe0\n 22563: sp = sp & 0xfffffffffffffff0\n 22566: a1 = u64 [a0 + 0x10]\n 22569: a2 = u64 [a0 + 0x18]\n 22572: a3 = u64 [a0 + 0x8]\n 22575: a0 = u64 [a0]\n 22577: a2 = a2 | a3\n 22580: a0 = a0 | a1\n 22583: a0 = a0 | a2\n 22586: jump @770 if a0 == 0\n      : @769 (gas: 6)\n 22589: sp = s0 + 0xffffffffffffff20\n 22593: ra = u64 [sp + 0xd8]\n 22597: s0 = u64 [sp + 0xd0]\n 22601: s1 = u64 [sp + 0xc8]\n 22605: sp = sp + 0xe0\n 22609: ret\n      : @770 (gas: 3)\n 22611: a0 = sp + 0xa0\n 22615: a1 = 0x40\n 22618: ra = 766, jump @7\n      : @771 [@dyn 383] (gas: 15)\n 22624: a2 = u64 [sp + 0xb8]\n 22628: s1 = u64 [sp + 0xb0]\n 22632: a0 = u64 [sp + 0xa8]\n 22636: a1 = u64 [sp + 0xa0]\n 22640: u64 [sp + 0x10] = a0\n 22643: u64 [sp + 0x8] = a2\n 22646: a0 = a0 | a2\n 22649: u64 [sp + 0x18] = a1\n 22652: a1 = a1 | s1\n 22655: a1 = a1 | a0\n 22658: a1 = a1 >> 0x20\n 22661: a0 = a0 | s1\n 22664: a0 = a0 << 0x20\n 22667: a0 = a0 | a1\n 22670: jump @778 if a0 != 0\n      : @772 (gas: 8)\n 22674: u64 [sp + 144] = 0\n 22678: u64 [sp + 136] = 0\n 22682: u64 [sp + 128] = 0\n 22686: a0 = 0x8c379a000000000\n 22696: a1 = sp + 0x80\n 22700: u64 [sp + 0x98] = a0\n 22704: a0 = u64 [sp + 0x18]\n 22707: ra = 768, jump @9\n      : @773 [@dyn 384] (gas: 11)\n 22713: a2 = u64 [sp + 0x8]\n 22716: a2 = a2 | s1\n 22719: s1 = 0x100000000\n 22729: a0 = 0xfffffffc\n 22739: a1 = u64 [sp + 0x18]\n 22742: a0 = a1 <u a0\n 22745: a1 = u64 [sp + 0x10]\n 22748: a0 = 0 if a1 != 0\n 22750: u64 [sp + 0x8] = a2\n 22753: a0 = 0 if a2 != 0\n 22755: jump @778 if a0 == 0\n      : @774 (gas: 8)\n 22758: a0 = u64 [sp + 0x18]\n 22761: i32 a0 = a0 + 0x4\n 22764: u64 [sp + 120] = 0\n 22767: u64 [sp + 112] = 0\n 22770: u64 [sp + 104] = 0\n 22773: a1 = sp + 0x60\n 22776: u64 [sp + 96] = 0x20\n 22780: ra = 770, jump @9\n      : @775 [@dyn 385] (gas: 8)\n 22786: a0 = s1 + 0xffffffffffffffdc\n 22789: a1 = u64 [sp + 0x18]\n 22792: a0 = a1 <u a0\n 22795: a1 = u64 [sp + 0x10]\n 22798: a0 = 0 if a1 != 0\n 22800: a1 = u64 [sp + 0x8]\n 22803: a0 = 0 if a1 != 0\n 22805: jump @778 if a0 == 0\n      : @776 (gas: 8)\n 22808: s1 = u64 [sp + 0x18]\n 22811: i32 a0 = s1 + 0x24\n 22814: u64 [sp + 88] = 0\n 22817: u64 [sp + 80] = 0\n 22820: u64 [sp + 64] = 0x20\n 22824: a1 = sp + 0x40\n 22827: u64 [sp + 72] = 0\n 22830: ra = 772, jump @9\n      : @777 [@dyn 386] (gas: 7)\n 22836: a0 = 0xffffffbc\n 22846: a0 = s1 <u a0\n 22849: a1 = u64 [sp + 0x10]\n 22852: a0 = 0 if a1 != 0\n 22854: a1 = u64 [sp + 0x8]\n 22857: a0 = 0 if a1 != 0\n 22859: jump @779 if a0 != 0\n      : @778 (gas: 1)\n 22862: trap\n      : @779 (gas: 12)\n 22863: s1 = u64 [sp + 0x18]\n 22866: i32 a0 = s1 + 0x44\n 22869: a1 = u64 [0x201a0]\n 22874: u64 [sp + 0x38] = a1\n 22877: a1 = u64 [0x201a8]\n 22882: a2 = u64 [0x201b0]\n 22887: a3 = u64 [0x201b8]\n 22892: u64 [sp + 0x30] = a1\n 22895: u64 [sp + 0x28] = a2\n 22898: a1 = sp + 0x20\n 22901: u64 [sp + 0x20] = a3\n 22904: ra = 774, jump @9\n      : @780 [@dyn 387] (gas: 3)\n 22910: a1 = 0x64\n 22913: a0 = s1\n 22915: ra = 776, jump @18\n      : @781 [@dyn 388] (gas: 6)\n 22921: i32 a1 = a0 + 0\n 22923: a0 = 0x1\n 22926: a2 = 0x64\n 22929: ra = 0x30a\n 22933: ecalli 13 // 'seal_return'\n 22935: fallthrough\n      : @782 [@dyn 389] (gas: 30)\n 22936: sp = sp + 0xffffffffffffff80\n 22939: u64 [sp + 0x78] = ra\n 22942: u64 [sp + 0x70] = s0\n 22945: u64 [sp + 0x68] = s1\n 22948: s0 = sp + 0x80\n 22952: sp = sp & 0xfffffffffffffff0\n 22955: a4 = u64 [a2]\n 22957: a3 = u64 [a1]\n 22959: s1 = u64 [a2 + 0x8]\n 22962: t1 = u64 [a1 + 0x8]\n 22965: t2 = u64 [a2 + 0x10]\n 22968: a5 = u64 [a1 + 0x10]\n 22971: a2 = u64 [a2 + 0x18]\n 22974: a1 = u64 [a1 + 0x18]\n 22977: t0 = t1 ^ s1\n 22980: u64 [sp + 0x8] = s1\n 22983: s1 = t1 <u s1\n 22986: u64 [sp + 0x18] = a4\n 22989: u64 [sp + 0x10] = a3\n 22992: a3 = a3 <u a4\n 22995: u64 [sp] = a3\n 22997: s1 = a3 if t0 == 0\n 23000: a3 = a1 ^ a2\n 23003: ra = a1 <u a2\n 23006: t0 = a5 <u t2\n 23009: ra = t0 if a3 == 0\n 23012: a4 = a5 ^ t2\n 23015: a3 = a3 | a4\n 23018: ra = s1 if a3 == 0\n 23021: jump @784 if ra != 0\n      : @783 (gas: 23)\n 23024: a3 = a5 - t2\n 23027: a1 = a1 - a2\n 23030: a1 = a1 - t0\n 23033: a2 = a3 <u s1\n 23036: a1 = a1 - a2\n 23039: a3 = a3 - s1\n 23042: a2 = u64 [sp + 0x8]\n 23045: a2 = t1 - a2\n 23048: a4 = u64 [sp]\n 23050: a2 = a2 - a4\n 23053: a4 = u64 [sp + 0x18]\n 23056: a5 = u64 [sp + 0x10]\n 23059: a4 = a5 - a4\n 23062: u64 [a0] = a4\n 23064: u64 [a0 + 0x8] = a2\n 23067: u64 [a0 + 0x10] = a3\n 23070: u64 [a0 + 0x18] = a1\n 23073: sp = s0 + 0xffffffffffffff80\n 23076: ra = u64 [sp + 0x78]\n 23079: s0 = u64 [sp + 0x70]\n 23082: s1 = u64 [sp + 0x68]\n 23085: sp = sp + 0x80\n 23089: ret\n      : @784 (gas: 6)\n 23091: u64 [sp + 80] = 0\n 23094: u64 [sp + 72] = 0\n 23097: u64 [sp + 64] = 0\n 23100: t0 = 0x30c\n 23104: a0 = 0x4e487b7100000000\n 23114: fallthrough\n      : @785 [@dyn 390] (gas: 4)\n 23115: a1 = sp + 0x40\n 23118: u64 [sp + 0x58] = a0\n 23121: a0 = 0\n 23123: ra = 782, jump @9\n      : @786 [@dyn 391] (gas: 7)\n 23129: u64 [sp + 56] = 0\n 23132: u64 [sp + 48] = 0\n 23135: u64 [sp + 32] = 0x11\n 23139: a0 = 0x4\n 23142: a1 = sp + 0x20\n 23145: u64 [sp + 40] = 0\n 23148: ra = 784, jump @9\n      : @787 [@dyn 392] (gas: 2)\n 23154: a1 = i32 [0x201c8]\n 23159: jump @789 if a1 >u 63\n      : @788 (gas: 2)\n 23163: u32 [0x201c8] = 0x40\n 23169: fallthrough\n      : @789 (gas: 7)\n 23170: a1 = 0x201d0\n 23175: i32 a1 = a1 + 0\n 23177: a0 = 0x1\n 23180: a2 = 0x24\n 23183: ra = 0x312\n 23187: ecalli 13 // 'seal_return'\n 23189: fallthrough\n      : @790 [@dyn 393] (gas: 19)\n 23190: sp = sp + 0xffffffffffffff90\n 23193: u64 [sp + 0x68] = ra\n 23196: u64 [sp + 0x60] = s0\n 23199: s0 = sp + 0x70\n 23202: sp = sp & 0xfffffffffffffff0\n 23205: a3 = u64 [a0 + 0x18]\n 23208: a2 = u64 [a0 + 0x10]\n 23211: t1 = u64 [a0]\n 23213: a0 = u64 [a0 + 0x8]\n 23216: a4 = a3 >u 0\n 23218: a5 = a2 >u 0\n 23220: a5 = a4 if a3 != 0\n 23223: t0 = a0 >u 0\n 23225: a4 = t1 <u 0xffffffffffffffa0\n 23228: a4 = a4 ^ 0x1\n 23231: a4 = t0 if a0 != 0\n 23234: a1 = a2 | a3\n 23237: a4 = a5 if a1 != 0\n 23240: jump @793 if a4 != 0\n      : @791 (gas: 15)\n 23243: a1 = t1 + 0x60\n 23246: a4 = a1 <u t1\n 23249: a5 = a0 + a4\n 23252: a0 = a5 <u a0\n 23255: a0 = a4 if a4 == 0\n 23258: a0 = a0 + a2\n 23261: a2 = a0 <u a2\n 23264: a2 = a2 + a3\n 23267: u64 [sp + 0x40] = a1\n 23270: u64 [sp + 0x48] = a5\n 23273: u64 [sp + 0x50] = a0\n 23276: a0 = 0x40\n 23279: a1 = sp + a0\n 23282: u64 [sp + 0x58] = a2\n 23285: ra = 788, jump @9\n      : @792 [@dyn 394] (gas: 5)\n 23291: sp = s0 + 0xffffffffffffff90\n 23294: ra = u64 [sp + 0x68]\n 23297: s0 = u64 [sp + 0x60]\n 23300: sp = sp + 0x70\n 23303: ret\n      : @793 (gas: 6)\n 23305: u64 [sp + 48] = 0\n 23308: u64 [sp + 40] = 0\n 23311: u64 [sp + 32] = 0\n 23314: t0 = 0x316\n 23318: a0 = 0x4e487b7100000000\n 23328: fallthrough\n      : @794 [@dyn 395] (gas: 4)\n 23329: a1 = sp + 0x20\n 23332: u64 [sp + 0x38] = a0\n 23335: a0 = 0\n 23337: ra = 792, jump @9\n      : @795 [@dyn 396] (gas: 7)\n 23343: u64 [sp + 24] = 0\n 23346: u64 [sp + 16] = 0\n 23349: u64 [sp + 0] = 0x41\n 23352: a0 = 0x4\n 23355: a1 = sp\n 23357: u64 [sp + 8] = 0\n 23360: ra = 794, jump @9\n      : @796 [@dyn 397] (gas: 2)\n 23366: a1 = i32 [0x201c8]\n 23371: jump @798 if a1 >u 63\n      : @797 (gas: 2)\n 23375: u32 [0x201c8] = 0x40\n 23381: fallthrough\n      : @798 (gas: 7)\n 23382: a1 = 0x201d0\n 23387: i32 a1 = a1 + 0\n 23389: a0 = 0x1\n 23392: a2 = 0x24\n 23395: ra = 0x31c\n 23399: ecalli 13 // 'seal_return'\n 23401: fallthrough\n      : @799 [@dyn 398] (gas: 46)\n 23402: sp = sp + 0xffffffffffffff70\n 23406: u64 [sp + 0x88] = ra\n 23410: u64 [sp + 0x80] = s0\n 23414: u64 [sp + 0x78] = s1\n 23417: s0 = sp + 0x90\n 23421: sp = sp & 0xfffffffffffffff0\n 23424: t0 = a0\n 23426: a2 = u64 [a1]\n 23428: t2 = u64 [a0 + 0x8]\n 23431: a5 = u64 [a1 + 0x8]\n 23434: t1 = u64 [a0]\n 23436: a3 = a2 + 0x1f\n 23439: ra = a3 <u a2\n 23442: a2 = a5 + ra\n 23445: a3 = a3 & 0xffffffffffffffe0\n 23448: u64 [sp + 0x8] = t1\n 23451: t1 = t1 + a3\n 23454: a4 = t1 <u a3\n 23457: a3 = a2 + t2\n 23460: a3 = a3 + a4\n 23463: s1 = a3 ^ a2\n 23466: a0 = a3 <u a2\n 23469: a0 = a4 if s1 == 0\n 23472: a4 = u64 [t0 + 0x18]\n 23475: a5 = a2 <u a5\n 23478: s1 = u64 [a1 + 0x10]\n 23481: t0 = u64 [t0 + 0x10]\n 23484: a1 = u64 [a1 + 0x18]\n 23487: a5 = ra if ra == 0\n 23490: a5 = a5 + s1\n 23493: s1 = a5 <u s1\n 23496: a2 = a5 + t0\n 23499: a0 = a0 + a2\n 23502: a5 = a2 <u a5\n 23505: a2 = a0 <u a2\n 23508: a1 = a1 + a4\n 23511: a1 = a1 + s1\n 23514: a1 = a1 + a5\n 23517: a5 = a1 + a2\n 23520: a1 = a5 >u 0\n 23522: a2 = a0 >u 0\n 23524: a2 = a1 if a5 != 0\n 23527: a1 = a0 | a5\n 23530: s1 = a3 >u 0\n 23532: s1 = a2 if a1 != 0\n 23535: jump @803 if s1 != 0\n      : @800 (gas: 13)\n 23538: a1 = u64 [sp + 0x8]\n 23541: a1 = t1 <u a1\n 23544: a2 = a3 ^ t2\n 23547: s1 = a3 <u t2\n 23550: s1 = a1 if a2 == 0\n 23553: a1 = a0 <u t0\n 23556: a2 = a5 ^ a4\n 23559: a4 = a5 <u a4\n 23562: a4 = a1 if a2 == 0\n 23565: a1 = a0 ^ t0\n 23568: a1 = a1 | a2\n 23571: a4 = s1 if a1 == 0\n 23574: jump @803 if a4 != 0\n      : @801 (gas: 7)\n 23577: u64 [sp + 0x50] = t1\n 23580: u64 [sp + 0x58] = a3\n 23583: u64 [sp + 0x60] = a0\n 23586: a0 = 0x40\n 23589: a1 = sp + 0x50\n 23592: u64 [sp + 0x68] = a5\n 23595: ra = 798, jump @9\n      : @802 [@dyn 399] (gas: 6)\n 23601: sp = s0 + 0xffffffffffffff70\n 23605: ra = u64 [sp + 0x88]\n 23609: s0 = u64 [sp + 0x80]\n 23613: s1 = u64 [sp + 0x78]\n 23616: sp = sp + 0x90\n 23620: ret\n      : @803 (gas: 6)\n 23622: u64 [sp + 64] = 0\n 23625: u64 [sp + 56] = 0\n 23628: u64 [sp + 48] = 0\n 23631: t0 = 0x320\n 23635: a0 = 0x4e487b7100000000\n 23645: fallthrough\n      : @804 [@dyn 400] (gas: 4)\n 23646: a1 = sp + 0x30\n 23649: u64 [sp + 0x48] = a0\n 23652: a0 = 0\n 23654: ra = 802, jump @9\n      : @805 [@dyn 401] (gas: 7)\n 23660: u64 [sp + 40] = 0\n 23663: u64 [sp + 32] = 0\n 23666: u64 [sp + 16] = 0x41\n 23670: a0 = 0x4\n 23673: a1 = sp + 0x10\n 23676: u64 [sp + 24] = 0\n 23679: ra = 804, jump @9\n      : @806 [@dyn 402] (gas: 2)\n 23685: a1 = i32 [0x201c8]\n 23690: jump @808 if a1 >u 63\n      : @807 (gas: 2)\n 23694: u32 [0x201c8] = 0x40\n 23700: fallthrough\n      : @808 (gas: 7)\n 23701: a1 = 0x201d0\n 23706: i32 a1 = a1 + 0\n 23708: a0 = 0x1\n 23711: a2 = 0x24\n 23714: ra = 0x326\n 23718: ecalli 13 // 'seal_return'\n 23720: fallthrough\n      : @809 [@dyn 403] (gas: 53)\n 23721: sp = sp + 0xffffffffffffff90\n 23724: u64 [sp + 0x68] = ra\n 23727: u64 [sp + 0x60] = s0\n 23730: u64 [sp + 0x58] = s1\n 23733: s0 = sp + 0x70\n 23736: sp = sp & 0xfffffffffffffff0\n 23739: a3 = a1\n 23741: t2 = u64 [a1 + 0x10]\n 23744: a1 = u64 [a1 + 0x8]\n 23747: t0 = u64 [a2 + 0x8]\n 23750: s1 = u64 [a3]\n 23752: u64 [sp] = s1\n 23754: a4 = u64 [a2]\n 23756: u64 [sp + 0x8] = a4\n 23759: ra = u64 [a2 + 0x10]\n 23762: a5 = t0 ^ a1\n 23765: u64 [sp + 0x28] = a5\n 23768: a5 = t0 <u a1\n 23771: a4 = a4 <u s1\n 23774: t1 = u64 [sp + 0x28]\n 23777: a5 = a4 if t1 == 0\n 23780: s1 = a4\n 23782: a3 = u64 [a3 + 0x18]\n 23785: u64 [sp + 0x18] = a3\n 23788: a2 = u64 [a2 + 0x18]\n 23791: u64 [sp + 0x10] = a2\n 23794: a3 = ra - t2\n 23797: a2 = a3 - a5\n 23800: u64 [sp + 0x20] = a2\n 23803: a2 = a3 <u a5\n 23806: u64 [sp + 0x28] = t2\n 23809: a4 = ra <u t2\n 23812: t2 = u64 [sp + 0x18]\n 23815: a3 = u64 [sp + 0x10]\n 23818: a3 = a3 - t2\n 23821: a3 = a3 - a4\n 23824: a3 = a3 - a2\n 23827: a2 = t0 - a1\n 23830: a2 = a2 - s1\n 23833: t0 = u64 [sp]\n 23835: a4 = u64 [sp + 0x8]\n 23838: a4 = a4 - t0\n 23841: a5 = a2 >u 0\n 23843: a4 = a4 <u 0x20\n 23846: a4 = a4 ^ 0x1\n 23849: a4 = a5 if a2 != 0\n 23852: s1 = a3 >s 0\n 23854: a2 = u64 [sp + 0x20]\n 23857: a5 = a2 >u 0\n 23859: a5 = s1 if a3 != 0\n 23862: a2 = a2 | a3\n 23865: a4 = a5 if a2 != 0\n 23868: jump @815 if a4 == 0\n      : @810 (gas: 10)\n 23871: s1 = a0\n 23873: a3 = u64 [sp + 0x28]\n 23876: a0 = t0 | a3\n 23879: a2 = a1 | t2\n 23882: a0 = a0 | a2\n 23885: a0 = a0 >> 0x20\n 23888: a2 = a2 | a3\n 23891: a2 = a2 << 0x20\n 23894: a0 = a0 | a2\n 23897: jump @814 if a0 != 0\n      : @811 (gas: 3)\n 23900: a0 = sp + 0x30\n 23903: a1 = t0\n 23905: ra = 808, jump @7\n      : @812 [@dyn 404] (gas: 9)\n 23911: a0 = u64 [sp + 0x48]\n 23914: a1 = u64 [sp + 0x40]\n 23917: a2 = u64 [sp + 0x30]\n 23920: a3 = u64 [sp + 0x38]\n 23923: a4 = a1 | a0\n 23926: a5 = a2 <u 0x2\n 23929: a5 = 0 if a3 != 0\n 23931: a5 = 0 if a4 != 0\n 23933: jump @816 if a5 == 0\n      : @813 (gas: 10)\n 23936: u64 [s1] = a2\n 23938: u64 [s1 + 0x8] = a3\n 23941: u64 [s1 + 0x10] = a1\n 23944: u64 [s1 + 0x18] = a0\n 23947: sp = s0 + 0xffffffffffffff90\n 23950: ra = u64 [sp + 0x68]\n 23953: s0 = u64 [sp + 0x60]\n 23956: s1 = u64 [sp + 0x58]\n 23959: sp = sp + 0x70\n 23962: ret\n      : @814 (gas: 1)\n 23964: trap\n      : @815 (gas: 2)\n 23965: a1 = 0x201d0\n 23970: jump @817\n      : @816 (gas: 2)\n 23972: a1 = 0x201d0\n 23977: fallthrough\n      : @817 (gas: 6)\n 23978: i32 a1 = a1 + 0\n 23980: a0 = 0x1\n 23983: a2 = 0\n 23985: ra = 0x32a\n 23989: ecalli 13 // 'seal_return'\n 23991: fallthrough\n      : @818 [@dyn 405] (gas: 22)\n 23992: sp = sp + 0xffffffffffffff50\n 23996: u64 [sp + 0xa8] = ra\n 24000: u64 [sp + 0xa0] = s0\n 24004: u64 [sp + 0x98] = s1\n 24008: s0 = sp + 0xb0\n 24012: sp = sp & 0xfffffffffffffff0\n 24015: a5 = u64 [a1 + 0x10]\n 24018: a4 = u64 [a1 + 0x18]\n 24021: s1 = u64 [a1 + 0x8]\n 24024: t0 = u64 [a1]\n 24026: u64 [sp + 0x40] = a4\n 24029: u64 [sp + 0x38] = s1\n 24032: a1 = s1 | a4\n 24035: a4 = t0 | a5\n 24038: a4 = a4 | a1\n 24041: a4 = a4 >> 0x20\n 24044: u64 [sp + 0x48] = a5\n 24047: a1 = a1 | a5\n 24050: a1 = a1 << 0x20\n 24053: a1 = a1 | a4\n 24056: u64 [sp + 0x30] = a0\n 24059: jump @823 if a1 != 0\n      : @819 (gas: 21)\n 24063: s1 = t0\n 24065: a0 = u64 [a3 + 0x18]\n 24068: u64 [sp + 0x28] = a0\n 24071: a0 = u64 [a3 + 0x10]\n 24074: u64 [sp + 0x20] = a0\n 24077: a0 = u64 [a3 + 0x8]\n 24080: u64 [sp + 0x18] = a0\n 24083: a0 = u64 [a3]\n 24085: u64 [sp + 0x10] = a0\n 24088: a0 = u64 [a2 + 0x10]\n 24091: a1 = u64 [a2 + 0x8]\n 24094: a2 = u64 [a2]\n 24096: a0 = a0 << 0x20\n 24099: a0 = a0 >> 0x20\n 24102: u64 [sp + 136] = 0\n 24106: u64 [sp + 0x70] = a2\n 24109: u64 [sp + 0x78] = a1\n 24112: a1 = sp + 0x70\n 24115: u64 [sp + 0x80] = a0\n 24119: a0 = t0\n 24121: ra = 812, jump @9\n      : @820 [@dyn 406] (gas: 9)\n 24127: a2 = u64 [sp + 0x48]\n 24130: a3 = u64 [sp + 0x40]\n 24133: a0 = a2 | a3\n 24136: a1 = 0xffffffe0\n 24146: a1 = s1 <u a1\n 24149: a4 = u64 [sp + 0x38]\n 24152: a1 = 0 if a4 != 0\n 24154: a1 = 0 if a0 != 0\n 24156: jump @823 if a1 == 0\n      : @821 (gas: 23)\n 24159: a0 = s1 + 0x40\n 24162: u64 [sp + 0x8] = a0\n 24165: a0 = a0 <u s1\n 24168: a1 = a4 + a0\n 24171: u64 [sp] = a1\n 24173: a1 = a1 <u a4\n 24176: a1 = a0 if a0 == 0\n 24179: a1 = a1 + a2\n 24182: u64 [sp + 0x38] = a1\n 24185: a0 = a1 <u a2\n 24188: a0 = a0 + a3\n 24191: u64 [sp + 0x48] = a0\n 24194: i32 a0 = s1 + 0x20\n 24197: a1 = u64 [sp + 0x10]\n 24200: u64 [sp + 0x50] = a1\n 24203: a1 = u64 [sp + 0x18]\n 24206: u64 [sp + 0x58] = a1\n 24209: a1 = u64 [sp + 0x20]\n 24212: u64 [sp + 0x60] = a1\n 24215: a1 = sp + 0x50\n 24218: a2 = u64 [sp + 0x28]\n 24221: u64 [sp + 0x68] = a2\n 24224: ra = 814, jump @9\n      : @822 [@dyn 407] (gas: 15)\n 24230: a0 = u64 [sp + 0x30]\n 24233: a1 = u64 [sp + 0x38]\n 24236: u64 [a0 + 0x10] = a1\n 24239: a1 = u64 [sp]\n 24241: u64 [a0 + 0x8] = a1\n 24244: a1 = u64 [sp + 0x8]\n 24247: u64 [a0] = a1\n 24249: a1 = u64 [sp + 0x48]\n 24252: u64 [a0 + 0x18] = a1\n 24255: sp = s0 + 0xffffffffffffff50\n 24259: ra = u64 [sp + 0xa8]\n 24263: s0 = u64 [sp + 0xa0]\n 24267: s1 = u64 [sp + 0x98]\n 24271: sp = sp + 0xb0\n 24275: ret\n      : @823 (gas: 1)\n 24277: trap\n      : @824 (gas: 23)\n 24278: sp = sp + 0xffffffffffffff10\n 24282: u64 [sp + 0xe8] = ra\n 24286: u64 [sp + 0xe0] = s0\n 24290: u64 [sp + 0xd8] = s1\n 24294: s0 = sp + 0xf0\n 24298: sp = sp & 0xfffffffffffffff0\n 24301: s1 = u64 [a1 + 0x10]\n 24304: t0 = u64 [a1 + 0x18]\n 24307: a5 = u64 [a1 + 0x8]\n 24310: a1 = u64 [a1]\n 24312: u64 [sp + 0x68] = a5\n 24315: u64 [sp + 0x58] = t0\n 24318: t1 = a5 | t0\n 24321: t0 = a1\n 24323: a5 = a1 | s1\n 24326: a5 = a5 | t1\n 24329: a5 = a5 >> 0x20\n 24332: u64 [sp + 0x60] = s1\n 24335: a1 = t1 | s1\n 24338: a1 = a1 << 0x20\n 24341: a1 = a1 | a5\n 24344: u64 [sp + 0x50] = a0\n 24347: jump @831 if a1 != 0\n      : @825 (gas: 27)\n 24351: a0 = u64 [a4 + 0x18]\n 24354: u64 [sp + 0x20] = a0\n 24357: a0 = u64 [a4 + 0x10]\n 24360: u64 [sp + 0x18] = a0\n 24363: a0 = u64 [a4 + 0x8]\n 24366: u64 [sp + 0x10] = a0\n 24369: a0 = u64 [a4]\n 24371: u64 [sp + 0x8] = a0\n 24374: a0 = u64 [a3 + 0x10]\n 24377: u64 [sp + 0x30] = a0\n 24380: a0 = u64 [a3 + 0x8]\n 24383: u64 [sp + 0x38] = a0\n 24386: a0 = u64 [a3]\n 24388: u64 [sp + 0x40] = a0\n 24391: a0 = u64 [a2 + 0x10]\n 24394: a1 = u64 [a2 + 0x8]\n 24397: a2 = u64 [a2]\n 24399: a0 = a0 << 0x20\n 24402: a0 = a0 >> 0x20\n 24405: u64 [sp + 200] = 0\n 24409: u64 [sp + 0xb0] = a2\n 24413: u64 [sp + 0xb8] = a1\n 24417: a1 = sp + 0xb0\n 24421: u64 [sp + 0xc0] = a0\n 24425: s1 = t0\n 24427: a0 = t0\n 24429: ra = 816, jump @9\n      : @826 [@dyn 408] (gas: 12)\n 24435: a0 = u64 [sp + 0x60]\n 24438: a1 = u64 [sp + 0x58]\n 24441: a2 = a0 | a1\n 24444: a0 = 0x100000000\n 24454: u64 [sp + 0x28] = a0\n 24457: a0 = 0xffffffe0\n 24467: a0 = s1 <u a0\n 24470: a1 = u64 [sp + 0x68]\n 24473: a0 = 0 if a1 != 0\n 24475: u64 [sp + 0x48] = a2\n 24478: a0 = 0 if a2 != 0\n 24480: jump @831 if a0 == 0\n      : @827 (gas: 14)\n 24484: a1 = 0xffffffff\n 24494: a2 = u64 [sp + 0x30]\n 24497: a2 = a2 & a1\n 24500: a1 = u64 [sp + 0x38]\n 24503: a1 = a1 & 0xffffffffffffffff\n 24506: a3 = u64 [sp + 0x40]\n 24509: a3 = a3 & 0xffffffffffffffff\n 24512: i32 a0 = s1 + 0x20\n 24515: u64 [sp + 168] = 0\n 24519: u64 [sp + 0x90] = a3\n 24523: u64 [sp + 0x98] = a1\n 24527: a1 = sp + 0x90\n 24531: u64 [sp + 0xa0] = a2\n 24535: ra = 818, jump @9\n      : @828 [@dyn 409] (gas: 8)\n 24541: a0 = u64 [sp + 0x28]\n 24544: a0 = a0 + 0xffffffffffffffc0\n 24547: a0 = s1 <u a0\n 24550: a1 = u64 [sp + 0x68]\n 24553: a0 = 0 if a1 != 0\n 24555: a1 = u64 [sp + 0x48]\n 24558: a0 = 0 if a1 != 0\n 24560: jump @831 if a0 == 0\n      : @829 (gas: 26)\n 24564: a0 = s1 + 0x60\n 24567: u64 [sp + 0x48] = a0\n 24570: a0 = a0 <u s1\n 24573: a1 = u64 [sp + 0x68]\n 24576: a2 = a1 + a0\n 24579: u64 [sp + 0x40] = a2\n 24582: a1 = a2 <u a1\n 24585: a1 = a0 if a0 == 0\n 24588: a0 = u64 [sp + 0x60]\n 24591: a1 = a1 + a0\n 24594: u64 [sp + 0x38] = a1\n 24597: a0 = a1 <u a0\n 24600: a1 = u64 [sp + 0x58]\n 24603: a0 = a0 + a1\n 24606: u64 [sp + 0x68] = a0\n 24609: i32 a0 = s1 + 0x40\n 24612: a1 = u64 [sp + 0x8]\n 24615: u64 [sp + 0x70] = a1\n 24618: a1 = u64 [sp + 0x10]\n 24621: u64 [sp + 0x78] = a1\n 24624: a1 = u64 [sp + 0x18]\n 24627: u64 [sp + 0x80] = a1\n 24631: a1 = sp + 0x70\n 24634: a2 = u64 [sp + 0x20]\n 24637: u64 [sp + 0x88] = a2\n 24641: ra = 820, jump @9\n      : @830 [@dyn 410] (gas: 15)\n 24647: a0 = u64 [sp + 0x50]\n 24650: a1 = u64 [sp + 0x38]\n 24653: u64 [a0 + 0x10] = a1\n 24656: a1 = u64 [sp + 0x40]\n 24659: u64 [a0 + 0x8] = a1\n 24662: a1 = u64 [sp + 0x48]\n 24665: u64 [a0] = a1\n 24667: a1 = u64 [sp + 0x68]\n 24670: u64 [a0 + 0x18] = a1\n 24673: sp = s0 + 0xffffffffffffff10\n 24677: ra = u64 [sp + 0xe8]\n 24681: s0 = u64 [sp + 0xe0]\n 24685: s1 = u64 [sp + 0xd8]\n 24689: sp = sp + 0xf0\n 24693: ret\n      : @831 (gas: 1)\n 24695: trap\n      : @832 [@dyn 411] (gas: 7)\n 24696: u64 [s1 + 632] = 0\n 24700: u64 [s1 + 624] = 0\n 24704: u64 [s1 + 608] = 0x3\n 24709: a0 = 0x20\n 24712: a1 = s1 + 0x260\n 24716: u64 [s1 + 616] = 0\n 24720: ra = 824, jump @9\n      : @833 [@dyn 412] (gas: 3)\n 24726: a2 = 0x201c8\n 24731: a0 = i32 [0x201c8]\n 24736: jump @835 if a0 >u 63\n      : @834 (gas: 2)\n 24740: u32 [0x201c8] = 0x40\n 24746: fallthrough\n      : @835 (gas: 15)\n 24747: u64 [s1 + 0x50] = a2\n 24750: a0 = sp + 0xffffffffffffffe0\n 24753: a2 = a0 & 0xffffffffffffffe0\n 24756: u64 [s1 + 0xb8] = a2\n 24760: sp = a2\n 24762: a0 = 0x201d0\n 24767: i32 a0 = a0 + 0\n 24769: i32 a2 = a2 + 0\n 24771: a1 = 0x40\n 24774: u64 [s1 + 0x30] = a0\n 24777: ra = 0x33a\n 24781: ecalli 9 // 'hash_keccak_256'\n 24783: a3 = u64 [s1 + 0xb8]\n 24787: t0 = 0x33c\n 24791: jump @915\n      : @836 [@dyn 413] (gas: 2)\n 24794: a3 = u64 [s1 + 0xb8]\n 24798: t0 = 828, jump @915\n      : @837 [@dyn 414] (gas: 11)\n 24804: u64 [s1 + 0x90] = a1\n 24808: u64 [s1 + 0x2b8] = a1\n 24812: u64 [s1 + 0x98] = a0\n 24816: u64 [s1 + 0x2b0] = a0\n 24820: u64 [s1 + 0x88] = a4\n 24824: u64 [s1 + 0x2a8] = a4\n 24828: u64 [s1 + 0x80] = a5\n 24832: u64 [s1 + 0x2a0] = a5\n 24836: a0 = s1 + 0x240\n 24840: a1 = 0x40\n 24843: ra = 830, jump @7\n      : @838 [@dyn 415] (gas: 15)\n 24849: a4 = s1 + 0x200\n 24853: a0 = u64 [a4 + 0x58]\n 24856: u64 [s1 + 0xa8] = a0\n 24860: a1 = u64 [a4 + 0x50]\n 24863: u64 [s1 + 0xa0] = a1\n 24867: a3 = u64 [a4 + 0x48]\n 24870: u64 [s1 + 0xb0] = a3\n 24874: a2 = u64 [a4 + 0x40]\n 24877: u64 [s1 + 0xb8] = a2\n 24881: u64 [a4 + 0x38] = a0\n 24884: u64 [a4 + 0x30] = a1\n 24887: u64 [a4 + 0x28] = a3\n 24890: a0 = s1 + 0x220\n 24894: u64 [a4 + 0x20] = a2\n 24897: ra = 832, jump @790\n      : @839 [@dyn 416] (gas: 3)\n 24903: a0 = s1 + 0x200\n 24907: a1 = s1 + 0x2a0\n 24911: ra = 834, jump @11\n      : @840 [@dyn 417] (gas: 6)\n 24917: a0 = u64 [s1 + 0xa8]\n 24921: a1 = u64 [s1 + 0xb0]\n 24925: a0 = a0 | a1\n 24928: a2 = u64 [s1 + 0xa0]\n 24932: a1 = u64 [s1 + 0xb8]\n 24936: t0 = 836, jump @914\n      : @841 [@dyn 418] (gas: 1)\n 24942: jump @873 if a0 != 0\n      : @842 (gas: 16)\n 24946: a2 = u64 [s1 + 0x218]\n 24950: a3 = u64 [s1 + 0x210]\n 24954: a1 = u64 [s1 + 0x208]\n 24958: a0 = u64 [s1 + 0x200]\n 24962: u64 [s1 + 0x78] = a0\n 24965: a4 = s1 + 0x100\n 24969: u64 [a4 + 0xe0] = a0\n 24973: u64 [s1 + 0x68] = a1\n 24976: u64 [a4 + 0xe8] = a1\n 24980: u64 [s1 + 0x58] = a3\n 24983: u64 [a4 + 0xf0] = a3\n 24987: a1 = s1 + 0x1e0\n 24991: u64 [s1 + 0x70] = a2\n 24994: u64 [a4 + 0xf8] = a2\n 24998: a0 = u64 [s1 + 0xb8]\n 25002: ra = 838, jump @9\n      : @843 [@dyn 419] (gas: 20)\n 25008: a0 = u64 [s1 + 0x80]\n 25012: a0 = a0 + 0x1\n 25015: a1 = a0 <u 0x1\n 25018: a2 = u64 [s1 + 0x88]\n 25022: a1 = a1 + a2\n 25025: a2 = a0 | a1\n 25028: a2 = a2 <u 0x1\n 25031: a3 = u64 [s1 + 0x98]\n 25035: a2 = a2 + a3\n 25038: a3 = a2 <u a3\n 25041: a4 = u64 [s1 + 0x90]\n 25045: a3 = a3 + a4\n 25048: a4 = s1 + 0x200\n 25052: u64 [a4 + 0xc8] = a1\n 25056: u64 [a4 + 0xc0] = a0\n 25060: u64 [a4 + 0xd0] = a2\n 25064: u64 [a4 + 0xd8] = a3\n 25068: a0 = s1 + 0x1c0\n 25072: a1 = s1 + 0x2c0\n 25076: ra = 840, jump @11\n      : @844 [@dyn 420] (gas: 13)\n 25082: a0 = u64 [s1 + 0xa8]\n 25086: a1 = u64 [s1 + 0xa0]\n 25090: a2 = a1 | a0\n 25093: a0 = 0x100000000\n 25103: u64 [s1 + 0xa0] = a0\n 25107: a0 = 0xffffffe0\n 25117: a1 = u64 [s1 + 0xb8]\n 25121: a0 = a1 <u a0\n 25124: a1 = u64 [s1 + 0xb0]\n 25128: a0 = 0 if a1 != 0\n 25130: u64 [s1 + 0xa8] = a2\n 25134: a0 = 0 if a2 != 0\n 25136: jump @873 if a0 == 0\n      : @845 (gas: 13)\n 25140: a5 = s1 + 0x100\n 25144: a2 = u64 [a5 + 0xd8]\n 25148: a1 = u64 [a5 + 0xd0]\n 25152: a3 = u64 [a5 + 0xc8]\n 25156: a4 = u64 [a5 + 0xc0]\n 25160: a0 = u64 [s1 + 0xb8]\n 25164: i32 a0 = a0 + 0x20\n 25167: u64 [a5 + 0xa0] = a4\n 25171: u64 [a5 + 0xa8] = a3\n 25175: u64 [a5 + 0xb0] = a1\n 25179: a1 = s1 + 0x1a0\n 25183: u64 [a5 + 0xb8] = a2\n 25187: ra = 842, jump @9\n      : @846 [@dyn 421] (gas: 5)\n 25193: a1 = u64 [s1 + 0x80]\n 25197: a0 = a1 + 0x2\n 25200: a1 = a0 <u a1\n 25203: a3 = u64 [s1 + 0x88]\n 25207: t0 = 844, jump @920\n      : @847 [@dyn 422] (gas: 13)\n 25213: a1 = u64 [s1 + 0x98]\n 25217: a3 = a3 + a1\n 25220: a1 = a3 <u a1\n 25223: a4 = u64 [s1 + 0x90]\n 25227: a1 = a1 + a4\n 25230: a4 = s1 + 0x200\n 25234: u64 [a4 + 0xe8] = a2\n 25238: u64 [a4 + 0xe0] = a0\n 25242: u64 [a4 + 0xf0] = a3\n 25246: u64 [a4 + 0xf8] = a1\n 25250: a0 = s1 + 0x180\n 25254: a1 = s1 + 0x2e0\n 25258: ra = 846, jump @11\n      : @848 [@dyn 423] (gas: 9)\n 25264: a0 = u64 [s1 + 0xa0]\n 25268: a0 = a0 + 0xffffffffffffffc0\n 25271: a1 = u64 [s1 + 0xb8]\n 25275: a0 = a1 <u a0\n 25278: a1 = u64 [s1 + 0xb0]\n 25282: a0 = 0 if a1 != 0\n 25284: a1 = u64 [s1 + 0xa8]\n 25288: a0 = 0 if a1 != 0\n 25290: jump @873 if a0 == 0\n      : @849 (gas: 12)\n 25294: a0 = u64 [s1 + 0x180]\n 25298: a0 = a0 & 0xff\n 25302: u64 [s1 + 0xb0] = a0\n 25306: a1 = a0 >u 0\n 25308: a0 = u64 [s1 + 0xb8]\n 25312: i32 a0 = a0 + 0x40\n 25315: u64 [s1 + 376] = 0\n 25319: u64 [s1 + 368] = 0\n 25323: u64 [s1 + 0x160] = a1\n 25327: a1 = s1 + 0x160\n 25331: u64 [s1 + 360] = 0\n 25335: ra = 848, jump @9\n      : @850 [@dyn 424] (gas: 2)\n 25341: a0 = u64 [s1 + 0xb0]\n 25345: jump @869 if a0 == 0\n      : @851 (gas: 24)\n 25349: t1 = 0x64\n 25352: t0 = u64 [s1 + 0x78]\n 25355: a0 = t0 mulhu t1\n 25358: a4 = u64 [s1 + 0x68]\n 25361: a1 = a4 * t1\n 25364: a0 = a0 + a1\n 25367: u64 [s1 + 0x60] = a0\n 25370: a0 = a0 <u a1\n 25373: a1 = a4 mulhu t1\n 25376: a0 = a0 + a1\n 25379: a3 = u64 [s1 + 0x58]\n 25382: a1 = a3 * t1\n 25385: a1 = a1 + a0\n 25388: u64 [s1 + 0xb8] = a1\n 25392: a0 = a1 <u a0\n 25395: a1 = a3 mulhu t1\n 25398: a5 = u64 [s1 + 0x70]\n 25401: a2 = a5 * t1\n 25404: a2 = a2 + a1\n 25407: a3 = t0 | a3\n 25410: a4 = a4 | a5\n 25413: a3 = a3 | a4\n 25416: a4 = a2 + a0\n 25419: jump @853 if a3 == 0\n      : @852 (gas: 7)\n 25422: a0 = 0 if a4 != 0\n 25424: a1 = a2 <u a1\n 25427: a2 = a5 mulhu t1\n 25430: a2 = a2 >u 0\n 25432: a1 = a1 | a2\n 25435: a0 = a0 | a1\n 25438: jump @877 if a0 != 0\n      : @853 (gas: 8)\n 25442: u64 [s1 + 0x70] = a4\n 25445: u64 [s1 + 792] = 0\n 25449: u64 [s1 + 784] = 0\n 25453: u64 [s1 + 776] = 0\n 25457: u64 [s1 + 768] = 0x1\n 25462: a0 = s1 + 0x100\n 25466: a1 = s1 + 0x300\n 25470: ra = 850, jump @11\n      : @854 [@dyn 425] (gas: 8)\n 25476: a5 = u64 [s1 + 0x118]\n 25480: t0 = u64 [s1 + 0x110]\n 25484: t2 = u64 [s1 + 0x108]\n 25488: a4 = u64 [s1 + 0x100]\n 25492: a0 = t2 | a5\n 25495: a1 = a4 | t0\n 25498: a0 = a0 | a1\n 25501: jump @874 if a0 == 0\n      : @855 (gas: 75)\n 25505: a1 = u64 [s1 + 0x78]\n 25508: a1 = a1 * 0x64\n 25511: a0 = a0 <u 0x1\n 25514: a3 = u64 [s1 + 0xb8]\n 25518: a3 = a3 | a1\n 25521: ra = a1\n 25523: u64 [s1 + 0x68] = a1\n 25526: t1 = u64 [s1 + 0x60]\n 25529: a1 = u64 [s1 + 0x70]\n 25532: a2 = t1 | a1\n 25535: a2 = a2 | a3\n 25538: a2 = a2 <u 0x1\n 25541: a0 = a0 | a2\n 25544: u64 [s1 + 0xb0] = a0\n 25548: a0 = clz t0\n 25550: a0 = a0 + 0x40\n 25553: a3 = clz a5\n 25555: a3 = a0 if a5 == 0\n 25558: u64 [s1 + 0x38] = a4\n 25561: a0 = clz a4\n 25563: a0 = a0 + 0x40\n 25566: a4 = clz t2\n 25568: u64 [s1 + 0x40] = t2\n 25571: a4 = a0 if t2 == 0\n 25574: a0 = a4 + 0x80\n 25578: u64 [s1 + 0x50] = a5\n 25581: u64 [s1 + 0x48] = t0\n 25584: a2 = t0 | a5\n 25587: a3 = a0 if a2 == 0\n 25590: a4 = a0 <u a4\n 25593: a4 = 0 if a2 != 0\n 25595: t0 = u64 [s1 + 0xb8]\n 25599: a0 = clz t0\n 25601: a0 = a0 + 0x40\n 25604: a5 = clz a1\n 25606: a5 = a0 if a1 == 0\n 25609: a0 = clz ra\n 25611: a0 = a0 + 0x40\n 25614: a2 = clz t1\n 25616: a2 = a0 if t1 == 0\n 25619: a0 = a2 + 0x80\n 25623: t0 = t0 | a1\n 25626: a5 = a0 if t0 == 0\n 25629: a2 = a0 <u a2\n 25632: a2 = 0 if t0 != 0\n 25634: t0 = a4 ^ a2\n 25637: a0 = a4 <u a2\n 25640: ra = a3 <u a5\n 25643: a0 = ra if t0 == 0\n 25646: t2 = a0 <u 0x1\n 25649: t2 = t2 + 0xffffffffffffffff\n 25652: t0 = -a0\n 25654: a4 = a4 - a2\n 25657: ra = a4 - ra\n 25660: a5 = a3 - a5\n 25663: a3 = t0 >u 0\n 25665: a2 = t2 >u 0\n 25667: a2 = a3 if t2 == 0\n 25670: a4 = ra >u 0\n 25672: u64 [s1 + 0xa8] = a5\n 25676: a3 = a5 <u 0x100\n 25680: a3 = a3 ^ 0x1\n 25683: a3 = a4 if ra != 0\n 25686: a3 = a2 if a0 != 0\n 25689: a2 = u64 [s1 + 0xb0]\n 25693: a2 = a2 | a3\n 25696: a4 = a1\n 25698: a4 = 0 if a2 != 0\n 25700: a3 = u64 [s1 + 0xb8]\n 25704: a3 = 0 if a2 != 0\n 25706: a0 = t1\n 25708: a0 = 0 if a2 != 0\n 25710: a5 = u64 [s1 + 0x68]\n 25713: a5 = 0 if a2 != 0\n 25715: jump @872 if a2 != 0\n      : @856 (gas: 7)\n 25719: a1 = t1\n 25721: a2 = u64 [s1 + 0xa8]\n 25725: a2 = a2 ^ 0xff\n 25729: t1 = a2 | t0\n 25732: a2 = ra | t2\n 25735: a2 = t1 | a2\n 25738: jump @872 if a2 == 0\n      : @857 (gas: 18)\n 25742: a3 = u64 [s1 + 0xa8]\n 25746: a2 = a3 + 0x1\n 25749: u64 [s1 + 0xb0] = a2\n 25753: a0 = a2 <u 0x1\n 25756: a0 = a0 + ra\n 25759: u64 [s1 + 0x88] = a0\n 25763: a0 = a0 | a2\n 25766: a0 = a0 <u 0x1\n 25769: a0 = a0 + t0\n 25772: u64 [s1 + 0x78] = a0\n 25775: a0 = a0 <u t0\n 25778: a0 = a0 + t2\n 25781: u64 [s1 + 0x80] = a0\n 25785: a2 = 0xff - a3\n 25789: u64 [s1 + 0x90] = a2\n 25793: a2 = 0x80 - a2\n 25797: a0 = u64 [s1 + 0x68]\n 25800: ra = 852, jump @921\n      : @858 [@dyn 426] (gas: 6)\n 25806: u64 [s1 + 0xa0] = a0\n 25810: u64 [s1 + 0x98] = a1\n 25814: a0 = u64 [s1 + 0xb8]\n 25818: a1 = u64 [s1 + 0x70]\n 25821: a2 = u64 [s1 + 0x90]\n 25825: ra = 854, jump @926\n      : @859 [@dyn 427] (gas: 9)\n 25831: u64 [s1 + 0x58] = a0\n 25834: a0 = u64 [s1 + 0x98]\n 25838: a0 = a0 | a1\n 25841: u64 [s1 + 0x98] = a0\n 25845: a1 = u64 [s1 + 0xa8]\n 25849: a2 = 0x7f - a1\n 25852: a0 = u64 [s1 + 0x68]\n 25855: a1 = u64 [s1 + 0x60]\n 25858: ra = 856, jump @926\n      : @860 [@dyn 428] (gas: 18)\n 25864: a2 = u64 [s1 + 0x90]\n 25868: a3 = a2 <u 0x80\n 25872: u64 [s1 + 0xa8] = a3\n 25876: a4 = u64 [s1 + 0x98]\n 25880: a1 = a4 if a3 != 0\n 25883: a4 = u64 [s1 + 0x70]\n 25886: a1 = a4 if a2 == 0\n 25889: u64 [s1 + 0x98] = a1\n 25893: a1 = u64 [s1 + 0xa0]\n 25897: a4 = u64 [s1 + 0x58]\n 25900: a1 = a1 | a4\n 25903: a1 = a0 if a3 == 0\n 25906: a0 = u64 [s1 + 0xb8]\n 25910: a1 = a0 if a2 == 0\n 25913: u64 [s1 + 0xa0] = a1\n 25917: a0 = u64 [s1 + 0x68]\n 25920: a1 = u64 [s1 + 0x60]\n 25923: ra = 858, jump @926\n      : @861 [@dyn 429] (gas: 13)\n 25929: a5 = u64 [s1 + 0x78]\n 25932: a2 = u64 [s1 + 0x80]\n 25936: a3 = u64 [s1 + 0x88]\n 25940: a3 = a3 | a2\n 25943: a2 = u64 [s1 + 0xb0]\n 25947: a2 = a2 | a5\n 25950: a2 = a2 | a3\n 25953: a3 = u64 [s1 + 0xa8]\n 25957: a1 = 0 if a3 == 0\n 25959: u64 [s1 + 0x90] = a1\n 25963: a0 = 0 if a3 == 0\n 25965: u64 [s1 + 0xa8] = a0\n 25969: jump @870 if a2 == 0\n      : @862 (gas: 5)\n 25973: a0 = u64 [s1 + 0xb0]\n 25977: a2 = a0 + 0xffffffffffffff80\n 25980: a0 = u64 [s1 + 0xb8]\n 25984: a1 = u64 [s1 + 0x70]\n 25987: ra = 860, jump @921\n      : @863 [@dyn 430] (gas: 6)\n 25993: u64 [s1 + 0x58] = a0\n 25996: u64 [s1 + 0x28] = a1\n 25999: a0 = u64 [s1 + 0x68]\n 26002: a1 = u64 [s1 + 0x60]\n 26005: a2 = u64 [s1 + 0xb0]\n 26009: ra = 862, jump @921\n      : @864 [@dyn 431] (gas: 7)\n 26015: u64 [s1 + 0x20] = a0\n 26018: u64 [s1 + 0x30] = a1\n 26021: a1 = u64 [s1 + 0xb0]\n 26025: a2 = 0x80 - a1\n 26029: a0 = u64 [s1 + 0xb8]\n 26033: a1 = u64 [s1 + 0x70]\n 26036: ra = 864, jump @926\n      : @865 [@dyn 432] (gas: 21)\n 26042: a2 = u64 [s1 + 0x30]\n 26045: a1 = a1 | a2\n 26048: a3 = u64 [s1 + 0xb0]\n 26052: a4 = a3 <u 0x80\n 26056: u64 [s1 + 0x30] = a4\n 26059: a2 = u64 [s1 + 0x28]\n 26062: a1 = a2 if a4 == 0\n 26065: a2 = u64 [s1 + 0x60]\n 26068: a2 = a1 if a3 != 0\n 26071: u64 [s1 + 0x60] = a2\n 26074: a1 = u64 [s1 + 0x20]\n 26077: a0 = a0 | a1\n 26080: a1 = u64 [s1 + 0x58]\n 26083: a0 = a1 if a4 == 0\n 26086: a1 = u64 [s1 + 0x68]\n 26089: a1 = a0 if a3 != 0\n 26092: a2 = a3\n 26094: u64 [s1 + 0x68] = a1\n 26097: a0 = u64 [s1 + 0xb8]\n 26101: a1 = u64 [s1 + 0x70]\n 26104: ra = 866, jump @921\n      : @866 [@dyn 433] (gas: 24)\n 26110: t2 = 0\n 26112: a2 = u64 [s1 + 0x30]\n 26115: a1 = 0 if a2 == 0\n 26117: a0 = 0 if a2 == 0\n 26119: u64 [s1 + 0x70] = a0\n 26122: a2 = u64 [s1 + 0x38]\n 26125: a0 = a2 <u 0x1\n 26128: a3 = u64 [s1 + 0x40]\n 26131: a0 = a3 - a0\n 26134: u64 [s1 + 0x28] = a0\n 26137: a0 = a2 | a3\n 26140: a0 = a0 <u 0x1\n 26143: a3 = u64 [s1 + 0x48]\n 26146: a4 = a3 - a0\n 26149: u64 [s1 + 0x20] = a4\n 26152: a0 = a3 <u a0\n 26155: a3 = u64 [s1 + 0x50]\n 26158: a3 = a3 - a0\n 26161: u64 [s1 + 0x18] = a3\n 26164: a2 = a2 + 0xffffffffffffffff\n 26167: u64 [s1 + 0x10] = a2\n 26170: t1 = u64 [s1 + 0x60]\n 26173: ra = u64 [s1 + 0x68]\n 26176: fallthrough\n      : @867 (gas: 106)\n 26177: u64 [s1 + 0x58] = t2\n 26180: u64 [s1 + 96] = 0\n 26183: u64 [s1 + 48] = 0\n 26186: a4 = ra >> 0x3f\n 26189: a3 = t1 << 0x1\n 26192: t0 = a3 | a4\n 26195: a4 = ra << 0x1\n 26198: a3 = u64 [s1 + 0x98]\n 26202: a2 = a3 >> 0x3f\n 26205: a2 = a2 | a4\n 26208: u64 [s1 + 0x68] = a2\n 26211: a0 = u64 [s1 + 0x28]\n 26214: a5 = a0 ^ t0\n 26217: a4 = a0 <u t0\n 26220: a0 = u64 [s1 + 0x10]\n 26223: t2 = a0 <u a2\n 26226: t2 = a4 if a5 != 0\n 26229: a1 = a1 << 0x1\n 26232: a0 = u64 [s1 + 0x70]\n 26235: a2 = a0 >> 0x3f\n 26238: a1 = a1 | a2\n 26241: u64 [s1 + 0xb8] = a1\n 26245: a2 = t1 >> 0x3f\n 26248: a0 = a0 << 0x1\n 26251: t1 = a0 | a2\n 26254: a0 = a3 << 0x1\n 26257: a1 = u64 [s1 + 0xa0]\n 26261: a2 = a1 >> 0x3f\n 26264: a0 = a0 | a2\n 26267: a2 = a1 << 0x1\n 26270: a1 = u64 [s1 + 0x90]\n 26274: a4 = a1 >> 0x3f\n 26277: a2 = a2 | a4\n 26280: a4 = a1 << 0x1\n 26283: a5 = u64 [s1 + 0xa8]\n 26287: ra = a5 >> 0x3f\n 26290: a4 = a4 | ra\n 26293: a5 = a5 << 0x1\n 26296: a1 = u64 [s1 + 0x58]\n 26299: a1 = a1 | a5\n 26302: u64 [s1 + 0xa8] = a1\n 26306: a3 = u64 [s1 + 0x60]\n 26309: a1 = a3 | a4\n 26312: u64 [s1 + 0x90] = a1\n 26316: a1 = a3 | a2\n 26319: u64 [s1 + 0xa0] = a1\n 26323: a0 = a0 | a3\n 26326: u64 [s1 + 0x98] = a0\n 26330: a1 = u64 [s1 + 0x20]\n 26333: a0 = a1 - t1\n 26336: a0 = a0 <u t2\n 26339: a2 = a1 <u t1\n 26342: a1 = u64 [s1 + 0x18]\n 26345: a3 = u64 [s1 + 0xb8]\n 26349: a4 = a1 - a3\n 26352: a4 = a4 - a2\n 26355: a4 = a4 - a0\n 26358: a4 = a4 >>a 0x3f\n 26361: a0 = u64 [s1 + 0x38]\n 26364: a1 = a4 & a0\n 26367: u64 [s1 + 0x60] = a1\n 26370: a5 = u64 [s1 + 0x40]\n 26373: a5 = a5 & a4\n 26376: a0 = t0 ^ a5\n 26379: a2 = t0 <u a5\n 26382: t2 = u64 [s1 + 0x68]\n 26385: ra = t2 <u a1\n 26388: a2 = ra if a0 == 0\n 26391: a1 = u64 [s1 + 0x48]\n 26394: a3 = a4 & a1\n 26397: a1 = t1 - a3\n 26400: a0 = a1 - a2\n 26403: u64 [s1 + 0x70] = a0\n 26406: a0 = a1 <u a2\n 26409: a1 = t1 <u a3\n 26412: a2 = u64 [s1 + 0x50]\n 26415: a2 = a2 & a4\n 26418: a3 = u64 [s1 + 0xb8]\n 26422: a2 = a3 - a2\n 26425: a1 = a2 - a1\n 26428: a1 = a1 - a0\n 26431: a3 = t0 - a5\n 26434: t1 = a3 - ra\n 26437: a0 = u64 [s1 + 0x60]\n 26440: ra = t2 - a0\n 26443: a5 = u64 [s1 + 0xb0]\n 26447: a2 = u64 [s1 + 0x88]\n 26451: a0 = a5 | a2\n 26454: a0 = a0 <u 0x1\n 26457: a3 = u64 [s1 + 0x78]\n 26460: t2 = a3 <u a0\n 26463: a0 = a3 - a0\n 26466: a3 = a5 <u 0x1\n 26469: a2 = a2 - a3\n 26472: a3 = u64 [s1 + 0x80]\n 26476: a3 = a3 - t2\n 26479: a5 = a5 + 0xffffffffffffffff\n 26482: u64 [s1 + 0x88] = a2\n 26486: u64 [s1 + 0x80] = a3\n 26490: a2 = a2 | a3\n 26493: u64 [s1 + 0xb0] = a5\n 26497: a3 = a5 | a0\n 26500: a3 = a3 | a2\n 26503: t2 = a4 & 0x1\n 26506: u64 [s1 + 0x78] = a0\n 26509: jump @867 if a3 != 0\n      : @868 (gas: 1)\n 26513: jump @871\n      : @869 (gas: 4)\n 26515: a5 = 0\n 26517: a3 = 0\n 26519: a4 = 0\n 26521: jump @872\n      : @870 (gas: 3)\n 26523: t2 = 0\n 26525: u64 [s1 + 48] = 0\n 26528: fallthrough\n      : @871 (gas: 20)\n 26529: a3 = u64 [s1 + 0xa0]\n 26533: a0 = a3 >> 0x3f\n 26536: a1 = u64 [s1 + 0x98]\n 26540: a1 = a1 << 0x1\n 26543: t0 = a1 | a0\n 26546: a0 = u64 [s1 + 0x90]\n 26550: a1 = a0 >> 0x3f\n 26553: a3 = a3 << 0x1\n 26556: a3 = a3 | a1\n 26559: a2 = u64 [s1 + 0xa8]\n 26563: a1 = a2 >> 0x3f\n 26566: a0 = a0 << 0x1\n 26569: a5 = a2 << 0x1\n 26572: a5 = t2 | a5\n 26575: a2 = u64 [s1 + 0x30]\n 26578: a1 = a1 | a2\n 26581: a0 = a0 | a1\n 26584: a3 = a3 | a2\n 26587: a4 = a2 | t0\n 26590: fallthrough\n      : @872 (gas: 12)\n 26591: a2 = u64 [s1 + 0x8]\n 26594: u64 [a2] = a5\n 26596: u64 [a2 + 0x8] = a0\n 26599: u64 [a2 + 0x10] = a3\n 26602: u64 [a2 + 0x18] = a4\n 26605: sp = s0 + 0xfffffffffffffcc0\n 26609: a0 = sp + 0x300\n 26613: ra = u64 [a0 + 0x38]\n 26616: s0 = u64 [a0 + 0x30]\n 26619: s1 = u64 [a0 + 0x28]\n 26622: sp = sp + 0x340\n 26626: ret\n      : @873 (gas: 1)\n 26628: trap\n      : @874 (gas: 6)\n 26629: u64 [s1 + 240] = 0\n 26633: u64 [s1 + 232] = 0\n 26637: u64 [s1 + 224] = 0\n 26641: t0 = 0x364\n 26645: a0 = 0x4e487b7100000000\n 26655: fallthrough\n      : @875 [@dyn 434] (gas: 4)\n 26656: a1 = s1 + 0xe0\n 26660: u64 [s1 + 0xf8] = a0\n 26664: a0 = 0\n 26666: ra = 870, jump @9\n      : @876 [@dyn 435] (gas: 8)\n 26672: u64 [s1 + 216] = 0\n 26676: u64 [s1 + 208] = 0\n 26680: u64 [s1 + 192] = 0x12\n 26685: a0 = 0x4\n 26688: a1 = s1 + 0xc0\n 26692: u64 [s1 + 200] = 0\n 26696: ra = 0x36c\n 26700: jump @9\n      : @877 (gas: 6)\n 26703: u64 [s1 + 336] = 0\n 26707: u64 [s1 + 328] = 0\n 26711: u64 [s1 + 320] = 0\n 26715: t0 = 0x368\n 26719: a0 = 0x4e487b7100000000\n 26729: fallthrough\n      : @878 [@dyn 436] (gas: 4)\n 26730: a1 = s1 + 0x140\n 26734: u64 [s1 + 0x158] = a0\n 26738: a0 = 0\n 26740: ra = 874, jump @9\n      : @879 [@dyn 437] (gas: 7)\n 26746: u64 [s1 + 312] = 0\n 26750: u64 [s1 + 304] = 0\n 26754: u64 [s1 + 288] = 0x11\n 26759: a0 = 0x4\n 26762: a1 = s1 + 0x120\n 26766: u64 [s1 + 296] = 0\n 26770: ra = 876, jump @9\n      : @880 [@dyn 438] (gas: 3)\n 26776: a0 = u64 [s1 + 0x50]\n 26779: a0 = i32 [a0]\n 26781: jump @882 if a0 >u 63\n      : @881 (gas: 3)\n 26785: a1 = u64 [s1 + 0x50]\n 26788: u32 [a1 + 0] = 0x40\n 26791: fallthrough\n      : @882 (gas: 6)\n 26792: a0 = 0x1\n 26795: a2 = 0x24\n 26798: a1 = u64 [s1 + 0x30]\n 26801: ra = 0x36e\n 26805: ecalli 13 // 'seal_return'\n 26807: fallthrough\n      : @883 [@dyn 439] (gas: 13)\n 26808: sp = sp + 0xffffffffffffff40\n 26812: u64 [sp + 0xb8] = ra\n 26816: u64 [sp + 0xb0] = s0\n 26820: u64 [sp + 0xa8] = s1\n 26824: s0 = sp + 0xc0\n 26828: sp = sp & 0xffffffffffffffe0\n 26831: u64 [sp + 152] = 0\n 26835: u64 [sp + 144] = 0\n 26839: u64 [sp + 136] = 0\n 26843: u64 [sp + 128] = 0\n 26847: a0 = sp + 0x60\n 26850: a1 = sp + 0x80\n 26854: ra = 880, jump @11\n      : @884 [@dyn 440] (gas: 11)\n 26860: a0 = u64 [sp + 0x68]\n 26863: u64 [sp + 0x18] = a0\n 26866: a0 = u64 [sp + 0x60]\n 26869: u64 [sp + 0x10] = a0\n 26872: a0 = u32 [sp + 0x70]\n 26875: u64 [sp + 0x8] = a0\n 26878: s1 = 0x301d0\n 26883: i32 a0 = s1 + 0\n 26885: u64 [sp] = a0\n 26887: ecalli 5 // 'caller'\n 26889: fallthrough\n      : @885 (gas: 22)\n 26890: a0 = u64 [0x301d8]\n 26895: a1 = u64 [0x301d0]\n 26900: a2 = i32 [0x301e0]\n 26905: a0 = reverse a0\n 26907: a3 = a0 >> 0x20\n 26910: a1 = reverse a1\n 26912: a4 = a1 << 0x20\n 26915: a3 = a3 | a4\n 26918: a0 = a0 << 0x20\n 26921: a2 = reverse a2\n 26923: a2 = a2 >> 0x20\n 26926: a0 = a0 | a2\n 26929: a1 = a1 >> 0x20\n 26932: a2 = u64 [sp + 0x8]\n 26935: a1 = a1 ^ a2\n 26938: a2 = u64 [sp + 0x10]\n 26941: a0 = a0 ^ a2\n 26944: a0 = a0 | a1\n 26947: a1 = u64 [sp + 0x18]\n 26950: a1 = a1 ^ a3\n 26953: a0 = a0 | a1\n 26956: jump @887 if a0 != 0\n      : @886 (gas: 6)\n 26959: sp = s0 + 0xffffffffffffff40\n 26963: ra = u64 [sp + 0xb8]\n 26967: s0 = u64 [sp + 0xb0]\n 26971: s1 = u64 [sp + 0xa8]\n 26975: sp = sp + 0xc0\n 26979: ret\n      : @887 (gas: 8)\n 26981: u64 [sp + 80] = 0\n 26984: u64 [sp + 72] = 0\n 26987: u64 [sp + 64] = 0\n 26990: a0 = 0x118cdaa700000000\n 27000: a1 = sp + 0x40\n 27003: u64 [sp + 0x58] = a0\n 27006: a0 = 0\n 27008: ra = 882, jump @9\n      : @888 [@dyn 441] (gas: 22)\n 27014: a0 = u64 [sp]\n 27016: ecalli 5 // 'caller'\n 27018: a0 = u64 [s1 + 0x8]\n 27021: a1 = i32 [s1 + 0x10]\n 27024: a2 = u64 [s1]\n 27026: a0 = reverse a0\n 27028: a3 = a0 << 0x20\n 27031: a1 = reverse a1\n 27033: a1 = a1 >> 0x20\n 27036: a3 = a3 | a1\n 27039: a0 = a0 >> 0x20\n 27042: a1 = reverse a2\n 27044: a2 = a1 << 0x20\n 27047: a0 = a0 | a2\n 27050: a1 = a1 >> 0x20\n 27053: u64 [sp + 56] = 0\n 27056: u64 [sp + 0x30] = a1\n 27059: u64 [sp + 0x28] = a0\n 27062: a0 = 0x4\n 27065: a1 = sp + 0x20\n 27068: u64 [sp + 0x20] = a3\n 27071: ra = 884, jump @9\n      : @889 [@dyn 442] (gas: 2)\n 27077: a1 = i32 [0x201c8]\n 27082: jump @891 if a1 >u 63\n      : @890 (gas: 2)\n 27086: u32 [0x201c8] = 0x40\n 27092: fallthrough\n      : @891 (gas: 8)\n 27093: a1 = 0x201d0\n 27098: i32 a1 = a1 + 0\n 27100: a0 = 0x1\n 27103: a2 = 0x24\n 27106: ecalli 13 // 'seal_return'\n 27108: a0 = 0\n 27110: ra = 0x376\n 27114: jump @24\n      : @892 [export #0: 'call'] (gas: 2)\n 27117: a0 = 0\n 27119: ra = 886, jump @24\n      : @893 [@dyn 443] [export #1: 'deploy'] (gas: 2)\n 27125: a0 = 0x1\n 27128: ra = 888, jump @24\n      : @894 [@dyn 444] (gas: 15)\n 27134: a2 = u64 [s1 + 0xd8]\n 27138: a0 = u64 [a2 + 0x8]\n 27141: a1 = i32 [a2 + 0x10]\n 27144: a2 = u64 [a2]\n 27146: a0 = reverse a0\n 27148: a3 = a0 << 0x20\n 27151: a1 = reverse a1\n 27153: a1 = a1 >> 0x20\n 27156: a3 = a3 | a1\n 27159: a0 = a0 >> 0x20\n 27162: a1 = reverse a2\n 27164: a2 = a1 << 0x20\n 27167: a0 = a0 | a2\n 27170: a1 = a1 >> 0x20\n 27173: jump [t0]\n      : @895 (gas: 17)\n 27175: a2 = u64 [s1 + 0x60]\n 27178: a0 = u64 [a2 + 0x8]\n 27181: a1 = i32 [a2 + 0x10]\n 27184: a2 = u64 [a2]\n 27186: a0 = reverse a0\n 27188: a3 = a0 << 0x20\n 27191: a1 = reverse a1\n 27193: a1 = a1 >> 0x20\n 27196: a3 = a3 | a1\n 27199: a0 = a0 >> 0x20\n 27202: a1 = reverse a2\n 27204: a2 = a1 << 0x20\n 27207: a0 = a0 | a2\n 27210: a1 = a1 >> 0x20\n 27213: a2 = s1 + 0x7ff\n 27217: a2 = a2 + 0x61\n 27220: jump [t0]\n      : @896 (gas: 8)\n 27222: a0 = u64 [a2 + 0x8]\n 27225: a1 = i32 [a2 + 0x10]\n 27228: a2 = u64 [a2]\n 27230: a3 = reverse a0\n 27232: a0 = a3 << 0x20\n 27235: a1 = reverse a1\n 27237: a1 = a1 >> 0x20\n 27240: jump [t0]\n      : @897 (gas: 7)\n 27242: a4 = 0x100000000\n 27252: a0 = 0xfffffffc\n 27262: a0 = a1 <u a0\n 27265: a2 = u64 [s1 + 0xd0]\n 27269: a0 = 0 if a2 != 0\n 27271: a0 = 0 if a3 != 0\n 27273: jump [t0]\n      : @898 (gas: 11)\n 27275: a0 = u64 [a3 + 0x18]\n 27278: a1 = u64 [a3 + 0x10]\n 27281: a2 = u64 [a3 + 0x8]\n 27284: a3 = u64 [a3]\n 27286: a0 = reverse a0\n 27288: a1 = reverse a1\n 27290: a2 = reverse a2\n 27292: a3 = reverse a3\n 27294: a4 = s1 + 0x1878\n 27298: a5 = a4 + 0x300\n 27302: jump [t0]\n      : @899 (gas: 12)\n 27304: a1 = u64 [s1 + 0xd0]\n 27308: a2 = u64 [s1 + 0xc0]\n 27312: a1 = a1 | a2\n 27315: a3 = u64 [s1 + 0xc8]\n 27319: a2 = u64 [s1 + 0xd8]\n 27323: a2 = a2 | a3\n 27326: a2 = a2 | a1\n 27329: a2 = a2 >> 0x20\n 27332: a1 = a1 | a3\n 27335: a1 = a1 << 0x20\n 27338: a1 = a1 | a2\n 27341: jump [t0]\n      : @900 (gas: 19)\n 27343: a0 = u64 [s1 + 0x50]\n 27346: a0 = reverse a0\n 27348: a1 = a0 << 0x20\n 27351: a2 = u64 [s1 + 0x58]\n 27354: a2 = reverse a2\n 27356: a2 = a2 >> 0x20\n 27359: a1 = a1 | a2\n 27362: a0 = a0 >> 0x20\n 27365: a2 = u64 [s1 + 0x60]\n 27368: a2 = reverse a2\n 27370: a3 = a2 << 0x20\n 27373: a0 = a0 | a3\n 27376: a3 = u64 [s1 + 0xd8]\n 27380: a2 = a2 >> 0x20\n 27383: u32 [a3 + 0x10] = a2\n 27386: u64 [a3 + 0x8] = a0\n 27389: u64 [a3] = a1\n 27391: a0 = 0x2000\n 27395: jump [t0]\n      : @901 (gas: 9)\n 27397: a4 = u64 [s1 + 0xc8]\n 27401: a3 = u64 [s1 + 0xd0]\n 27405: a1 = u64 [s1 + 0xd8]\n 27409: a0 = u64 [s1 + 0xc0]\n 27413: a0 = a0 + 0xffffffffffffffdc\n 27416: a0 = a1 <u a0\n 27419: a0 = 0 if a3 != 0\n 27421: a0 = 0 if a4 != 0\n 27423: jump [t0]\n      : @902 (gas: 5)\n 27425: a2 = s1 + 0x7ff\n 27429: a2 = a2 + 0x61\n 27432: a0 = 0x20\n 27435: a1 = s1 + 0x7ff\n 27439: jump [t0]\n      : @903 (gas: 8)\n 27441: a2 = 0x100000000\n 27451: a2 = a2 ^ a1\n 27454: a2 = a2 | a0\n 27457: a3 = a1 >> 0x20\n 27460: a3 = a3 <u 0x1\n 27463: a3 = 0 if a0 != 0\n 27465: a3 = 0 if a2 == 0\n 27467: jump [t0]\n      : @904 (gas: 8)\n 27469: a2 = a3 | a4\n 27472: a1 = a0 | a5\n 27475: a1 = a1 | a2\n 27478: a1 = a1 >> 0x20\n 27481: a2 = a2 | a5\n 27484: a2 = a2 << 0x20\n 27487: a1 = a1 | a2\n 27490: jump [t0]\n      : @905 (gas: 9)\n 27492: a0 = u64 [a2 + 0x8]\n 27495: a1 = i32 [a2 + 0x10]\n 27498: a2 = u64 [a2]\n 27500: a0 = reverse a0\n 27502: a3 = a0 << 0x20\n 27505: a1 = reverse a1\n 27507: a1 = a1 >> 0x20\n 27510: a1 = a1 | a3\n 27513: jump [t0]\n      : @906 (gas: 11)\n 27515: a3 = u64 [s1 + 0xd8]\n 27519: a0 = u64 [a3 + 0x18]\n 27522: a1 = u64 [a3 + 0x10]\n 27525: a2 = u64 [a3 + 0x8]\n 27528: a3 = u64 [a3]\n 27530: a0 = reverse a0\n 27532: a1 = reverse a1\n 27534: a2 = reverse a2\n 27536: a3 = reverse a3\n 27538: a4 = s1 + 0x1878\n 27542: jump [t0]\n      : @907 (gas: 6)\n 27544: a0 = a2 <u a0\n 27547: a1 = u64 [s1 + 0xd0]\n 27551: a0 = 0 if a1 != 0\n 27553: a1 = u64 [s1 + 0xc8]\n 27557: a0 = 0 if a1 != 0\n 27559: jump [t0]\n      : @908 (gas: 8)\n 27561: a0 = a0 | a2\n 27564: a2 = a4 | a1\n 27567: a2 = a2 | a0\n 27570: a2 = a2 >> 0x20\n 27573: a0 = a0 | a1\n 27576: a0 = a0 << 0x20\n 27579: a0 = a0 | a2\n 27582: jump [t0]\n      : @909 (gas: 8)\n 27584: a0 = u64 [a4 + 0x98]\n 27588: a1 = u64 [a4 + 0xa0]\n 27592: a2 = u64 [a4 + 0x90]\n 27596: a3 = u64 [a4 + 0x88]\n 27600: a1 = a1 | a2\n 27603: a0 = a0 | a3\n 27606: a0 = a0 | a1\n 27609: jump [t0]\n      : @910 (gas: 8)\n 27611: a3 = u64 [s1 + 0xd8]\n 27615: a0 = 0xffffffbc\n 27625: a0 = a3 <u a0\n 27628: a1 = u64 [s1 + 0xd0]\n 27632: a0 = 0 if a1 != 0\n 27634: a1 = u64 [s1 + 0xc8]\n 27638: a0 = 0 if a1 != 0\n 27640: jump [t0]\n      : @911 (gas: 8)\n 27642: a0 = u64 [a4 + 0x18]\n 27645: a1 = u64 [a4 + 0x20]\n 27648: a2 = u64 [a4 + 0x10]\n 27651: a3 = u64 [a4 + 0x8]\n 27654: a1 = a1 | a2\n 27657: a0 = a0 | a3\n 27660: a0 = a0 | a1\n 27663: jump [t0]\n      : @912 (gas: 11)\n 27665: a2 = a2 - a3\n 27668: a3 = a4 <u a5\n 27671: a2 = a2 - a3\n 27674: u64 [s1 + 0x78] = a2\n 27677: a4 = a4 - a5\n 27680: u64 [s1 + 0x70] = a4\n 27683: a0 = a0 - a1\n 27686: a0 = a0 - t2\n 27689: u64 [s1 + 0x68] = a0\n 27692: a0 = t1 - ra\n 27695: jump [t0]\n      : @913 (gas: 6)\n 27697: a0 = a1 <u a0\n 27700: a2 = u64 [s1 + 0xd0]\n 27704: a0 = 0 if a2 != 0\n 27706: a2 = u64 [s1 + 0xc8]\n 27710: a0 = 0 if a2 != 0\n 27712: jump [t0]\n      : @914 (gas: 7)\n 27714: a1 = a1 | a2\n 27717: a1 = a1 | a0\n 27720: a1 = a1 >> 0x20\n 27723: a0 = a0 | a2\n 27726: a0 = a0 << 0x20\n 27729: a0 = a0 | a1\n 27732: jump [t0]\n      : @915 (gas: 9)\n 27734: a0 = u64 [a3 + 0x18]\n 27737: a1 = u64 [a3 + 0x10]\n 27740: a2 = u64 [a3 + 0x8]\n 27743: a3 = u64 [a3]\n 27745: a5 = reverse a0\n 27747: a4 = reverse a1\n 27749: a0 = reverse a2\n 27751: a1 = reverse a3\n 27753: jump [t0]\n      : @916 (gas: 9)\n 27755: a0 = u64 [a3 + 0x18]\n 27758: a1 = u64 [a3 + 0x10]\n 27761: a2 = u64 [a3 + 0x8]\n 27764: a3 = u64 [a3]\n 27766: a0 = reverse a0\n 27768: a4 = reverse a1\n 27770: a2 = reverse a2\n 27772: a3 = reverse a3\n 27774: jump [t0]\n      : @917 (gas: 4)\n 27776: a0 = 0x1878\n 27780: a3 = s1 + a0\n 27783: a4 = a3 + 0x700\n 27787: jump [t0]\n      : @918 (gas: 8)\n 27789: a0 = sp + 0xffffffffffffffe0\n 27792: a0 = a0 & 0xffffffffffffffe0\n 27795: u64 [s1 + 0xd8] = a0\n 27799: sp = a0\n 27801: i32 a2 = a0 + 0\n 27803: a1 = 0x40\n 27806: a0 = u64 [s1 + 0x50]\n 27809: jump [t0]\n      : @919 (gas: 6)\n 27811: i32 a0 = a2 + 0\n 27813: u64 [s1 + 0xd0] = a0\n 27817: a0 = u64 [s1 + 0xd8]\n 27821: a1 = a2\n 27823: u64 [s1 + 0xc8] = a2\n 27827: jump [t0]\n      : @920 (gas: 4)\n 27829: a2 = a3 + a1\n 27832: a3 = a2 <u a3\n 27835: a3 = a1 if a1 == 0\n 27838: jump [t0]\n      : @921 (gas: 2)\n 27840: a3 = a2 & 0x40\n 27843: jump @925 if a3 != 0\n      : @922 (gas: 1)\n 27846: jump @924 if a2 == 0\n      : @923 (gas: 6)\n 27849: i32 a3 = 0x40 - a2\n 27852: a3 = a1 << a3\n 27855: a1 = a1 >> a2\n 27858: a0 = a0 >> a2\n 27861: a0 = a0 | a3\n 27864: ret\n      : @924 (gas: 1)\n 27866: ret\n      : @925 (gas: 4)\n 27868: a0 = a2 + 0xffffffffffffffc0\n 27871: a0 = a1 >> a0\n 27874: a1 = 0\n 27876: ret\n      : @926 (gas: 2)\n 27878: a3 = a2 & 0x40\n 27881: jump @930 if a3 != 0\n      : @927 (gas: 1)\n 27884: jump @929 if a2 == 0\n      : @928 (gas: 6)\n 27887: i32 a3 = 0x40 - a2\n 27890: a3 = a0 >> a3\n 27893: a0 = a0 << a2\n 27896: a1 = a1 << a2\n 27899: a1 = a1 | a3\n 27902: ret\n      : @929 (gas: 1)\n 27904: ret\n      : @930 (gas: 4)\n 27906: a1 = a2 + 0xffffffffffffffc0\n 27909: a1 = a0 << a1\n 27912: a0 = 0\n 27914: ret\n",
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "collateralBalances(address)": "29bc969d",
              "collateralFactor()": "df011c41",
              "collateralToken()": "b2016bd4",
              "depositCollateral(uint256)": "bad4a01f",
              "getLoanDetails(address)": "e8a7da8e",
              "lendingToken()": "aaaca558",
              "loans(address)": "73b4086b",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "repayLoan(uint256)": "ab7b1c89",
              "setCollateralFactor(uint256)": "b5c22157",
              "takeLoan(uint256)": "8c803fc2",
              "transferOwnership(address)": "f2fde38b",
              "withdrawCollateral(uint256)": "6112fe2e"
            }
          },
          "irOptimized": "/// @use-src 2:\"@openzeppelin/contracts/access/Ownable.sol\", 8:\"@openzeppelin/contracts/utils/Context.sol\", 13:\"contracts/LendingBorrowing.sol\"\nobject \"LendingBorrowing_1989\" {\n    code {\n        {\n            /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n            let _1 := memoryguard(0xc0)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"LendingBorrowing_1989\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 96)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n            let value0 := abi_decode_contract_IERC20_fromMemory(_1)\n            let value1 := abi_decode_contract_IERC20_fromMemory(add(_1, 32))\n            let value := mload(add(_1, 64))\n            /// @src 2:1269:1364  \"if (initialOwner == address(0)) {...\"\n            if /** @src 2:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 13:1046:1056  \"msg.sender\" */ caller())\n            /// @src 2:1269:1364  \"if (initialOwner == address(0)) {...\"\n            {\n                /// @src 2:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:1322:1353  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                mstore(/** @src 2:1322:1353  \"OwnableInvalidOwner(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                /// @src 2:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                revert(/** @src -1:-1:-1 */ 0, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 36)\n            }\n            let _2 := sload(/** @src -1:-1:-1 */ 0)\n            /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ or(and(_2, not(sub(shl(160, 1), 1))), /** @src 13:1046:1056  \"msg.sender\" */ caller()))\n            /// @src 2:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _3 := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n            /// @src 2:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 2:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ and(_2, sub(shl(160, 1), 1)), /** @src 13:1046:1056  \"msg.sender\" */ caller())\n            /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n            if /** @src 13:1076:1100  \"_collateralFactor <= 100\" */ gt(value, /** @src 13:1097:1100  \"100\" */ 0x64)\n            /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n            {\n                mstore(_3, shl(229, 4594637))\n                mstore(add(_3, 4), 32)\n                mstore(add(_3, 36), 32)\n                mstore(add(_3, 68), \"Collateral factor must be <= 100\")\n                revert(_3, /** @src 13:1097:1100  \"100\" */ 0x64)\n            }\n            /// @src 13:1147:1181  \"collateralToken = _collateralToken\"\n            mstore(128, value0)\n            /// @src 13:1191:1219  \"lendingToken = _lendingToken\"\n            mstore(160, value1)\n            /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n            sstore(1, value)\n            let _4 := mload(64)\n            let _5 := datasize(\"LendingBorrowing_1989_deployed\")\n            codecopy(_4, dataoffset(\"LendingBorrowing_1989_deployed\"), _5)\n            setimmutable(_4, \"1597\", mload(/** @src 13:1147:1181  \"collateralToken = _collateralToken\" */ 128))\n            /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n            setimmutable(_4, \"1600\", mload(/** @src 13:1191:1219  \"lendingToken = _lendingToken\" */ 160))\n            /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n            return(_4, _5)\n        }\n        function abi_decode_contract_IERC20_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n    }\n    /// @use-src 2:\"@openzeppelin/contracts/access/Ownable.sol\", 8:\"@openzeppelin/contracts/utils/Context.sol\", 13:\"contracts/LendingBorrowing.sol\"\n    object \"LendingBorrowing_1989_deployed\" {\n        code {\n            {\n                /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x29bc969d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _2 := and(value, sub(shl(160, 1), 1))\n                        if iszero(eq(value, _2)) { revert(0, 0) }\n                        mstore(0, _2)\n                        mstore(32, /** @src 13:551:604  \"mapping(address => uint256) public collateralBalances\" */ 2)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(_1, sload(keccak256(0, 64)))\n                        return(_1, 32)\n                    }\n                    case 0x6112fe2e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_1 := calldataload(4)\n                        /// @src 13:1843:1899  \"require(_amount > 0, \\\"Amount must be greater than zero\\\")\"\n                        require_helper_stringliteral_335f(/** @src 13:1851:1862  \"_amount > 0\" */ iszero(iszero(value_1)))\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(0, /** @src 13:1936:1946  \"msg.sender\" */ caller())\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, /** @src 13:1917:1935  \"collateralBalances\" */ 0x02)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        if /** @src 13:1917:1958  \"collateralBalances[msg.sender] >= _amount\" */ lt(/** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ sload(keccak256(0, 64)), /** @src 13:1917:1958  \"collateralBalances[msg.sender] >= _amount\" */ value_1)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 23)\n                            mstore(add(memPtr, 68), \"Insufficient collateral\")\n                            revert(memPtr, 100)\n                        }\n                        mstore(0, /** @src 13:1936:1946  \"msg.sender\" */ caller())\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, /** @src 13:1917:1935  \"collateralBalances\" */ 0x02)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        let _3 := sload(keccak256(0, 64))\n                        if /** @src 13:2108:2134  \"_amount <= maxWithdrawable\" */ gt(value_1, /** @src 13:2022:2090  \"collateralBalances[msg.sender] - _loanRequiredCollateral(msg.sender)\" */ checked_sub_uint256(_3, /** @src 13:2055:2090  \"_loanRequiredCollateral(msg.sender)\" */ fun_loanRequiredCollateral(/** @src 13:1936:1946  \"msg.sender\" */ caller())))\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 44)\n                            mstore(add(memPtr_1, 68), \"Cannot withdraw collateral locke\")\n                            mstore(add(memPtr_1, 100), \"d for a loan\")\n                            revert(memPtr_1, 132)\n                        }\n                        mstore(0, /** @src 13:1936:1946  \"msg.sender\" */ caller())\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, /** @src 13:1917:1935  \"collateralBalances\" */ 0x02)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        let dataSlot := keccak256(0, 64)\n                        sstore(dataSlot, /** @src 13:2193:2234  \"collateralBalances[msg.sender] -= _amount\" */ checked_sub_uint256(/** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ sload(/** @src 13:2193:2234  \"collateralBalances[msg.sender] -= _amount\" */ dataSlot), value_1))\n                        /// @src 13:2244:2289  \"collateralToken.transfer(msg.sender, _amount)\"\n                        let _4 := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        /// @src 13:2244:2289  \"collateralToken.transfer(msg.sender, _amount)\"\n                        mstore(_4, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0xa9059cbb))\n                        /// @src 13:2244:2289  \"collateralToken.transfer(msg.sender, _amount)\"\n                        let _5 := call(gas(), /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ and(/** @src 13:2244:2259  \"collateralToken\" */ loadimmutable(\"1597\"), /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ sub(shl(160, 1), 1)), 0, /** @src 13:2244:2289  \"collateralToken.transfer(msg.sender, _amount)\" */ _4, sub(abi_encode_address_uint256(add(_4, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 4), /** @src 13:1936:1946  \"msg.sender\" */ caller(), /** @src 13:2244:2289  \"collateralToken.transfer(msg.sender, _amount)\" */ value_1), _4), _4, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 32)\n                        /// @src 13:2244:2289  \"collateralToken.transfer(msg.sender, _amount)\"\n                        if iszero(_5)\n                        {\n                            /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 13:2244:2289  \"collateralToken.transfer(msg.sender, _amount)\"\n                        let expr := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 0\n                        /// @src 13:2244:2289  \"collateralToken.transfer(msg.sender, _amount)\"\n                        if _5\n                        {\n                            let _6 := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 32\n                            /// @src 13:2244:2289  \"collateralToken.transfer(msg.sender, _amount)\"\n                            if gt(/** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 13:2244:2289  \"collateralToken.transfer(msg.sender, _amount)\" */ returndatasize()) { _6 := returndatasize() }\n                            finalize_allocation(_4, _6)\n                            expr := abi_decode_bool_fromMemory(_4, add(_4, _6))\n                        }\n                        /// @src 13:2304:2344  \"CollateralWithdrawn(msg.sender, _amount)\"\n                        let _7 := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        mstore(_7, value_1)\n                        /// @src 13:2304:2344  \"CollateralWithdrawn(msg.sender, _amount)\"\n                        log2(_7, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 13:2304:2344  \"CollateralWithdrawn(msg.sender, _amount)\" */ 0xc30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d, /** @src 13:1936:1946  \"msg.sender\" */ caller())\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 2:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        let _8 := sload(0)\n                        sstore(0, and(_8, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 2:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 0, 0, /** @src 2:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ and(_8, sub(shl(160, 1), 1)), 0)\n                        return(0, 0)\n                    }\n                    case 0x73b4086b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_2 := calldataload(4)\n                        let _9 := and(value_2, sub(shl(160, 1), 1))\n                        if iszero(eq(value_2, _9)) { revert(0, 0) }\n                        mstore(0, _9)\n                        mstore(32, /** @src 13:638:675  \"mapping(address => Loan) public loans\" */ 3)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        let dataSlot_1 := keccak256(0, 64)\n                        let _10 := sload(/** @src 13:638:675  \"mapping(address => Loan) public loans\" */ dataSlot_1)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        let _11 := sload(/** @src 13:638:675  \"mapping(address => Loan) public loans\" */ add(dataSlot_1, 1))\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        let value_3 := and(sload(/** @src 13:638:675  \"mapping(address => Loan) public loans\" */ add(dataSlot_1, 2)), /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 0xff)\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_uint256_uint256_bool(memPos, _10, _11, value_3), memPos))\n                    }\n                    case 0x8c803fc2 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_4 := calldataload(4)\n                        /// @src 13:2410:2466  \"require(_amount > 0, \\\"Amount must be greater than zero\\\")\"\n                        require_helper_stringliteral_335f(/** @src 13:2418:2429  \"_amount > 0\" */ iszero(iszero(value_4)))\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(0, /** @src 13:2490:2500  \"msg.sender\" */ caller())\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, /** @src 13:2484:2489  \"loans\" */ 0x03)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        if iszero(iszero(and(sload(/** @src 13:2484:2510  \"loans[msg.sender].isActive\" */ add(/** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ keccak256(0, 64), /** @src 13:2484:2510  \"loans[msg.sender].isActive\" */ 2)), /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 0xff)))\n                        {\n                            let memPtr_2 := mload(64)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, 4), 32)\n                            mstore(add(memPtr_2, 36), 34)\n                            mstore(add(memPtr_2, 68), \"Existing loan must be repaid fir\")\n                            mstore(add(memPtr_2, 100), \"st\")\n                            revert(memPtr_2, 132)\n                        }\n                        mstore(0, /** @src 13:2490:2500  \"msg.sender\" */ caller())\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, /** @src 13:2484:2510  \"loans[msg.sender].isActive\" */ 2)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        let _12 := sload(keccak256(0, 64))\n                        let _13 := sload(1)\n                        /// @src 13:2587:2636  \"collateralBalances[msg.sender] * collateralFactor\"\n                        let product := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 0\n                        product := mul(_12, _13)\n                        if iszero(or(iszero(_12), eq(_13, div(product, _12))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        if /** @src 13:2661:2679  \"_amount <= maxLoan\" */ gt(value_4, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ div(product, /** @src 13:2640:2643  \"100\" */ 0x64))\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        {\n                            let memPtr_3 := mload(64)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, 4), 32)\n                            mstore(add(memPtr_3, 36), 29)\n                            mstore(add(memPtr_3, 68), \"Loan exceeds collateral limit\")\n                            revert(memPtr_3, /** @src 13:2640:2643  \"100\" */ 0x64)\n                        }\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(0, /** @src 13:2490:2500  \"msg.sender\" */ caller())\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, /** @src 13:2484:2510  \"loans[msg.sender].isActive\" */ 2)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        let _14 := sload(keccak256(0, 64))\n                        let memPtr_4 := mload(64)\n                        finalize_allocation_6906(memPtr_4)\n                        mstore(memPtr_4, value_4)\n                        /// @src 13:2743:2872  \"Loan({...\"\n                        let _15 := add(memPtr_4, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 32)\n                        mstore(_15, _14)\n                        /// @src 13:2743:2872  \"Loan({...\"\n                        let _16 := add(memPtr_4, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 64)\n                        mstore(_16, 1)\n                        mstore(0, /** @src 13:2490:2500  \"msg.sender\" */ caller())\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, /** @src 13:2484:2489  \"loans\" */ 0x03)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        sstore(dataSlot_2, mload(memPtr_4))\n                        sstore(add(dataSlot_2, 1), mload(_15))\n                        let memberSlot := add(dataSlot_2, /** @src 13:2484:2510  \"loans[msg.sender].isActive\" */ 2)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        let cleaned := iszero(iszero(mload(_16)))\n                        let value_5 := and(sload(memberSlot), not(255))\n                        sstore(memberSlot, or(value_5, and(cleaned, 0xff)))\n                        /// @src 13:2882:2924  \"lendingToken.transfer(msg.sender, _amount)\"\n                        let _17 := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        /// @src 13:2882:2924  \"lendingToken.transfer(msg.sender, _amount)\"\n                        mstore(_17, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0xa9059cbb))\n                        /// @src 13:2882:2924  \"lendingToken.transfer(msg.sender, _amount)\"\n                        let _18 := call(gas(), /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ and(/** @src 13:2882:2894  \"lendingToken\" */ loadimmutable(\"1600\"), /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ sub(shl(160, 1), 1)), 0, /** @src 13:2882:2924  \"lendingToken.transfer(msg.sender, _amount)\" */ _17, sub(abi_encode_address_uint256(add(_17, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 4), /** @src 13:2490:2500  \"msg.sender\" */ caller(), /** @src 13:2882:2924  \"lendingToken.transfer(msg.sender, _amount)\" */ value_4), _17), _17, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 32)\n                        /// @src 13:2882:2924  \"lendingToken.transfer(msg.sender, _amount)\"\n                        if iszero(_18)\n                        {\n                            /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                            let pos_1 := mload(64)\n                            returndatacopy(pos_1, 0, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 13:2882:2924  \"lendingToken.transfer(msg.sender, _amount)\"\n                        let expr_1 := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 0\n                        /// @src 13:2882:2924  \"lendingToken.transfer(msg.sender, _amount)\"\n                        if _18\n                        {\n                            let _19 := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 32\n                            /// @src 13:2882:2924  \"lendingToken.transfer(msg.sender, _amount)\"\n                            if gt(/** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 13:2882:2924  \"lendingToken.transfer(msg.sender, _amount)\" */ returndatasize()) { _19 := returndatasize() }\n                            finalize_allocation(_17, _19)\n                            expr_1 := abi_decode_bool_fromMemory(_17, add(_17, _19))\n                        }\n                        /// @src 13:2939:2969  \"LoanTaken(msg.sender, _amount)\"\n                        let _20 := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        mstore(_20, value_4)\n                        /// @src 13:2939:2969  \"LoanTaken(msg.sender, _amount)\"\n                        log2(_20, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 13:2939:2969  \"LoanTaken(msg.sender, _amount)\" */ 0xd5c776eab9418d89c040ffee59f2310d225f5ff682191bcee59b0413a7fd4835, /** @src 13:2490:2500  \"msg.sender\" */ caller())\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_6 := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, value_6)\n                        return(memPos_1, 32)\n                    }\n                    case 0xaaaca558 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, and(/** @src 13:409:445  \"IERC20 public immutable lendingToken\" */ loadimmutable(\"1600\"), /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ sub(shl(160, 1), 1)))\n                        return(memPos_2, 32)\n                    }\n                    case 0xab7b1c89 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_7 := calldataload(4)\n                        /// @src 13:3036:3092  \"require(_amount > 0, \\\"Amount must be greater than zero\\\")\"\n                        require_helper_stringliteral_335f(/** @src 13:3044:3055  \"_amount > 0\" */ iszero(iszero(value_7)))\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(0, /** @src 13:3132:3142  \"msg.sender\" */ caller())\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, /** @src 13:3126:3131  \"loans\" */ 0x03)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        let dataSlot_3 := keccak256(0, 64)\n                        /// @src 13:3161:3178  \"userLoan.isActive\"\n                        let _21 := add(dataSlot_3, 2)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        if iszero(and(sload(/** @src 13:3161:3178  \"userLoan.isActive\" */ _21), /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 0xff))\n                        {\n                            let memPtr_5 := mload(64)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, 4), 32)\n                            mstore(add(memPtr_5, 36), 14)\n                            mstore(add(memPtr_5, 68), \"No active loan\")\n                            revert(memPtr_5, 100)\n                        }\n                        if /** @src 13:3215:3241  \"_amount <= userLoan.amount\" */ gt(value_7, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ sload(/** @src 13:3226:3241  \"userLoan.amount\" */ dataSlot_3))\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        {\n                            let memPtr_6 := mload(64)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, 4), 32)\n                            mstore(add(memPtr_6, 36), 25)\n                            mstore(add(memPtr_6, 68), \"Repay amount exceeds loan\")\n                            revert(memPtr_6, 100)\n                        }\n                        /// @src 13:3281:3342  \"lendingToken.transferFrom(msg.sender, address(this), _amount)\"\n                        let _22 := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        /// @src 13:3281:3342  \"lendingToken.transferFrom(msg.sender, address(this), _amount)\"\n                        mstore(_22, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0x23b872dd))\n                        /// @src 13:3281:3342  \"lendingToken.transferFrom(msg.sender, address(this), _amount)\"\n                        let _23 := call(gas(), /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ and(/** @src 13:3281:3293  \"lendingToken\" */ loadimmutable(\"1600\"), /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ sub(shl(160, 1), 1)), 0, /** @src 13:3281:3342  \"lendingToken.transferFrom(msg.sender, address(this), _amount)\" */ _22, sub(abi_encode_address_address_uint256(add(_22, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 4), /** @src 13:3132:3142  \"msg.sender\" */ caller(), /** @src 13:3327:3331  \"this\" */ address(), /** @src 13:3281:3342  \"lendingToken.transferFrom(msg.sender, address(this), _amount)\" */ value_7), _22), _22, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 32)\n                        /// @src 13:3281:3342  \"lendingToken.transferFrom(msg.sender, address(this), _amount)\"\n                        if iszero(_23)\n                        {\n                            /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, 0, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 13:3281:3342  \"lendingToken.transferFrom(msg.sender, address(this), _amount)\"\n                        let expr_2 := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 0\n                        /// @src 13:3281:3342  \"lendingToken.transferFrom(msg.sender, address(this), _amount)\"\n                        if _23\n                        {\n                            let _24 := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 32\n                            /// @src 13:3281:3342  \"lendingToken.transferFrom(msg.sender, address(this), _amount)\"\n                            if gt(/** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 13:3281:3342  \"lendingToken.transferFrom(msg.sender, address(this), _amount)\" */ returndatasize()) { _24 := returndatasize() }\n                            finalize_allocation(_22, _24)\n                            expr_2 := abi_decode_bool_fromMemory(_22, add(_22, _24))\n                        }\n                        /// @src 13:3352:3378  \"userLoan.amount -= _amount\"\n                        let _25 := checked_sub_uint256(/** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ sload(/** @src 13:3352:3378  \"userLoan.amount -= _amount\" */ dataSlot_3), value_7)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        sstore(dataSlot_3, _25)\n                        /// @src 13:3388:3464  \"if (userLoan.amount == 0) {...\"\n                        if /** @src 13:3392:3412  \"userLoan.amount == 0\" */ iszero(_25)\n                        /// @src 13:3388:3464  \"if (userLoan.amount == 0) {...\"\n                        {\n                            /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                            sstore(_21, and(sload(_21), not(255)))\n                        }\n                        /// @src 13:3478:3509  \"LoanRepaid(msg.sender, _amount)\"\n                        let _26 := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        mstore(_26, value_7)\n                        /// @src 13:3478:3509  \"LoanRepaid(msg.sender, _amount)\"\n                        log2(_26, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 13:3478:3509  \"LoanRepaid(msg.sender, _amount)\" */ 0xc200a1f31dd659e356e0f112c82558e25f49f7b0f84438691cd96f5cb3558823, /** @src 13:3132:3142  \"msg.sender\" */ caller())\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xb2016bd4 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, and(/** @src 13:364:403  \"IERC20 public immutable collateralToken\" */ loadimmutable(\"1597\"), /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ sub(shl(160, 1), 1)))\n                        return(memPos_3, 32)\n                    }\n                    case 0xb5c22157 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_8 := calldataload(4)\n                        /// @src 2:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        if /** @src 13:1363:1380  \"_newFactor <= 100\" */ gt(value_8, /** @src 13:1377:1380  \"100\" */ 0x64)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        {\n                            let memPtr_7 := mload(64)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, 4), 32)\n                            mstore(add(memPtr_7, 36), 32)\n                            mstore(add(memPtr_7, 68), \"Collateral factor must be <= 100\")\n                            revert(memPtr_7, /** @src 13:1377:1380  \"100\" */ 0x64)\n                        }\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        sstore(1, value_8)\n                        return(0, 0)\n                    }\n                    case 0xbad4a01f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_9 := calldataload(4)\n                        /// @src 13:1531:1587  \"require(_amount > 0, \\\"Amount must be greater than zero\\\")\"\n                        require_helper_stringliteral_335f(/** @src 13:1539:1550  \"_amount > 0\" */ iszero(iszero(value_9)))\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(0, /** @src 13:1616:1626  \"msg.sender\" */ caller())\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, /** @src 13:1597:1615  \"collateralBalances\" */ 0x02)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        let dataSlot_4 := keccak256(0, 64)\n                        let _27 := sload(/** @src 13:1597:1638  \"collateralBalances[msg.sender] += _amount\" */ dataSlot_4)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        let sum := add(_27, value_9)\n                        if gt(_27, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        sstore(dataSlot_4, sum)\n                        /// @src 13:1648:1712  \"collateralToken.transferFrom(msg.sender, address(this), _amount)\"\n                        let _28 := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        /// @src 13:1648:1712  \"collateralToken.transferFrom(msg.sender, address(this), _amount)\"\n                        mstore(_28, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0x23b872dd))\n                        /// @src 13:1648:1712  \"collateralToken.transferFrom(msg.sender, address(this), _amount)\"\n                        let _29 := call(gas(), /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ and(/** @src 13:1648:1663  \"collateralToken\" */ loadimmutable(\"1597\"), /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ sub(shl(160, 1), 1)), 0, /** @src 13:1648:1712  \"collateralToken.transferFrom(msg.sender, address(this), _amount)\" */ _28, sub(abi_encode_address_address_uint256(add(_28, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 4), /** @src 13:1616:1626  \"msg.sender\" */ caller(), /** @src 13:1697:1701  \"this\" */ address(), /** @src 13:1648:1712  \"collateralToken.transferFrom(msg.sender, address(this), _amount)\" */ value_9), _28), _28, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 32)\n                        /// @src 13:1648:1712  \"collateralToken.transferFrom(msg.sender, address(this), _amount)\"\n                        if iszero(_29)\n                        {\n                            /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                            let pos_3 := mload(64)\n                            returndatacopy(pos_3, 0, returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 13:1648:1712  \"collateralToken.transferFrom(msg.sender, address(this), _amount)\"\n                        let expr_3 := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 0\n                        /// @src 13:1648:1712  \"collateralToken.transferFrom(msg.sender, address(this), _amount)\"\n                        if _29\n                        {\n                            let _30 := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 32\n                            /// @src 13:1648:1712  \"collateralToken.transferFrom(msg.sender, address(this), _amount)\"\n                            if gt(/** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 13:1648:1712  \"collateralToken.transferFrom(msg.sender, address(this), _amount)\" */ returndatasize()) { _30 := returndatasize() }\n                            finalize_allocation(_28, _30)\n                            expr_3 := abi_decode_bool_fromMemory(_28, add(_28, _30))\n                        }\n                        /// @src 13:1727:1767  \"CollateralDeposited(msg.sender, _amount)\"\n                        let _31 := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        mstore(_31, value_9)\n                        /// @src 13:1727:1767  \"CollateralDeposited(msg.sender, _amount)\"\n                        log2(_31, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 13:1727:1767  \"CollateralDeposited(msg.sender, _amount)\" */ 0xd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142, /** @src 13:1616:1626  \"msg.sender\" */ caller())\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xdf011c41 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _32 := sload(/** @src 13:451:482  \"uint256 public collateralFactor\" */ 1)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, _32)\n                        return(memPos_4, 32)\n                    }\n                    case 0xe8a7da8e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_10 := calldataload(4)\n                        let _33 := and(value_10, sub(shl(160, 1), 1))\n                        if iszero(eq(value_10, _33)) { revert(0, 0) }\n                        mstore(0, _33)\n                        mstore(32, /** @src 13:3905:3910  \"loans\" */ 0x03)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        let dataSlot_5 := keccak256(0, 64)\n                        let memPtr_8 := mload(64)\n                        finalize_allocation_6906(memPtr_8)\n                        let _34 := sload(dataSlot_5)\n                        mstore(memPtr_8, _34)\n                        let _35 := sload(add(dataSlot_5, 1))\n                        mstore(add(memPtr_8, 32), _35)\n                        let _36 := iszero(iszero(and(sload(add(dataSlot_5, 2)), 0xff)))\n                        mstore(add(memPtr_8, 64), _36)\n                        let memPos_5 := mload(64)\n                        return(memPos_5, sub(abi_encode_uint256_uint256_bool(memPos_5, _34, _35, _36), memPos_5))\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_11 := calldataload(4)\n                        let _37 := and(value_11, sub(shl(160, 1), 1))\n                        if iszero(eq(value_11, _37)) { revert(0, 0) }\n                        /// @src 2:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 2:2623:2714  \"if (newOwner == address(0)) {...\"\n                        if /** @src 2:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ _37)\n                        /// @src 2:2623:2714  \"if (newOwner == address(0)) {...\"\n                        {\n                            /// @src 2:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            mstore(/** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 0, /** @src 2:2672:2703  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                            /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                            mstore(4, 0)\n                            /// @src 2:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            revert(/** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 0, 36)\n                        }\n                        let _38 := sload(0)\n                        sstore(0, or(and(_38, shl(160, 0xffffffffffffffffffffffff)), _37))\n                        /// @src 2:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 0, 0, /** @src 2:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ and(_38, sub(shl(160, 1), 1)), /** @src 2:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _37)\n                        /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_uint256_uint256_bool(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), iszero(iszero(value2)))\n            }\n            function require_helper_stringliteral_335f(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Amount must be greater than zero\")\n                    revert(memPtr, 100)\n                }\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function finalize_allocation_6906(memPtr)\n            {\n                let newFreePtr := add(memPtr, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, iszero(iszero(value))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                value0 := value\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            function abi_encode_address_address_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 64), value2)\n            }\n            /// @ast-id 1961 @src 13:3521:3754  \"function _loanRequiredCollateral(address _user) internal view returns (uint256) {...\"\n            function fun_loanRequiredCollateral(var_user) -> var\n            {\n                /// @src 13:3592:3599  \"uint256\"\n                var := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 0\n                mstore(0, and(var_user, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 13:3634:3639  \"loans\" */ 0x03)\n                /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                let dataSlot := keccak256(0, 0x40)\n                let memPtr := mload(0x40)\n                finalize_allocation_6906(memPtr)\n                let _1 := sload(dataSlot)\n                mstore(memPtr, _1)\n                mstore(add(memPtr, 0x20), sload(add(dataSlot, 1)))\n                let _2 := iszero(and(sload(add(dataSlot, 2)), 0xff))\n                mstore(add(memPtr, 0x40), iszero(_2))\n                /// @src 13:3656:3688  \"if (!userLoan.isActive) return 0\"\n                if /** @src 13:3660:3678  \"!userLoan.isActive\" */ _2\n                /// @src 13:3656:3688  \"if (!userLoan.isActive) return 0\"\n                {\n                    /// @src 13:3680:3688  \"return 0\"\n                    var := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 0\n                    /// @src 13:3680:3688  \"return 0\"\n                    leave\n                }\n                /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                let product := mul(_1, /** @src 13:3724:3727  \"100\" */ 0x64)\n                /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                if iszero(or(iszero(_1), eq(/** @src 13:3724:3727  \"100\" */ 0x64, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ div(product, _1))))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                let _3 := sload(1)\n                /// @src 13:3705:3747  \"(userLoan.amount * 100) / collateralFactor\"\n                let r := /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 0\n                if iszero(_3)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x12)\n                    revert(0, 0x24)\n                }\n                r := div(product, _3)\n                /// @src 13:3698:3747  \"return (userLoan.amount * 100) / collateralFactor\"\n                var := r\n            }\n            /// @ast-id 463 @src 2:1796:1958  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                let value := and(sload(/** @src 2:1710:1716  \"_owner\" */ 0x00), /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ sub(shl(160, 1), 1))\n                /// @src 2:1851:1952  \"if (owner() != _msgSender()) {...\"\n                if /** @src 2:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ value, /** @src 8:735:745  \"msg.sender\" */ caller()))\n                /// @src 2:1851:1952  \"if (owner() != _msgSender()) {...\"\n                {\n                    /// @src 2:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    mstore(/** @src 2:1710:1716  \"_owner\" */ 0x00, /** @src 2:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ shl(224, 0x118cdaa7))\n                    /// @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\"\n                    mstore(/** @src 2:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ 4, /** @src 8:735:745  \"msg.sender\" */ caller())\n                    /// @src 2:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    revert(/** @src 2:1710:1716  \"_owner\" */ 0x00, /** @src 13:167:4000  \"contract LendingBorrowing is Ownable {...\" */ 36)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220ad368b65ea3574cd2fe1ac4f58786b651ad30bd932e04e5b9c55998fec9d79ed64736f6c634300081a0033\"\n    }\n}\n",
          "hash": "1ad6e5a2980bd914bd204ed835a867a65ec5810a74a1e0902b59e8d0be5e8385",
          "factoryDependencies": {}
        }
      },
      "contracts/Lock.sol": {
        "Lock": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_unlockTime",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "when",
                  "type": "uint256"
                }
              ],
              "name": "Withdrawal",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unlockTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lock.sol\":\"Lock\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Lock.sol\":{\"keccak256\":\"0x90886bc79fcc372355d5e9499eab125d32bb60f39735656bf9e3bdd4e8216ef6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://846d6bff59492ec50978f2095c558edfabbfc2657ff81cadc9c74bc4bb483592\",\"dweb:/ipfs/QmYgrWkGBnpbZwHwpApLMCxkcTc76QvYk5hq6taFEftEgn\"]}},\"version\":1}",
            "solc_version": "0.8.26+commit.8a97fa7a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 104/65696 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 1263\n// Code size = 4119 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x20070]\n     5: jump @33 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x300a0\n    14: i32 a0 = a0 + 0\n    16: ecalli 12 // 'set_immutable_data'\n    18: jump @33\n      : @2 (gas: 8)\n    21: sp = sp + 0xfffffffffffffff0\n    24: u64 [sp + 0x8] = ra\n    27: u64 [sp] = s0\n    29: a2 = a1\n    31: s0 = a0\n    33: a1 = 0x20\n    36: a0 = a2\n    38: ra = 2, jump @9\n      : @3 [@dyn 1] (gas: 100)\n    43: a1 = u8 [a0 + 0x1]\n    46: a2 = u8 [a0]\n    48: a3 = u8 [a0 + 0x2]\n    51: a4 = u8 [a0 + 0x3]\n    54: a1 = a1 << 0x8\n    57: a1 = a1 | a2\n    60: a3 = a3 << 0x10\n    63: a4 = a4 << 0x18\n    66: a3 = a3 | a4\n    69: a1 = a1 | a3\n    72: a2 = u8 [a0 + 0x5]\n    75: a3 = u8 [a0 + 0x4]\n    78: a4 = u8 [a0 + 0x6]\n    81: a5 = u8 [a0 + 0x7]\n    84: a2 = a2 << 0x8\n    87: a2 = a2 | a3\n    90: a4 = a4 << 0x10\n    93: a5 = a5 << 0x18\n    96: a4 = a4 | a5\n    99: a2 = a2 | a4\n   102: a2 = a2 << 0x20\n   105: t0 = a2 | a1\n   108: a2 = u8 [a0 + 0x9]\n   111: a3 = u8 [a0 + 0x8]\n   114: a4 = u8 [a0 + 0xa]\n   117: a5 = u8 [a0 + 0xb]\n   120: a2 = a2 << 0x8\n   123: a2 = a2 | a3\n   126: a4 = a4 << 0x10\n   129: a5 = a5 << 0x18\n   132: a4 = a4 | a5\n   135: a2 = a2 | a4\n   138: a3 = u8 [a0 + 0xd]\n   141: a4 = u8 [a0 + 0xc]\n   144: a5 = u8 [a0 + 0xe]\n   147: a1 = u8 [a0 + 0xf]\n   150: a3 = a3 << 0x8\n   153: a3 = a3 | a4\n   156: a5 = a5 << 0x10\n   159: a1 = a1 << 0x18\n   162: a1 = a1 | a5\n   165: a1 = a1 | a3\n   168: a1 = a1 << 0x20\n   171: t1 = a1 | a2\n   174: a1 = u8 [a0 + 0x11]\n   177: a3 = u8 [a0 + 0x10]\n   180: a4 = u8 [a0 + 0x12]\n   183: a5 = u8 [a0 + 0x13]\n   186: a1 = a1 << 0x8\n   189: a1 = a1 | a3\n   192: a4 = a4 << 0x10\n   195: a5 = a5 << 0x18\n   198: a4 = a4 | a5\n   201: a1 = a1 | a4\n   204: a3 = u8 [a0 + 0x15]\n   207: a4 = u8 [a0 + 0x14]\n   210: a5 = u8 [a0 + 0x16]\n   213: a2 = u8 [a0 + 0x17]\n   216: a3 = a3 << 0x8\n   219: a3 = a3 | a4\n   222: a5 = a5 << 0x10\n   225: a2 = a2 << 0x18\n   228: a2 = a2 | a5\n   231: a2 = a2 | a3\n   234: a2 = a2 << 0x20\n   237: a3 = a2 | a1\n   240: a1 = u8 [a0 + 0x19]\n   243: a2 = u8 [a0 + 0x18]\n   246: a4 = u8 [a0 + 0x1a]\n   249: a5 = u8 [a0 + 0x1b]\n   252: a1 = a1 << 0x8\n   255: a1 = a1 | a2\n   258: a4 = a4 << 0x10\n   261: a5 = a5 << 0x18\n   264: a4 = a4 | a5\n   267: a1 = a1 | a4\n   270: a2 = u8 [a0 + 0x1d]\n   273: a4 = u8 [a0 + 0x1c]\n   276: a5 = u8 [a0 + 0x1e]\n   279: a0 = u8 [a0 + 0x1f]\n   282: a2 = a2 << 0x8\n   285: a2 = a2 | a4\n   288: a5 = a5 << 0x10\n   291: a0 = a0 << 0x18\n   294: a0 = a0 | a5\n   297: a0 = a0 | a2\n   300: a0 = a0 << 0x20\n   303: a0 = a0 | a1\n   306: a0 = reverse a0\n   308: a1 = reverse a3\n   310: a2 = reverse t1\n   312: a3 = reverse t0\n   314: u64 [s0 + 0x18] = a3\n   317: u64 [s0 + 0x10] = a2\n   320: u64 [s0 + 0x8] = a1\n   323: u64 [s0] = a0\n   325: ra = u64 [sp + 0x8]\n   328: s0 = u64 [sp]\n   330: sp = sp + 0x10\n   333: ret\n      : @4 (gas: 12)\n   335: sp = sp + 0xffffffffffffffd8\n   338: u64 [sp + 0x20] = ra\n   341: u64 [sp + 0x18] = s0\n   344: u64 [sp + 0x10] = s1\n   347: a2 = u64 [a1]\n   349: u64 [sp + 0x8] = a2\n   352: a2 = u64 [a1 + 0x8]\n   355: u64 [sp] = a2\n   357: s0 = u64 [a1 + 0x10]\n   360: s1 = u64 [a1 + 0x18]\n   363: a1 = 0x20\n   366: ra = 4, jump @9\n      : @5 [@dyn 2] (gas: 71)\n   371: a1 = reverse s1\n   373: a2 = reverse s0\n   375: a3 = u64 [sp]\n   377: a3 = reverse a3\n   379: a4 = u64 [sp + 0x8]\n   382: a4 = reverse a4\n   384: u8 [a0 + 0x18] = a4\n   387: u8 [a0 + 0x10] = a3\n   390: u8 [a0 + 0x8] = a2\n   393: u8 [a0] = a1\n   395: a5 = a4 >> 0x38\n   398: u8 [a0 + 0x1f] = a5\n   401: a5 = a4 >> 0x30\n   404: u8 [a0 + 0x1e] = a5\n   407: a5 = a4 >> 0x28\n   410: u8 [a0 + 0x1d] = a5\n   413: a5 = a4 >> 0x20\n   416: u8 [a0 + 0x1c] = a5\n   419: a5 = a4 >> 0x18\n   422: u8 [a0 + 0x1b] = a5\n   425: a5 = a4 >> 0x10\n   428: u8 [a0 + 0x1a] = a5\n   431: a4 = a4 >> 0x8\n   434: u8 [a0 + 0x19] = a4\n   437: a4 = a3 >> 0x38\n   440: u8 [a0 + 0x17] = a4\n   443: a4 = a3 >> 0x30\n   446: u8 [a0 + 0x16] = a4\n   449: a4 = a3 >> 0x28\n   452: u8 [a0 + 0x15] = a4\n   455: a4 = a3 >> 0x20\n   458: u8 [a0 + 0x14] = a4\n   461: a4 = a3 >> 0x18\n   464: u8 [a0 + 0x13] = a4\n   467: a4 = a3 >> 0x10\n   470: u8 [a0 + 0x12] = a4\n   473: a3 = a3 >> 0x8\n   476: u8 [a0 + 0x11] = a3\n   479: a3 = a2 >> 0x38\n   482: u8 [a0 + 0xf] = a3\n   485: a3 = a2 >> 0x30\n   488: u8 [a0 + 0xe] = a3\n   491: a3 = a2 >> 0x28\n   494: u8 [a0 + 0xd] = a3\n   497: a3 = a2 >> 0x20\n   500: u8 [a0 + 0xc] = a3\n   503: a3 = a2 >> 0x18\n   506: u8 [a0 + 0xb] = a3\n   509: a3 = a2 >> 0x10\n   512: u8 [a0 + 0xa] = a3\n   515: a2 = a2 >> 0x8\n   518: u8 [a0 + 0x9] = a2\n   521: a2 = a1 >> 0x38\n   524: u8 [a0 + 0x7] = a2\n   527: a2 = a1 >> 0x30\n   530: u8 [a0 + 0x6] = a2\n   533: a2 = a1 >> 0x28\n   536: u8 [a0 + 0x5] = a2\n   539: a2 = a1 >> 0x20\n   542: u8 [a0 + 0x4] = a2\n   545: a2 = a1 >> 0x18\n   548: u8 [a0 + 0x3] = a2\n   551: a2 = a1 >> 0x10\n   554: u8 [a0 + 0x2] = a2\n   557: a1 = a1 >> 0x8\n   560: u8 [a0 + 0x1] = a1\n   563: ra = u64 [sp + 0x20]\n   566: s0 = u64 [sp + 0x18]\n   569: s1 = u64 [sp + 0x10]\n   572: sp = sp + 0x28\n   575: ret\n      : @6 (gas: 48)\n   577: sp = sp + 0xffffffffffffffa0\n   580: u64 [sp + 0x58] = ra\n   583: u64 [sp + 0x50] = s0\n   586: u64 [sp + 0x48] = s1\n   589: s0 = sp + 0x60\n   592: sp = sp & 0xffffffffffffffe0\n   595: s1 = a0\n   597: a0 = u64 [a1 + 0x18]\n   600: a2 = u64 [a1 + 0x10]\n   603: a3 = u64 [a1 + 0x8]\n   606: a1 = u64 [a1]\n   608: a0 = reverse a0\n   610: a2 = reverse a2\n   612: a3 = reverse a3\n   614: a1 = reverse a1\n   616: u64 [sp + 0x18] = a1\n   619: u64 [sp + 0x10] = a3\n   622: u64 [sp + 0x8] = a2\n   625: u64 [sp] = a0\n   627: u64 [sp + 56] = 0\n   630: u64 [sp + 48] = 0\n   633: u64 [sp + 40] = 0\n   636: u64 [sp + 32] = 0\n   639: u32 [sp + 64] = 0x20\n   643: i32 a1 = sp + 0\n   645: i32 a3 = sp + 0x20\n   648: i32 a4 = sp + 0x40\n   651: a2 = 0xffffffffffffffff\n   654: a0 = 0\n   656: ecalli 7 // 'get_storage'\n   658: a0 = u64 [sp + 0x38]\n   661: a1 = u64 [sp + 0x30]\n   664: a2 = u64 [sp + 0x28]\n   667: a3 = u64 [sp + 0x20]\n   670: a0 = reverse a0\n   672: a1 = reverse a1\n   674: a2 = reverse a2\n   676: a3 = reverse a3\n   678: u64 [s1 + 0x18] = a3\n   681: u64 [s1 + 0x10] = a2\n   684: u64 [s1 + 0x8] = a1\n   687: u64 [s1] = a0\n   689: sp = s0 + 0xffffffffffffffa0\n   692: ra = u64 [sp + 0x58]\n   695: s0 = u64 [sp + 0x50]\n   698: s1 = u64 [sp + 0x48]\n   701: sp = sp + 0x60\n   704: ret\n      : @7 (gas: 40)\n   706: sp = sp + 0xffffffffffffffa0\n   709: u64 [sp + 0x58] = ra\n   712: u64 [sp + 0x50] = s0\n   715: s0 = sp + 0x60\n   718: sp = sp & 0xffffffffffffffe0\n   721: t0 = u64 [a0]\n   723: a3 = u64 [a0 + 0x8]\n   726: a4 = u64 [a0 + 0x10]\n   729: a0 = u64 [a0 + 0x18]\n   732: t1 = u64 [a1]\n   734: a2 = u64 [a1 + 0x8]\n   737: a5 = u64 [a1 + 0x10]\n   740: a1 = u64 [a1 + 0x18]\n   743: t2 = reverse a0\n   745: a4 = reverse a4\n   747: a3 = reverse a3\n   749: a0 = reverse t0\n   751: t0 = reverse a1\n   753: a5 = reverse a5\n   755: a2 = reverse a2\n   757: a1 = reverse t1\n   759: u64 [sp + 0x18] = a0\n   762: u64 [sp + 0x10] = a3\n   765: u64 [sp + 0x8] = a4\n   768: u64 [sp] = t2\n   770: u64 [sp + 0x38] = a1\n   773: u64 [sp + 0x30] = a2\n   776: u64 [sp + 0x28] = a5\n   779: u64 [sp + 0x20] = t0\n   782: i32 a1 = sp + 0\n   784: i32 a3 = sp + 0x20\n   787: a2 = 0xffffffffffffffff\n   790: a4 = 0x20\n   793: a0 = 0\n   795: ecalli 13 // 'set_storage'\n   797: sp = s0 + 0xffffffffffffffa0\n   800: ra = u64 [sp + 0x58]\n   803: s0 = u64 [sp + 0x50]\n   806: sp = sp + 0x60\n   809: ret\n      : @8 [@dyn 3] (gas: 23)\n   811: a1 = u64 [sp]\n   813: a1 = reverse a1\n   815: a2 = u64 [sp + 0x8]\n   818: a2 = reverse a2\n   820: a3 = u64 [sp + 0x10]\n   823: a3 = reverse a3\n   825: a4 = u64 [sp + 0x18]\n   828: a4 = reverse a4\n   830: u64 [sp + 0x38] = a4\n   833: u64 [sp + 0x30] = a3\n   836: u64 [sp + 0x28] = a2\n   839: u64 [sp + 0x20] = a1\n   842: i32 a2 = a0 + 0\n   844: i32 a3 = s1 + 0\n   846: i32 a0 = sp + 0x20\n   849: a1 = 0x1\n   852: ecalli 6 // 'deposit_event'\n   854: sp = s0 + 0xffffffffffffffa0\n   857: ra = u64 [sp + 0x58]\n   860: s0 = u64 [sp + 0x50]\n   863: s1 = u64 [sp + 0x48]\n   866: sp = sp + 0x60\n   869: ret\n      : @9 (gas: 2)\n   871: i32 a2 = a0 >> 0x10\n   874: jump @14 if a2 != 0\n      : @10 (gas: 4)\n   877: a1 = a1 + a0\n   880: i32 a1 = a1 + 0x1f\n   883: a1 = a1 & 0xffffffffffffffe0\n   886: jump @14 if a1 >u 65536\n      : @11 (gas: 3)\n   892: a2 = 0x2006c\n   897: a3 = i32 [0x2006c]\n   902: jump @13 if a3 >=u a1\n      : @12 (gas: 2)\n   905: u32 [0x2006c] = a1\n   910: fallthrough\n      : @13 (gas: 4)\n   911: a1 = 0x20080\n   916: i32 a0 = a0 + 0\n   918: a0 = a0 + a1\n   921: ret\n      : @14 (gas: 1)\n   923: trap\n      : @15 (gas: 6)\n   924: sp = sp + 0xfffffffffffffff0\n   927: u64 [sp + 0x8] = ra\n   930: u64 [sp] = s0\n   932: s0 = a0 & 0x1\n   935: ecalli 4 // 'call_data_size'\n   937: fallthrough\n      : @16 (gas: 2)\n   938: u32 [0x20068] = a0\n   943: jump @18 if s0 == 0\n      : @17 (gas: 1)\n   946: ra = 8, jump @19\n      : @18 [@dyn 4] (gas: 1)\n   950: ra = 10, jump @50\n      : @19 [@dyn 5] (gas: 25)\n   955: sp = sp + 0xfffffffffffffdc0\n   959: a0 = sp + 0x200\n   963: u64 [a0 + 0x38] = ra\n   966: u64 [a0 + 0x30] = s0\n   969: u64 [a0 + 0x28] = s1\n   972: s0 = sp + 0x240\n   976: sp = sp & 0xffffffffffffffe0\n   979: s1 = sp\n   981: a0 = i32 [0x20068]\n   986: u64 [s1 + 0x38] = a0\n   989: a0 = a0 << 0x20\n   992: a0 = a0 >> 0x20\n   995: a0 = a0 + 0x1f\n   998: a0 = a0 & 0xffffffffffffffe0\n  1001: a1 = a0 + 0x80\n  1005: a0 = a1 <u a0\n  1008: a2 = s1 + 0x100\n  1012: u64 [a2 + 0x60] = a1\n  1015: u64 [a2 + 0x68] = a0\n  1018: a0 = 0 if a0 != 0\n  1020: u64 [a2 + 0x70] = a0\n  1023: a0 = 0x40\n  1026: a1 = s1 + 0x160\n  1030: u64 [s1 + 376] = 0\n  1034: ra = 12, jump @4\n      : @20 [@dyn 6] (gas: 3)\n  1039: a0 = 0x80\n  1043: a1 = u64 [s1 + 0x38]\n  1046: ra = 14, jump @9\n      : @21 [@dyn 7] (gas: 5)\n  1051: i32 a0 = a0 + 0\n  1053: a1 = u64 [s1 + 0x38]\n  1056: a2 = 0\n  1058: ecalli 2 // 'call_data_copy'\n  1060: fallthrough\n      : @22 (gas: 2)\n  1061: a1 = u64 [s1 + 0x38]\n  1064: jump @46 if a1 <=u 31\n      : @23 (gas: 7)\n  1069: a0 = sp + 0xffffffffffffffe0\n  1072: a0 = a0 & 0xffffffffffffffe0\n  1075: u64 [s1 + 0x38] = a0\n  1078: sp = a0\n  1080: a0 = s1 + 0x140\n  1084: a1 = 0x80\n  1088: ra = 16, jump @2\n      : @24 [@dyn 8] (gas: 16)\n  1093: a0 = u64 [s1 + 0x150]\n  1097: u64 [s1 + 0x28] = a0\n  1100: a4 = u64 [s1 + 0x158]\n  1104: u64 [s1 + 0x18] = a4\n  1107: a1 = u64 [s1 + 0x140]\n  1111: u64 [s1 + 0x30] = a1\n  1114: a2 = u64 [s1 + 0x148]\n  1118: u64 [s1 + 0x20] = a2\n  1121: a3 = u64 [s1 + 0x38]\n  1124: u64 [a3 + 0x10] = a0\n  1127: u64 [a3 + 0x18] = a4\n  1130: u64 [a3] = a1\n  1132: u64 [a3 + 0x8] = a2\n  1135: i32 a0 = s1 + 0x180\n  1139: ecalli 8 // 'now'\n  1141: fallthrough\n      : @25 (gas: 21)\n  1142: a1 = s1 + 0x100\n  1146: a0 = u64 [a1 + 0x98]\n  1150: t0 = u64 [s1 + 0x180]\n  1154: a2 = u64 [a1 + 0x90]\n  1158: a3 = u64 [a1 + 0x88]\n  1162: a1 = u64 [s1 + 0x18]\n  1165: a4 = a0 ^ a1\n  1168: a1 = a0 <u a1\n  1171: a0 = u64 [s1 + 0x28]\n  1174: a5 = a2 <u a0\n  1177: a5 = a1 if a4 != 0\n  1180: a1 = u64 [s1 + 0x20]\n  1183: t1 = a3 ^ a1\n  1186: a3 = a3 <u a1\n  1189: a1 = u64 [s1 + 0x30]\n  1192: a1 = t0 <u a1\n  1195: a1 = a3 if t1 != 0\n  1198: a0 = a0 ^ a2\n  1201: a0 = a0 | a4\n  1204: a1 = a5 if a0 != 0\n  1207: jump @35 if a1 == 0\n      : @26 (gas: 7)\n  1211: u64 [s1 + 440] = 0\n  1215: u64 [s1 + 432] = 0\n  1219: u64 [s1 + 424] = 0\n  1223: u64 [s1 + 416] = 0\n  1227: a0 = s1 + 0x1a0\n  1231: a1 = u64 [s1 + 0x38]\n  1234: ra = 18, jump @7\n      : @27 [@dyn 9] (gas: 28)\n  1239: a0 = 0x30080\n  1244: u64 [s1 + 0x38] = a0\n  1247: i32 a0 = a0 + 0\n  1249: ecalli 5 // 'caller'\n  1251: a2 = u64 [s1 + 0x38]\n  1254: a0 = u64 [a2 + 0x8]\n  1257: a1 = i32 [a2 + 0x10]\n  1260: a2 = u64 [a2]\n  1262: a0 = reverse a0\n  1264: a3 = a0 << 0x20\n  1267: a1 = reverse a1\n  1269: a1 = a1 >> 0x20\n  1272: a1 = a1 | a3\n  1275: u64 [s1 + 0x38] = a1\n  1278: a0 = a0 >> 0x20\n  1281: a1 = reverse a2\n  1283: a2 = a1 << 0x20\n  1286: a0 = a0 | a2\n  1289: u64 [s1 + 0x30] = a0\n  1292: a1 = a1 >> 0x20\n  1295: u64 [s1 + 0x28] = a1\n  1298: u64 [s1 + 472] = 0\n  1302: u64 [s1 + 464] = 0\n  1306: u64 [s1 + 456] = 0\n  1310: u64 [s1 + 448] = 0x1\n  1315: a0 = s1 + 0x60\n  1318: a1 = s1 + 0x1c0\n  1322: ra = 20, jump @6\n      : @28 [@dyn 10] (gas: 19)\n  1327: a0 = u32 [s1 + 0x74]\n  1330: a0 = a0 << 0x20\n  1333: a1 = u64 [s1 + 0x78]\n  1336: a2 = u64 [s1 + 0x28]\n  1339: a0 = a0 | a2\n  1342: u64 [s1 + 504] = 0\n  1346: u64 [s1 + 496] = 0\n  1350: u64 [s1 + 488] = 0\n  1354: u64 [s1 + 480] = 0x1\n  1359: a2 = s1 + 0x200\n  1363: u64 [a2 + 0x18] = a1\n  1366: a1 = u64 [s1 + 0x30]\n  1369: u64 [a2 + 0x8] = a1\n  1372: a1 = u64 [s1 + 0x38]\n  1375: u64 [a2] = a1\n  1377: u64 [a2 + 0x10] = a0\n  1380: a0 = s1 + 0x1e0\n  1384: a1 = s1 + 0x200\n  1388: ra = 22, jump @7\n      : @29 [@dyn 11] (gas: 3)\n  1393: a0 = s1 + 0x40\n  1396: a1 = 0x40\n  1399: ra = 24, jump @2\n      : @30 [@dyn 12] (gas: 12)\n  1404: a3 = u64 [s1 + 0x58]\n  1407: a1 = u64 [s1 + 0x50]\n  1410: a2 = u64 [s1 + 0x48]\n  1413: a0 = u64 [s1 + 0x40]\n  1416: a3 = a3 | a2\n  1419: a2 = a0 | a1\n  1422: a2 = a2 | a3\n  1425: a2 = a2 >> 0x20\n  1428: a1 = a1 | a3\n  1431: a1 = a1 << 0x20\n  1434: a1 = a1 | a2\n  1437: jump @45 if a1 != 0\n      : @31 (gas: 2)\n  1441: u64 [s1 + 0x38] = a0\n  1444: ra = 26, jump @9\n      : @32 [@dyn 13] (gas: 5)\n  1449: i32 a0 = a0 + 0\n  1451: a1 = 0\n  1453: a2 = 0\n  1455: ecalli 2 // 'call_data_copy'\n  1457: jump @0\n      : @33 (gas: 3)\n  1460: a0 = u64 [s1 + 0x38]\n  1463: a1 = 0\n  1465: ra = 28, jump @9\n      : @34 [@dyn 14] (gas: 5)\n  1470: i32 a1 = a0 + 0\n  1472: a0 = 0\n  1474: a2 = 0\n  1476: ecalli 11 // 'seal_return'\n  1478: jump @47\n      : @35 (gas: 3)\n  1481: a0 = s1 + 0x120\n  1485: a1 = 0x40\n  1488: ra = 30, jump @2\n      : @36 [@dyn 15] (gas: 13)\n  1493: a1 = s1 + 0x100\n  1497: a4 = u64 [a1 + 0x38]\n  1500: a5 = u64 [a1 + 0x30]\n  1503: a3 = u64 [a1 + 0x28]\n  1506: a0 = u64 [a1 + 0x20]\n  1509: a2 = a3 | a4\n  1512: a1 = a0 | a5\n  1515: a1 = a1 | a2\n  1518: a1 = a1 >> 0x20\n  1521: a2 = a2 | a5\n  1524: a2 = a2 << 0x20\n  1527: a1 = a1 | a2\n  1530: jump @45 if a1 != 0\n      : @37 (gas: 11)\n  1534: u64 [s1 + 272] = 0\n  1538: u64 [s1 + 264] = 0\n  1542: u64 [s1 + 256] = 0\n  1546: a2 = 0x8c379a000000000\n  1556: a1 = s1 + 0x100\n  1560: u64 [s1 + 0x118] = a2\n  1564: u64 [s1 + 0x38] = a0\n  1567: u64 [s1 + 0x30] = a3\n  1570: u64 [s1 + 0x28] = a4\n  1573: u64 [s1 + 0x20] = a5\n  1576: ra = 32, jump @4\n      : @38 [@dyn 16] (gas: 11)\n  1581: a1 = u64 [s1 + 0x38]\n  1584: a0 = u64 [s1 + 0x28]\n  1587: a3 = u64 [s1 + 0x20]\n  1590: a3 = a3 | a0\n  1593: a4 = 0x100000000\n  1603: a0 = 0xfffffffc\n  1613: a0 = a1 <u a0\n  1616: a2 = u64 [s1 + 0x30]\n  1619: a0 = 0 if a2 != 0\n  1621: a0 = 0 if a3 != 0\n  1623: jump @45 if a0 == 0\n      : @39 (gas: 9)\n  1627: i32 a0 = a1 + 0x4\n  1630: u64 [s1 + 248] = 0\n  1634: u64 [s1 + 240] = 0\n  1638: u64 [s1 + 224] = 0x20\n  1643: a1 = s1 + 0xe0\n  1647: u64 [s1 + 232] = 0\n  1651: u64 [s1 + 0x28] = a3\n  1654: u64 [s1 + 0x20] = a4\n  1657: ra = 34, jump @4\n      : @40 [@dyn 17] (gas: 9)\n  1662: a1 = u64 [s1 + 0x38]\n  1665: a0 = u64 [s1 + 0x20]\n  1668: a0 = a0 + 0xffffffffffffffdc\n  1671: a0 = a1 <u a0\n  1674: a2 = u64 [s1 + 0x30]\n  1677: a0 = 0 if a2 != 0\n  1679: a2 = u64 [s1 + 0x28]\n  1682: a0 = 0 if a2 != 0\n  1684: jump @45 if a0 == 0\n      : @41 (gas: 7)\n  1688: i32 a0 = a1 + 0x24\n  1691: u64 [s1 + 216] = 0\n  1695: u64 [s1 + 208] = 0\n  1699: u64 [s1 + 192] = 0x23\n  1704: a1 = s1 + 0xc0\n  1708: u64 [s1 + 200] = 0\n  1712: ra = 36, jump @4\n      : @42 [@dyn 18] (gas: 9)\n  1717: a4 = u64 [s1 + 0x28]\n  1720: a3 = u64 [s1 + 0x30]\n  1723: a1 = u64 [s1 + 0x38]\n  1726: a2 = 0x100000000\n  1736: a0 = 0xffffffbc\n  1746: a0 = a1 <u a0\n  1749: a0 = 0 if a3 != 0\n  1751: a0 = 0 if a4 != 0\n  1753: jump @45 if a0 == 0\n      : @43 (gas: 12)\n  1756: i32 a0 = a1 + 0x44\n  1759: a1 = u64 [0x20000]\n  1764: u64 [s1 + 0xb8] = a1\n  1768: a1 = u64 [0x20008]\n  1773: u64 [s1 + 0x20] = a2\n  1776: a2 = u64 [0x20010]\n  1781: a3 = u64 [0x20018]\n  1786: u64 [s1 + 0xb0] = a1\n  1790: u64 [s1 + 0xa8] = a2\n  1794: a1 = s1 + 0xa0\n  1798: u64 [s1 + 0xa0] = a3\n  1802: ra = 38, jump @4\n      : @44 [@dyn 19] (gas: 9)\n  1807: a2 = u64 [s1 + 0x38]\n  1810: a0 = u64 [s1 + 0x20]\n  1813: a0 = a0 + 0xffffffffffffff9c\n  1816: a0 = a2 <u a0\n  1819: a1 = u64 [s1 + 0x30]\n  1822: a0 = 0 if a1 != 0\n  1824: a1 = u64 [s1 + 0x28]\n  1827: a0 = 0 if a1 != 0\n  1829: jump @47 if a0 != 0\n      : @45 (gas: 1)\n  1832: trap\n      : @46 (gas: 6)\n  1833: a1 = 0x20080\n  1838: i32 a1 = a1 + 0\n  1840: a0 = 0x1\n  1843: a2 = 0\n  1845: ecalli 11 // 'seal_return'\n  1847: fallthrough\n      : @47 (gas: 8)\n  1848: i32 a0 = a2 + 0x64\n  1851: u64 [s1 + 144] = 0\n  1855: u64 [s1 + 136] = 0\n  1859: a1 = 0x7572650000000000\n  1869: u64 [s1 + 0x98] = a1\n  1873: a1 = s1 + 0x80\n  1877: u64 [s1 + 128] = 0\n  1881: ra = 40, jump @4\n      : @48 [@dyn 20] (gas: 3)\n  1886: a1 = 0x84\n  1890: a0 = u64 [s1 + 0x38]\n  1893: ra = 42, jump @9\n      : @49 [@dyn 21] (gas: 6)\n  1898: i32 a1 = a0 + 0\n  1900: a0 = 0x1\n  1903: a2 = 0x84\n  1907: ra = 0x2c\n  1910: ecalli 11 // 'seal_return'\n  1912: fallthrough\n      : @50 [@dyn 22] (gas: 15)\n  1913: sp = sp + 0xfffffffffffffaa0\n  1917: a0 = sp + 0x500\n  1921: u64 [a0 + 0x58] = ra\n  1924: u64 [a0 + 0x50] = s0\n  1927: u64 [a0 + 0x48] = s1\n  1930: s0 = sp + 0x560\n  1934: sp = sp & 0xffffffffffffffe0\n  1937: a2 = sp + 0x300\n  1941: u64 [a2 + 56] = 0\n  1944: u64 [a2 + 48] = 0\n  1947: u64 [a2 + 32] = 0x80\n  1952: a0 = 0x40\n  1955: a1 = sp + 0x320\n  1959: u64 [a2 + 40] = 0\n  1962: ra = 46, jump @4\n      : @51 [@dyn 23] (gas: 3)\n  1967: s1 = 0x20068\n  1972: a0 = i32 [0x20068]\n  1977: jump @130 if a0 <u 4\n      : @52 (gas: 4)\n  1982: i32 a0 = sp + 0x340\n  1986: a1 = 0\n  1988: ecalli 3 // 'call_data_load'\n  1990: fallthrough\n      : @53 (gas: 2)\n  1991: a0 = i32 [sp + 0x35c]\n  1995: jump @61 if a0 != 2376452955\n      : @54 (gas: 8)\n  2003: a0 = sp + 0x500\n  2007: u64 [a0 + 24] = 0\n  2010: u64 [a0 + 16] = 0\n  2013: u64 [a0 + 8] = 0\n  2016: u64 [a0 + 0] = 0\n  2018: i32 a0 = sp + 0x500\n  2022: ecalli 14 // 'value_transferred'\n  2024: fallthrough\n      : @55 (gas: 9)\n  2025: a4 = sp + 0x500\n  2029: a0 = u64 [a4 + 0x10]\n  2032: a1 = u64 [a4 + 0x18]\n  2035: a2 = u64 [a4 + 0x8]\n  2038: a3 = u64 [a4]\n  2040: a1 = a1 | a2\n  2043: a0 = a0 | a3\n  2046: a0 = a0 | a1\n  2049: jump @120 if a0 != 0\n      : @56 (gas: 2)\n  2053: a0 = i32 [0x20068]\n  2058: jump @121 if a0 <=u 3\n      : @57 (gas: 8)\n  2063: a1 = sp + 0x500\n  2067: u64 [a1 + 56] = 0\n  2070: u64 [a1 + 48] = 0\n  2073: u64 [a1 + 40] = 0\n  2076: u64 [a1 + 32] = 0x1\n  2080: a0 = sp + 0x300\n  2084: a1 = sp + 0x520\n  2088: ra = 48, jump @6\n      : @58 [@dyn 24] (gas: 10)\n  2093: a1 = sp + 0x300\n  2097: a0 = u64 [a1 + 0x10]\n  2100: u64 [sp + 0x48] = a0\n  2103: a0 = u64 [a1 + 0x8]\n  2106: u64 [sp + 0x58] = a0\n  2109: a0 = u64 [a1]\n  2111: u64 [sp + 0x50] = a0\n  2114: a0 = sp + 0x2e0\n  2118: a1 = 0x40\n  2121: ra = 50, jump @2\n      : @59 [@dyn 25] (gas: 13)\n  2126: a3 = sp + 0x200\n  2130: a0 = u64 [a3 + 0xf8]\n  2134: a1 = u64 [a3 + 0xf0]\n  2138: a2 = u64 [a3 + 0xe8]\n  2142: s1 = u64 [a3 + 0xe0]\n  2146: a0 = a0 | a2\n  2149: a2 = s1 | a1\n  2152: a2 = a2 | a0\n  2155: a2 = a2 >> 0x20\n  2158: a0 = a0 | a1\n  2161: a0 = a0 << 0x20\n  2164: a0 = a0 | a2\n  2167: jump @122 if a0 == 0\n      : @60 (gas: 1)\n  2171: trap\n      : @61 (gas: 1)\n  2172: jump @126 if a0 != 1020253707\n      : @62 (gas: 8)\n  2180: a0 = sp + 0x300\n  2184: u64 [a0 + 184] = 0\n  2188: u64 [a0 + 176] = 0\n  2192: u64 [a0 + 168] = 0\n  2196: u64 [a0 + 160] = 0\n  2200: i32 a0 = sp + 0x3a0\n  2204: ecalli 14 // 'value_transferred'\n  2206: fallthrough\n      : @63 (gas: 9)\n  2207: a4 = sp + 0x300\n  2211: a0 = u64 [a4 + 0xb0]\n  2215: a1 = u64 [a4 + 0xb8]\n  2219: a2 = u64 [a4 + 0xa8]\n  2223: a3 = u64 [a4 + 0xa0]\n  2227: a1 = a1 | a2\n  2230: a0 = a0 | a3\n  2233: a0 = a0 | a1\n  2236: jump @131 if a0 != 0\n      : @64 (gas: 2)\n  2240: a0 = i32 [0x20068]\n  2245: jump @132 if a0 <=u 3\n      : @65 (gas: 8)\n  2250: a0 = sp + 0x300\n  2254: u64 [a0 + 216] = 0\n  2258: u64 [a0 + 208] = 0\n  2262: u64 [a0 + 200] = 0\n  2266: u64 [a0 + 192] = 0\n  2270: a0 = sp + 0x2a0\n  2274: a1 = sp + 0x3c0\n  2278: ra = 52, jump @6\n      : @66 [@dyn 26] (gas: 11)\n  2283: a1 = sp + 0x200\n  2287: a0 = u64 [a1 + 0xa0]\n  2291: u64 [sp + 0x58] = a0\n  2294: a0 = u64 [a1 + 0xa8]\n  2298: u64 [sp + 0x50] = a0\n  2301: a0 = u64 [a1 + 0xb0]\n  2305: u64 [sp + 0x48] = a0\n  2308: s1 = u64 [a1 + 0xb8]\n  2312: i32 a0 = sp + 0x3e0\n  2316: ecalli 8 // 'now'\n  2318: fallthrough\n      : @67 (gas: 20)\n  2319: a1 = sp + 0x300\n  2323: a0 = u64 [a1 + 0xf8]\n  2327: t0 = u64 [a1 + 0xe0]\n  2331: a2 = u64 [a1 + 0xf0]\n  2335: a3 = u64 [a1 + 0xe8]\n  2339: a4 = a0 ^ s1\n  2342: s1 = a0 <u s1\n  2345: a0 = u64 [sp + 0x48]\n  2348: a5 = a2 <u a0\n  2351: a5 = s1 if a4 != 0\n  2354: a1 = u64 [sp + 0x50]\n  2357: s1 = a3 ^ a1\n  2360: a3 = a3 <u a1\n  2363: a1 = u64 [sp + 0x58]\n  2366: a1 = t0 <u a1\n  2369: a1 = a3 if s1 != 0\n  2372: a0 = a0 ^ a2\n  2375: a0 = a0 | a4\n  2378: a1 = a5 if a0 != 0\n  2381: jump @81 if a1 == 0\n      : @68 (gas: 3)\n  2385: a0 = sp + 0x120\n  2389: a1 = 0x40\n  2392: ra = 54, jump @2\n      : @69 [@dyn 27] (gas: 5)\n  2397: a4 = u64 [sp + 0x138]\n  2401: s1 = u64 [sp + 0x130]\n  2405: a3 = u64 [sp + 0x128]\n  2409: a0 = u64 [sp + 0x120]\n  2413: t0 = 56, jump @145\n      : @70 [@dyn 28] (gas: 1)\n  2418: jump @60 if a1 != 0\n      : @71 (gas: 10)\n  2422: u64 [sp + 272] = 0\n  2426: u64 [sp + 264] = 0\n  2430: u64 [sp + 256] = 0\n  2434: a2 = 0x8c379a000000000\n  2444: a1 = sp + 0x100\n  2448: u64 [sp + 0x118] = a2\n  2452: u64 [sp + 0x58] = a0\n  2455: u64 [sp + 0x50] = a3\n  2458: u64 [sp + 0x48] = a4\n  2461: ra = 58, jump @4\n      : @72 [@dyn 29] (gas: 1)\n  2466: t0 = 60, jump @144\n      : @73 [@dyn 30] (gas: 1)\n  2471: jump @60 if a0 == 0\n      : @74 (gas: 8)\n  2475: i32 a0 = a1 + 0x4\n  2478: u64 [sp + 248] = 0\n  2482: u64 [sp + 240] = 0\n  2486: u64 [sp + 224] = 0x20\n  2491: a1 = sp + 0xe0\n  2495: u64 [sp + 232] = 0\n  2499: u64 [sp + 0x48] = a3\n  2502: ra = 62, jump @4\n      : @75 [@dyn 31] (gas: 1)\n  2507: t0 = 64, jump @147\n      : @76 [@dyn 32] (gas: 1)\n  2512: jump @60 if a0 == 0\n      : @77 (gas: 8)\n  2516: i32 a0 = a1 + 0x24\n  2519: u64 [sp + 216] = 0\n  2523: u64 [sp + 208] = 0\n  2527: u64 [sp + 192] = 0x16\n  2532: a1 = sp + 0xc0\n  2536: u64 [sp + 200] = 0\n  2540: s1 = a2\n  2542: ra = 66, jump @4\n      : @78 [@dyn 33] (gas: 1)\n  2547: t0 = 68, jump @146\n      : @79 [@dyn 34] (gas: 1)\n  2552: jump @60 if a0 == 0\n      : @80 (gas: 12)\n  2556: i32 a0 = a2 + 0x44\n  2559: a1 = u64 [0x20050]\n  2564: s1 = a2\n  2566: a2 = u64 [0x20058]\n  2571: a3 = u64 [0x20060]\n  2576: u64 [sp + 0xb8] = a1\n  2580: u64 [sp + 0xb0] = a2\n  2584: u64 [sp + 0xa8] = a3\n  2588: a1 = sp + 0xa0\n  2592: u64 [sp + 160] = 0\n  2596: ra = 0x68\n  2599: jump @4\n      : @81 (gas: 8)\n  2602: a1 = sp + 0x400\n  2606: u64 [a1 + 24] = 0\n  2609: u64 [a1 + 16] = 0\n  2612: u64 [a1 + 8] = 0\n  2615: u64 [a1 + 0] = 0x1\n  2618: a0 = sp + 0x280\n  2622: a1 = sp + 0x400\n  2626: ra = 70, jump @6\n      : @82 [@dyn 35] (gas: 10)\n  2631: a0 = u64 [sp + 0x288]\n  2635: u64 [sp + 0x58] = a0\n  2638: a0 = u64 [sp + 0x280]\n  2642: u64 [sp + 0x50] = a0\n  2645: a0 = u32 [sp + 0x290]\n  2649: u64 [sp + 0x48] = a0\n  2652: s1 = 0x30080\n  2657: i32 a0 = s1 + 0\n  2659: ecalli 5 // 'caller'\n  2661: fallthrough\n      : @83 (gas: 23)\n  2662: a5 = u64 [0x30088]\n  2667: a4 = u64 [0x30080]\n  2672: u64 [sp + 0x40] = s1\n  2675: s1 = u32 [0x30090]\n  2680: a0 = reverse a5\n  2682: a1 = a0 >> 0x20\n  2685: a2 = reverse a4\n  2687: a3 = a2 << 0x20\n  2690: a1 = a1 | a3\n  2693: a0 = a0 << 0x20\n  2696: a3 = reverse s1\n  2698: a3 = a3 >> 0x20\n  2701: a0 = a0 | a3\n  2704: a2 = a2 >> 0x20\n  2707: a3 = u64 [sp + 0x48]\n  2710: a2 = a2 ^ a3\n  2713: a3 = u64 [sp + 0x50]\n  2716: a0 = a0 ^ a3\n  2719: a0 = a0 | a2\n  2722: a2 = u64 [sp + 0x58]\n  2725: a1 = a1 ^ a2\n  2728: a0 = a0 | a1\n  2731: jump @105 if a0 != 0\n      : @84 (gas: 17)\n  2735: u64 [sp + 0x20] = s1\n  2738: u64 [sp + 0x28] = a5\n  2741: u64 [sp + 0x30] = a4\n  2744: i32 a0 = sp + 0x420\n  2748: ecalli 0 // 'balance'\n  2749: a1 = sp + 0x400\n  2753: a0 = u64 [a1 + 0x38]\n  2756: u64 [sp + 0x58] = a0\n  2759: a0 = u64 [a1 + 0x30]\n  2762: u64 [sp + 0x50] = a0\n  2765: a0 = u64 [a1 + 0x28]\n  2768: u64 [sp + 0x48] = a0\n  2771: a0 = u64 [a1 + 0x20]\n  2774: u64 [sp + 0x38] = a0\n  2777: a0 = sp + 0x1c0\n  2781: a1 = 0x40\n  2784: ra = 72, jump @2\n      : @85 [@dyn 36] (gas: 5)\n  2789: a4 = u64 [sp + 0x1d8]\n  2793: s1 = u64 [sp + 0x1d0]\n  2797: a3 = u64 [sp + 0x1c8]\n  2801: a0 = u64 [sp + 0x1c0]\n  2805: t0 = 74, jump @145\n      : @86 [@dyn 37] (gas: 1)\n  2810: jump @60 if a1 != 0\n      : @87 (gas: 13)\n  2814: a1 = u64 [sp + 0x38]\n  2817: u64 [sp + 0x1a0] = a1\n  2821: a1 = u64 [sp + 0x48]\n  2824: u64 [sp + 0x1a8] = a1\n  2828: a1 = u64 [sp + 0x50]\n  2831: u64 [sp + 0x1b0] = a1\n  2835: a1 = sp + 0x1a0\n  2839: a2 = u64 [sp + 0x58]\n  2842: u64 [sp + 0x1b8] = a2\n  2846: u64 [sp + 0x58] = a0\n  2849: u64 [sp + 0x50] = a3\n  2852: u64 [sp + 0x48] = a4\n  2855: ra = 76, jump @4\n      : @88 [@dyn 38] (gas: 3)\n  2860: i32 a0 = sp + 0x440\n  2864: ecalli 8 // 'now'\n  2866: fallthrough\n      : @89 (gas: 9)\n  2867: a5 = u64 [sp + 0x58]\n  2870: a0 = u64 [sp + 0x48]\n  2873: a0 = a0 | s1\n  2876: a1 = 0xffffffe0\n  2886: a1 = a5 <u a1\n  2889: a2 = u64 [sp + 0x50]\n  2892: a1 = 0 if a2 != 0\n  2894: a1 = 0 if a0 != 0\n  2896: jump @60 if a1 == 0\n      : @90 (gas: 13)\n  2900: a0 = sp + 0x400\n  2904: a2 = u64 [a0 + 0x40]\n  2907: a1 = u64 [a0 + 0x48]\n  2910: a3 = u64 [a0 + 0x50]\n  2913: a4 = u64 [a0 + 0x58]\n  2916: i32 a0 = a5 + 0x20\n  2919: u64 [sp + 0x198] = a4\n  2923: u64 [sp + 0x190] = a3\n  2927: u64 [sp + 0x188] = a1\n  2931: a1 = sp + 0x180\n  2935: u64 [sp + 0x180] = a2\n  2939: s1 = a5\n  2941: ra = 78, jump @4\n      : @91 [@dyn 39] (gas: 29)\n  2946: a0 = u64 [0x20030]\n  2951: a1 = u64 [0x20038]\n  2956: u64 [sp + 0x178] = a0\n  2960: a0 = u64 [0x20040]\n  2965: u64 [sp + 0x170] = a1\n  2969: a3 = u64 [0x20048]\n  2974: u64 [sp + 0x168] = a0\n  2978: a1 = 0x40\n  2981: a2 = sp + 0x160\n  2985: u64 [sp + 0x160] = a3\n  2989: a0 = s1\n  2991: ra = 0x50\n  2994: sp = sp + 0xffffffffffffffa0\n  2997: u64 [sp + 0x58] = ra\n  3000: u64 [sp + 0x50] = s0\n  3003: u64 [sp + 0x48] = s1\n  3006: s0 = sp + 0x60\n  3009: sp = sp & 0xffffffffffffffe0\n  3012: a3 = u64 [a2]\n  3014: u64 [sp + 0x18] = a3\n  3017: a3 = u64 [a2 + 0x8]\n  3020: u64 [sp + 0x10] = a3\n  3023: a3 = u64 [a2 + 0x10]\n  3026: u64 [sp + 0x8] = a3\n  3029: a2 = u64 [a2 + 0x18]\n  3032: u64 [sp] = a2\n  3034: s1 = a1\n  3036: ra = 0x6\n  3039: jump @9\n      : @92 [@dyn 40] (gas: 41)\n  3042: i32 a0 = sp + 0x460\n  3046: ecalli 0 // 'balance'\n  3047: s1 = sp + 0x400\n  3051: a0 = u64 [s1 + 0x60]\n  3054: a1 = u64 [s1 + 0x68]\n  3057: a2 = u64 [s1 + 0x70]\n  3060: a3 = u64 [s1 + 0x78]\n  3063: a4 = u64 [sp + 0x40]\n  3066: a5 = u64 [sp + 0x28]\n  3069: u64 [a4 + 0x8] = a5\n  3072: a5 = u64 [sp + 0x30]\n  3075: u64 [a4] = a5\n  3077: a5 = u64 [sp + 0x20]\n  3080: u32 [a4 + 0x10] = a5\n  3083: u64 [s1 + 0x98] = a3\n  3087: u64 [s1 + 0x90] = a2\n  3091: u64 [s1 + 0x88] = a1\n  3095: u64 [s1 + 0x80] = a0\n  3099: u32 [sp + 1184] = 0\n  3103: u64 [s1 + 216] = 0\n  3107: u64 [s1 + 208] = 0\n  3111: u64 [s1 + 200] = 0\n  3115: u64 [s1 + 192] = 0\n  3119: a0 = a4 << 0x20\n  3122: a0 = a0 >> 0x20\n  3125: a1 = sp + 0x480\n  3129: a1 = a1 << 0x20\n  3132: a1 = a1 >> 0x20\n  3135: s1 = 0x20080\n  3140: a2 = sp + 0x4c0\n  3144: a2 = a2 << 0x20\n  3147: a3 = a2 | a1\n  3150: a4 = s1 << 0x20\n  3153: a4 = a4 >> 0x20\n  3156: a1 = sp + 0x4a0\n  3160: a1 = a1 << 0x20\n  3163: a5 = a1 | a4\n  3166: a1 = 0xffffffffffffffff\n  3169: a2 = 0xffffffffffffffff\n  3172: ecalli 1 // 'call'\n  3174: fallthrough\n      : @93 (gas: 1)\n  3175: jump @140 if a0 == 0\n      : @94 (gas: 3)\n  3179: a0 = sp + 0x140\n  3183: a1 = 0x40\n  3186: ra = 82, jump @2\n      : @95 [@dyn 41] (gas: 9)\n  3191: a0 = u64 [sp + 0x158]\n  3195: u64 [sp + 0x58] = a0\n  3198: a0 = u64 [sp + 0x150]\n  3202: u64 [sp + 0x50] = a0\n  3205: a0 = u64 [sp + 0x148]\n  3209: u64 [sp + 0x48] = a0\n  3212: s1 = u64 [sp + 0x140]\n  3216: ecalli 10 // 'return_data_size'\n  3218: fallthrough\n      : @96 (gas: 12)\n  3219: a1 = u64 [sp + 0x58]\n  3222: a2 = u64 [sp + 0x48]\n  3225: a1 = a1 | a2\n  3228: u64 [sp + 0x58] = s1\n  3231: a3 = u64 [sp + 0x50]\n  3234: a2 = s1 | a3\n  3237: a2 = a2 | a1\n  3240: a2 = a2 >> 0x20\n  3243: a1 = a1 | a3\n  3246: a1 = a1 << 0x20\n  3249: a1 = a1 | a2\n  3252: jump @60 if a1 != 0\n      : @97 (gas: 3)\n  3256: s1 = a0\n  3258: a0 = a0 >> 0x20\n  3261: jump @60 if a0 != 0\n      : @98 (gas: 5)\n  3265: i32 a0 = s1 + 0\n  3267: u64 [sp + 0x50] = a0\n  3270: a0 = u64 [sp + 0x58]\n  3273: a1 = s1\n  3275: ra = 84, jump @9\n      : @99 [@dyn 42] (gas: 6)\n  3280: u32 [sp + 0x4e0] = s1\n  3284: i32 a0 = a0 + 0\n  3286: i32 a1 = sp + 0x4e0\n  3290: a2 = 0\n  3292: ecalli 9 // 'return_data_copy'\n  3294: fallthrough\n      : @100 (gas: 3)\n  3295: a0 = i32 [sp + 0x4e0]\n  3299: a1 = u64 [sp + 0x50]\n  3302: jump @60 if a0 <u a1\n      : @101 (gas: 2)\n  3306: ecalli 10 // 'return_data_size'\n  3308: fallthrough\n      : @102 (gas: 3)\n  3309: s1 = a0\n  3311: a0 = a0 >> 0x20\n  3314: jump @60 if a0 != 0\n      : @103 (gas: 3)\n  3318: a0 = u64 [sp + 0x58]\n  3321: a1 = s1\n  3323: ra = 86, jump @9\n      : @104 [@dyn 43] (gas: 5)\n  3328: i32 a1 = a0 + 0\n  3330: i32 a2 = s1 + 0\n  3332: a0 = 0x1\n  3335: ecalli 11 // 'seal_return'\n  3337: fallthrough\n      : @105 (gas: 3)\n  3338: a0 = sp + 0x260\n  3342: a1 = 0x40\n  3345: ra = 88, jump @2\n      : @106 [@dyn 44] (gas: 6)\n  3350: a1 = sp + 0x200\n  3354: a4 = u64 [a1 + 0x78]\n  3357: s1 = u64 [a1 + 0x70]\n  3360: a3 = u64 [a1 + 0x68]\n  3363: a0 = u64 [a1 + 0x60]\n  3366: t0 = 90, jump @145\n      : @107 [@dyn 45] (gas: 1)\n  3371: jump @60 if a1 != 0\n      : @108 (gas: 11)\n  3375: a5 = sp + 0x200\n  3379: u64 [a5 + 80] = 0\n  3382: u64 [a5 + 72] = 0\n  3385: u64 [a5 + 64] = 0\n  3388: a2 = 0x8c379a000000000\n  3398: a1 = sp + 0x240\n  3402: u64 [a5 + 0x58] = a2\n  3405: u64 [sp + 0x58] = a0\n  3408: u64 [sp + 0x50] = a3\n  3411: u64 [sp + 0x48] = a4\n  3414: ra = 92, jump @4\n      : @109 [@dyn 46] (gas: 1)\n  3419: t0 = 94, jump @144\n      : @110 [@dyn 47] (gas: 1)\n  3424: jump @60 if a0 == 0\n      : @111 (gas: 10)\n  3428: i32 a0 = a1 + 0x4\n  3431: a2 = sp + 0x200\n  3435: u64 [a2 + 56] = 0\n  3438: a4 = 0\n  3440: u64 [a2 + 48] = 0\n  3443: u64 [a2 + 32] = 0x20\n  3447: a1 = sp + 0x220\n  3451: u64 [a2 + 40] = 0\n  3454: u64 [sp + 0x48] = a3\n  3457: ra = 96, jump @4\n      : @112 [@dyn 48] (gas: 1)\n  3462: t0 = 98, jump @147\n      : @113 [@dyn 49] (gas: 1)\n  3467: jump @60 if a0 == 0\n      : @114 (gas: 10)\n  3471: i32 a0 = a1 + 0x24\n  3474: a3 = sp + 0x200\n  3478: u64 [a3 + 24] = 0\n  3481: a4 = 0\n  3483: u64 [a3 + 16] = 0\n  3486: u64 [a3 + 0] = 0x14\n  3489: a1 = sp + 0x200\n  3493: u64 [a3 + 8] = 0\n  3496: s1 = a2\n  3498: ra = 100, jump @4\n      : @115 [@dyn 50] (gas: 1)\n  3503: t0 = 102, jump @146\n      : @116 [@dyn 51] (gas: 1)\n  3508: jump @60 if a0 == 0\n      : @117 (gas: 11)\n  3512: i32 a0 = a2 + 0x44\n  3515: a1 = u64 [0x20020]\n  3520: s1 = a2\n  3522: a2 = u64 [0x20028]\n  3527: u64 [sp + 0x1f8] = a1\n  3531: u64 [sp + 0x1f0] = a2\n  3535: a1 = 0x776e657200000000\n  3545: u64 [sp + 0x1e8] = a1\n  3549: a1 = sp + 0x1e0\n  3553: u64 [sp + 480] = 0\n  3557: ra = 104, jump @4\n      : @118 [@dyn 52] (gas: 3)\n  3562: a1 = 0x64\n  3565: a0 = s1\n  3567: ra = 106, jump @9\n      : @119 [@dyn 53] (gas: 5)\n  3572: i32 a1 = a0 + 0\n  3574: a0 = 0x1\n  3577: a2 = 0x64\n  3580: ecalli 11 // 'seal_return'\n  3582: fallthrough\n      : @120 (gas: 6)\n  3583: a1 = 0x20080\n  3588: i32 a1 = a1 + 0\n  3590: a0 = 0x1\n  3593: a2 = 0\n  3595: ecalli 11 // 'seal_return'\n  3597: jump @133\n      : @121 (gas: 6)\n  3600: a1 = 0x20080\n  3605: i32 a1 = a1 + 0\n  3607: a0 = 0x1\n  3610: a2 = 0\n  3612: ecalli 11 // 'seal_return'\n  3614: jump @133\n      : @122 (gas: 13)\n  3617: a0 = u64 [sp + 0x48]\n  3620: a0 = a0 << 0x20\n  3623: a0 = a0 >> 0x20\n  3626: a2 = sp + 0x200\n  3630: u64 [a2 + 216] = 0\n  3634: a1 = u64 [sp + 0x50]\n  3637: u64 [a2 + 0xc0] = a1\n  3641: a1 = u64 [sp + 0x58]\n  3644: u64 [a2 + 0xc8] = a1\n  3648: a1 = sp + 0x2c0\n  3652: u64 [a2 + 0xd0] = a0\n  3656: a0 = s1\n  3658: ra = 108, jump @4\n      : @123 [@dyn 54] (gas: 3)\n  3663: a1 = 0x20\n  3666: a0 = s1\n  3668: ra = 110, jump @9\n      : @124 [@dyn 55] (gas: 2)\n  3673: i32 a1 = a0 + 0\n  3675: fallthrough\n      : @125 (gas: 4)\n  3676: a2 = 0x20\n  3679: a0 = 0\n  3681: ecalli 11 // 'seal_return'\n  3683: fallthrough\n      : @126 (gas: 1)\n  3684: jump @130 if a0 != 622598819\n      : @127 (gas: 8)\n  3691: a0 = sp + 0x300\n  3695: u64 [a0 + 120] = 0\n  3698: u64 [a0 + 112] = 0\n  3701: u64 [a0 + 104] = 0\n  3704: u64 [a0 + 96] = 0\n  3707: i32 a0 = sp + 0x360\n  3711: ecalli 14 // 'value_transferred'\n  3713: fallthrough\n      : @128 (gas: 9)\n  3714: a4 = sp + 0x300\n  3718: a0 = u64 [a4 + 0x70]\n  3721: a1 = u64 [a4 + 0x78]\n  3724: a2 = u64 [a4 + 0x68]\n  3727: a3 = u64 [a4 + 0x60]\n  3730: a1 = a1 | a2\n  3733: a0 = a0 | a3\n  3736: a0 = a0 | a1\n  3739: jump @133 if a0 == 0\n      : @129 (gas: 6)\n  3742: a1 = 0x20080\n  3747: i32 a1 = a1 + 0\n  3749: a0 = 0x1\n  3752: a2 = 0\n  3754: ecalli 11 // 'seal_return'\n  3756: jump @133\n      : @130 (gas: 6)\n  3758: a1 = 0x20080\n  3763: i32 a1 = a1 + 0\n  3765: a0 = 0x1\n  3768: a2 = 0\n  3770: ecalli 11 // 'seal_return'\n  3772: jump @133\n      : @131 (gas: 6)\n  3774: a1 = 0x20080\n  3779: i32 a1 = a1 + 0\n  3781: a0 = 0x1\n  3784: a2 = 0\n  3786: ecalli 11 // 'seal_return'\n  3788: jump @133\n      : @132 (gas: 6)\n  3790: a1 = 0x20080\n  3795: i32 a1 = a1 + 0\n  3797: a0 = 0x1\n  3800: a2 = 0\n  3802: ecalli 11 // 'seal_return'\n  3804: fallthrough\n      : @133 (gas: 2)\n  3805: a0 = i32 [s1]\n  3807: jump @135 if a0 >u 3\n      : @134 (gas: 6)\n  3811: a1 = 0x20080\n  3816: i32 a1 = a1 + 0\n  3818: a0 = 0x1\n  3821: a2 = 0\n  3823: ecalli 11 // 'seal_return'\n  3825: jump @133\n      : @135 (gas: 8)\n  3827: a0 = sp + 0x300\n  3831: u64 [a0 + 152] = 0\n  3835: u64 [a0 + 144] = 0\n  3839: u64 [a0 + 136] = 0\n  3843: u64 [a0 + 128] = 0\n  3847: a0 = sp + 0x80\n  3851: a1 = sp + 0x380\n  3855: ra = 112, jump @6\n      : @136 [@dyn 56] (gas: 11)\n  3860: a2 = u64 [sp + 0x80]\n  3864: a0 = u64 [sp + 0x88]\n  3868: a1 = u64 [sp + 0x90]\n  3872: a3 = u64 [sp + 0x98]\n  3876: u64 [sp + 0x78] = a3\n  3879: u64 [sp + 0x70] = a1\n  3882: u64 [sp + 0x68] = a0\n  3885: a0 = 0x80\n  3889: a1 = sp + 0x60\n  3892: u64 [sp + 0x60] = a2\n  3895: ra = 114, jump @4\n      : @137 [@dyn 57] (gas: 2)\n  3900: a1 = i32 [0x2006c]\n  3905: jump @139 if a1 >u 159\n      : @138 (gas: 4)\n  3910: u32 [0x2006c] = 0xa0\n  3917: a0 = 0x20080\n  3922: i32 a1 = a0 + 0x80\n  3926: jump @125\n      : @139 (gas: 3)\n  3929: a0 = 0x20080\n  3934: i32 a1 = a0 + 0x80\n  3938: jump @125\n      : @140 (gas: 4)\n  3941: i32 a1 = s1 + 0\n  3943: a2 = 0\n  3945: ecalli 11 // 'seal_return'\n  3947: jump @133\n      : @141 [export #0: 'call'] (gas: 2)\n  3950: a0 = 0\n  3952: ra = 116, jump @15\n      : @142 [@dyn 58] [export #1: 'deploy'] (gas: 2)\n  3957: a0 = 0x1\n  3960: ra = 118, jump @15\n      : @143 [@dyn 59] (gas: 16)\n  3965: a4 = u64 [a3]\n  3967: u64 [sp + 0x18] = a4\n  3970: a4 = u64 [a3 + 0x8]\n  3973: u64 [sp + 0x20] = a4\n  3976: a4 = u64 [a3 + 0x10]\n  3979: u64 [sp + 0x28] = a4\n  3982: a3 = u64 [a3 + 0x18]\n  3985: u64 [sp + 0x30] = a3\n  3988: s1 = u64 [a2]\n  3990: a3 = u64 [a2 + 0x8]\n  3993: u64 [sp] = a3\n  3995: a3 = u64 [a2 + 0x10]\n  3998: u64 [sp + 0x8] = a3\n  4001: a2 = u64 [a2 + 0x18]\n  4004: u64 [sp + 0x10] = a2\n  4007: jump [t0]\n      : @144 (gas: 10)\n  4009: a1 = u64 [sp + 0x58]\n  4012: a3 = u64 [sp + 0x48]\n  4015: a3 = a3 | s1\n  4018: s1 = 0x100000000\n  4028: a0 = 0xfffffffc\n  4038: a0 = a1 <u a0\n  4041: a2 = u64 [sp + 0x50]\n  4044: a0 = 0 if a2 != 0\n  4046: a0 = 0 if a3 != 0\n  4048: jump [t0]\n      : @145 (gas: 8)\n  4050: a2 = a3 | a4\n  4053: a1 = a0 | s1\n  4056: a1 = a1 | a2\n  4059: a1 = a1 >> 0x20\n  4062: a2 = a2 | s1\n  4065: a2 = a2 << 0x20\n  4068: a1 = a1 | a2\n  4071: jump [t0]\n      : @146 (gas: 7)\n  4073: a2 = u64 [sp + 0x58]\n  4076: a0 = 0xffffffbc\n  4086: a0 = a2 <u a0\n  4089: a0 = 0 if s1 != 0\n  4091: a1 = u64 [sp + 0x48]\n  4094: a0 = 0 if a1 != 0\n  4096: jump [t0]\n      : @147 (gas: 8)\n  4098: a3 = u64 [sp + 0x48]\n  4101: a2 = u64 [sp + 0x50]\n  4104: a1 = u64 [sp + 0x58]\n  4107: a0 = s1 + 0xffffffffffffffdc\n  4110: a0 = a1 <u a0\n  4113: a0 = 0 if a2 != 0\n  4115: a0 = 0 if a3 != 0\n  4117: jump [t0]\n",
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": "50564d00001a14000000000000010700c1a000c00080036874206b636f6c6e55756f687320656d696e6920656220646c74756620656874206e65726120756f596f206568742074275d96b5d50bd62ebf51c99511c08056682d5a3a8ee282434e931b4159bf44522d276e616320756f59726468746977207400007465792077610480ec0f00000000070000000b0000001900000027000000350000003b000000480000005300000056000000660000007600000081000000930000009e00000062616c616e636563616c6c63616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a6563616c6c65726465706f7369745f6576656e746765745f73746f726167656e6f7772657475726e5f646174615f636f707972657475726e5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e736665727265640511028f6e0463616c6c8f75066465706c6f790692943b0290172b0073012b03b603bb030f041b044504d7042f0571057c05a905be05d5052d067e06b5060f075e076a077907af072d084e08eb085d097209a209a709cb09d009f309f809470ae50afa0a2c0b820be20b770cd00c000d160d2b0d5b0d600d860d8b0daf0db40dea0df40d4f0e590e140f3c0f750f7d0f39087000025108af053307a0000383770a0c28a2059511f07b10087b1564896475330820649750100241037c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511d87b10207b15187b161082897b19088289087b19828510828618330820501004f9016f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832009511a07b10587b15507b16489515608411e06476828718828910828a0882886f776f996faa6f887b18187b1a107b19087b17491138491130491128491120481140208318831a20831b403309ff33070a07821738821830821928821a206f776f886f996faa7b6a187b69107b68087b679551a082105882155082164895116032009511a07b10587b15509515608411e08272827a08827b108277188283828908828c108288186f746fbb6faa6f276f826fcc6f996f387b17187b1a107b1b087b147b18387b19307b1c287b12208318831a203309ff330b2033070a0d9551a0821058821550951160320082186f888219086f99821a106faa821b186fbb7b1b387b1a307b19287b18208379836a8317203308010a069551a082105882155082164895116032008b7910520931c8780883881f8488e056380000012533096c0002390a6c0002ae8a093d086c00020133088000028377c887073200009511f07b10087b158475010a04013d076800025105075010080950100ac3039511c0fd951700027b70387b75307b7628951540028411e0641639076800027b673897772098772095771f8477e095788000d87807956900017b98607b976894777b9770330740956860014926780150100c45fd3307800082683850100e51ff837782683833090a020182683854181f01039517e08477e07b673864719567400133088000501010d5fb826750017b6728826b58017b6b18826840017b6830826948017b6920826a387ba7107bab187ba87ba908836780010a080195680001828798008262800182899000828a8800826818d3870bd88708826728d8790cdbb80c826820d38a03d88a0a826830d88208db3a08d39707d4b707db7c08510812014926b8014926b0014926a8014926a0019567a001826838501012f0fd33078000037b673883770a0582693882970881981082996f77977a206f88988820d4a8087b68389877206f98978920d497077b67309888207b68284926d8014926d0014926c8014926c001019567609568c00150101417fd806774977720826878826928d497074926f8014926f0014926e8014926e00101956900027b98188268307b98088268387b987b97109567e0019568000250101656fd9567403308405010189efa826a58826850826948826740d49a0ad48709d4a909989920d4a808978820d4980852088b017b673850101ac3fd8377330833090a02284ffa826738330850101caefd8378330733090a0b2872019567200133084050101e45fa95680001828b38828c30828a28828720d4ba09d4c708d49808988820d4c909979920d4980852082e01492610014926080149260001140900000000a079c308956800017b6918017b67387b6a307b6b287b6c2050102027fb826838826728826a20d47a0a140b00000000010000001407fcffffff00000000d87807826930949794a75107d1008387044926f8004926f0004926e000209568e0004926e8007b6a287b6b20501022d6fa8268388267209577dcd8780782693094978269289497510794008387244926d8004926d0004926c000239568c0004926c8005010249ffa826b28826a30826838140900000000010000001407bcffffff00000000d8780794a794b751074f8387443a080000027b68b8003a080800027b69203a091000023a0a1800027b68b0007b69a8009568a0007b6aa00050102645fa82693882672095779cd8790782683094878268289487520713003308800002838833070133090a0b018397644926900049268800140800000000006572757b6898009568800049268000501028f6f93308840082673850102a02fc83783307013309840033002c0a0b019511a0fa951700057b70587b75507b7648951560058411e09519000349193849193049192080003307409518200349192850102ea5f933066800023907680002531704f5068317400333080a030181175c0352475bcba58db100951700054917184917104917084907831700050a0e01951b000582b71082b81882b90882bad49808d4a707d487075207fe05390768000254170306069518000549183849183049182849182001951700039518200550103019fa951800038287107b17488287087b175882877b17509517e002330840501032ccf7951a000282a7f80082a8f00082a9e80082a6e000d49707d48609d47909989920d48707977720d497075107aa050052470bd6cf3ce805951700034927b8004927b0004927a8004927a0008317a0030a0e01951b000382b7b00082b8b80082b9a80082baa000d49808d4a707d487075207020639076800025417030906951700034927d8004927d0004927c8004927c0009517a0029518c0035010345bf9951800028287a0007b17588287a8007b17508287b0007b17488286b8008317e0030a0801951800038287f8008282e0008289f000828ae800d3670bd86706821748d8790cdbb60c821850d38a06d88a0a821858d88208db6a08d39707d4b707db7c085108dd0095172001330840501036bdf6821b380182163001821a2801821720015012386506520809ff492110014921080149210001140900000000a079c308951800017b1918017b17587b1a507b1b4850103ab2f750123c07065107d4fe8387044921f8004921f0004921e000209518e0004921e8007b1a4850103e89f750124037065107abfe8387244921d8004921d0004921c000169518c0004921c800649650104261f7501244f605510783fe8397443a0850000264963a095800023a0a6000027b18b8007b19b0007b1aa8009518a0004921a0003300682828f7951800044918184918104918084908019517800295180004501046fff7821788027b1758821780027b1750801790027b1748330680000383670a05013a0c8800033a0b8000037b164038069000036fc79878206fb9979a20d4a8089777206f6a98aa20d4a707989920821a48d3a909821a50d3a707d49707821958d39808d4870752075f027b16207b1c287b1b30831720040a951800048287387b17588287307b17508287287b17488287207b17389517c00133084050104835f5821bd8018216d001821ac8018217c00150124add04520881fd8218387b18a0018218487b18a8018218507b18b0019518a0018219587b19b8017b17587b1a507b1b4850104c28f6831740040a0801821c58821748d467071408e0ffffff00000000d88c088219509498947851082bfd95170004827940827848827a50827b5883c7207b1b98017b1a90017b188801951880017b19800164c650104ed2f53a073000023a083800027b1778013a074000027b1870013a0a4800027b176801330840951960017b1a600164673300509511a07b10587b15507b16489515608411e0829a7b1a18829a087b1a10829a107b1a088299187b1964863300062888f7831760040a95160004826760826868826970826a78821b40821c287bbc08821c307bbc821c207abc107b6a98007b6990007b6888007b6780004821a0044926d8004926d0004926c8004926c00097b7209877209518800497882098882033068000029519c004979920d4890a976b2098bb209518a004978820d4b80c3308ff3309ff0a01015107fe0295174001330840501052a3f3821758017b1758821750017b1750821748017b1748821640010a0a01821858821948d498087b1658821a50d4a609d48909989920d4a808978820d498085208c7fb64769877205207befb83677b175082175864685010549cf67a16e00483778318e00433090a09018117e004821850ac8795fb0a0a016476987720520789fb82175864685010566cf6837883693307010a0b019517600233084050105804f395180002828b78828670828a6882876050125aac02520850fb951c0002491c50491c48491c40140900000000a079c308951840027bc9587b17587b1a507b1b4850105cf9f350125e4e0251071bfb83870495190002491938330b49193049192020951820024919287b1a48501060cef35012627c025107f0fa838724951a0002491a18330b491a10490a1495180002491a086496501064a5f35012663a025107c7fa8397443a0820000264963a092800027b18f8017b19f00114080000000072656e777b18e8019518e0014921e0015010686af3330864646750106a78f583783307013309640a0b013308800002838833070133090a0b28d0003308800002838833070133090a0b28bf00821748977720987720951900024929d8008218507b98c0008218587b98c8009518c0027b97d000646750106c05f3330820646750106e13f583780133092033070a0b015247a31a1c254a95170003491778491770491768491760831760030a0e01951b000382b77082b87882b96882ba60d49808d4a707d487075107423308800002838833070133090a0b28313308800002838833070133090a0b28213308800002838833070133090a0b28113308800002838833070133090a0b018167561703143308800002838833070133090a0b28ec9517000349279800492790004927880049278000951780009518800350107032f3821980008217880082189000821a98007b1a787b18707b1768330780009518607b196050107218f239086c000256289f001820036c0002a0003307800002837880002806ff33078000028378800028fafe836833090a0b2872ff33075010742cf433070150107624f482ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b19103202821858821a48d46a0a140600000000010000001407fcffffff00000000d87807821950949794a73202d4ba09d46708d49808988820d46909979920d4980832028219581407bcffffff00000000d87907946782184894873202821a488219508218589567dcd87807949794a73202214225a952484992244992244992244992244992244992244992244992244992244992244992542529a524292949a84a494a922449922449922449922449922449922449922449929224294955494a92284925495592922425494a5292aaaa242549492a49aa945292545292a424491042c2509a948644884812292449229194448448283521491121128944929468444424499224499288888884904a5229494a9244444884244944844892121192902449922412aa9242552221922449924444041091242149020820a9484488484292a41489081121490001a49210212144448424492943a98908202242249448239244220989841042d40888244523494922844812112192a44442444424499218101111d188884812214444444488482412d18888489224499224222122224444041091248448448848089188105108915008111191449244844824126a0809a5242549922489243192244922212222442291884492104d1240521149928888288410214224a2244952922495c4489224298988888888249210491249d288844824124d92244912254a0a51d448b4440a954642244988481240244908914889484288444a228510098588002222a450d2502aa154924424121185149a1a8824894692244928552855285528b508a58a88888810119124921042204442a44a21a12449524a92920410405225499212404a25492a00"
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "unlockTime()": "251c1aa3",
              "withdraw()": "3ccfd60b"
            }
          },
          "irOptimized": "/// @use-src 14:\"contracts/Lock.sol\"\nobject \"Lock_2068\" {\n    code {\n        {\n            /// @src 14:141:1007  \"contract Lock {...\"\n            let _1 := memoryguard(0x80)\n            let programSize := datasize(\"Lock_2068\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 14:141:1007  \"contract Lock {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 14:141:1007  \"contract Lock {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 14:141:1007  \"contract Lock {...\"\n            let value := mload(_1)\n            if iszero(/** @src 14:340:369  \"block.timestamp < _unlockTime\" */ lt(/** @src 14:340:355  \"block.timestamp\" */ timestamp(), /** @src 14:340:369  \"block.timestamp < _unlockTime\" */ value))\n            /// @src 14:141:1007  \"contract Lock {...\"\n            {\n                let memPtr := mload(64)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), 32)\n                mstore(add(memPtr, 36), 35)\n                mstore(add(memPtr, 68), \"Unlock time should be in the fut\")\n                mstore(add(memPtr, 100), \"ure\")\n                revert(memPtr, 132)\n            }\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 14:141:1007  \"contract Lock {...\" */ value)\n            sstore(1, or(and(sload(1), not(sub(shl(160, 1), 1))), /** @src 14:491:501  \"msg.sender\" */ caller()))\n            /// @src 14:141:1007  \"contract Lock {...\"\n            let _2 := mload(64)\n            let _3 := datasize(\"Lock_2068_deployed\")\n            codecopy(_2, dataoffset(\"Lock_2068_deployed\"), _3)\n            return(_2, _3)\n        }\n    }\n    /// @use-src 14:\"contracts/Lock.sol\"\n    object \"Lock_2068_deployed\" {\n        code {\n            {\n                /// @src 14:141:1007  \"contract Lock {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x251c1aa3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        mstore(_1, sload(0))\n                        return(_1, 32)\n                    }\n                    case 0x3ccfd60b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        if /** @src 14:766:795  \"block.timestamp >= unlockTime\" */ lt(/** @src 14:766:781  \"block.timestamp\" */ timestamp(), /** @src 14:141:1007  \"contract Lock {...\" */ sload(0))\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 22)\n                            mstore(add(memPtr, 68), \"You can't withdraw yet\")\n                            revert(memPtr, 100)\n                        }\n                        let value := and(sload(/** @src 14:854:859  \"owner\" */ 0x01), /** @src 14:141:1007  \"contract Lock {...\" */ sub(shl(160, 1), 1))\n                        if iszero(/** @src 14:840:859  \"msg.sender == owner\" */ eq(/** @src 14:840:850  \"msg.sender\" */ caller(), /** @src 14:840:859  \"msg.sender == owner\" */ value))\n                        /// @src 14:141:1007  \"contract Lock {...\"\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 20)\n                            mstore(add(memPtr_1, 68), \"You aren't the owner\")\n                            revert(memPtr_1, 100)\n                        }\n                        /// @src 14:911:932  \"address(this).balance\"\n                        let expr := selfbalance()\n                        /// @src 14:900:950  \"Withdrawal(address(this).balance, block.timestamp)\"\n                        let _2 := /** @src 14:141:1007  \"contract Lock {...\" */ mload(64)\n                        mstore(_2, expr)\n                        mstore(add(_2, 32), /** @src 14:766:781  \"block.timestamp\" */ timestamp())\n                        /// @src 14:900:950  \"Withdrawal(address(this).balance, block.timestamp)\"\n                        log1(_2, /** @src 14:141:1007  \"contract Lock {...\" */ 64, /** @src 14:900:950  \"Withdrawal(address(this).balance, block.timestamp)\" */ 0xbf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b93)\n                        /// @src 14:976:997  \"address(this).balance\"\n                        let expr_1 := selfbalance()\n                        /// @src 14:961:998  \"owner.transfer(address(this).balance)\"\n                        let _3 := /** @src 14:141:1007  \"contract Lock {...\" */ 0\n                        /// @src 14:961:998  \"owner.transfer(address(this).balance)\"\n                        if iszero(expr_1) { _3 := 2300 }\n                        if iszero(call(_3, value, expr_1, /** @src 14:141:1007  \"contract Lock {...\" */ 0, 0, 0, 0))\n                        /// @src 14:961:998  \"owner.transfer(address(this).balance)\"\n                        {\n                            /// @src 14:141:1007  \"contract Lock {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        return(0, 0)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_1 := and(sload(/** @src 14:189:217  \"address payable public owner\" */ 1), /** @src 14:141:1007  \"contract Lock {...\" */ sub(shl(160, 1), 1))\n                        let memPos := mload(64)\n                        mstore(memPos, value_1)\n                        return(memPos, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122037403256784f157da86ada4c97c0c6861e7e3916c746cf5bd9f9bc41e0da5e9464736f6c634300081a0033\"\n    }\n}\n",
          "hash": "3e63b4bcc13233279c3ba580be3317ea61293338ff02b9725b7283c9753463e3",
          "factoryDependencies": {}
        }
      },
      "contracts/MyToken.sol": {
        "MyToken": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "initialSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MINTER_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PAUSER_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"MyToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0xf3a1ca9b5e25244a9fa6a3c5b43712d93da8484b4dcbb538e694f7a22f3225a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cb126be04368e200204c7e5e5662b8109b7064f581d1cf75bc9630b8f9ca8ce\",\"dweb:/ipfs/QmeFuEuUzDK9fToHD9bogh7bGVXbaAEVfp6N5nnXxtkChf\"]}},\"version\":1}",
            "solc_version": "0.8.26+commit.8a97fa7a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 608/66192 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 10309\n// Code size = 36005 bytes\n\n      : @0 (gas: 1)\n     0: jump @14 if a0 == a1\n      : @1 (gas: 9)\n     3: a3 = a1 << 0x20\n     6: a3 = a3 >> 0x20\n     9: a4 = a0 << 0x20\n    12: a4 = a4 >> 0x20\n    15: a4 = a4 + a2\n    18: a3 = a3 - a4\n    21: a4 = a2 << 0x1\n    24: a4 = -a4\n    26: jump @7 if a4 >=u a3\n      : @2 (gas: 1)\n    29: jump @11 if a0 >=u a1\n      : @3 (gas: 1)\n    32: jump @14 if a2 == 0\n      : @4 (gas: 3)\n    35: a2 = a2 + a0\n    38: a3 = a0\n    40: fallthrough\n      : @5 (gas: 6)\n    41: a4 = u8 [a1]\n    43: a1 = a1 + 0x1\n    46: a5 = a3 + 0x1\n    49: u8 [a3] = a4\n    51: a3 = a5\n    53: jump @5 if a5 != a2\n      : @6 (gas: 1)\n    56: jump @14\n      : @7 (gas: 1)\n    58: jump @14 if a2 == 0\n      : @8 (gas: 3)\n    61: a2 = a2 + a0\n    64: a3 = a0\n    66: fallthrough\n      : @9 (gas: 6)\n    67: a4 = u8 [a1]\n    69: a1 = a1 + 0x1\n    72: a5 = a3 + 0x1\n    75: u8 [a3] = a4\n    77: a3 = a5\n    79: jump @9 if a5 != a2\n      : @10 (gas: 1)\n    82: jump @14\n      : @11 (gas: 1)\n    84: jump @14 if a2 == 0\n      : @12 (gas: 2)\n    87: i32 a3 = a2 + 0xffffffffffffffff\n    90: fallthrough\n      : @13 (gas: 7)\n    91: a4 = a1 + a3\n    94: a4 = u8 [a4]\n    96: a2 = a2 + 0xffffffffffffffff\n    99: a5 = a0 + a3\n   102: u8 [a5] = a4\n   104: i32 a3 = a3 + 0xffffffffffffffff\n   107: jump @13 if a2 != 0\n      : @14 (gas: 1)\n   110: ret\n      : @15 (gas: 2)\n   112: a1 = i32 [0x20268]\n   117: jump @260 if a1 == 0\n      : @16 (gas: 4)\n   121: a0 = 0x30290\n   126: i32 a0 = a0 + 0\n   128: ecalli 8 // 'set_immutable_data'\n   130: jump @260\n      : @17 (gas: 8)\n   133: sp = sp + 0xfffffffffffffff0\n   136: u64 [sp + 0x8] = ra\n   139: u64 [sp] = s0\n   141: a2 = a1\n   143: s0 = a0\n   145: a1 = 0x20\n   148: a0 = a2\n   150: ra = 2, jump @33\n      : @18 [@dyn 1] (gas: 100)\n   155: a1 = u8 [a0 + 0x1]\n   158: a2 = u8 [a0]\n   160: a3 = u8 [a0 + 0x2]\n   163: a4 = u8 [a0 + 0x3]\n   166: a1 = a1 << 0x8\n   169: a1 = a1 | a2\n   172: a3 = a3 << 0x10\n   175: a4 = a4 << 0x18\n   178: a3 = a3 | a4\n   181: a1 = a1 | a3\n   184: a2 = u8 [a0 + 0x5]\n   187: a3 = u8 [a0 + 0x4]\n   190: a4 = u8 [a0 + 0x6]\n   193: a5 = u8 [a0 + 0x7]\n   196: a2 = a2 << 0x8\n   199: a2 = a2 | a3\n   202: a4 = a4 << 0x10\n   205: a5 = a5 << 0x18\n   208: a4 = a4 | a5\n   211: a2 = a2 | a4\n   214: a2 = a2 << 0x20\n   217: t0 = a2 | a1\n   220: a2 = u8 [a0 + 0x9]\n   223: a3 = u8 [a0 + 0x8]\n   226: a4 = u8 [a0 + 0xa]\n   229: a5 = u8 [a0 + 0xb]\n   232: a2 = a2 << 0x8\n   235: a2 = a2 | a3\n   238: a4 = a4 << 0x10\n   241: a5 = a5 << 0x18\n   244: a4 = a4 | a5\n   247: a2 = a2 | a4\n   250: a3 = u8 [a0 + 0xd]\n   253: a4 = u8 [a0 + 0xc]\n   256: a5 = u8 [a0 + 0xe]\n   259: a1 = u8 [a0 + 0xf]\n   262: a3 = a3 << 0x8\n   265: a3 = a3 | a4\n   268: a5 = a5 << 0x10\n   271: a1 = a1 << 0x18\n   274: a1 = a1 | a5\n   277: a1 = a1 | a3\n   280: a1 = a1 << 0x20\n   283: t1 = a1 | a2\n   286: a1 = u8 [a0 + 0x11]\n   289: a3 = u8 [a0 + 0x10]\n   292: a4 = u8 [a0 + 0x12]\n   295: a5 = u8 [a0 + 0x13]\n   298: a1 = a1 << 0x8\n   301: a1 = a1 | a3\n   304: a4 = a4 << 0x10\n   307: a5 = a5 << 0x18\n   310: a4 = a4 | a5\n   313: a1 = a1 | a4\n   316: a3 = u8 [a0 + 0x15]\n   319: a4 = u8 [a0 + 0x14]\n   322: a5 = u8 [a0 + 0x16]\n   325: a2 = u8 [a0 + 0x17]\n   328: a3 = a3 << 0x8\n   331: a3 = a3 | a4\n   334: a5 = a5 << 0x10\n   337: a2 = a2 << 0x18\n   340: a2 = a2 | a5\n   343: a2 = a2 | a3\n   346: a2 = a2 << 0x20\n   349: a3 = a2 | a1\n   352: a1 = u8 [a0 + 0x19]\n   355: a2 = u8 [a0 + 0x18]\n   358: a4 = u8 [a0 + 0x1a]\n   361: a5 = u8 [a0 + 0x1b]\n   364: a1 = a1 << 0x8\n   367: a1 = a1 | a2\n   370: a4 = a4 << 0x10\n   373: a5 = a5 << 0x18\n   376: a4 = a4 | a5\n   379: a1 = a1 | a4\n   382: a2 = u8 [a0 + 0x1d]\n   385: a4 = u8 [a0 + 0x1c]\n   388: a5 = u8 [a0 + 0x1e]\n   391: a0 = u8 [a0 + 0x1f]\n   394: a2 = a2 << 0x8\n   397: a2 = a2 | a4\n   400: a5 = a5 << 0x10\n   403: a0 = a0 << 0x18\n   406: a0 = a0 | a5\n   409: a0 = a0 | a2\n   412: a0 = a0 << 0x20\n   415: a0 = a0 | a1\n   418: a0 = reverse a0\n   420: a1 = reverse a3\n   422: a2 = reverse t1\n   424: a3 = reverse t0\n   426: u64 [s0 + 0x18] = a3\n   429: u64 [s0 + 0x10] = a2\n   432: u64 [s0 + 0x8] = a1\n   435: u64 [s0] = a0\n   437: ra = u64 [sp + 0x8]\n   440: s0 = u64 [sp]\n   442: sp = sp + 0x10\n   445: ret\n      : @19 (gas: 12)\n   447: sp = sp + 0xffffffffffffffd8\n   450: u64 [sp + 0x20] = ra\n   453: u64 [sp + 0x18] = s0\n   456: u64 [sp + 0x10] = s1\n   459: a2 = u64 [a1]\n   461: u64 [sp + 0x8] = a2\n   464: a2 = u64 [a1 + 0x8]\n   467: u64 [sp] = a2\n   469: s0 = u64 [a1 + 0x10]\n   472: s1 = u64 [a1 + 0x18]\n   475: a1 = 0x20\n   478: ra = 4, jump @33\n      : @20 [@dyn 2] (gas: 71)\n   483: a1 = reverse s1\n   485: a2 = reverse s0\n   487: a3 = u64 [sp]\n   489: a3 = reverse a3\n   491: a4 = u64 [sp + 0x8]\n   494: a4 = reverse a4\n   496: u8 [a0 + 0x18] = a4\n   499: u8 [a0 + 0x10] = a3\n   502: u8 [a0 + 0x8] = a2\n   505: u8 [a0] = a1\n   507: a5 = a4 >> 0x38\n   510: u8 [a0 + 0x1f] = a5\n   513: a5 = a4 >> 0x30\n   516: u8 [a0 + 0x1e] = a5\n   519: a5 = a4 >> 0x28\n   522: u8 [a0 + 0x1d] = a5\n   525: a5 = a4 >> 0x20\n   528: u8 [a0 + 0x1c] = a5\n   531: a5 = a4 >> 0x18\n   534: u8 [a0 + 0x1b] = a5\n   537: a5 = a4 >> 0x10\n   540: u8 [a0 + 0x1a] = a5\n   543: a4 = a4 >> 0x8\n   546: u8 [a0 + 0x19] = a4\n   549: a4 = a3 >> 0x38\n   552: u8 [a0 + 0x17] = a4\n   555: a4 = a3 >> 0x30\n   558: u8 [a0 + 0x16] = a4\n   561: a4 = a3 >> 0x28\n   564: u8 [a0 + 0x15] = a4\n   567: a4 = a3 >> 0x20\n   570: u8 [a0 + 0x14] = a4\n   573: a4 = a3 >> 0x18\n   576: u8 [a0 + 0x13] = a4\n   579: a4 = a3 >> 0x10\n   582: u8 [a0 + 0x12] = a4\n   585: a3 = a3 >> 0x8\n   588: u8 [a0 + 0x11] = a3\n   591: a3 = a2 >> 0x38\n   594: u8 [a0 + 0xf] = a3\n   597: a3 = a2 >> 0x30\n   600: u8 [a0 + 0xe] = a3\n   603: a3 = a2 >> 0x28\n   606: u8 [a0 + 0xd] = a3\n   609: a3 = a2 >> 0x20\n   612: u8 [a0 + 0xc] = a3\n   615: a3 = a2 >> 0x18\n   618: u8 [a0 + 0xb] = a3\n   621: a3 = a2 >> 0x10\n   624: u8 [a0 + 0xa] = a3\n   627: a2 = a2 >> 0x8\n   630: u8 [a0 + 0x9] = a2\n   633: a2 = a1 >> 0x38\n   636: u8 [a0 + 0x7] = a2\n   639: a2 = a1 >> 0x30\n   642: u8 [a0 + 0x6] = a2\n   645: a2 = a1 >> 0x28\n   648: u8 [a0 + 0x5] = a2\n   651: a2 = a1 >> 0x20\n   654: u8 [a0 + 0x4] = a2\n   657: a2 = a1 >> 0x18\n   660: u8 [a0 + 0x3] = a2\n   663: a2 = a1 >> 0x10\n   666: u8 [a0 + 0x2] = a2\n   669: a1 = a1 >> 0x8\n   672: u8 [a0 + 0x1] = a1\n   675: ra = u64 [sp + 0x20]\n   678: s0 = u64 [sp + 0x18]\n   681: s1 = u64 [sp + 0x10]\n   684: sp = sp + 0x28\n   687: ret\n      : @21 (gas: 32)\n   689: sp = sp + 0xffffffffffffffa0\n   692: u64 [sp + 0x58] = ra\n   695: u64 [sp + 0x50] = s0\n   698: u64 [sp + 0x48] = s1\n   701: s0 = sp + 0x60\n   704: sp = sp & 0xffffffffffffffe0\n   707: s1 = a0\n   709: a0 = u64 [a1 + 0x18]\n   712: a2 = u64 [a1 + 0x10]\n   715: a3 = u64 [a1 + 0x8]\n   718: a1 = u64 [a1]\n   720: a0 = reverse a0\n   722: a2 = reverse a2\n   724: a3 = reverse a3\n   726: a1 = reverse a1\n   728: u64 [sp + 0x18] = a1\n   731: u64 [sp + 0x10] = a3\n   734: u64 [sp + 0x8] = a2\n   737: u64 [sp] = a0\n   739: u64 [sp + 56] = 0\n   742: u64 [sp + 48] = 0\n   745: u64 [sp + 40] = 0\n   748: u64 [sp + 32] = 0\n   751: u32 [sp + 64] = 0x20\n   755: i32 a1 = sp + 0\n   757: i32 a3 = sp + 0x20\n   760: i32 a4 = sp + 0x40\n   763: a2 = 0xffffffffffffffff\n   766: a0 = 0\n   768: ra = 0x6\n   771: ecalli 5 // 'get_storage'\n   773: fallthrough\n      : @22 [@dyn 3] (gas: 5)\n   774: a0 = u64 [sp + 0x38]\n   777: a1 = u64 [sp + 0x30]\n   780: a2 = u64 [sp + 0x28]\n   783: a3 = u64 [sp + 0x20]\n   786: t0 = 8, jump @1377\n      : @23 [@dyn 4] (gas: 10)\n   792: u64 [s1 + 0x18] = a3\n   795: u64 [s1 + 0x10] = a2\n   798: u64 [s1 + 0x8] = a1\n   801: u64 [s1] = a0\n   803: sp = s0 + 0xffffffffffffffa0\n   806: ra = u64 [sp + 0x58]\n   809: s0 = u64 [sp + 0x50]\n   812: s1 = u64 [sp + 0x48]\n   815: sp = sp + 0x60\n   818: ret\n      : @24 (gas: 40)\n   820: sp = sp + 0xffffffffffffffa0\n   823: u64 [sp + 0x58] = ra\n   826: u64 [sp + 0x50] = s0\n   829: s0 = sp + 0x60\n   832: sp = sp & 0xffffffffffffffe0\n   835: t0 = u64 [a0]\n   837: a3 = u64 [a0 + 0x8]\n   840: a4 = u64 [a0 + 0x10]\n   843: a0 = u64 [a0 + 0x18]\n   846: t1 = u64 [a1]\n   848: a2 = u64 [a1 + 0x8]\n   851: a5 = u64 [a1 + 0x10]\n   854: a1 = u64 [a1 + 0x18]\n   857: t2 = reverse a0\n   859: a4 = reverse a4\n   861: a3 = reverse a3\n   863: a0 = reverse t0\n   865: t0 = reverse a1\n   867: a5 = reverse a5\n   869: a2 = reverse a2\n   871: a1 = reverse t1\n   873: u64 [sp + 0x18] = a0\n   876: u64 [sp + 0x10] = a3\n   879: u64 [sp + 0x8] = a4\n   882: u64 [sp] = t2\n   884: u64 [sp + 0x38] = a1\n   887: u64 [sp + 0x30] = a2\n   890: u64 [sp + 0x28] = a5\n   893: u64 [sp + 0x20] = t0\n   896: i32 a1 = sp + 0\n   898: i32 a3 = sp + 0x20\n   901: a2 = 0xffffffffffffffff\n   904: a4 = 0x20\n   907: a0 = 0\n   909: ecalli 9 // 'set_storage'\n   911: sp = s0 + 0xffffffffffffffa0\n   914: ra = u64 [sp + 0x58]\n   917: s0 = u64 [sp + 0x50]\n   920: sp = sp + 0x60\n   923: ret\n      : @25 (gas: 16)\n   925: sp = sp + 0xffffffffffffffa0\n   928: u64 [sp + 0x58] = ra\n   931: u64 [sp + 0x50] = s0\n   934: u64 [sp + 0x48] = s1\n   937: s0 = sp + 0x60\n   940: sp = sp & 0xffffffffffffffe0\n   943: a3 = u64 [a2]\n   945: u64 [sp + 0x18] = a3\n   948: a3 = u64 [a2 + 0x8]\n   951: u64 [sp + 0x10] = a3\n   954: a3 = u64 [a2 + 0x10]\n   957: u64 [sp + 0x8] = a3\n   960: a2 = u64 [a2 + 0x18]\n   963: u64 [sp] = a2\n   965: s1 = a1\n   967: ra = 10, jump @33\n      : @26 [@dyn 5] (gas: 23)\n   972: a1 = u64 [sp]\n   974: a1 = reverse a1\n   976: a2 = u64 [sp + 0x8]\n   979: a2 = reverse a2\n   981: a3 = u64 [sp + 0x10]\n   984: a3 = reverse a3\n   986: a4 = u64 [sp + 0x18]\n   989: a4 = reverse a4\n   991: u64 [sp + 0x38] = a4\n   994: u64 [sp + 0x30] = a3\n   997: u64 [sp + 0x28] = a2\n  1000: u64 [sp + 0x20] = a1\n  1003: i32 a2 = a0 + 0\n  1005: i32 a3 = s1 + 0\n  1007: i32 a0 = sp + 0x20\n  1010: a1 = 0x1\n  1013: ecalli 4 // 'deposit_event'\n  1015: sp = s0 + 0xffffffffffffffa0\n  1018: ra = u64 [sp + 0x58]\n  1021: s0 = u64 [sp + 0x50]\n  1024: s1 = u64 [sp + 0x48]\n  1027: sp = sp + 0x60\n  1030: ret\n      : @27 (gas: 15)\n  1032: sp = sp + 0xffffffffffffff20\n  1036: u64 [sp + 0xd8] = ra\n  1040: u64 [sp + 0xd0] = s0\n  1044: u64 [sp + 0xc8] = s1\n  1048: s0 = sp + 0xe0\n  1052: sp = sp & 0xffffffffffffffe0\n  1055: a5 = u64 [a4]\n  1057: u64 [sp + 0x40] = a5\n  1060: a5 = u64 [a4 + 0x8]\n  1063: u64 [sp + 0x48] = a5\n  1066: a5 = u64 [a4 + 0x10]\n  1069: u64 [sp + 0x50] = a5\n  1072: a4 = u64 [a4 + 0x18]\n  1075: u64 [sp + 0x58] = a4\n  1078: t0 = 12, jump @1390\n      : @28 [@dyn 6] (gas: 2)\n  1084: u64 [sp + 0x38] = a1\n  1087: ra = 14, jump @33\n      : @29 [@dyn 7] (gas: 46)\n  1092: a1 = reverse s1\n  1094: u64 [sp + 0x78] = a1\n  1097: a1 = u64 [sp]\n  1099: a1 = reverse a1\n  1101: u64 [sp + 0x70] = a1\n  1104: a1 = u64 [sp + 0x8]\n  1107: a1 = reverse a1\n  1109: u64 [sp + 0x68] = a1\n  1112: a1 = u64 [sp + 0x10]\n  1115: a1 = reverse a1\n  1117: u64 [sp + 0x60] = a1\n  1120: a1 = u64 [sp + 0x18]\n  1123: a1 = reverse a1\n  1125: u64 [sp + 0x98] = a1\n  1129: a1 = u64 [sp + 0x20]\n  1132: a1 = reverse a1\n  1134: u64 [sp + 0x90] = a1\n  1138: a1 = u64 [sp + 0x28]\n  1141: a1 = reverse a1\n  1143: u64 [sp + 0x88] = a1\n  1147: a1 = u64 [sp + 0x30]\n  1150: a1 = reverse a1\n  1152: u64 [sp + 0x80] = a1\n  1156: a1 = u64 [sp + 0x40]\n  1159: a1 = reverse a1\n  1161: u64 [sp + 0xb8] = a1\n  1165: a1 = u64 [sp + 0x48]\n  1168: a1 = reverse a1\n  1170: u64 [sp + 0xb0] = a1\n  1174: a1 = u64 [sp + 0x50]\n  1177: a1 = reverse a1\n  1179: u64 [sp + 0xa8] = a1\n  1183: a1 = u64 [sp + 0x58]\n  1186: a1 = reverse a1\n  1188: u64 [sp + 0xa0] = a1\n  1192: i32 a2 = a0 + 0\n  1194: a3 = i32 [sp + 0x38]\n  1197: i32 a0 = sp + 0x60\n  1200: a1 = 0x3\n  1203: ecalli 4 // 'deposit_event'\n  1205: sp = s0 + 0xffffffffffffff20\n  1209: ra = u64 [sp + 0xd8]\n  1213: s0 = u64 [sp + 0xd0]\n  1217: s1 = u64 [sp + 0xc8]\n  1221: sp = sp + 0xe0\n  1225: ret\n      : @30 (gas: 23)\n  1227: sp = sp + 0xfffffffffffffee0\n  1231: u64 [sp + 0x118] = ra\n  1235: u64 [sp + 0x110] = s0\n  1239: u64 [sp + 0x108] = s1\n  1243: s0 = sp + 0x120\n  1247: sp = sp & 0xffffffffffffffe0\n  1250: s1 = u64 [a5]\n  1252: u64 [sp + 0x60] = s1\n  1255: s1 = u64 [a5 + 0x8]\n  1258: u64 [sp + 0x68] = s1\n  1261: s1 = u64 [a5 + 0x10]\n  1264: u64 [sp + 0x70] = s1\n  1267: a5 = u64 [a5 + 0x18]\n  1270: u64 [sp + 0x78] = a5\n  1273: a5 = u64 [a4]\n  1275: u64 [sp + 0x38] = a5\n  1278: a5 = u64 [a4 + 0x8]\n  1281: u64 [sp + 0x40] = a5\n  1284: a5 = u64 [a4 + 0x10]\n  1287: u64 [sp + 0x48] = a5\n  1290: a4 = u64 [a4 + 0x18]\n  1293: u64 [sp + 0x50] = a4\n  1296: t0 = 16, jump @1390\n      : @31 [@dyn 8] (gas: 2)\n  1302: u64 [sp + 0x58] = a1\n  1305: ra = 18, jump @33\n      : @32 [@dyn 9] (gas: 58)\n  1310: a1 = reverse s1\n  1312: u64 [sp + 0x98] = a1\n  1316: a1 = u64 [sp]\n  1318: a1 = reverse a1\n  1320: u64 [sp + 0x90] = a1\n  1324: a1 = u64 [sp + 0x8]\n  1327: a1 = reverse a1\n  1329: u64 [sp + 0x88] = a1\n  1333: a1 = u64 [sp + 0x10]\n  1336: a1 = reverse a1\n  1338: u64 [sp + 0x80] = a1\n  1342: a1 = u64 [sp + 0x18]\n  1345: a1 = reverse a1\n  1347: u64 [sp + 0xb8] = a1\n  1351: a1 = u64 [sp + 0x20]\n  1354: a1 = reverse a1\n  1356: u64 [sp + 0xb0] = a1\n  1360: a1 = u64 [sp + 0x28]\n  1363: a1 = reverse a1\n  1365: u64 [sp + 0xa8] = a1\n  1369: a1 = u64 [sp + 0x30]\n  1372: a1 = reverse a1\n  1374: u64 [sp + 0xa0] = a1\n  1378: a1 = u64 [sp + 0x38]\n  1381: a1 = reverse a1\n  1383: u64 [sp + 0xd8] = a1\n  1387: a1 = u64 [sp + 0x40]\n  1390: a1 = reverse a1\n  1392: u64 [sp + 0xd0] = a1\n  1396: a1 = u64 [sp + 0x48]\n  1399: a1 = reverse a1\n  1401: u64 [sp + 0xc8] = a1\n  1405: a1 = u64 [sp + 0x50]\n  1408: a1 = reverse a1\n  1410: u64 [sp + 0xc0] = a1\n  1414: a1 = u64 [sp + 0x60]\n  1417: a1 = reverse a1\n  1419: u64 [sp + 0xf8] = a1\n  1423: a1 = u64 [sp + 0x68]\n  1426: a1 = reverse a1\n  1428: u64 [sp + 0xf0] = a1\n  1432: a1 = u64 [sp + 0x70]\n  1435: a1 = reverse a1\n  1437: u64 [sp + 0xe8] = a1\n  1441: a1 = u64 [sp + 0x78]\n  1444: a1 = reverse a1\n  1446: u64 [sp + 0xe0] = a1\n  1450: i32 a2 = a0 + 0\n  1452: a3 = i32 [sp + 0x58]\n  1455: i32 a0 = sp + 0x80\n  1459: a1 = 0x4\n  1462: ecalli 4 // 'deposit_event'\n  1464: sp = s0 + 0xfffffffffffffee0\n  1468: ra = u64 [sp + 0x118]\n  1472: s0 = u64 [sp + 0x110]\n  1476: s1 = u64 [sp + 0x108]\n  1480: sp = sp + 0x120\n  1484: ret\n      : @33 (gas: 2)\n  1486: i32 a2 = a0 >> 0x10\n  1489: jump @38 if a2 != 0\n      : @34 (gas: 4)\n  1492: a1 = a1 + a0\n  1495: i32 a1 = a1 + 0x1f\n  1498: a1 = a1 & 0xffffffffffffffe0\n  1501: jump @38 if a1 >u 65536\n      : @35 (gas: 3)\n  1507: a2 = 0x20264\n  1512: a3 = i32 [0x20264]\n  1517: jump @37 if a3 >=u a1\n      : @36 (gas: 2)\n  1520: u32 [0x20264] = a1\n  1525: fallthrough\n      : @37 (gas: 4)\n  1526: a1 = 0x20270\n  1531: i32 a0 = a0 + 0\n  1533: a0 = a0 + a1\n  1536: ret\n      : @38 (gas: 1)\n  1538: trap\n      : @39 (gas: 6)\n  1539: sp = sp + 0xfffffffffffffff0\n  1542: u64 [sp + 0x8] = ra\n  1545: u64 [sp] = s0\n  1547: s0 = a0 & 0x1\n  1550: ecalli 2 // 'call_data_size'\n  1552: fallthrough\n      : @40 (gas: 2)\n  1553: u32 [0x20260] = a0\n  1558: jump @42 if s0 == 0\n      : @41 (gas: 1)\n  1561: ra = 20, jump @43\n      : @42 [@dyn 10] (gas: 18)\n  1565: ra = 0x16\n  1568: sp = sp + 0xfffffffffffffe10\n  1572: u64 [sp + 0x1e8] = ra\n  1576: u64 [sp + 0x1e0] = s0\n  1580: u64 [sp + 0x1d8] = s1\n  1584: s0 = sp + 0x1f0\n  1588: sp = sp + 0xffffffffffffe650\n  1592: sp = sp & 0xffffffffffffffe0\n  1595: s1 = sp\n  1597: a2 = s1 + 0x1038\n  1601: u64 [a2 + 1248] = 0\n  1605: u64 [a2 + 1240] = 0\n  1609: u64 [a2 + 1224] = 0x80\n  1615: a0 = 0x40\n  1618: a1 = s1 + 0x1500\n  1622: u64 [a2 + 1232] = 0\n  1626: ra = 0x102\n  1630: jump @19\n      : @43 [@dyn 11] (gas: 21)\n  1633: sp = sp + 0xfffffffffffff808\n  1637: a0 = sp + 0x700\n  1641: u64 [a0 + 0xf0] = ra\n  1645: u64 [a0 + 0xe8] = s0\n  1649: u64 [a0 + 0xe0] = s1\n  1653: s0 = sp + 0x7f8\n  1657: sp = sp + 0xfffffffffffffcf8\n  1661: sp = sp & 0xffffffffffffffe0\n  1664: s1 = sp\n  1666: a0 = s1 + 0x1000\n  1670: u64 [a0 + 4294965304] = 0\n  1674: a0 = s1 + 0x1000\n  1678: u64 [a0 + 4294965296] = 0\n  1682: a1 = s1 + 0x1000\n  1686: u64 [a1 + 4294965280] = 0x80\n  1692: a0 = 0x40\n  1695: a1 = s1 + 0x7ff\n  1699: a1 = a1 + 0x21\n  1702: a2 = s1 + 0x1000\n  1706: u64 [a2 + 4294965288] = 0\n  1710: ra = 24, jump @19\n      : @44 [@dyn 12] (gas: 12)\n  1715: a0 = s1 + 0x1000\n  1719: u64 [a0 + 4294965336] = 0\n  1723: a0 = s1 + 0x1000\n  1727: u64 [a0 + 4294965328] = 0\n  1731: a0 = s1 + 0x1000\n  1735: u64 [a0 + 4294965320] = 0\n  1739: a0 = s1 + 0x1000\n  1743: u64 [a0 + 4294965312] = 0\n  1747: a0 = s1 + 0x1000\n  1751: i32 a0 = a0 + 0xfffffffffffff840\n  1755: ecalli 10 // 'value_transferred'\n  1757: fallthrough\n      : @45 (gas: 12)\n  1758: a0 = s1 + 0x1000\n  1762: a0 = u64 [a0 + 0xfffffffffffff850]\n  1766: a1 = s1 + 0x1000\n  1770: a1 = u64 [a1 + 0xfffffffffffff858]\n  1774: a2 = s1 + 0x1000\n  1778: a2 = u64 [a2 + 0xfffffffffffff848]\n  1782: a3 = s1 + 0x1000\n  1786: a3 = u64 [a3 + 0xfffffffffffff840]\n  1790: a1 = a1 | a2\n  1793: a0 = a0 | a3\n  1796: a0 = a0 | a1\n  1799: jump @47 if a0 == 0\n      : @46 (gas: 1)\n  1802: jump @214\n      : @47 (gas: 10)\n  1805: a2 = u32 [0x20260]\n  1810: u64 [s1 + 2040] = 0\n  1814: u64 [s1 + 2032] = 0\n  1818: u64 [s1 + 2024] = 0\n  1822: a0 = s1 + 0x7ff\n  1826: a0 = a0 + 0x1\n  1829: a1 = s1 + 0x7e0\n  1833: u64 [s1 + 0x130] = a2\n  1837: u64 [s1 + 0x7e0] = a2\n  1841: ra = 26, jump @856\n      : @48 [@dyn 13] (gas: 18)\n  1846: a0 = s1 + 0x1000\n  1850: a2 = u64 [a0 + 0xfffffffffffff818]\n  1854: a0 = s1 + 0x1000\n  1858: a3 = u64 [a0 + 0xfffffffffffff810]\n  1862: a0 = s1 + 0x1000\n  1866: a0 = u64 [a0 + 0xfffffffffffff808]\n  1870: a1 = s1 + 0x1000\n  1874: a1 = u64 [a1 + 0xfffffffffffff800]\n  1878: u64 [s1 + 0x128] = a0\n  1882: a0 = a0 | a2\n  1885: u64 [s1 + 0x138] = a1\n  1889: a1 = a1 | a3\n  1892: a1 = a1 | a0\n  1895: a1 = a1 >> 0x20\n  1898: a0 = a0 | a3\n  1901: a0 = a0 << 0x20\n  1904: a0 = a0 | a1\n  1907: jump @50 if a0 == 0\n      : @49 (gas: 1)\n  1910: jump @213\n      : @50 (gas: 5)\n  1913: u64 [s1 + 0x118] = a3\n  1917: u64 [s1 + 0x120] = a2\n  1921: a0 = u64 [s1 + 0x138]\n  1925: a1 = u64 [s1 + 0x130]\n  1929: ra = 28, jump @33\n      : @51 [@dyn 14] (gas: 5)\n  1934: i32 a0 = a0 + 0\n  1936: a1 = i32 [s1 + 0x130]\n  1940: a2 = 0\n  1942: ecalli 0 // 'call_data_copy'\n  1943: fallthrough\n      : @52 (gas: 2)\n  1944: a1 = u64 [s1 + 0x130]\n  1948: jump @54 if a1 >u 95\n      : @53 (gas: 1)\n  1952: jump @215\n      : @54 (gas: 3)\n  1955: a0 = s1 + 0x7c0\n  1959: a1 = u64 [s1 + 0x138]\n  1963: ra = 30, jump @17\n      : @55 [@dyn 15] (gas: 11)\n  1968: a3 = s1 + 0x100\n  1972: a0 = u64 [a3 + 0x20]\n  1975: a1 = u64 [a3 + 0x18]\n  1978: a2 = a1 | a0\n  1981: a0 = 0xffffffe0\n  1991: a1 = u64 [a3 + 0x38]\n  1994: a0 = a1 <u a0\n  1997: a1 = u64 [a3 + 0x28]\n  2000: a0 = 0 if a1 != 0\n  2002: a0 = 0 if a2 != 0\n  2004: jump @57 if a0 != 0\n      : @56 (gas: 1)\n  2007: jump @213\n      : @57 (gas: 13)\n  2010: u64 [s1 + 0x110] = a2\n  2014: a0 = u64 [s1 + 0x7d8]\n  2018: u64 [s1 + 0x88] = a0\n  2022: a0 = u64 [s1 + 0x7d0]\n  2026: u64 [s1 + 0x80] = a0\n  2030: a0 = u64 [s1 + 0x7c8]\n  2034: u64 [s1 + 0x78] = a0\n  2037: a0 = u64 [s1 + 0x7c0]\n  2041: u64 [s1 + 0x70] = a0\n  2044: a0 = u64 [s1 + 0x138]\n  2048: i32 a1 = a0 + 0x20\n  2051: a0 = s1 + 0x7a0\n  2055: ra = 32, jump @17\n      : @58 [@dyn 16] (gas: 7)\n  2060: t0 = u64 [s1 + 0x7b8]\n  2064: t2 = u64 [s1 + 0x7b0]\n  2068: a4 = u64 [s1 + 0x7a8]\n  2072: a2 = t2 | t0\n  2075: a3 = a4 <u 0x1\n  2078: a3 = 0 if a2 != 0\n  2080: jump @60 if a3 != 0\n      : @59 (gas: 1)\n  2083: jump @216\n      : @60 (gas: 48)\n  2086: a3 = u64 [s1 + 0x7a0]\n  2090: a2 = u64 [s1 + 0x138]\n  2094: a0 = u64 [s1 + 0x130]\n  2098: ra = a2 + a0\n  2101: a1 = ra <u a2\n  2104: a2 = a2 + a3\n  2107: u64 [s1 + 0x130] = a2\n  2111: a3 = a2 <u a3\n  2114: a5 = u64 [s1 + 0x128]\n  2118: a0 = a4 + a5\n  2121: t1 = a0 + a3\n  2124: a2 = t1 ^ a4\n  2127: a4 = t1 <u a4\n  2130: a4 = a3 if a2 == 0\n  2133: a0 = a5\n  2135: a5 = a5 + a1\n  2138: a2 = a5 <u a0\n  2141: a2 = a1 if a1 == 0\n  2144: a1 = u64 [s1 + 0x118]\n  2148: a3 = t2 + a1\n  2151: t2 = a3 <u t2\n  2154: a0 = u64 [s1 + 0x120]\n  2158: t0 = t0 + a0\n  2161: t0 = t0 + t2\n  2164: t2 = a1 + a2\n  2167: a4 = a4 + a3\n  2170: a2 = a4 <u a3\n  2173: a3 = t0 + a2\n  2176: a1 = t2 <u a1\n  2179: a0 = a0 + a1\n  2182: u64 [s1 + 0x108] = ra\n  2186: u64 [s1 + 0x740] = ra\n  2190: u64 [s1 + 0x100] = a5\n  2194: u64 [s1 + 0x748] = a5\n  2198: a1 = u64 [s1 + 0x130]\n  2202: a5 = s1 + 0x700\n  2206: u64 [a5 + 0x60] = a1\n  2209: u64 [s1 + 0x130] = t2\n  2213: u64 [s1 + 0x750] = t2\n  2217: u64 [s1 + 0xf8] = a0\n  2221: u64 [a5 + 0x58] = a0\n  2224: u64 [s1 + 0x768] = t1\n  2228: u64 [a5 + 0x70] = a4\n  2231: a0 = s1 + 0x780\n  2235: a1 = s1 + 0x760\n  2239: a2 = s1 + 0x740\n  2243: u64 [a5 + 0x78] = a3\n  2246: ra = 34, jump @867\n      : @61 [@dyn 17] (gas: 9)\n  2251: a0 = 0xffffffc0\n  2261: a2 = s1 + 0x100\n  2265: a1 = u64 [a2 + 0x38]\n  2268: a0 = a1 <u a0\n  2271: a1 = u64 [a2 + 0x28]\n  2274: a0 = 0 if a1 != 0\n  2276: a1 = u64 [a2 + 0x10]\n  2279: a0 = 0 if a1 != 0\n  2281: jump @63 if a0 != 0\n      : @62 (gas: 1)\n  2284: jump @213\n      : @63 (gas: 12)\n  2287: a0 = u64 [s1 + 0x798]\n  2291: u64 [s1 + 0xc0] = a0\n  2295: a0 = u64 [s1 + 0x790]\n  2299: u64 [s1 + 0xb8] = a0\n  2303: a0 = u64 [s1 + 0x788]\n  2307: u64 [s1 + 0xc8] = a0\n  2311: a0 = u64 [s1 + 0x780]\n  2315: u64 [s1 + 0xd0] = a0\n  2319: a0 = u64 [s1 + 0x138]\n  2323: i32 a1 = a0 + 0x40\n  2326: a0 = s1 + 0x720\n  2330: ra = 36, jump @17\n      : @64 [@dyn 18] (gas: 7)\n  2335: t0 = u64 [s1 + 0x738]\n  2339: a1 = u64 [s1 + 0x730]\n  2343: a2 = u64 [s1 + 0x728]\n  2347: a3 = a1 | t0\n  2350: a4 = a2 <u 0x1\n  2353: a4 = 0 if a3 != 0\n  2355: jump @66 if a4 != 0\n      : @65 (gas: 1)\n  2358: jump @217\n      : @66 (gas: 37)\n  2361: a3 = u64 [s1 + 0x720]\n  2365: a4 = u64 [s1 + 0x138]\n  2369: a4 = a4 + a3\n  2372: a3 = a4 <u a3\n  2375: a5 = u64 [s1 + 0x128]\n  2379: a5 = a5 + a2\n  2382: a5 = a5 + a3\n  2385: a0 = a5 ^ a2\n  2388: a2 = a5 <u a2\n  2391: a2 = a3 if a0 == 0\n  2394: a0 = u64 [s1 + 0x118]\n  2398: a0 = a0 + a1\n  2401: a2 = a2 + a0\n  2404: a3 = a2 <u a0\n  2407: a0 = a0 <u a1\n  2410: a1 = u64 [s1 + 0x120]\n  2414: t0 = t0 + a1\n  2417: a0 = a0 + t0\n  2420: a3 = a3 + a0\n  2423: a1 = s1 + 0x100\n  2427: a0 = u64 [a1 + 0x8]\n  2430: u64 [s1 + 0x6c0] = a0\n  2434: a0 = u64 [a1]\n  2436: u64 [s1 + 0x6c8] = a0\n  2440: u64 [s1 + 0x6e0] = a4\n  2444: a0 = u64 [a1 + 0x30]\n  2447: a4 = s1 + 0x600\n  2451: u64 [a4 + 0xd0] = a0\n  2455: a0 = u64 [s1 + 0xf8]\n  2459: u64 [a4 + 0xd8] = a0\n  2463: u64 [a4 + 0xe8] = a5\n  2467: u64 [a4 + 0xf0] = a2\n  2471: a0 = s1 + 0x700\n  2475: a1 = s1 + 0x6e0\n  2479: a2 = s1 + 0x6c0\n  2483: u64 [a4 + 0xf8] = a3\n  2487: ra = 38, jump @867\n      : @67 [@dyn 19] (gas: 12)\n  2492: a2 = u64 [s1 + 0xb8]\n  2496: a4 = u64 [s1 + 0xd0]\n  2500: a0 = a4 | a2\n  2503: a1 = u64 [s1 + 0xc0]\n  2507: a3 = u64 [s1 + 0xc8]\n  2511: a1 = a1 | a3\n  2514: a0 = a0 | a1\n  2517: a0 = a0 >> 0x20\n  2520: a1 = a1 | a2\n  2523: a1 = a1 << 0x20\n  2526: a0 = a0 | a1\n  2529: jump @69 if a0 == 0\n      : @68 (gas: 1)\n  2532: jump @213\n      : @69 (gas: 12)\n  2535: a1 = a4\n  2537: a2 = s1 + 0x700\n  2541: a0 = u64 [a2 + 0x18]\n  2544: u64 [s1 + 0x98] = a0\n  2548: a0 = u64 [a2 + 0x10]\n  2551: u64 [s1 + 0x90] = a0\n  2555: a0 = u64 [a2 + 0x8]\n  2558: u64 [s1 + 0xa0] = a0\n  2562: a0 = u64 [a2]\n  2564: u64 [s1 + 0xa8] = a0\n  2568: a0 = s1 + 0x6a0\n  2572: ra = 40, jump @17\n      : @70 [@dyn 20] (gas: 17)\n  2577: a0 = s1 + 0x600\n  2581: a3 = u64 [a0 + 0xb8]\n  2585: a1 = u64 [a0 + 0xb0]\n  2589: a2 = u64 [a0 + 0xa8]\n  2593: a0 = a3 >u 0\n  2595: a4 = a1 >u 0\n  2597: a4 = a0 if a3 != 0\n  2600: u64 [s1 + 0xf0] = a2\n  2604: a0 = a2 >u 0\n  2606: u64 [s1 + 0x60] = a1\n  2609: u64 [s1 + 0xe8] = a3\n  2613: a1 = a1 | a3\n  2616: u64 [s1 + 0x58] = a0\n  2619: u64 [s1 + 0xb0] = a4\n  2623: u64 [s1 + 0xe0] = a1\n  2627: a0 = a4 if a1 != 0\n  2630: jump @72 if a0 == 0\n      : @71 (gas: 1)\n  2633: jump @218\n      : @72 (gas: 14)\n  2636: a0 = u64 [s1 + 0x6a0]\n  2640: u64 [s1 + 0x68] = a0\n  2643: a0 = s1 + 0x1000\n  2647: u64 [a0 + 4294965368] = 0\n  2651: a0 = s1 + 0x1000\n  2655: u64 [a0 + 4294965360] = 0\n  2659: a0 = s1 + 0x1000\n  2663: u64 [a0 + 4294965352] = 0\n  2667: a1 = s1 + 0x1000\n  2671: u64 [a1 + 4294965344] = 0x3\n  2676: a0 = s1 + 0x680\n  2680: a1 = s1 + 0x7ff\n  2684: a1 = a1 + 0x61\n  2687: ra = 42, jump @21\n      : @73 [@dyn 21] (gas: 6)\n  2692: a4 = s1 + 0x600\n  2696: a0 = u64 [a4 + 0x90]\n  2700: a1 = u64 [a4 + 0x88]\n  2704: a2 = u64 [a4 + 0x80]\n  2708: a3 = u64 [a4 + 0x98]\n  2712: t0 = 44, jump @1382\n      : @74 [@dyn 22] (gas: 12)\n  2717: t0 = a2 <u 0x1\n  2720: ra = a1 & 0x7f\n  2723: t2 = a5 & a0\n  2726: a4 = a5 & t1\n  2729: ra = a1 if a2 != 0\n  2732: a1 = ra <u 0x20\n  2735: a5 = a5 & a3\n  2738: a2 = a1\n  2740: a2 = 0 if a4 != 0\n  2742: a0 = t2 | a5\n  2745: a2 = 0 if a0 != 0\n  2747: jump @76 if t0 == a2\n      : @75 (gas: 1)\n  2750: jump @224\n      : @76 (gas: 1)\n  2753: t0 = 46, jump @1391\n      : @77 [@dyn 23] (gas: 4)\n  2758: a0 = u64 [s1 + 0x68]\n  2761: a0 = a0 <u 0x20\n  2764: u64 [s1 + 0xd8] = a0\n  2768: jump @86 if a3 == 0\n      : @78 (gas: 11)\n  2772: u64 [s1 + 0x110] = a4\n  2776: u64 [s1 + 0x118] = ra\n  2780: u64 [s1 + 0x120] = a5\n  2784: u64 [s1 + 0x130] = t2\n  2788: u64 [s1 + 1656] = 0\n  2792: u64 [s1 + 1648] = 0\n  2796: u64 [s1 + 1640] = 0\n  2800: a1 = s1 + 0x660\n  2804: u64 [s1 + 1632] = 0x3\n  2809: a0 = 0\n  2811: ra = 48, jump @19\n      : @79 [@dyn 24] (gas: 2)\n  2816: a1 = i32 [0x20264]\n  2821: jump @81 if a1 >u 31\n      : @80 (gas: 2)\n  2825: u32 [0x20264] = 0x20\n  2831: fallthrough\n      : @81 (gas: 87)\n  2832: a0 = sp + 0xffffffffffffffe0\n  2835: a2 = a0 & 0xffffffffffffffe0\n  2838: u64 [s1 + 0x128] = a2\n  2842: sp = a2\n  2844: a0 = 0x20270\n  2849: i32 a0 = a0 + 0\n  2851: i32 a2 = a2 + 0\n  2853: a1 = 0x20\n  2856: ecalli 6 // 'hash_keccak_256'\n  2858: a0 = u64 [s1 + 0x68]\n  2861: a1 = a0 + 0x1f\n  2864: a0 = a1 <u a0\n  2867: a5 = u64 [s1 + 0xf0]\n  2871: a2 = a5 + a0\n  2874: a3 = a2 <u a5\n  2877: a3 = a0 if a0 == 0\n  2880: a4 = u64 [s1 + 0x60]\n  2883: a3 = a3 + a4\n  2886: u64 [s1 + 0x108] = a3\n  2890: a3 = a3 << 0x3b\n  2893: a4 = a2 >> 0x5\n  2896: a4 = a4 | a3\n  2899: a0 = u64 [s1 + 0x128]\n  2903: t1 = u64 [a0 + 0x18]\n  2906: a2 = a2 << 0x3b\n  2909: a3 = u64 [a0 + 0x10]\n  2912: a1 = a1 >> 0x5\n  2915: a0 = a1 | a2\n  2918: t2 = reverse t1\n  2920: a2 = reverse a3\n  2922: a1 = u64 [s1 + 0xd8]\n  2926: a1 = 0 if a5 != 0\n  2928: a3 = u64 [s1 + 0xe0]\n  2932: a1 = 0 if a3 != 0\n  2934: a4 = 0 if a1 != 0\n  2936: a0 = 0 if a1 != 0\n  2938: t0 = t2 + a0\n  2941: a0 = t0 <u t2\n  2944: a5 = a2 + a0\n  2947: a4 = a4 + a5\n  2950: u64 [s1 + 0x138] = a4\n  2954: a5 = a4 ^ a2\n  2957: a3 = a4 <u a2\n  2960: a3 = a0 if a5 == 0\n  2963: u64 [s1 + 0x100] = a3\n  2967: a0 = u64 [s1 + 0x118]\n  2971: ra = a0 + 0x1f\n  2974: a4 = ra <u a0\n  2977: a3 = u64 [s1 + 0x110]\n  2981: a0 = a3 + a4\n  2984: a5 = a0 <u a3\n  2987: a5 = a4 if a4 == 0\n  2990: t1 = u64 [s1 + 0x130]\n  2994: t1 = t1 + a5\n  2997: a4 = t1 << 0x3b\n  3000: a3 = a0 >> 0x5\n  3003: a3 = a3 | a4\n  3006: a0 = a0 << 0x3b\n  3009: a4 = ra >> 0x5\n  3012: a0 = a0 | a4\n  3015: a0 = a0 + t2\n  3018: u64 [s1 + 0x118] = a0\n  3022: a0 = a0 <u t2\n  3025: t2 = t0\n  3027: a4 = a2 + a0\n  3030: a4 = a4 + a3\n  3033: a3 = a4 ^ a2\n  3036: u64 [s1 + 0x110] = a4\n  3040: a2 = a4 <u a2\n  3043: a2 = a0 if a3 == 0\n  3046: a4 = u64 [s1 + 0x108]\n  3050: a0 = u64 [s1 + 0x60]\n  3053: a0 = a4 <u a0\n  3056: a3 = u64 [s1 + 0xe8]\n  3060: a0 = a0 + a3\n  3063: a3 = a4 >> 0x5\n  3066: a4 = a0 << 0x3b\n  3069: a3 = a3 | a4\n  3072: a4 = u64 [s1 + 0x128]\n  3076: t0 = u64 [a4]\n  3078: a4 = u64 [a4 + 0x8]\n  3081: a0 = a0 >> 0x5\n  3084: a3 = 0 if a1 != 0\n  3086: a0 = 0 if a1 != 0\n  3088: a1 = reverse a4\n  3090: a4 = reverse t0\n  3092: t0 = 50, jump @1418\n      : @82 [@dyn 25] (gas: 25)\n  3097: t0 = a0 + a3\n  3100: a0 = u64 [s1 + 0x130]\n  3104: a0 = t1 <u a0\n  3107: a3 = u64 [s1 + 0x120]\n  3111: a0 = a0 + a3\n  3114: a3 = t1 >> 0x5\n  3117: a5 = a0 << 0x3b\n  3120: a3 = a3 | a5\n  3123: a0 = a0 >> 0x5\n  3126: a0 = a0 + a4\n  3129: a5 = s1 + 0x100\n  3133: a4 = u64 [a5 + 0x38]\n  3136: a3 = a3 + a1\n  3139: a1 = a3 <u a1\n  3142: a0 = a0 + a1\n  3145: a2 = a2 + a3\n  3148: u64 [a5 + 0x8] = a2\n  3151: a1 = a2 <u a3\n  3154: a0 = a0 + a1\n  3157: u64 [a5] = a0\n  3159: a0 = sp + 0xffffffffffffffe0\n  3162: t1 = a0 & 0xffffffffffffffe0\n  3165: sp = t1\n  3167: u64 [s1 + 0xf8] = t1\n  3171: fallthrough\n      : @83 (gas: 20)\n  3172: a0 = u64 [s1 + 0x118]\n  3176: a0 = t2 <u a0\n  3179: a2 = u64 [s1 + 0x110]\n  3183: a1 = a4 ^ a2\n  3186: a2 = a4 <u a2\n  3189: a2 = a0 if a1 == 0\n  3192: a5 = u64 [s1 + 0x108]\n  3196: a0 = ra <u a5\n  3199: a3 = u64 [s1 + 0x100]\n  3203: a1 = t0 ^ a3\n  3206: a3 = t0 <u a3\n  3209: a3 = a0 if a1 == 0\n  3212: a0 = ra ^ a5\n  3215: a0 = a0 | a1\n  3218: a3 = a2 if a0 == 0\n  3221: u64 [t1] = t2\n  3223: u64 [t1 + 0x8] = a4\n  3226: u64 [t1 + 0x10] = ra\n  3229: u64 [t1 + 0x18] = t0\n  3232: jump @86 if a3 == 0\n      : @84 (gas: 16)\n  3235: a0 = s1 + 0x1000\n  3239: u64 [a0 + 4294965400] = 0\n  3243: a0 = s1 + 0x1000\n  3247: u64 [a0 + 4294965392] = 0\n  3251: a0 = s1 + 0x1000\n  3255: u64 [a0 + 4294965384] = 0\n  3259: a0 = s1 + 0x1000\n  3263: u64 [a0 + 4294965376] = 0\n  3267: a1 = s1 + 0x7ff\n  3271: a1 = a1 + 0x81\n  3275: a0 = t1\n  3277: u64 [s1 + 0x130] = t2\n  3281: u64 [s1 + 0x138] = a4\n  3285: u64 [s1 + 0x128] = t0\n  3289: u64 [s1 + 0x120] = ra\n  3293: ra = 52, jump @24\n      : @85 [@dyn 26] (gas: 15)\n  3298: t1 = u64 [s1 + 0xf8]\n  3302: t0 = u64 [s1 + 0x128]\n  3306: a4 = u64 [s1 + 0x138]\n  3310: t2 = u64 [s1 + 0x130]\n  3314: t2 = t2 + 0x1\n  3317: a0 = t2 <u 0x1\n  3320: a4 = a4 + a0\n  3323: a0 = t2 | a4\n  3326: a0 = a0 <u 0x1\n  3329: a1 = u64 [s1 + 0x120]\n  3333: a0 = a0 + a1\n  3336: a1 = a0 <u a1\n  3339: t0 = t0 + a1\n  3342: ra = a0\n  3344: jump @83\n      : @86 (gas: 23)\n  3347: a0 = u64 [s1 + 0xd8]\n  3351: a0 = a0 ^ 0x1\n  3354: a5 = u64 [s1 + 0xf0]\n  3358: a1 = u64 [s1 + 0x58]\n  3361: a0 = a1 if a5 != 0\n  3364: a1 = u64 [s1 + 0xb0]\n  3368: a2 = u64 [s1 + 0xe0]\n  3372: a0 = a1 if a2 != 0\n  3375: ra = u64 [s1 + 0xe8]\n  3379: a4 = a5 | ra\n  3382: a1 = u64 [s1 + 0x60]\n  3385: t2 = a1 >> 0x3f\n  3388: ra = ra << 0x1\n  3391: a2 = a5 >> 0x3f\n  3394: u64 [s1 + 0x58] = a2\n  3397: a2 = a1 << 0x1\n  3400: u64 [s1 + 0x48] = a2\n  3403: a3 = u64 [s1 + 0x68]\n  3406: t0 = a3 >> 0x3f\n  3409: a2 = a5 << 0x1\n  3412: u64 [s1 + 0x50] = a2\n  3415: a2 = a3 << 0x1\n  3418: jump @98 if a0 == 0\n      : @87 (gas: 14)\n  3422: u64 [s1 + 0x20] = a4\n  3425: u64 [s1 + 0x30] = t0\n  3428: u64 [s1 + 0x38] = ra\n  3431: u64 [s1 + 0x28] = t2\n  3434: u64 [s1 + 0x40] = a2\n  3437: a3 = a3 & 0xffffffffffffffe0\n  3440: u64 [s1 + 0xb0] = a3\n  3444: u64 [s1 + 1592] = 0\n  3448: u64 [s1 + 1584] = 0\n  3452: u64 [s1 + 1576] = 0\n  3456: a1 = s1 + 0x620\n  3460: u64 [s1 + 1568] = 0x3\n  3465: a0 = 0\n  3467: ra = 54, jump @19\n      : @88 [@dyn 27] (gas: 7)\n  3472: a0 = sp + 0xffffffffffffffe0\n  3475: a0 = a0 & 0xffffffffffffffe0\n  3478: u64 [s1 + 0x110] = a0\n  3482: sp = a0\n  3484: a1 = 0x20\n  3487: a0 = 0\n  3489: ra = 56, jump @33\n      : @89 [@dyn 28] (gas: 1)\n  3494: t0 = 58, jump @1412\n      : @90 [@dyn 29] (gas: 5)\n  3499: ecalli 6 // 'hash_keccak_256'\n  3501: u64 [s1 + 312] = 0x20\n  3506: a5 = 0\n  3508: u64 [s1 + 304] = 0\n  3512: t0 = 60, jump @1398\n      : @91 [@dyn 30] (gas: 15)\n  3517: t0 = u64 [a3]\n  3519: t1 = reverse a0\n  3521: a1 = reverse a1\n  3523: a3 = reverse a2\n  3525: a2 = reverse t0\n  3527: t0 = a2\n  3529: a0 = u64 [s1 + 0x110]\n  3533: u64 [a0 + 0x18] = a2\n  3536: u64 [s1 + 0xf0] = a3\n  3540: u64 [a0 + 0x10] = a3\n  3543: u64 [s1 + 0x108] = a1\n  3547: u64 [a0 + 0x8] = a1\n  3550: a3 = t1\n  3552: u64 [a0] = t1\n  3554: fallthrough\n      : @92 (gas: 25)\n  3555: t2 = t0\n  3557: t1 = a3\n  3559: a0 = u64 [s1 + 0xb0]\n  3563: u64 [s1 + 0x100] = a4\n  3567: a0 = a4 <u a0\n  3570: a4 = a0 ^ 0x1\n  3573: u64 [s1 + 0xf8] = ra\n  3577: a4 = 0x1 if ra != 0\n  3580: a0 = u64 [s1 + 0x120]\n  3584: a2 = u64 [s1 + 0x118]\n  3588: a0 = a0 | a2\n  3591: a4 = 0x1 if a0 != 0\n  3594: a1 = u64 [s1 + 0xd0]\n  3598: a0 = u64 [s1 + 0x138]\n  3602: a1 = a1 + a0\n  3605: a3 = u64 [s1 + 0xc8]\n  3609: t0 = a5\n  3611: a3 = a3 + a5\n  3614: a2 = u64 [s1 + 0xb8]\n  3618: a0 = u64 [s1 + 0x130]\n  3622: a2 = a2 + a0\n  3625: a0 = u64 [s1 + 0xc0]\n  3629: a5 = u64 [s1 + 0x128]\n  3633: a0 = a0 + a5\n  3636: jump @100 if a4 != 0\n      : @93 (gas: 23)\n  3640: a4 = u64 [s1 + 0x138]\n  3644: a4 = a1 <u a4\n  3647: ra = a3 + a4\n  3650: a3 = t0\n  3652: t0 = ra ^ t0\n  3655: a5 = ra <u a3\n  3658: a5 = a4 if t0 == 0\n  3661: a5 = a5 + a2\n  3664: t0 = a5 <u a2\n  3667: a4 = u64 [s1 + 0x130]\n  3671: a2 = a2 <u a4\n  3674: a0 = a0 + a2\n  3677: a0 = a0 + t0\n  3680: a2 = a1 | a5\n  3683: a0 = ra | a0\n  3686: a2 = a2 | a0\n  3689: a2 = a2 >> 0x20\n  3692: a0 = a0 | a5\n  3695: a0 = a0 << 0x20\n  3698: a0 = a0 | a2\n  3701: u64 [s1 + 0xe8] = t1\n  3705: u64 [s1 + 0xe0] = t2\n  3709: jump @95 if a0 == 0\n      : @94 (gas: 1)\n  3712: jump @213\n      : @95 (gas: 3)\n  3715: a0 = s1 + 0x1c0\n  3719: u64 [s1 + 0xd8] = a3\n  3723: ra = 62, jump @17\n      : @96 [@dyn 31] (gas: 16)\n  3728: a0 = u64 [s1 + 0x1d8]\n  3732: a1 = u64 [s1 + 0x1d0]\n  3736: a2 = u64 [s1 + 0x1c8]\n  3740: a3 = u64 [s1 + 0x1c0]\n  3744: a4 = s1 + 0x7ff\n  3748: a4 = a4 + 0xb9\n  3752: u64 [a4] = a0\n  3754: u64 [a4 + 0xfffffffffffffff8] = a1\n  3757: a0 = s1 + 0x1000\n  3761: u64 [a0 + 0xfffffffffffff8a8] = a2\n  3765: a0 = s1 + 0x1000\n  3769: u64 [a0 + 0xfffffffffffff8a0] = a3\n  3773: a1 = s1 + 0x7ff\n  3777: a1 = a1 + 0xa1\n  3781: a0 = u64 [s1 + 0x110]\n  3785: ra = 64, jump @24\n      : @97 [@dyn 32] (gas: 56)\n  3790: ra = u64 [s1 + 0xe8]\n  3794: ra = ra + 0x1\n  3797: a0 = ra <u 0x1\n  3800: t0 = u64 [s1 + 0x108]\n  3804: t0 = t0 + a0\n  3807: a0 = ra | t0\n  3810: a0 = a0 <u 0x1\n  3813: a1 = u64 [s1 + 0xf0]\n  3817: t1 = a1 + a0\n  3820: a1 = t1 <u a1\n  3823: a0 = u64 [s1 + 0xe0]\n  3827: a0 = a0 + a1\n  3830: a1 = u64 [s1 + 0x138]\n  3834: a2 = a1 + 0x20\n  3837: u64 [s1 + 0xe8] = a2\n  3841: a3 = a2 <u a1\n  3844: a1 = u64 [s1 + 0xd8]\n  3848: a2 = a1 + a3\n  3851: u64 [s1 + 0xe0] = a2\n  3855: a4 = a2 <u a1\n  3858: a4 = a3 if a3 == 0\n  3861: a1 = u64 [s1 + 0x130]\n  3865: t2 = a1 + a4\n  3868: a4 = t2 <u a1\n  3871: a1 = u64 [s1 + 0x128]\n  3875: a1 = a1 + a4\n  3878: u64 [s1 + 0x128] = a1\n  3882: a1 = u64 [s1 + 0x100]\n  3886: a4 = a1 + 0x20\n  3889: a5 = a4 <u a1\n  3892: a2 = u64 [s1 + 0xf8]\n  3896: a1 = a2 + a5\n  3899: a2 = a1 <u a2\n  3902: a2 = a5 if a5 == 0\n  3905: a3 = u64 [s1 + 0x118]\n  3909: a2 = a2 + a3\n  3912: a5 = a2 <u a3\n  3915: a3 = u64 [s1 + 0x120]\n  3919: a3 = a3 + a5\n  3922: u64 [s1 + 0x120] = a3\n  3926: u64 [s1 + 0x108] = t0\n  3930: a5 = u64 [s1 + 0x110]\n  3934: u64 [a5 + 0x8] = t0\n  3937: a3 = ra\n  3939: u64 [a5] = ra\n  3941: u64 [a5 + 0x10] = t1\n  3944: t0 = a0\n  3946: u64 [a5 + 0x18] = a0\n  3949: u64 [s1 + 0xf0] = t1\n  3953: a0 = u64 [s1 + 0xe8]\n  3957: u64 [s1 + 0x138] = a0\n  3961: a5 = u64 [s1 + 0xe0]\n  3965: u64 [s1 + 0x130] = t2\n  3969: ra = a1\n  3971: u64 [s1 + 0x118] = a2\n  3975: jump @92\n      : @98 (gas: 7)\n  3978: a0 = a3 | a1\n  3981: a0 = a0 | a4\n  3984: a4 = u64 [s1 + 0xd0]\n  3988: t1 = u64 [s1 + 0xc8]\n  3992: a1 = u64 [s1 + 0xc0]\n  3996: a5 = u64 [s1 + 0xb8]\n  4000: jump @114 if a0 != 0\n      : @99 (gas: 6)\n  4004: u64 [s1 + 0x40] = a2\n  4007: u64 [s1 + 288] = 0\n  4011: u64 [s1 + 280] = 0\n  4015: u64 [s1 + 296] = 0\n  4019: u64 [s1 + 304] = 0\n  4023: jump @117\n      : @100 (gas: 11)\n  4026: ra = t0\n  4028: t1 = u64 [s1 + 0x68]\n  4031: a4 = u64 [s1 + 0xb0]\n  4035: a4 = a4 ^ t1\n  4038: a5 = u64 [s1 + 0x60]\n  4041: a4 = a4 | a5\n  4044: a5 = u64 [s1 + 0x20]\n  4047: a4 = a4 | a5\n  4050: a5 = u64 [s1 + 0x38]\n  4053: t0 = u64 [s1 + 0x30]\n  4056: jump @113 if a4 == 0\n      : @101 (gas: 13)\n  4060: a4 = u64 [s1 + 0x138]\n  4064: a4 = a1 <u a4\n  4067: a3 = a3 + a4\n  4070: t0 = a3 ^ ra\n  4073: a5 = a3 <u ra\n  4076: a5 = a4 if t0 == 0\n  4079: a5 = a5 + a2\n  4082: t0 = a5 <u a2\n  4085: a4 = u64 [s1 + 0x130]\n  4089: a2 = a2 <u a4\n  4092: a0 = a0 + a2\n  4095: a0 = a0 + t0\n  4098: t0 = 66, jump @1403\n      : @102 [@dyn 33] (gas: 1)\n  4103: jump @104 if a0 == 0\n      : @103 (gas: 1)\n  4106: jump @213\n      : @104 (gas: 2)\n  4109: a0 = s1 + 0x600\n  4113: ra = 68, jump @17\n      : @105 [@dyn 34] (gas: 11)\n  4118: a1 = s1 + 0x600\n  4122: a0 = u64 [a1 + 0x18]\n  4125: u64 [s1 + 0x130] = a0\n  4129: a0 = u64 [a1 + 0x10]\n  4132: u64 [s1 + 0x128] = a0\n  4136: a0 = u64 [a1 + 0x8]\n  4139: u64 [s1 + 0x120] = a0\n  4143: a0 = u64 [a1]\n  4145: u64 [s1 + 0x118] = a0\n  4149: a0 = u64 [s1 + 0x68]\n  4152: t0 = 70, jump @1411\n      : @106 [@dyn 35] (gas: 1)\n  4157: ra = 72, jump @1428\n      : @107 [@dyn 36] (gas: 6)\n  4162: u64 [s1 + 0x108] = a0\n  4166: u64 [s1 + 0xf0] = a1\n  4170: a0 = 0xffffffffffffffff\n  4173: a1 = 0xffffffffffffffff\n  4176: a2 = u64 [s1 + 0x138]\n  4180: ra = 74, jump @1423\n      : @108 [@dyn 37] (gas: 1)\n  4185: t0 = 76, jump @1400\n      : @109 [@dyn 38] (gas: 1)\n  4190: ra = 78, jump @1423\n      : @110 [@dyn 39] (gas: 1)\n  4195: t0 = 80, jump @1351\n      : @111 [@dyn 40] (gas: 8)\n  4200: u64 [a4 + 0x20] = a3\n  4203: u64 [a4 + 0x18] = a2\n  4206: u64 [a4 + 0x10] = a1\n  4209: u64 [a4 + 0x8] = a0\n  4212: a1 = s1 + 0x7ff\n  4216: a1 = a1 + 0xc1\n  4220: a0 = u64 [s1 + 0x110]\n  4224: ra = 82, jump @24\n      : @112 [@dyn 41] (gas: 3)\n  4229: t0 = u64 [s1 + 0x30]\n  4232: a5 = u64 [s1 + 0x38]\n  4235: fallthrough\n      : @113 (gas: 25)\n  4236: a0 = u64 [s1 + 0x28]\n  4239: a0 = a0 | a5\n  4242: a1 = u64 [s1 + 0x58]\n  4245: a2 = u64 [s1 + 0x48]\n  4248: a1 = a1 | a2\n  4251: a2 = u64 [s1 + 0x50]\n  4254: a2 = a2 | t0\n  4257: a3 = u64 [s1 + 0x40]\n  4260: a3 = a3 + 0x1\n  4263: a5 = s1 + 0x7ff\n  4267: a5 = a5 + 0xb9\n  4271: u64 [a5 + 64] = 0\n  4274: u64 [a5 + 56] = 0\n  4277: u64 [a5 + 48] = 0\n  4280: u64 [a5 + 40] = 0x3\n  4284: u64 [a5 + 0x48] = a3\n  4287: u64 [a5 + 0x50] = a2\n  4290: u64 [a5 + 0x58] = a1\n  4293: u64 [a5 + 0x60] = a0\n  4296: a0 = s1 + 0x7ff\n  4300: a0 = a0 + 0xe1\n  4304: a1 = s1 + 0x7ff\n  4308: a1 = a1 + 0x101\n  4312: ra = 0x62\n  4315: jump @24\n      : @114 (gas: 6)\n  4318: a0 = a5 | a1\n  4321: a1 = 0xffffffe0\n  4331: a1 = a4 <u a1\n  4334: a1 = 0 if t1 != 0\n  4336: a1 = 0 if a0 != 0\n  4338: jump @213 if a1 == 0\n      : @115 (gas: 7)\n  4342: u64 [s1 + 0x40] = a2\n  4345: i32 a1 = a4 + 0x20\n  4348: a0 = s1 + 0x640\n  4352: u64 [s1 + 0x28] = t2\n  4355: u64 [s1 + 0x38] = ra\n  4358: u64 [s1 + 0x30] = t0\n  4361: ra = 84, jump @17\n      : @116 [@dyn 42] (gas: 15)\n  4366: t0 = u64 [s1 + 0x30]\n  4369: ra = u64 [s1 + 0x38]\n  4372: t2 = u64 [s1 + 0x28]\n  4375: a3 = u64 [s1 + 0x68]\n  4378: a1 = s1 + 0x600\n  4382: a0 = u64 [a1 + 0x58]\n  4385: a2 = s1 + 0x100\n  4389: u64 [a2 + 0x30] = a0\n  4392: a0 = u64 [a1 + 0x50]\n  4395: u64 [a2 + 0x28] = a0\n  4398: a0 = u64 [a1 + 0x48]\n  4401: u64 [a2 + 0x18] = a0\n  4404: a0 = u64 [a1 + 0x40]\n  4407: u64 [a2 + 0x20] = a0\n  4410: fallthrough\n      : @117 (gas: 10)\n  4411: a0 = u64 [s1 + 0x58]\n  4414: a1 = u64 [s1 + 0x48]\n  4417: a0 = a0 | a1\n  4420: u64 [s1 + 0x110] = a0\n  4424: a0 = ra | t2\n  4427: u64 [s1 + 0x108] = a0\n  4431: a0 = u64 [s1 + 0x50]\n  4434: a0 = a0 | t0\n  4437: u64 [s1 + 0x100] = a0\n  4441: t0 = 86, jump @1419\n      : @118 [@dyn 43] (gas: 1)\n  4446: ra = 88, jump @1428\n      : @119 [@dyn 44] (gas: 7)\n  4451: u64 [s1 + 0xe0] = a0\n  4455: u64 [s1 + 0xf8] = a1\n  4459: a0 = u64 [s1 + 0x68]\n  4462: i32 a2 = a0 << 0x3\n  4465: a0 = 0xffffffffffffffff\n  4468: a1 = 0xffffffffffffffff\n  4471: ra = 90, jump @1423\n      : @120 [@dyn 45] (gas: 10)\n  4476: u64 [s1 + 0xf0] = a0\n  4480: u64 [s1 + 0xe8] = a1\n  4484: a1 = u64 [s1 + 0xe0]\n  4488: a0 = a0 | a1\n  4491: u64 [s1 + 0xe0] = a0\n  4495: a0 = u64 [s1 + 0x138]\n  4499: i32 a2 = a0 + 0xffffffffffffff80\n  4502: a0 = 0xffffffffffffffff\n  4505: a1 = 0xffffffffffffffff\n  4508: ra = 92, jump @1423\n      : @121 [@dyn 46] (gas: 7)\n  4513: a4 = u64 [s1 + 0x138]\n  4517: a2 = a4 <u 0x80\n  4521: a3 = u64 [s1 + 0xe0]\n  4525: a0 = a3 if a2 != 0\n  4528: a5 = u64 [s1 + 0xe8]\n  4532: a3 = u64 [s1 + 0xf8]\n  4536: t0 = 94, jump @1421\n      : @122 [@dyn 47] (gas: 2)\n  4541: a4 = u64 [s1 + 0xf0]\n  4545: t0 = 96, jump @1381\n      : @123 [@dyn 48] (gas: 24)\n  4550: a4 = u64 [s1 + 0x40]\n  4553: a0 = a0 | a4\n  4556: a5 = s1 + 0x100\n  4560: a4 = u64 [a5]\n  4562: a1 = a1 | a4\n  4565: a4 = u64 [a5 + 0x8]\n  4568: a3 = a3 | a4\n  4571: a4 = u64 [a5 + 0x10]\n  4574: a2 = a2 | a4\n  4577: a5 = s1 + 0x7ff\n  4581: a5 = a5 + 0xb9\n  4585: u64 [a5 + 104] = 0x3\n  4589: u64 [a5 + 0x98] = a2\n  4593: u64 [a5 + 0xa0] = a3\n  4597: u64 [a5 + 0x90] = a1\n  4601: u64 [a5 + 0x88] = a0\n  4605: u64 [a5 + 128] = 0\n  4609: u64 [a5 + 120] = 0\n  4612: u64 [a5 + 112] = 0\n  4615: a0 = s1 + 0x7ff\n  4619: a0 = a0 + 0x121\n  4623: a1 = s1 + 0x7ff\n  4627: a1 = a1 + 0x141\n  4631: ra = 98, jump @24\n      : @124 [@dyn 49] (gas: 12)\n  4636: a1 = u64 [s1 + 0xa8]\n  4640: a4 = u64 [s1 + 0x90]\n  4644: a0 = a1 | a4\n  4647: a2 = u64 [s1 + 0xa0]\n  4651: a3 = u64 [s1 + 0x98]\n  4655: a2 = a2 | a3\n  4658: a0 = a0 | a2\n  4661: a0 = a0 >> 0x20\n  4664: a2 = a2 | a4\n  4667: a2 = a2 << 0x20\n  4670: a0 = a0 | a2\n  4673: jump @213 if a0 != 0\n      : @125 (gas: 2)\n  4677: a0 = s1 + 0x5e0\n  4681: ra = 100, jump @17\n      : @126 [@dyn 50] (gas: 17)\n  4686: a0 = s1 + 0x500\n  4690: a3 = u64 [a0 + 0xf8]\n  4694: a2 = u64 [a0 + 0xf0]\n  4698: a1 = u64 [a0 + 0xe8]\n  4702: a0 = a3 >u 0\n  4704: a4 = a2 >u 0\n  4706: a4 = a0 if a3 != 0\n  4709: u64 [s1 + 0xc0] = a1\n  4713: a0 = a1 >u 0\n  4715: u64 [s1 + 0xb8] = a2\n  4719: u64 [s1 + 0xb0] = a3\n  4723: a2 = a2 | a3\n  4726: u64 [s1 + 0xd8] = a0\n  4730: u64 [s1 + 0xe0] = a4\n  4734: u64 [s1 + 0xf0] = a2\n  4738: a0 = a4 if a2 != 0\n  4741: jump @230 if a0 != 0\n      : @127 (gas: 12)\n  4745: a0 = u64 [s1 + 0x5e0]\n  4749: u64 [s1 + 0xc8] = a0\n  4753: a1 = s1 + 0x7ff\n  4757: a1 = a1 + 0xb9\n  4761: u64 [a1 + 192] = 0\n  4765: u64 [a1 + 184] = 0\n  4769: u64 [a1 + 176] = 0\n  4773: u64 [a1 + 168] = 0x4\n  4778: a0 = s1 + 0x5c0\n  4782: a1 = s1 + 0x7ff\n  4786: a1 = a1 + 0x161\n  4790: ra = 102, jump @21\n      : @128 [@dyn 51] (gas: 6)\n  4795: a4 = s1 + 0x500\n  4799: a0 = u64 [a4 + 0xd0]\n  4803: a1 = u64 [a4 + 0xc8]\n  4807: a2 = u64 [a4 + 0xc0]\n  4811: a3 = u64 [a4 + 0xd8]\n  4815: t0 = 104, jump @1382\n      : @129 [@dyn 52] (gas: 12)\n  4820: t0 = a2 <u 0x1\n  4823: ra = a1 & 0x7f\n  4826: t2 = a5 & a0\n  4829: a4 = a5 & t1\n  4832: ra = a1 if a2 != 0\n  4835: a1 = ra <u 0x20\n  4838: a5 = a5 & a3\n  4841: a2 = a1\n  4843: a2 = 0 if a4 != 0\n  4845: a0 = t2 | a5\n  4848: a2 = 0 if a0 != 0\n  4850: jump @236 if t0 != a2\n      : @130 (gas: 1)\n  4854: t0 = 106, jump @1391\n      : @131 [@dyn 53] (gas: 4)\n  4859: a0 = u64 [s1 + 0xc8]\n  4863: a0 = a0 <u 0x20\n  4866: u64 [s1 + 0xe8] = a0\n  4870: jump @140 if a3 == 0\n      : @132 (gas: 11)\n  4874: u64 [s1 + 0x110] = a4\n  4878: u64 [s1 + 0x118] = ra\n  4882: u64 [s1 + 0x120] = a5\n  4886: u64 [s1 + 0x130] = t2\n  4890: u64 [s1 + 1464] = 0\n  4894: u64 [s1 + 1456] = 0\n  4898: u64 [s1 + 1448] = 0\n  4902: a1 = s1 + 0x5a0\n  4906: u64 [s1 + 1440] = 0x4\n  4911: a0 = 0\n  4913: ra = 108, jump @19\n      : @133 [@dyn 54] (gas: 2)\n  4918: a1 = i32 [0x20264]\n  4923: jump @135 if a1 >u 31\n      : @134 (gas: 2)\n  4927: u32 [0x20264] = 0x20\n  4933: fallthrough\n      : @135 (gas: 87)\n  4934: a0 = sp + 0xffffffffffffffe0\n  4937: a2 = a0 & 0xffffffffffffffe0\n  4940: u64 [s1 + 0x128] = a2\n  4944: sp = a2\n  4946: a0 = 0x20270\n  4951: i32 a0 = a0 + 0\n  4953: i32 a2 = a2 + 0\n  4955: a1 = 0x20\n  4958: ecalli 6 // 'hash_keccak_256'\n  4960: a0 = u64 [s1 + 0xc8]\n  4964: a1 = a0 + 0x1f\n  4967: a0 = a1 <u a0\n  4970: a5 = u64 [s1 + 0xc0]\n  4974: a2 = a5 + a0\n  4977: a3 = a2 <u a5\n  4980: a3 = a0 if a0 == 0\n  4983: a4 = u64 [s1 + 0xb8]\n  4987: a3 = a3 + a4\n  4990: u64 [s1 + 0x108] = a3\n  4994: a3 = a3 << 0x3b\n  4997: a4 = a2 >> 0x5\n  5000: a4 = a4 | a3\n  5003: a0 = u64 [s1 + 0x128]\n  5007: t0 = u64 [a0 + 0x18]\n  5010: a2 = a2 << 0x3b\n  5013: a0 = u64 [a0 + 0x10]\n  5016: a1 = a1 >> 0x5\n  5019: a2 = a2 | a1\n  5022: t2 = reverse t0\n  5024: a0 = reverse a0\n  5026: a1 = u64 [s1 + 0xe8]\n  5030: a1 = 0 if a5 != 0\n  5032: a3 = u64 [s1 + 0xf0]\n  5036: a1 = 0 if a3 != 0\n  5038: a4 = 0 if a1 != 0\n  5040: a2 = 0 if a1 != 0\n  5042: t0 = t2 + a2\n  5045: a2 = t0 <u t2\n  5048: a5 = a0 + a2\n  5051: a4 = a4 + a5\n  5054: u64 [s1 + 0x138] = a4\n  5058: a5 = a4 ^ a0\n  5061: a3 = a4 <u a0\n  5064: a3 = a2 if a5 == 0\n  5067: u64 [s1 + 0x100] = a3\n  5071: a2 = u64 [s1 + 0x118]\n  5075: ra = a2 + 0x1f\n  5078: a4 = ra <u a2\n  5081: a3 = u64 [s1 + 0x110]\n  5085: a2 = a3 + a4\n  5088: a5 = a2 <u a3\n  5091: a5 = a4 if a4 == 0\n  5094: t1 = u64 [s1 + 0x130]\n  5098: t1 = t1 + a5\n  5101: a4 = t1 << 0x3b\n  5104: a3 = a2 >> 0x5\n  5107: a3 = a3 | a4\n  5110: a2 = a2 << 0x3b\n  5113: a4 = ra >> 0x5\n  5116: a2 = a2 | a4\n  5119: a2 = a2 + t2\n  5122: u64 [s1 + 0x118] = a2\n  5126: a4 = a2 <u t2\n  5129: t2 = t0\n  5131: a2 = a0 + a4\n  5134: a2 = a2 + a3\n  5137: a3 = a2 ^ a0\n  5140: u64 [s1 + 0x110] = a2\n  5144: a2 = a2 <u a0\n  5147: a2 = a4 if a3 == 0\n  5150: a4 = u64 [s1 + 0x108]\n  5154: a0 = u64 [s1 + 0xb8]\n  5158: a0 = a4 <u a0\n  5161: a3 = u64 [s1 + 0xb0]\n  5165: a0 = a0 + a3\n  5168: a3 = a4 >> 0x5\n  5171: a4 = a0 << 0x3b\n  5174: a3 = a3 | a4\n  5177: a4 = u64 [s1 + 0x128]\n  5181: t0 = u64 [a4]\n  5183: a4 = u64 [a4 + 0x8]\n  5186: a0 = a0 >> 0x5\n  5189: a3 = 0 if a1 != 0\n  5191: a0 = 0 if a1 != 0\n  5193: a1 = reverse a4\n  5195: a4 = reverse t0\n  5197: t0 = 110, jump @1418\n      : @136 [@dyn 55] (gas: 25)\n  5202: t0 = a0 + a3\n  5205: a0 = u64 [s1 + 0x130]\n  5209: a0 = t1 <u a0\n  5212: a3 = u64 [s1 + 0x120]\n  5216: a0 = a0 + a3\n  5219: a3 = t1 >> 0x5\n  5222: a5 = a0 << 0x3b\n  5225: a3 = a3 | a5\n  5228: a0 = a0 >> 0x5\n  5231: a0 = a0 + a4\n  5234: a5 = s1 + 0x100\n  5238: a4 = u64 [a5 + 0x38]\n  5241: a3 = a3 + a1\n  5244: a1 = a3 <u a1\n  5247: a0 = a0 + a1\n  5250: a2 = a2 + a3\n  5253: u64 [a5 + 0x8] = a2\n  5256: a1 = a2 <u a3\n  5259: a0 = a0 + a1\n  5262: u64 [a5] = a0\n  5264: a0 = sp + 0xffffffffffffffe0\n  5267: t1 = a0 & 0xffffffffffffffe0\n  5270: sp = t1\n  5272: u64 [s1 + 0xf8] = t1\n  5276: fallthrough\n      : @137 (gas: 20)\n  5277: a0 = u64 [s1 + 0x118]\n  5281: a0 = t2 <u a0\n  5284: a2 = u64 [s1 + 0x110]\n  5288: a1 = a4 ^ a2\n  5291: a2 = a4 <u a2\n  5294: a2 = a0 if a1 == 0\n  5297: a5 = u64 [s1 + 0x108]\n  5301: a0 = ra <u a5\n  5304: a3 = u64 [s1 + 0x100]\n  5308: a1 = t0 ^ a3\n  5311: a3 = t0 <u a3\n  5314: a3 = a0 if a1 == 0\n  5317: a0 = ra ^ a5\n  5320: a0 = a0 | a1\n  5323: a3 = a2 if a0 == 0\n  5326: u64 [t1] = t2\n  5328: u64 [t1 + 0x8] = a4\n  5331: u64 [t1 + 0x10] = ra\n  5334: u64 [t1 + 0x18] = t0\n  5337: jump @140 if a3 == 0\n      : @138 (gas: 14)\n  5340: a0 = s1 + 0x7ff\n  5344: a0 = a0 + 0xb9\n  5348: u64 [a0 + 224] = 0\n  5352: u64 [a0 + 216] = 0\n  5356: u64 [a0 + 208] = 0\n  5360: u64 [a0 + 200] = 0\n  5364: a1 = s1 + 0x7ff\n  5368: a1 = a1 + 0x181\n  5372: a0 = t1\n  5374: u64 [s1 + 0x130] = t2\n  5378: u64 [s1 + 0x138] = a4\n  5382: u64 [s1 + 0x128] = t0\n  5386: u64 [s1 + 0x120] = ra\n  5390: ra = 112, jump @24\n      : @139 [@dyn 56] (gas: 15)\n  5395: t1 = u64 [s1 + 0xf8]\n  5399: t0 = u64 [s1 + 0x128]\n  5403: a4 = u64 [s1 + 0x138]\n  5407: t2 = u64 [s1 + 0x130]\n  5411: t2 = t2 + 0x1\n  5414: a0 = t2 <u 0x1\n  5417: a4 = a4 + a0\n  5420: a0 = t2 | a4\n  5423: a0 = a0 <u 0x1\n  5426: a1 = u64 [s1 + 0x120]\n  5430: a0 = a0 + a1\n  5433: a1 = a0 <u a1\n  5436: t0 = t0 + a1\n  5439: ra = a0\n  5441: jump @137\n      : @140 (gas: 9)\n  5444: a0 = u64 [s1 + 0xe8]\n  5448: a0 = a0 ^ 0x1\n  5451: a4 = u64 [s1 + 0xc0]\n  5455: a1 = u64 [s1 + 0xd8]\n  5459: a0 = a1 if a4 != 0\n  5462: a1 = u64 [s1 + 0xe0]\n  5466: a2 = u64 [s1 + 0xf0]\n  5470: a0 = a1 if a2 != 0\n  5473: jump @152 if a0 == 0\n      : @141 (gas: 10)\n  5477: a0 = u64 [s1 + 0xc8]\n  5481: a0 = a0 & 0xffffffffffffffe0\n  5484: u64 [s1 + 0xd0] = a0\n  5488: u64 [s1 + 1400] = 0\n  5492: u64 [s1 + 1392] = 0\n  5496: u64 [s1 + 1384] = 0\n  5500: a1 = s1 + 0x560\n  5504: u64 [s1 + 1376] = 0x4\n  5509: a0 = 0\n  5511: ra = 114, jump @19\n      : @142 [@dyn 57] (gas: 7)\n  5516: a0 = sp + 0xffffffffffffffe0\n  5519: a0 = a0 & 0xffffffffffffffe0\n  5522: u64 [s1 + 0x110] = a0\n  5526: sp = a0\n  5528: a1 = 0x20\n  5531: a0 = 0\n  5533: ra = 116, jump @33\n      : @143 [@dyn 58] (gas: 1)\n  5538: t0 = 118, jump @1412\n      : @144 [@dyn 59] (gas: 5)\n  5543: ecalli 6 // 'hash_keccak_256'\n  5545: u64 [s1 + 304] = 0x20\n  5550: a5 = 0\n  5552: u64 [s1 + 312] = 0\n  5556: t0 = 120, jump @1398\n      : @145 [@dyn 60] (gas: 15)\n  5561: t0 = u64 [a3]\n  5563: t1 = reverse a0\n  5565: a1 = reverse a1\n  5567: a3 = reverse a2\n  5569: a2 = reverse t0\n  5571: t0 = a2\n  5573: a0 = u64 [s1 + 0x110]\n  5577: u64 [a0 + 0x18] = a2\n  5580: u64 [s1 + 0xe8] = a3\n  5584: u64 [a0 + 0x10] = a3\n  5587: u64 [s1 + 0x100] = a1\n  5591: u64 [a0 + 0x8] = a1\n  5594: a3 = t1\n  5596: u64 [a0] = t1\n  5598: fallthrough\n      : @146 (gas: 26)\n  5599: t1 = t0\n  5601: t2 = a3\n  5603: a0 = u64 [s1 + 0xd0]\n  5607: u64 [s1 + 0xf8] = a4\n  5611: a0 = a4 <u a0\n  5614: a4 = a0 ^ 0x1\n  5617: u64 [s1 + 0xf0] = ra\n  5621: a4 = 0x1 if ra != 0\n  5624: a0 = u64 [s1 + 0x120]\n  5628: a2 = u64 [s1 + 0x118]\n  5632: a0 = a0 | a2\n  5635: a4 = 0x1 if a0 != 0\n  5638: a1 = u64 [s1 + 0xa8]\n  5642: ra = u64 [s1 + 0x130]\n  5646: a1 = a1 + ra\n  5649: a3 = u64 [s1 + 0xa0]\n  5653: t0 = a5\n  5655: a3 = a3 + a5\n  5658: a2 = u64 [s1 + 0x90]\n  5662: a0 = u64 [s1 + 0x138]\n  5666: a2 = a2 + a0\n  5669: a0 = u64 [s1 + 0x98]\n  5673: a5 = u64 [s1 + 0x128]\n  5677: a0 = a0 + a5\n  5680: u64 [s1 + 0x108] = t0\n  5684: jump @154 if a4 != 0\n      : @147 (gas: 13)\n  5688: a4 = a1 <u ra\n  5691: a3 = a3 + a4\n  5694: a5 = t0\n  5696: t0 = a3 ^ t0\n  5699: a5 = a3 <u a5\n  5702: a5 = a4 if t0 == 0\n  5705: a5 = a5 + a2\n  5708: t0 = a5 <u a2\n  5711: a4 = u64 [s1 + 0x138]\n  5715: a2 = a2 <u a4\n  5718: a0 = a0 + a2\n  5721: a0 = a0 + t0\n  5724: t0 = 122, jump @1403\n      : @148 [@dyn 61] (gas: 3)\n  5729: u64 [s1 + 0xe0] = t2\n  5733: u64 [s1 + 0xd8] = t1\n  5737: jump @213 if a0 != 0\n      : @149 (gas: 3)\n  5741: a0 = s1 + 0x260\n  5745: u64 [s1 + 0x130] = ra\n  5749: ra = 124, jump @17\n      : @150 [@dyn 62] (gas: 15)\n  5754: a4 = s1 + 0x200\n  5758: a0 = u64 [a4 + 0x78]\n  5761: a1 = u64 [a4 + 0x70]\n  5764: a2 = u64 [a4 + 0x68]\n  5767: a3 = u64 [a4 + 0x60]\n  5770: a4 = s1 + 0x7ff\n  5774: a4 = a4 + 0xb9\n  5778: u64 [a4 + 0x100] = a0\n  5782: u64 [a4 + 0xf8] = a1\n  5786: u64 [a4 + 0xf0] = a2\n  5790: u64 [a4 + 0xe8] = a3\n  5794: a1 = s1 + 0x7ff\n  5798: a1 = a1 + 0x1a1\n  5802: a0 = u64 [s1 + 0x110]\n  5806: ra = 126, jump @24\n      : @151 [@dyn 63] (gas: 56)\n  5811: ra = u64 [s1 + 0xe0]\n  5815: ra = ra + 0x1\n  5818: a0 = ra <u 0x1\n  5821: t0 = u64 [s1 + 0x100]\n  5825: t0 = t0 + a0\n  5828: a0 = ra | t0\n  5831: a0 = a0 <u 0x1\n  5834: a1 = u64 [s1 + 0xe8]\n  5838: t1 = a1 + a0\n  5841: a1 = t1 <u a1\n  5844: a0 = u64 [s1 + 0xd8]\n  5848: a0 = a0 + a1\n  5851: a1 = u64 [s1 + 0x130]\n  5855: a2 = a1 + 0x20\n  5858: u64 [s1 + 0xe0] = a2\n  5862: a3 = a2 <u a1\n  5865: a1 = u64 [s1 + 0x108]\n  5869: a2 = a1 + a3\n  5872: u64 [s1 + 0xd8] = a2\n  5876: a4 = a2 <u a1\n  5879: a4 = a3 if a3 == 0\n  5882: a1 = u64 [s1 + 0x138]\n  5886: t2 = a1 + a4\n  5889: a4 = t2 <u a1\n  5892: a1 = u64 [s1 + 0x128]\n  5896: a1 = a1 + a4\n  5899: u64 [s1 + 0x128] = a1\n  5903: a1 = u64 [s1 + 0xf8]\n  5907: a4 = a1 + 0x20\n  5910: a5 = a4 <u a1\n  5913: a2 = u64 [s1 + 0xf0]\n  5917: a1 = a2 + a5\n  5920: a2 = a1 <u a2\n  5923: a2 = a5 if a5 == 0\n  5926: a3 = u64 [s1 + 0x118]\n  5930: a2 = a2 + a3\n  5933: a5 = a2 <u a3\n  5936: a3 = u64 [s1 + 0x120]\n  5940: a3 = a3 + a5\n  5943: u64 [s1 + 0x120] = a3\n  5947: u64 [s1 + 0x100] = t0\n  5951: a5 = u64 [s1 + 0x110]\n  5955: u64 [a5 + 0x8] = t0\n  5958: a3 = ra\n  5960: u64 [a5] = ra\n  5962: u64 [a5 + 0x10] = t1\n  5965: t0 = a0\n  5967: u64 [a5 + 0x18] = a0\n  5970: u64 [s1 + 0xe8] = t1\n  5974: a0 = u64 [s1 + 0xe0]\n  5978: u64 [s1 + 0x130] = a0\n  5982: a5 = u64 [s1 + 0xd8]\n  5986: u64 [s1 + 0x138] = t2\n  5990: ra = a1\n  5992: u64 [s1 + 0x118] = a2\n  5996: jump @146\n      : @152 (gas: 8)\n  5999: a3 = u64 [s1 + 0xc8]\n  6003: a5 = u64 [s1 + 0xb8]\n  6007: a0 = a3 | a5\n  6010: a2 = u64 [s1 + 0xb0]\n  6014: a1 = a4 | a2\n  6017: a0 = a0 | a1\n  6020: t0 = u64 [s1 + 0xa8]\n  6024: jump @167 if a0 != 0\n      : @153 (gas: 5)\n  6028: u64 [s1 + 288] = 0\n  6032: u64 [s1 + 280] = 0\n  6036: u64 [s1 + 296] = 0\n  6040: u64 [s1 + 304] = 0\n  6044: jump @170\n      : @154 (gas: 10)\n  6047: t0 = u64 [s1 + 0xc8]\n  6051: a4 = u64 [s1 + 0xd0]\n  6055: a4 = a4 ^ t0\n  6058: t2 = u64 [s1 + 0xb8]\n  6062: a4 = a4 | t2\n  6065: t1 = u64 [s1 + 0xc0]\n  6069: ra = u64 [s1 + 0xb0]\n  6073: a5 = t1 | ra\n  6076: a4 = a4 | a5\n  6079: jump @166 if a4 == 0\n      : @155 (gas: 14)\n  6083: a4 = u64 [s1 + 0x130]\n  6087: a4 = a1 <u a4\n  6090: a3 = a3 + a4\n  6093: a5 = u64 [s1 + 0x108]\n  6097: t0 = a3 ^ a5\n  6100: a5 = a3 <u a5\n  6103: a5 = a4 if t0 == 0\n  6106: a5 = a5 + a2\n  6109: t0 = a5 <u a2\n  6112: a4 = u64 [s1 + 0x138]\n  6116: a2 = a2 <u a4\n  6119: a0 = a0 + a2\n  6122: a0 = a0 + t0\n  6125: t0 = 128, jump @1403\n      : @156 [@dyn 64] (gas: 1)\n  6131: jump @213 if a0 != 0\n      : @157 (gas: 2)\n  6135: a0 = s1 + 0x540\n  6139: ra = 130, jump @17\n      : @158 [@dyn 65] (gas: 11)\n  6145: a1 = s1 + 0x500\n  6149: a0 = u64 [a1 + 0x58]\n  6152: u64 [s1 + 0x130] = a0\n  6156: a0 = u64 [a1 + 0x50]\n  6159: u64 [s1 + 0x128] = a0\n  6163: a0 = u64 [a1 + 0x48]\n  6166: u64 [s1 + 0x120] = a0\n  6170: a0 = u64 [a1 + 0x40]\n  6173: u64 [s1 + 0x118] = a0\n  6177: a0 = u64 [s1 + 0xc8]\n  6181: t0 = 132, jump @1411\n      : @159 [@dyn 66] (gas: 1)\n  6187: ra = 134, jump @1428\n      : @160 [@dyn 67] (gas: 6)\n  6193: u64 [s1 + 0x108] = a0\n  6197: u64 [s1 + 0xf0] = a1\n  6201: a0 = 0xffffffffffffffff\n  6204: a1 = 0xffffffffffffffff\n  6207: a2 = u64 [s1 + 0x138]\n  6211: ra = 136, jump @1423\n      : @161 [@dyn 68] (gas: 1)\n  6217: t0 = 138, jump @1400\n      : @162 [@dyn 69] (gas: 1)\n  6223: ra = 140, jump @1423\n      : @163 [@dyn 70] (gas: 1)\n  6229: t0 = 142, jump @1351\n      : @164 [@dyn 71] (gas: 9)\n  6235: a5 = a4 + 0x100\n  6239: u64 [a5 + 0x20] = a3\n  6242: u64 [a5 + 0x18] = a2\n  6245: u64 [a5 + 0x10] = a1\n  6248: u64 [a5 + 0x8] = a0\n  6251: a1 = s1 + 0x7ff\n  6255: a1 = a1 + 0x1c1\n  6259: a0 = u64 [s1 + 0x110]\n  6263: ra = 144, jump @24\n      : @165 [@dyn 72] (gas: 5)\n  6269: t0 = u64 [s1 + 0xc8]\n  6273: t1 = u64 [s1 + 0xc0]\n  6277: t2 = u64 [s1 + 0xb8]\n  6281: ra = u64 [s1 + 0xb0]\n  6285: fallthrough\n      : @166 (gas: 28)\n  6286: a0 = t2 >> 0x3f\n  6289: a1 = ra << 0x1\n  6292: a0 = a0 | a1\n  6295: a1 = t1 >> 0x3f\n  6298: a2 = t2 << 0x1\n  6301: a1 = a1 | a2\n  6304: a2 = t0 >> 0x3f\n  6307: a3 = t1 << 0x1\n  6310: a2 = a2 | a3\n  6313: a3 = t0 << 0x1\n  6316: a3 = a3 + 0x1\n  6319: a5 = s1 + 0x7ff\n  6323: a5 = a5 + 0xb9\n  6327: u64 [a5 + 320] = 0\n  6331: u64 [a5 + 312] = 0\n  6335: u64 [a5 + 304] = 0\n  6339: u64 [a5 + 296] = 0x4\n  6344: a4 = a5 + 0x100\n  6348: u64 [a4 + 0x48] = a3\n  6351: u64 [a4 + 0x50] = a2\n  6354: u64 [a4 + 0x58] = a1\n  6357: u64 [a4 + 0x60] = a0\n  6360: a0 = s1 + 0x7ff\n  6364: a0 = a0 + 0x1e1\n  6368: a1 = s1 + 0x7ff\n  6372: a1 = a1 + 0x201\n  6376: ra = 0xa0\n  6380: jump @24\n      : @167 (gas: 9)\n  6383: a0 = u64 [s1 + 0x98]\n  6387: a1 = u64 [s1 + 0x90]\n  6391: a0 = a0 | a1\n  6394: a1 = 0xffffffe0\n  6404: a1 = t0 <u a1\n  6407: a3 = u64 [s1 + 0xa0]\n  6411: a1 = 0 if a3 != 0\n  6413: a1 = 0 if a0 != 0\n  6415: jump @213 if a1 == 0\n      : @168 (gas: 3)\n  6419: i32 a1 = t0 + 0x20\n  6422: a0 = s1 + 0x580\n  6426: ra = 146, jump @17\n      : @169 [@dyn 73] (gas: 14)\n  6432: a2 = u64 [s1 + 0xb0]\n  6436: a5 = u64 [s1 + 0xb8]\n  6440: a4 = u64 [s1 + 0xc0]\n  6444: a3 = u64 [s1 + 0xc8]\n  6448: a1 = s1 + 0x500\n  6452: a0 = u64 [a1 + 0x98]\n  6456: u64 [s1 + 0x130] = a0\n  6460: a0 = u64 [a1 + 0x90]\n  6464: u64 [s1 + 0x128] = a0\n  6468: a0 = u64 [a1 + 0x88]\n  6472: u64 [s1 + 0x118] = a0\n  6476: a0 = u64 [a1 + 0x80]\n  6480: u64 [s1 + 0x120] = a0\n  6484: fallthrough\n      : @170 (gas: 15)\n  6485: a0 = a4 >> 0x3f\n  6488: a1 = a5 << 0x1\n  6491: a0 = a0 | a1\n  6494: u64 [s1 + 0x110] = a0\n  6498: a0 = a5 >> 0x3f\n  6501: a1 = a2 << 0x1\n  6504: a0 = a0 | a1\n  6507: u64 [s1 + 0x108] = a0\n  6511: a0 = a3 >> 0x3f\n  6514: a1 = a4 << 0x1\n  6517: a0 = a0 | a1\n  6520: u64 [s1 + 0x100] = a0\n  6524: a0 = a3 << 0x1\n  6527: u64 [s1 + 0xf8] = a0\n  6531: t0 = 148, jump @1419\n      : @171 [@dyn 74] (gas: 1)\n  6537: ra = 150, jump @1428\n      : @172 [@dyn 75] (gas: 7)\n  6543: u64 [s1 + 0xd8] = a0\n  6547: u64 [s1 + 0xf0] = a1\n  6551: a0 = u64 [s1 + 0xc8]\n  6555: i32 a2 = a0 << 0x3\n  6558: a0 = 0xffffffffffffffff\n  6561: a1 = 0xffffffffffffffff\n  6564: ra = 152, jump @1423\n      : @173 [@dyn 76] (gas: 10)\n  6570: u64 [s1 + 0xe8] = a0\n  6574: u64 [s1 + 0xe0] = a1\n  6578: a1 = u64 [s1 + 0xd8]\n  6582: a0 = a0 | a1\n  6585: u64 [s1 + 0xd8] = a0\n  6589: a0 = u64 [s1 + 0x138]\n  6593: i32 a2 = a0 + 0xffffffffffffff80\n  6596: a0 = 0xffffffffffffffff\n  6599: a1 = 0xffffffffffffffff\n  6602: ra = 154, jump @1423\n      : @174 [@dyn 77] (gas: 7)\n  6608: a4 = u64 [s1 + 0x138]\n  6612: a2 = a4 <u 0x80\n  6616: a3 = u64 [s1 + 0xd8]\n  6620: a0 = a3 if a2 != 0\n  6623: a5 = u64 [s1 + 0xe0]\n  6627: a3 = u64 [s1 + 0xf0]\n  6631: t0 = 156, jump @1421\n      : @175 [@dyn 78] (gas: 2)\n  6637: a4 = u64 [s1 + 0xe8]\n  6641: t0 = 158, jump @1381\n      : @176 [@dyn 79] (gas: 25)\n  6647: a4 = u64 [s1 + 0xf8]\n  6651: a0 = a0 | a4\n  6654: a5 = s1 + 0x100\n  6658: a4 = u64 [a5]\n  6660: a1 = a1 | a4\n  6663: a4 = u64 [a5 + 0x8]\n  6666: a3 = a3 | a4\n  6669: a4 = u64 [a5 + 0x10]\n  6672: a2 = a2 | a4\n  6675: a5 = s1 + 0x7ff\n  6679: a5 = a5 + 0xb9\n  6683: u64 [a5 + 360] = 0x4\n  6688: a4 = a5 + 0x100\n  6692: u64 [a4 + 0x98] = a2\n  6696: u64 [a4 + 0xa0] = a3\n  6700: u64 [a4 + 0x90] = a1\n  6704: u64 [a4 + 0x88] = a0\n  6708: u64 [a5 + 384] = 0\n  6712: u64 [a5 + 376] = 0\n  6716: u64 [a5 + 368] = 0\n  6720: a0 = s1 + 0x7ff\n  6724: a0 = a0 + 0x221\n  6728: a1 = s1 + 0x7ff\n  6732: a1 = a1 + 0x241\n  6736: ra = 160, jump @24\n      : @177 [@dyn 80] (gas: 8)\n  6742: a0 = 0x30270\n  6747: u64 [s1 + 0x138] = a0\n  6751: i32 a0 = a0 + 0\n  6753: u64 [s1 + 0x130] = a0\n  6757: ra = 0xa2\n  6761: ecalli 3 // 'caller'\n  6763: t0 = 0xa4\n  6767: jump @1350\n      : @178 [@dyn 81] (gas: 1)\n  6770: t0 = 164, jump @1350\n      : @179 [@dyn 82] (gas: 8)\n  6776: u64 [s1 + 1304] = 0\n  6780: a2 = s1 + 0x500\n  6784: u64 [a2 + 0x10] = a1\n  6787: u64 [a2 + 0x8] = a0\n  6790: a0 = s1 + 0x520\n  6794: a1 = s1 + 0x500\n  6798: u64 [a2] = a3\n  6800: ra = 166, jump @894\n      : @180 [@dyn 83] (gas: 5)\n  6806: a0 = u64 [s1 + 0x130]\n  6810: ra = 0xa8\n  6814: ecalli 3 // 'caller'\n  6816: t0 = 0xaa\n  6820: jump @1350\n      : @181 [@dyn 84] (gas: 1)\n  6823: t0 = 170, jump @1350\n      : @182 [@dyn 85] (gas: 9)\n  6829: u64 [s1 + 1240] = 0\n  6833: u64 [s1 + 0x4d0] = a1\n  6837: u64 [s1 + 0x4c8] = a0\n  6841: a0 = s1 + 0x4e0\n  6845: a1 = s1 + 0x4c0\n  6849: u64 [s1 + 0x4c0] = a3\n  6853: ra = 0xac\n  6857: t0 = 0x35e\n  6861: jump @1380\n      : @183 [@dyn 86] (gas: 5)\n  6864: a0 = u64 [s1 + 0x130]\n  6868: ra = 0xae\n  6872: ecalli 3 // 'caller'\n  6874: t0 = 0xb0\n  6878: jump @1350\n      : @184 [@dyn 87] (gas: 1)\n  6881: t0 = 176, jump @1350\n      : @185 [@dyn 88] (gas: 10)\n  6887: u64 [s1 + 1176] = 0\n  6891: a2 = s1 + 0x400\n  6895: u64 [a2 + 0x90] = a1\n  6899: u64 [a2 + 0x88] = a0\n  6903: a0 = s1 + 0x4a0\n  6907: a1 = s1 + 0x480\n  6911: u64 [a2 + 0x80] = a3\n  6915: ra = 0xb2\n  6919: t0 = 0x3a4\n  6923: jump @1380\n      : @186 [@dyn 89] (gas: 3)\n  6926: a0 = u64 [s1 + 0x130]\n  6930: ecalli 3 // 'caller'\n  6932: fallthrough\n      : @187 (gas: 7)\n  6933: a2 = u64 [s1 + 0x138]\n  6937: a0 = u32 [a2 + 0x10]\n  6940: a1 = u64 [a2]\n  6942: a2 = u64 [a2 + 0x8]\n  6945: a0 = a0 | a1\n  6948: a0 = a0 | a2\n  6951: jump @242 if a0 == 0\n      : @188 (gas: 10)\n  6955: a1 = s1 + 0x7ff\n  6959: a1 = a1 + 0xb9\n  6963: u64 [a1 + 448] = 0\n  6967: u64 [a1 + 440] = 0\n  6971: u64 [a1 + 432] = 0\n  6975: u64 [a1 + 424] = 0x5\n  6980: a0 = s1 + 0x460\n  6984: a1 = s1 + 0x7ff\n  6988: a1 = a1 + 0x261\n  6992: ra = 180, jump @21\n      : @189 [@dyn 90] (gas: 2)\n  6998: a0 = u8 [s1 + 0x460]\n  7002: jump @247 if a0 != 0\n      : @190 (gas: 10)\n  7006: a0 = s1 + 0x7ff\n  7010: a0 = a0 + 0xb9\n  7014: u64 [a0 + 480] = 0\n  7018: u64 [a0 + 472] = 0\n  7022: u64 [a0 + 464] = 0\n  7026: u64 [a0 + 456] = 0x2\n  7031: a0 = s1 + 0x420\n  7035: a1 = s1 + 0x7ff\n  7039: a1 = a1 + 0x281\n  7043: ra = 182, jump @21\n      : @191 [@dyn 91] (gas: 43)\n  7049: t2 = u64 [s1 + 0x438]\n  7053: t1 = u64 [s1 + 0x430]\n  7057: ra = u64 [s1 + 0x420]\n  7061: u64 [s1 + 0x128] = ra\n  7065: a5 = u64 [s1 + 0x428]\n  7069: a1 = sp + 0xffffffffffffffe0\n  7072: a1 = a1 & 0xffffffffffffffe0\n  7075: sp = a1\n  7077: a2 = u64 [s1 + 0x78]\n  7080: a4 = a2 + a5\n  7083: a0 = u64 [s1 + 0x70]\n  7086: ra = ra + a0\n  7089: a0 = ra <u a0\n  7092: a4 = a4 + a0\n  7095: a3 = a4 ^ a2\n  7098: a2 = a4 <u a2\n  7101: a2 = a0 if a3 == 0\n  7104: t0 = u64 [s1 + 0x80]\n  7108: a0 = t0 + t1\n  7111: a3 = u64 [s1 + 0x88]\n  7115: a3 = a3 + t2\n  7118: t0 = a0 <u t0\n  7121: a3 = a3 + t0\n  7124: a2 = a2 + a0\n  7127: a0 = a2 <u a0\n  7130: t0 = a3 + a0\n  7133: a0 = a5 ^ a4\n  7136: a5 = a4 <u a5\n  7139: a3 = u64 [s1 + 0x128]\n  7143: a3 = ra <u a3\n  7146: a3 = a5 if a0 != 0\n  7149: a0 = a2 <u t1\n  7152: a5 = t2 ^ t0\n  7155: t2 = t0 <u t2\n  7158: t2 = a0 if a5 == 0\n  7161: a0 = t1 ^ a2\n  7164: a0 = a0 | a5\n  7167: a3 = t2 if a0 != 0\n  7170: u64 [a1 + 0x10] = a2\n  7173: u64 [a1 + 0x8] = a4\n  7176: u64 [a1] = ra\n  7178: u64 [a1 + 0x18] = t0\n  7181: jump @251 if a3 != 0\n      : @192 (gas: 9)\n  7185: a0 = s1 + 0x7ff\n  7189: a0 = a0 + 0xb9\n  7193: u64 [a0 + 512] = 0\n  7197: u64 [a0 + 504] = 0\n  7201: u64 [a0 + 496] = 0\n  7205: u64 [a0 + 488] = 0x2\n  7210: a0 = s1 + 0x7ff\n  7214: a0 = a0 + 0x2a1\n  7218: ra = 184, jump @24\n      : @193 [@dyn 92] (gas: 5)\n  7224: a0 = u64 [s1 + 0x130]\n  7228: ra = 0xba\n  7232: ecalli 3 // 'caller'\n  7234: t0 = 0xbc\n  7238: jump @1350\n      : @194 [@dyn 93] (gas: 1)\n  7241: t0 = 188, jump @1350\n      : @195 [@dyn 94] (gas: 8)\n  7247: u64 [s1 + 1048] = 0\n  7251: a2 = s1 + 0x400\n  7255: u64 [a2 + 0x10] = a1\n  7258: u64 [a2 + 0x8] = a0\n  7261: a1 = s1 + 0x400\n  7265: u64 [a2] = a3\n  7267: a0 = 0\n  7269: ra = 190, jump @19\n      : @196 [@dyn 95] (gas: 7)\n  7275: u64 [s1 + 1016] = 0\n  7279: u64 [s1 + 1008] = 0\n  7283: u64 [s1 + 1000] = 0\n  7287: a0 = 0x20\n  7290: a1 = s1 + 0x3e0\n  7294: u64 [s1 + 992] = 0\n  7298: ra = 192, jump @19\n      : @197 [@dyn 96] (gas: 6)\n  7304: a0 = sp + 0xffffffffffffffe0\n  7307: a0 = a0 & 0xffffffffffffffe0\n  7310: u64 [s1 + 0x128] = a0\n  7314: sp = a0\n  7316: a1 = i32 [0x20264]\n  7321: jump @199 if a1 >u 63\n      : @198 (gas: 2)\n  7325: u32 [0x20264] = 0x40\n  7331: fallthrough\n      : @199 (gas: 13)\n  7332: a0 = sp + 0xffffffffffffffe0\n  7335: a2 = a0 & 0xffffffffffffffe0\n  7338: u64 [s1 + 0x120] = a2\n  7342: sp = a2\n  7344: a0 = 0x20270\n  7349: i32 a0 = a0 + 0\n  7351: i32 a2 = a2 + 0\n  7353: a1 = 0x40\n  7356: ra = 0xc2\n  7360: ecalli 6 // 'hash_keccak_256'\n  7362: a3 = u64 [s1 + 0x120]\n  7366: t0 = 0xc4\n  7370: jump @1356\n      : @200 [@dyn 97] (gas: 2)\n  7373: a3 = u64 [s1 + 0x120]\n  7377: t0 = 196, jump @1356\n      : @201 [@dyn 98] (gas: 7)\n  7383: a1 = u64 [s1 + 0x128]\n  7387: u64 [a1 + 0x18] = a3\n  7390: u64 [a1 + 0x10] = a2\n  7393: u64 [a1 + 0x8] = a4\n  7396: u64 [a1] = a0\n  7398: a0 = s1 + 0x3c0\n  7402: ra = 198, jump @21\n      : @202 [@dyn 99] (gas: 33)\n  7408: a0 = u64 [s1 + 0x3c8]\n  7412: a1 = u64 [s1 + 0x3c0]\n  7416: t0 = u64 [s1 + 0x3d8]\n  7420: a3 = u64 [s1 + 0x3d0]\n  7424: a4 = u64 [s1 + 0x78]\n  7427: a4 = a4 + a0\n  7430: a5 = u64 [s1 + 0x70]\n  7433: a5 = a5 + a1\n  7436: a1 = a5 <u a1\n  7439: a4 = a4 + a1\n  7442: a2 = a4 ^ a0\n  7445: a0 = a4 <u a0\n  7448: a0 = a1 if a2 == 0\n  7451: a1 = u64 [s1 + 0x80]\n  7455: a1 = a1 + a3\n  7458: a2 = u64 [s1 + 0x88]\n  7462: t0 = t0 + a2\n  7465: a2 = a1 <u a3\n  7468: a2 = a2 + t0\n  7471: a0 = a0 + a1\n  7474: a1 = a0 <u a1\n  7477: a1 = a1 + a2\n  7480: a2 = s1 + 0x7ff\n  7484: a2 = a2 + 0xb9\n  7488: a3 = a2 + 0x200\n  7492: u64 [a3 + 0x8] = a5\n  7495: u64 [a3 + 0x10] = a4\n  7498: u64 [a3 + 0x18] = a0\n  7501: u64 [a3 + 0x20] = a1\n  7504: a1 = s1 + 0x7ff\n  7508: a1 = a1 + 0x2c1\n  7512: a0 = u64 [s1 + 0x128]\n  7516: ra = 200, jump @24\n      : @203 [@dyn 100] (gas: 3)\n  7522: a0 = s1 + 0x3a0\n  7526: a1 = 0x40\n  7529: ra = 202, jump @17\n      : @204 [@dyn 101] (gas: 6)\n  7535: a4 = s1 + 0x300\n  7539: a3 = u64 [a4 + 0xb8]\n  7543: a1 = u64 [a4 + 0xb0]\n  7547: a2 = u64 [a4 + 0xa8]\n  7551: a0 = u64 [a4 + 0xa0]\n  7555: t0 = 204, jump @1368\n      : @205 [@dyn 102] (gas: 1)\n  7561: jump @213 if a1 != 0\n      : @206 (gas: 11)\n  7565: a1 = u64 [s1 + 0x70]\n  7568: u64 [s1 + 0x380] = a1\n  7572: a1 = u64 [s1 + 0x78]\n  7575: u64 [s1 + 0x388] = a1\n  7579: a1 = u64 [s1 + 0x80]\n  7583: u64 [s1 + 0x390] = a1\n  7587: a1 = s1 + 0x380\n  7591: a2 = u64 [s1 + 0x88]\n  7595: u64 [s1 + 0x398] = a2\n  7599: u64 [s1 + 0x128] = a0\n  7603: ra = 206, jump @19\n      : @207 [@dyn 103] (gas: 6)\n  7609: a0 = u64 [s1 + 0x130]\n  7613: ra = 0xd0\n  7617: ecalli 3 // 'caller'\n  7619: a2 = u64 [s1 + 0x138]\n  7623: t0 = 0xd2\n  7627: jump @1352\n      : @208 [@dyn 104] (gas: 2)\n  7630: a2 = u64 [s1 + 0x138]\n  7634: t0 = 210, jump @1352\n      : @209 [@dyn 105] (gas: 28)\n  7640: t0 = a1 | a0\n  7643: a3 = a3 >> 0x20\n  7646: a2 = reverse a2\n  7648: a1 = a2 << 0x20\n  7651: a1 = a1 | a3\n  7654: a2 = a2 >> 0x20\n  7657: u64 [s1 + 824] = 0\n  7661: u64 [s1 + 856] = 0\n  7665: u64 [s1 + 848] = 0\n  7669: u64 [s1 + 840] = 0\n  7673: u64 [s1 + 832] = 0\n  7677: a3 = u64 [0x20000]\n  7682: a4 = u64 [0x20008]\n  7687: a5 = u64 [0x20010]\n  7692: a0 = u64 [0x20018]\n  7697: u64 [s1 + 0x378] = a3\n  7701: u64 [s1 + 0x370] = a4\n  7705: u64 [s1 + 0x368] = a5\n  7709: u64 [s1 + 0x360] = a0\n  7713: u64 [s1 + 0x330] = a2\n  7717: u64 [s1 + 0x328] = a1\n  7721: a1 = 0x20\n  7724: a2 = s1 + 0x360\n  7728: a3 = s1 + 0x340\n  7732: a4 = s1 + 0x320\n  7736: u64 [s1 + 0x320] = t0\n  7740: a0 = u64 [s1 + 0x128]\n  7744: ra = 212, jump @27\n      : @210 [@dyn 106] (gas: 3)\n  7750: a0 = s1 + 0x300\n  7754: a1 = 0x40\n  7757: ra = 214, jump @17\n      : @211 [@dyn 107] (gas: 6)\n  7763: a4 = s1 + 0x300\n  7767: a3 = u64 [a4 + 0x18]\n  7770: a1 = u64 [a4 + 0x10]\n  7773: a2 = u64 [a4 + 0x8]\n  7776: a0 = u64 [a4]\n  7778: t0 = 216, jump @1368\n      : @212 [@dyn 108] (gas: 1)\n  7784: jump @258 if a1 == 0\n      : @213 (gas: 1)\n  7788: trap\n      : @214 (gas: 6)\n  7789: a1 = 0x20270\n  7794: i32 a1 = a1 + 0\n  7796: a0 = 0x1\n  7799: a2 = 0\n  7801: ecalli 7 // 'seal_return'\n  7803: jump @218\n      : @215 (gas: 6)\n  7805: a1 = 0x20270\n  7810: i32 a1 = a1 + 0\n  7812: a0 = 0x1\n  7815: a2 = 0\n  7817: ecalli 7 // 'seal_return'\n  7819: jump @218\n      : @216 (gas: 6)\n  7821: a1 = 0x20270\n  7826: i32 a1 = a1 + 0\n  7828: a0 = 0x1\n  7831: a2 = 0\n  7833: ecalli 7 // 'seal_return'\n  7835: jump @218\n      : @217 (gas: 6)\n  7837: a1 = 0x20270\n  7842: i32 a1 = a1 + 0\n  7844: a0 = 0x1\n  7847: a2 = 0\n  7849: ecalli 7 // 'seal_return'\n  7851: fallthrough\n      : @218 (gas: 6)\n  7852: u64 [s1 + 368] = 0\n  7856: u64 [s1 + 360] = 0\n  7860: u64 [s1 + 352] = 0\n  7864: t0 = 0xda\n  7868: a0 = 0x4e487b7100000000\n  7878: fallthrough\n      : @219 [@dyn 109] (gas: 4)\n  7879: a1 = s1 + 0x160\n  7883: u64 [s1 + 0x178] = a0\n  7887: a0 = 0\n  7889: ra = 220, jump @19\n      : @220 [@dyn 110] (gas: 7)\n  7895: u64 [s1 + 344] = 0\n  7899: u64 [s1 + 336] = 0\n  7903: u64 [s1 + 320] = 0x41\n  7908: a0 = 0x4\n  7911: a1 = s1 + 0x140\n  7915: u64 [s1 + 328] = 0\n  7919: ra = 222, jump @19\n      : @221 [@dyn 111] (gas: 2)\n  7925: a1 = i32 [0x20264]\n  7930: jump @223 if a1 >u 63\n      : @222 (gas: 3)\n  7934: u32 [0x20264] = 0x40\n  7940: a1 = 0x20270\n  7945: jump @257\n      : @223 (gas: 2)\n  7948: a1 = 0x20270\n  7953: jump @257\n      : @224 (gas: 6)\n  7956: u64 [s1 + 432] = 0\n  7960: u64 [s1 + 424] = 0\n  7964: u64 [s1 + 416] = 0\n  7968: t0 = 0xe0\n  7972: a0 = 0x4e487b7100000000\n  7982: fallthrough\n      : @225 [@dyn 112] (gas: 4)\n  7983: a1 = s1 + 0x1a0\n  7987: u64 [s1 + 0x1b8] = a0\n  7991: a0 = 0\n  7993: ra = 226, jump @19\n      : @226 [@dyn 113] (gas: 7)\n  7999: u64 [s1 + 408] = 0\n  8003: u64 [s1 + 400] = 0\n  8007: u64 [s1 + 384] = 0x22\n  8012: a0 = 0x4\n  8015: a1 = s1 + 0x180\n  8019: u64 [s1 + 392] = 0\n  8023: ra = 228, jump @19\n      : @227 [@dyn 114] (gas: 2)\n  8029: a1 = i32 [0x20264]\n  8034: jump @229 if a1 >u 63\n      : @228 (gas: 3)\n  8038: u32 [0x20264] = 0x40\n  8044: a1 = 0x20270\n  8049: jump @257\n      : @229 (gas: 2)\n  8052: a1 = 0x20270\n  8057: jump @257\n      : @230 (gas: 6)\n  8060: u64 [s1 + 528] = 0\n  8064: u64 [s1 + 520] = 0\n  8068: u64 [s1 + 512] = 0\n  8072: t0 = 0xe6\n  8076: a0 = 0x4e487b7100000000\n  8086: fallthrough\n      : @231 [@dyn 115] (gas: 4)\n  8087: a1 = s1 + 0x200\n  8091: u64 [s1 + 0x218] = a0\n  8095: a0 = 0\n  8097: ra = 232, jump @19\n      : @232 [@dyn 116] (gas: 7)\n  8103: u64 [s1 + 504] = 0\n  8107: u64 [s1 + 496] = 0\n  8111: u64 [s1 + 480] = 0x41\n  8116: a0 = 0x4\n  8119: a1 = s1 + 0x1e0\n  8123: u64 [s1 + 488] = 0\n  8127: ra = 234, jump @19\n      : @233 [@dyn 117] (gas: 2)\n  8133: a1 = i32 [0x20264]\n  8138: jump @235 if a1 >u 63\n      : @234 (gas: 3)\n  8142: u32 [0x20264] = 0x40\n  8148: a1 = 0x20270\n  8153: jump @257\n      : @235 (gas: 2)\n  8156: a1 = 0x20270\n  8161: jump @257\n      : @236 (gas: 6)\n  8164: u64 [s1 + 592] = 0\n  8168: u64 [s1 + 584] = 0\n  8172: u64 [s1 + 576] = 0\n  8176: t0 = 0xec\n  8180: a0 = 0x4e487b7100000000\n  8190: fallthrough\n      : @237 [@dyn 118] (gas: 4)\n  8191: a1 = s1 + 0x240\n  8195: u64 [s1 + 0x258] = a0\n  8199: a0 = 0\n  8201: ra = 238, jump @19\n      : @238 [@dyn 119] (gas: 7)\n  8207: u64 [s1 + 568] = 0\n  8211: u64 [s1 + 560] = 0\n  8215: u64 [s1 + 544] = 0x22\n  8220: a0 = 0x4\n  8223: a1 = s1 + 0x220\n  8227: u64 [s1 + 552] = 0\n  8231: ra = 240, jump @19\n      : @239 [@dyn 120] (gas: 2)\n  8237: a1 = i32 [0x20264]\n  8242: jump @241 if a1 >u 63\n      : @240 (gas: 3)\n  8246: u32 [0x20264] = 0x40\n  8252: a1 = 0x20270\n  8257: jump @257\n      : @241 (gas: 2)\n  8260: a1 = 0x20270\n  8265: jump @257\n      : @242 (gas: 8)\n  8268: u64 [s1 + 688] = 0\n  8272: u64 [s1 + 680] = 0\n  8276: u64 [s1 + 672] = 0\n  8280: a0 = 0xec442f0500000000\n  8290: a1 = s1 + 0x2a0\n  8294: u64 [s1 + 0x2b8] = a0\n  8298: a0 = 0\n  8300: ra = 242, jump @19\n      : @243 [@dyn 121] (gas: 7)\n  8306: u64 [s1 + 664] = 0\n  8310: u64 [s1 + 656] = 0\n  8314: u64 [s1 + 648] = 0\n  8318: a0 = 0x4\n  8321: a1 = s1 + 0x280\n  8325: u64 [s1 + 640] = 0\n  8329: ra = 244, jump @19\n      : @244 [@dyn 122] (gas: 2)\n  8335: a1 = i32 [0x20264]\n  8340: jump @246 if a1 >u 63\n      : @245 (gas: 3)\n  8344: u32 [0x20264] = 0x40\n  8350: a1 = 0x20270\n  8355: jump @257\n      : @246 (gas: 2)\n  8358: a1 = 0x20270\n  8363: jump @257\n      : @247 (gas: 8)\n  8366: u64 [s1 + 1104] = 0\n  8370: u64 [s1 + 1096] = 0\n  8374: u64 [s1 + 1088] = 0\n  8378: a0 = 0xd93c066500000000\n  8388: a1 = s1 + 0x440\n  8392: u64 [s1 + 0x458] = a0\n  8396: a0 = 0\n  8398: ra = 246, jump @19\n      : @248 [@dyn 123] (gas: 2)\n  8404: a1 = i32 [0x20264]\n  8409: jump @250 if a1 >u 31\n      : @249 (gas: 2)\n  8413: u32 [0x20264] = 0x20\n  8419: fallthrough\n      : @250 (gas: 6)\n  8420: a1 = 0x20270\n  8425: i32 a1 = a1 + 0\n  8427: a0 = 0x1\n  8430: a2 = 0x4\n  8433: ecalli 7 // 'seal_return'\n  8435: fallthrough\n      : @251 (gas: 6)\n  8436: u64 [s1 + 752] = 0\n  8440: u64 [s1 + 744] = 0\n  8444: u64 [s1 + 736] = 0\n  8448: t0 = 0xf8\n  8452: a0 = 0x4e487b7100000000\n  8462: fallthrough\n      : @252 [@dyn 124] (gas: 4)\n  8463: a1 = s1 + 0x2e0\n  8467: u64 [s1 + 0x2f8] = a0\n  8471: a0 = 0\n  8473: ra = 250, jump @19\n      : @253 [@dyn 125] (gas: 7)\n  8479: u64 [s1 + 728] = 0\n  8483: u64 [s1 + 720] = 0\n  8487: u64 [s1 + 704] = 0x11\n  8492: a0 = 0x4\n  8495: a1 = s1 + 0x2c0\n  8499: u64 [s1 + 712] = 0\n  8503: ra = 252, jump @19\n      : @254 [@dyn 126] (gas: 2)\n  8509: a1 = i32 [0x20264]\n  8514: jump @256 if a1 >u 63\n      : @255 (gas: 3)\n  8518: u32 [0x20264] = 0x40\n  8524: a1 = 0x20270\n  8529: jump @257\n      : @256 (gas: 2)\n  8531: a1 = 0x20270\n  8536: fallthrough\n      : @257 (gas: 7)\n  8537: i32 a1 = a1 + 0\n  8539: a0 = 0x1\n  8542: a2 = 0x24\n  8545: ecalli 7 // 'seal_return'\n  8547: u64 [s1 + 0x138] = a0\n  8551: ra = 0xfe\n  8555: jump @33\n      : @258 (gas: 2)\n  8558: u64 [s1 + 0x138] = a0\n  8562: ra = 254, jump @33\n      : @259 [@dyn 127] (gas: 5)\n  8568: i32 a0 = a0 + 0\n  8570: a1 = 0\n  8572: a2 = 0\n  8574: ecalli 0 // 'call_data_copy'\n  8575: jump @15\n      : @260 (gas: 3)\n  8578: a0 = u64 [s1 + 0x138]\n  8582: a1 = 0\n  8584: ra = 256, jump @33\n      : @261 [@dyn 128] (gas: 5)\n  8590: i32 a1 = a0 + 0\n  8592: a0 = 0\n  8594: a2 = 0\n  8596: ecalli 7 // 'seal_return'\n  8598: jump @218\n      : @262 [@dyn 129] (gas: 4)\n  8601: a0 = 0x20260\n  8606: u64 [s1 + 0xb8] = a0\n  8610: a0 = i32 [0x20260]\n  8615: jump @264 if a0 >=u 4\n      : @263 (gas: 1)\n  8619: jump @822\n      : @264 (gas: 6)\n  8622: a0 = s1 + 0x1000\n  8626: i32 a0 = a0 + 0x520\n  8630: a1 = 0\n  8632: ra = 0x104\n  8636: ecalli 1 // 'call_data_load'\n  8638: fallthrough\n      : @265 [@dyn 130] (gas: 3)\n  8639: a2 = s1 + 0x1038\n  8643: a0 = i32 [a2 + 0x504]\n  8647: jump @267 if a0 != 2220280665\n      : @266 (gas: 1)\n  8654: jump @556\n      : @267 (gas: 1)\n  8657: jump @303 if a0 == 2446411860\n      : @268 (gas: 1)\n  8665: jump @270 if a0 != 2514000705\n      : @269 (gas: 1)\n  8672: jump @473\n      : @270 (gas: 1)\n  8675: jump @331 if a0 == 2719481311\n      : @271 (gas: 1)\n  8683: jump @273 if a0 != 2835717307\n      : @272 (gas: 1)\n  8690: jump @590\n      : @273 (gas: 1)\n  8693: jump @383 if a0 == 3577287571\n      : @274 (gas: 1)\n  8701: jump @343 if a0 == 3714247998\n      : @275 (gas: 1)\n  8709: jump @277 if a0 != 3862606313\n      : @276 (gas: 1)\n  8716: jump @617\n      : @277 (gas: 1)\n  8719: jump @394 if a0 == 117300739\n      : @278 (gas: 1)\n  8727: jump @280 if a0 != 157198259\n      : @279 (gas: 1)\n  8734: jump @624\n      : @280 (gas: 1)\n  8737: jump @282 if a0 != 404098525\n      : @281 (gas: 1)\n  8744: jump @527\n      : @282 (gas: 1)\n  8747: jump @284 if a0 != 599290589\n      : @283 (gas: 1)\n  8754: jump @604\n      : @284 (gas: 1)\n  8757: jump @286 if a0 != 613063843\n      : @285 (gas: 1)\n  8764: jump @576\n      : @286 (gas: 1)\n  8767: jump @371 if a0 == 826074471\n      : @287 (gas: 1)\n  8775: jump @289 if a0 != 1061922874\n      : @288 (gas: 1)\n  8782: jump @509\n      : @289 (gas: 1)\n  8785: jump @426 if a0 == 1086394137\n      : @290 (gas: 1)\n  8793: jump @292 if a0 == 1553423035\n      : @291 (gas: 1)\n  8800: jump @537\n      : @292 (gas: 9)\n  8803: a0 = s1 + 0x1838\n  8807: u64 [a0 + 160] = 0\n  8811: u64 [a0 + 152] = 0\n  8815: u64 [a0 + 144] = 0\n  8819: u64 [a0 + 136] = 0\n  8823: a0 = s1 + 0x2000\n  8827: i32 a0 = a0 + 0xfffffffffffff8c0\n  8831: ecalli 10 // 'value_transferred'\n  8833: fallthrough\n      : @293 (gas: 9)\n  8834: a3 = s1 + 0x1838\n  8838: a0 = u64 [a3 + 0x98]\n  8842: a1 = u64 [a3 + 0xa0]\n  8846: a2 = u64 [a3 + 0x90]\n  8850: a3 = u64 [a3 + 0x88]\n  8854: a1 = a1 | a2\n  8857: a0 = a0 | a3\n  8860: a0 = a0 | a1\n  8863: jump @295 if a0 == 0\n      : @294 (gas: 1)\n  8866: jump @680\n      : @295 (gas: 3)\n  8869: a0 = u64 [s1 + 0xb8]\n  8873: a0 = i32 [a0]\n  8875: jump @297 if a0 >u 3\n      : @296 (gas: 1)\n  8879: jump @681\n      : @297 (gas: 9)\n  8882: a1 = s1 + 0x1838\n  8886: u64 [a1 + 192] = 0\n  8890: u64 [a1 + 184] = 0\n  8894: u64 [a1 + 176] = 0\n  8898: u64 [a1 + 168] = 0x5\n  8903: a0 = s1 + 0x7ff\n  8907: a0 = a0 + 0x481\n  8911: a1 = s1 + 0x18e0\n  8915: ra = 262, jump @21\n      : @298 [@dyn 131] (gas: 8)\n  8921: a0 = s1 + 0x7ff\n  8925: a0 = a0 + 0x39\n  8928: a0 = u64 [a0 + 0x448]\n  8932: u64 [s1 + 0xb8] = a0\n  8936: a0 = s1 + 0x7ff\n  8940: a0 = a0 + 0x461\n  8944: a1 = 0x40\n  8947: ra = 264, jump @17\n      : @299 [@dyn 132] (gas: 8)\n  8953: a3 = s1 + 0x7ff\n  8957: a3 = a3 + 0x39\n  8960: a5 = a3 + 0x400\n  8964: a4 = u64 [a5 + 0x40]\n  8967: a1 = u64 [a5 + 0x38]\n  8970: a2 = u64 [a5 + 0x30]\n  8973: a0 = u64 [a5 + 0x28]\n  8976: t0 = 266, jump @1367\n      : @300 [@dyn 133] (gas: 1)\n  8982: jump @302 if a1 == 0\n      : @301 (gas: 1)\n  8985: jump @653\n      : @302 (gas: 11)\n  8988: a1 = u8 [s1 + 0xb8]\n  8992: a1 = a1 >u 0\n  8994: u64 [a3 + 1056] = 0\n  8998: u64 [a3 + 1048] = 0\n  9002: u64 [a3 + 0x408] = a1\n  9006: a1 = s1 + 0x7ff\n  9010: a1 = a1 + 0x441\n  9014: u64 [a3 + 1040] = 0\n  9018: u64 [s1 + 0xb8] = a0\n  9022: ra = 0x2c6\n  9026: jump @19\n      : @303 (gas: 11)\n  9029: a0 = s1 + 0x1838\n  9033: u64 [a0 + 480] = 0\n  9037: u64 [a0 + 472] = 0\n  9041: u64 [a0 + 464] = 0\n  9045: u64 [a0 + 456] = 0\n  9049: a0 = s1 + 0x2000\n  9053: i32 a0 = a0 + 0xfffffffffffffa00\n  9057: ra = 0x10c\n  9061: ecalli 10 // 'value_transferred'\n  9063: t0 = 0x10e\n  9067: jump @1397\n      : @304 [@dyn 134] (gas: 1)\n  9070: t0 = 270, jump @1397\n      : @305 [@dyn 135] (gas: 1)\n  9076: t0 = 272, jump @1416\n      : @306 [@dyn 136] (gas: 1)\n  9082: jump @308 if a0 == 0\n      : @307 (gas: 1)\n  9085: jump @682\n      : @308 (gas: 4)\n  9088: a0 = u64 [s1 + 0xb8]\n  9092: a0 = i32 [a0]\n  9094: a1 = 0x43\n  9097: jump @310 if a1 <u a0\n      : @309 (gas: 1)\n  9100: jump @683\n      : @310 (gas: 5)\n  9103: a0 = s1 + 0x7ff\n  9107: a0 = a0 + 0x781\n  9111: ra = 0x112\n  9115: t0 = 0x402\n  9119: jump @1417\n      : @311 [@dyn 137] (gas: 16)\n  9122: a1 = s1 + 0x7ff\n  9126: a1 = a1 + 0x39\n  9129: a2 = a1 + 0x700\n  9133: a0 = u64 [a2 + 0x58]\n  9136: u64 [s1 + 0xa8] = a0\n  9140: a0 = u64 [a2 + 0x50]\n  9143: u64 [s1 + 0xb0] = a0\n  9147: a0 = u64 [a2 + 0x48]\n  9150: u64 [s1 + 0xb8] = a0\n  9154: a0 = s1 + 0x2000\n  9158: i32 a0 = a0 + 0xfffffffffffffa20\n  9162: a1 = 0x4\n  9165: ra = 0x114\n  9169: ecalli 1 // 'call_data_load'\n  9171: t0 = 0x116\n  9175: jump @1397\n      : @312 [@dyn 138] (gas: 1)\n  9178: t0 = 278, jump @1397\n      : @313 [@dyn 139] (gas: 15)\n  9184: a0 = u64 [a4 + 0xe8]\n  9188: a1 = u64 [a4 + 0xf0]\n  9192: a2 = u64 [a4 + 0xf8]\n  9196: a3 = u64 [a3 + 0x200]\n  9200: a4 = s1 + 0x7ff\n  9204: a4 = a4 + 0x39\n  9207: a5 = a4 + 0x700\n  9211: u64 [a5 + 0x40] = a3\n  9214: u64 [a5 + 0x38] = a2\n  9217: u64 [a5 + 0x30] = a1\n  9220: a1 = s1 + 0x7ff\n  9224: a1 = a1 + 0x761\n  9228: u64 [a5 + 0x28] = a0\n  9231: a0 = 0\n  9233: ra = 280, jump @19\n      : @314 [@dyn 140] (gas: 11)\n  9239: a1 = s1 + 0x7ff\n  9243: a1 = a1 + 0x39\n  9246: u64 [a1 + 1824] = 0\n  9250: u64 [a1 + 1816] = 0\n  9254: u64 [a1 + 1800] = 0x6\n  9259: a2 = a1\n  9261: a0 = 0x20\n  9264: a1 = s1 + 0x7ff\n  9268: a1 = a1 + 0x741\n  9272: u64 [a2 + 1808] = 0\n  9276: ra = 282, jump @19\n      : @315 [@dyn 141] (gas: 3)\n  9282: a1 = 0x20264\n  9287: a0 = i32 [0x20264]\n  9292: jump @317 if a0 >u 63\n      : @316 (gas: 2)\n  9296: u32 [0x20264] = 0x40\n  9302: fallthrough\n      : @317 (gas: 15)\n  9303: a0 = sp + 0xffffffffffffffe0\n  9306: a2 = a0 & 0xffffffffffffffe0\n  9309: u64 [s1 + 0x90] = a2\n  9313: sp = a2\n  9315: a0 = 0x20270\n  9320: i32 a0 = a0 + 0\n  9322: i32 a2 = a2 + 0\n  9324: u64 [s1 + 0xa0] = a1\n  9328: a1 = 0x40\n  9331: u64 [s1 + 0x98] = a0\n  9335: ra = 0x11c\n  9339: ecalli 6 // 'hash_keccak_256'\n  9341: a3 = u64 [s1 + 0x90]\n  9345: t0 = 0x11e\n  9349: jump @1405\n      : @318 [@dyn 142] (gas: 2)\n  9352: a3 = u64 [s1 + 0x90]\n  9356: t0 = 286, jump @1405\n      : @319 [@dyn 143] (gas: 27)\n  9362: u64 [s1 + 0x88] = a0\n  9366: a0 = reverse a1\n  9368: u64 [s1 + 0x80] = a0\n  9372: a0 = reverse a2\n  9374: u64 [s1 + 0x78] = a0\n  9377: a0 = reverse a3\n  9379: u64 [s1 + 0x70] = a0\n  9382: a0 = sp + 0xffffffffffffffe0\n  9385: a0 = a0 & 0xffffffffffffffe0\n  9388: u64 [s1 + 0x90] = a0\n  9392: sp = a0\n  9394: a0 = u64 [s1 + 0xa8]\n  9398: a0 = a0 << 0x20\n  9401: a0 = a0 >> 0x20\n  9404: a2 = s1 + 0x7ff\n  9408: a2 = a2 + 0x39\n  9411: u64 [a2 + 1792] = 0\n  9415: a3 = a2 + 0x600\n  9419: u64 [a3 + 0xf8] = a0\n  9423: a0 = u64 [s1 + 0xb0]\n  9427: u64 [a3 + 0xf0] = a0\n  9431: a1 = s1 + 0x7ff\n  9435: a1 = a1 + 0x721\n  9439: a0 = u64 [s1 + 0xb8]\n  9443: u64 [a3 + 0xe8] = a0\n  9447: a0 = 0\n  9449: ra = 288, jump @19\n      : @320 [@dyn 144] (gas: 16)\n  9455: a0 = u64 [s1 + 0x70]\n  9458: a1 = s1 + 0x7ff\n  9462: a1 = a1 + 0x39\n  9465: a2 = a1 + 0x600\n  9469: u64 [a2 + 0xe0] = a0\n  9473: a0 = u64 [s1 + 0x78]\n  9476: u64 [a2 + 0xd8] = a0\n  9480: a0 = u64 [s1 + 0x80]\n  9484: u64 [a2 + 0xd0] = a0\n  9488: a3 = a1\n  9490: a0 = 0x20\n  9493: a1 = s1 + 0x7ff\n  9497: a1 = a1 + 0x701\n  9501: a2 = u64 [s1 + 0x88]\n  9505: u64 [a3 + 0x6c8] = a2\n  9509: ra = 290, jump @19\n      : @321 [@dyn 145] (gas: 3)\n  9515: a1 = u64 [s1 + 0xa0]\n  9519: a0 = i32 [a1]\n  9521: jump @323 if a0 >u 63\n      : @322 (gas: 2)\n  9525: u32 [a1 + 0] = 0x40\n  9528: fallthrough\n      : @323 (gas: 12)\n  9529: a0 = sp + 0xffffffffffffffe0\n  9532: a0 = a0 & 0xffffffffffffffe0\n  9535: u64 [s1 + 0xb8] = a0\n  9539: sp = a0\n  9541: i32 a2 = a0 + 0\n  9543: a1 = 0x40\n  9546: a0 = u64 [s1 + 0x98]\n  9550: ra = 0x124\n  9554: ecalli 6 // 'hash_keccak_256'\n  9556: a3 = u64 [s1 + 0xb8]\n  9560: t0 = 0x126\n  9564: jump @1356\n      : @324 [@dyn 146] (gas: 2)\n  9567: a3 = u64 [s1 + 0xb8]\n  9571: t0 = 294, jump @1356\n      : @325 [@dyn 147] (gas: 8)\n  9577: a1 = u64 [s1 + 0x90]\n  9581: u64 [a1 + 0x18] = a3\n  9584: u64 [a1 + 0x10] = a2\n  9587: u64 [a1 + 0x8] = a4\n  9590: u64 [a1] = a0\n  9592: a0 = s1 + 0x7ff\n  9596: a0 = a0 + 0x6e1\n  9600: ra = 296, jump @21\n      : @326 [@dyn 148] (gas: 8)\n  9606: a0 = s1 + 0x7ff\n  9610: a0 = a0 + 0x39\n  9613: a0 = u64 [a0 + 0x6a8]\n  9617: u64 [s1 + 0xb8] = a0\n  9621: a0 = s1 + 0x7ff\n  9625: a0 = a0 + 0x6c1\n  9629: a1 = 0x40\n  9632: ra = 298, jump @17\n      : @327 [@dyn 149] (gas: 8)\n  9638: a3 = s1 + 0x7ff\n  9642: a3 = a3 + 0x39\n  9645: a5 = a3 + 0x600\n  9649: a4 = u64 [a5 + 0xa0]\n  9653: a1 = u64 [a5 + 0x98]\n  9657: a2 = u64 [a5 + 0x90]\n  9661: a0 = u64 [a5 + 0x88]\n  9665: t0 = 300, jump @1367\n      : @328 [@dyn 150] (gas: 1)\n  9671: jump @330 if a1 == 0\n      : @329 (gas: 1)\n  9674: jump @653\n      : @330 (gas: 11)\n  9677: a1 = u8 [s1 + 0xb8]\n  9681: a1 = a1 >u 0\n  9683: u64 [a3 + 1664] = 0\n  9687: u64 [a3 + 1656] = 0\n  9691: u64 [a3 + 0x668] = a1\n  9695: a1 = s1 + 0x7ff\n  9699: a1 = a1 + 0x6a1\n  9703: u64 [a3 + 1648] = 0\n  9707: u64 [s1 + 0xb8] = a0\n  9711: ra = 0x2c6\n  9715: jump @19\n      : @331 (gas: 11)\n  9718: a0 = s1 + 0x1838\n  9722: u64 [a0 + 608] = 0\n  9726: u64 [a0 + 600] = 0\n  9730: u64 [a0 + 592] = 0\n  9734: u64 [a0 + 584] = 0\n  9738: a0 = s1 + 0x2000\n  9742: i32 a0 = a0 + 0xfffffffffffffa80\n  9746: ra = 0x12e\n  9750: ecalli 10 // 'value_transferred'\n  9752: t0 = 0x130\n  9756: jump @1384\n      : @332 [@dyn 151] (gas: 1)\n  9759: t0 = 304, jump @1384\n      : @333 [@dyn 152] (gas: 1)\n  9765: t0 = 306, jump @1396\n      : @334 [@dyn 153] (gas: 1)\n  9771: jump @336 if a0 == 0\n      : @335 (gas: 1)\n  9774: jump @684\n      : @336 (gas: 3)\n  9777: a0 = u64 [s1 + 0xb8]\n  9781: a0 = i32 [a0]\n  9783: jump @338 if a0 >u 3\n      : @337 (gas: 1)\n  9787: jump @685\n      : @338 (gas: 3)\n  9790: a0 = s1 + 0x11a0\n  9794: a1 = 0x40\n  9797: ra = 308, jump @17\n      : @339 [@dyn 154] (gas: 7)\n  9803: a3 = s1 + 0x1038\n  9807: a5 = a3 + 0x100\n  9811: a4 = u64 [a5 + 0x80]\n  9815: a1 = u64 [a5 + 0x78]\n  9818: a2 = u64 [a5 + 0x70]\n  9821: a0 = u64 [a5 + 0x68]\n  9824: t0 = 310, jump @1367\n      : @340 [@dyn 155] (gas: 1)\n  9830: jump @342 if a1 == 0\n      : @341 (gas: 1)\n  9833: jump @653\n      : @342 (gas: 8)\n  9836: u64 [a3 + 352] = 0\n  9840: u64 [a3 + 344] = 0\n  9844: u64 [a3 + 336] = 0\n  9848: a1 = s1 + 0x1180\n  9852: u64 [a3 + 328] = 0\n  9856: u64 [s1 + 0xb8] = a0\n  9860: ra = 0x2c6\n  9864: jump @19\n      : @343 (gas: 10)\n  9867: a0 = s1 + 0x1838\n  9871: u64 [a0 + 800] = 0\n  9875: u64 [a0 + 792] = 0\n  9879: u64 [a0 + 784] = 0\n  9883: u64 [a0 + 776] = 0\n  9887: a0 = s1 + 0x2000\n  9891: i32 a0 = a0 + 0xfffffffffffffb40\n  9895: ra = 0x138\n  9899: ecalli 10 // 'value_transferred'\n  9901: fallthrough\n      : @344 [@dyn 156] (gas: 3)\n  9902: a3 = s1 + 0x1838\n  9906: a4 = a3 + 0x300\n  9910: t0 = 314, jump @1385\n      : @345 [@dyn 157] (gas: 1)\n  9916: jump @347 if a0 == 0\n      : @346 (gas: 1)\n  9919: jump @686\n      : @347 (gas: 4)\n  9922: a0 = u64 [s1 + 0xb8]\n  9926: a0 = i32 [a0]\n  9928: a1 = 0x43\n  9931: jump @349 if a1 <u a0\n      : @348 (gas: 1)\n  9934: jump @687\n      : @349 (gas: 6)\n  9937: a0 = 0xffffffff\n  9947: u64 [s1 + 0xb8] = a0\n  9951: a0 = s1 + 0x14a0\n  9955: ra = 0x13c\n  9959: t0 = 0x3f8\n  9963: jump @1417\n      : @350 [@dyn 158] (gas: 11)\n  9966: a1 = s1 + 0x1038\n  9970: a0 = u64 [a1 + 0x468]\n  9974: u64 [s1 + 0xb0] = a0\n  9978: a0 = u64 [a1 + 0x470]\n  9982: u64 [s1 + 0x90] = a0\n  9986: a0 = u32 [a1 + 0x478]\n  9990: u64 [s1 + 0x88] = a0\n  9994: a0 = s1 + 0x1480\n  9998: ra = 0x13e\n 10002: t0 = 0x402\n 10006: jump @1417\n      : @351 [@dyn 159] (gas: 3)\n 10009: t0 = 0x140\n 10013: a1 = s1 + 0x1038\n 10017: fallthrough\n      : @352 [@dyn 160] (gas: 18)\n 10018: a2 = a1 + 0x400\n 10022: a0 = u64 [a2 + 0x58]\n 10025: u64 [s1 + 0xa8] = a0\n 10029: a0 = u64 [a2 + 0x50]\n 10032: u64 [s1 + 0xa0] = a0\n 10036: a0 = u64 [a2 + 0x48]\n 10039: u64 [s1 + 0x98] = a0\n 10043: u64 [a1 + 1088] = 0\n 10047: a0 = u64 [s1 + 0x88]\n 10051: u64 [a2 + 0x38] = a0\n 10054: a0 = u64 [s1 + 0x90]\n 10058: u64 [a2 + 0x30] = a0\n 10061: a2 = a1\n 10063: a1 = s1 + 0x1460\n 10067: a0 = u64 [s1 + 0xb0]\n 10071: u64 [a2 + 0x428] = a0\n 10075: a0 = 0\n 10077: ra = 322, jump @19\n      : @353 [@dyn 161] (gas: 3)\n 10083: t0 = 0x144\n 10087: a1 = s1 + 0x1038\n 10091: fallthrough\n      : @354 [@dyn 162] (gas: 8)\n 10092: u64 [a1 + 1056] = 0\n 10096: u64 [a1 + 1048] = 0\n 10100: u64 [a1 + 1032] = 0x1\n 10105: a2 = a1\n 10107: a0 = 0x20\n 10110: a1 = s1 + 0x1440\n 10114: u64 [a2 + 1040] = 0\n 10118: ra = 326, jump @19\n      : @355 [@dyn 163] (gas: 3)\n 10124: a1 = 0x20264\n 10129: a0 = i32 [0x20264]\n 10134: jump @357 if a0 >u 63\n      : @356 (gas: 2)\n 10138: u32 [0x20264] = 0x40\n 10144: fallthrough\n      : @357 (gas: 15)\n 10145: a0 = sp + 0xffffffffffffffe0\n 10148: a2 = a0 & 0xffffffffffffffe0\n 10151: u64 [s1 + 0x88] = a2\n 10155: sp = a2\n 10157: a0 = 0x20270\n 10162: i32 a0 = a0 + 0\n 10164: i32 a2 = a2 + 0\n 10166: u64 [s1 + 0xb0] = a1\n 10170: a1 = 0x40\n 10173: u64 [s1 + 0x90] = a0\n 10177: ra = 0x148\n 10181: ecalli 6 // 'hash_keccak_256'\n 10183: a3 = u64 [s1 + 0x88]\n 10187: t0 = 0x14a\n 10191: jump @1405\n      : @358 [@dyn 164] (gas: 2)\n 10194: a3 = u64 [s1 + 0x88]\n 10198: t0 = 330, jump @1405\n      : @359 [@dyn 165] (gas: 27)\n 10204: u64 [s1 + 0x80] = a0\n 10208: a0 = reverse a1\n 10210: u64 [s1 + 0x78] = a0\n 10213: a0 = reverse a2\n 10215: u64 [s1 + 0x70] = a0\n 10218: a0 = reverse a3\n 10220: u64 [s1 + 0x68] = a0\n 10223: a0 = sp + 0xffffffffffffffe0\n 10226: a0 = a0 & 0xffffffffffffffe0\n 10229: u64 [s1 + 0x88] = a0\n 10233: sp = a0\n 10235: a0 = u64 [s1 + 0x98]\n 10239: a0 = a0 & 0xffffffffffffffff\n 10242: a2 = u64 [s1 + 0xa0]\n 10246: a1 = a2 & 0xffffffffffffffff\n 10249: a2 = u64 [s1 + 0xb8]\n 10253: a3 = u64 [s1 + 0xa8]\n 10257: a2 = a2 & a3\n 10260: a3 = s1 + 0x1038\n 10264: u64 [a3 + 1024] = 0\n 10268: a4 = a3 + 0x300\n 10272: u64 [a4 + 0xf8] = a2\n 10276: u64 [a4 + 0xf0] = a1\n 10280: a1 = s1 + 0x1420\n 10284: u64 [a4 + 0xe8] = a0\n 10288: a0 = 0\n 10290: ra = 332, jump @19\n      : @360 [@dyn 166] (gas: 14)\n 10296: a0 = u64 [s1 + 0x68]\n 10299: a1 = s1 + 0x1038\n 10303: a2 = a1 + 0x300\n 10307: u64 [a2 + 0xe0] = a0\n 10311: a0 = u64 [s1 + 0x70]\n 10314: u64 [a2 + 0xd8] = a0\n 10318: a0 = u64 [s1 + 0x78]\n 10321: u64 [a2 + 0xd0] = a0\n 10325: a3 = a1\n 10327: a0 = 0x20\n 10330: a1 = s1 + 0x1400\n 10334: a2 = u64 [s1 + 0x80]\n 10338: u64 [a3 + 0x3c8] = a2\n 10342: ra = 334, jump @19\n      : @361 [@dyn 167] (gas: 3)\n 10348: a1 = u64 [s1 + 0xb0]\n 10352: a0 = i32 [a1]\n 10354: jump @363 if a0 >u 63\n      : @362 (gas: 2)\n 10358: u32 [a1 + 0] = 0x40\n 10361: fallthrough\n      : @363 (gas: 12)\n 10362: a0 = sp + 0xffffffffffffffe0\n 10365: a0 = a0 & 0xffffffffffffffe0\n 10368: u64 [s1 + 0xb8] = a0\n 10372: sp = a0\n 10374: i32 a2 = a0 + 0\n 10376: a1 = 0x40\n 10379: a0 = u64 [s1 + 0x90]\n 10383: ra = 0x150\n 10387: ecalli 6 // 'hash_keccak_256'\n 10389: a3 = u64 [s1 + 0xb8]\n 10393: t0 = 0x152\n 10397: jump @1356\n      : @364 [@dyn 168] (gas: 2)\n 10400: a3 = u64 [s1 + 0xb8]\n 10404: t0 = 338, jump @1356\n      : @365 [@dyn 169] (gas: 7)\n 10410: a1 = u64 [s1 + 0x88]\n 10414: u64 [a1 + 0x18] = a3\n 10417: u64 [a1 + 0x10] = a2\n 10420: u64 [a1 + 0x8] = a4\n 10423: u64 [a1] = a0\n 10425: a0 = s1 + 0x13e0\n 10429: ra = 340, jump @21\n      : @366 [@dyn 170] (gas: 13)\n 10435: a1 = s1 + 0x1038\n 10439: a2 = a1 + 0x300\n 10443: a0 = u64 [a2 + 0xc0]\n 10447: u64 [s1 + 0xb8] = a0\n 10451: a0 = u64 [a2 + 0xb8]\n 10455: u64 [s1 + 0xb0] = a0\n 10459: a0 = u64 [a2 + 0xb0]\n 10463: u64 [s1 + 0xa8] = a0\n 10467: a0 = u64 [a2 + 0xa8]\n 10471: u64 [s1 + 0xa0] = a0\n 10475: a0 = s1 + 0x13c0\n 10479: a1 = 0x40\n 10482: ra = 342, jump @17\n      : @367 [@dyn 171] (gas: 3)\n 10488: a3 = s1 + 0x1038\n 10492: a5 = a3 + 0x300\n 10496: t0 = 344, jump @1408\n      : @368 [@dyn 172] (gas: 1)\n 10502: jump @370 if a0 == 0\n      : @369 (gas: 1)\n 10505: jump @653\n      : @370 (gas: 14)\n 10508: a0 = u64 [s1 + 0xa0]\n 10512: a2 = a3 + 0x300\n 10516: u64 [a2 + 0x68] = a0\n 10519: a0 = u64 [s1 + 0xa8]\n 10523: u64 [a2 + 0x70] = a0\n 10526: a0 = u64 [s1 + 0xb0]\n 10530: u64 [a2 + 0x78] = a0\n 10533: a1 = s1 + 0x13a0\n 10537: a0 = u64 [s1 + 0xb8]\n 10541: u64 [a2 + 0x80] = a0\n 10545: a0 = a4\n 10547: u64 [s1 + 0xb8] = a4\n 10551: ra = 0x2c6\n 10555: jump @19\n      : @371 (gas: 10)\n 10558: u64 [a2 + 1760] = 0\n 10562: u64 [a2 + 1752] = 0\n 10566: u64 [a2 + 1744] = 0\n 10570: u64 [a2 + 1736] = 0\n 10574: a0 = s1 + 0x1000\n 10578: i32 a0 = a0 + 0x700\n 10582: ra = 0x15a\n 10586: ecalli 10 // 'value_transferred'\n 10588: t0 = 0x15c\n 10592: jump @1378\n      : @372 [@dyn 173] (gas: 1)\n 10595: t0 = 348, jump @1378\n      : @373 [@dyn 174] (gas: 1)\n 10601: t0 = 350, jump @1416\n      : @374 [@dyn 175] (gas: 1)\n 10607: jump @376 if a0 == 0\n      : @375 (gas: 1)\n 10610: jump @688\n      : @376 (gas: 3)\n 10613: a0 = u64 [s1 + 0xb8]\n 10617: a0 = i32 [a0]\n 10619: jump @378 if a0 >u 3\n      : @377 (gas: 1)\n 10623: jump @689\n      : @378 (gas: 3)\n 10626: a0 = s1 + 0x7e0\n 10630: a1 = 0x40\n 10633: ra = 352, jump @17\n      : @379 [@dyn 176] (gas: 6)\n 10639: a4 = s1 + 0x700\n 10643: a3 = u64 [a4 + 0xf8]\n 10647: a1 = u64 [a4 + 0xf0]\n 10651: a2 = u64 [a4 + 0xe8]\n 10655: a0 = u64 [a4 + 0xe0]\n 10659: t0 = 354, jump @1368\n      : @380 [@dyn 177] (gas: 1)\n 10665: jump @382 if a1 == 0\n      : @381 (gas: 1)\n 10668: jump @653\n      : @382 (gas: 8)\n 10671: u64 [s1 + 2008] = 0\n 10675: u64 [s1 + 2000] = 0\n 10679: u64 [s1 + 1992] = 0\n 10683: a1 = s1 + 0x7c0\n 10687: u64 [s1 + 1984] = 0x12\n 10692: u64 [s1 + 0xb8] = a0\n 10696: ra = 0x2c6\n 10700: jump @19\n      : @383 (gas: 11)\n 10703: a0 = s1 + 0x1838\n 10707: u64 [a0 + 704] = 0\n 10711: u64 [a0 + 696] = 0\n 10715: u64 [a0 + 688] = 0\n 10719: u64 [a0 + 680] = 0\n 10723: a0 = s1 + 0x2000\n 10727: i32 a0 = a0 + 0xfffffffffffffae0\n 10731: ra = 0x164\n 10735: ecalli 10 // 'value_transferred'\n 10737: t0 = 0x166\n 10741: jump @1384\n      : @384 [@dyn 178] (gas: 1)\n 10744: t0 = 358, jump @1384\n      : @385 [@dyn 179] (gas: 8)\n 10750: a0 = u64 [a4 + 0xb8]\n 10754: a1 = u64 [a4 + 0xc0]\n 10758: a2 = u64 [a4 + 0xb0]\n 10762: a3 = u64 [a4 + 0xa8]\n 10766: a1 = a1 | a2\n 10769: a0 = a0 | a3\n 10772: a0 = a0 | a1\n 10775: jump @387 if a0 == 0\n      : @386 (gas: 1)\n 10778: jump @690\n      : @387 (gas: 3)\n 10781: a0 = u64 [s1 + 0xb8]\n 10785: a0 = i32 [a0]\n 10787: jump @389 if a0 >u 3\n      : @388 (gas: 1)\n 10791: jump @691\n      : @389 (gas: 3)\n 10794: a0 = s1 + 0x12a0\n 10798: a1 = 0x40\n 10801: ra = 360, jump @17\n      : @390 [@dyn 180] (gas: 7)\n 10807: a3 = s1 + 0x1038\n 10811: a5 = a3 + 0x200\n 10815: a4 = u64 [a5 + 0x80]\n 10819: a1 = u64 [a5 + 0x78]\n 10822: a2 = u64 [a5 + 0x70]\n 10825: a0 = u64 [a5 + 0x68]\n 10828: t0 = 362, jump @1367\n      : @391 [@dyn 181] (gas: 1)\n 10834: jump @393 if a1 == 0\n      : @392 (gas: 1)\n 10837: jump @653\n      : @393 (gas: 13)\n 10840: a1 = u64 [0x20040]\n 10845: a5 = a3 + 0x200\n 10849: u64 [a5 + 0x60] = a1\n 10852: a4 = u64 [0x20048]\n 10857: a1 = u64 [0x20050]\n 10862: a2 = u64 [0x20058]\n 10867: u64 [a5 + 0x58] = a4\n 10870: u64 [a5 + 0x50] = a1\n 10873: a1 = s1 + 0x1280\n 10877: u64 [a5 + 0x48] = a2\n 10880: u64 [s1 + 0xb8] = a0\n 10884: ra = 0x2c6\n 10888: jump @19\n      : @394 (gas: 10)\n 10891: u64 [a2 + 1376] = 0\n 10895: u64 [a2 + 1368] = 0\n 10899: u64 [a2 + 1360] = 0\n 10903: u64 [a2 + 1352] = 0\n 10907: a0 = s1 + 0x1000\n 10911: i32 a0 = a0 + 0x580\n 10915: ra = 0x16c\n 10919: ecalli 10 // 'value_transferred'\n 10921: t0 = 0x16e\n 10925: jump @1422\n      : @395 [@dyn 182] (gas: 1)\n 10928: t0 = 366, jump @1422\n      : @396 [@dyn 183] (gas: 1)\n 10934: t0 = 368, jump @1396\n      : @397 [@dyn 184] (gas: 1)\n 10940: jump @399 if a0 == 0\n      : @398 (gas: 1)\n 10943: jump @692\n      : @399 (gas: 3)\n 10946: a0 = u64 [s1 + 0xb8]\n 10950: a0 = i32 [a0]\n 10952: jump @401 if a0 >u 3\n      : @400 (gas: 1)\n 10956: jump @693\n      : @401 (gas: 3)\n 10959: a0 = s1 + 0x2a0\n 10963: a1 = 0x40\n 10966: ra = 370, jump @17\n      : @402 [@dyn 185] (gas: 16)\n 10972: a0 = u64 [s1 + 0x2b8]\n 10976: u64 [s1 + 0x18] = a0\n 10979: a0 = u64 [s1 + 0x2b0]\n 10983: u64 [s1 + 0x28] = a0\n 10986: a0 = u64 [s1 + 0x2a8]\n 10990: u64 [s1 + 0x20] = a0\n 10993: a0 = u64 [s1 + 0x2a0]\n 10997: u64 [s1 + 0x30] = a0\n 11000: a0 = s1 + 0x1038\n 11004: u64 [a0 + 1408] = 0\n 11008: u64 [a0 + 1400] = 0\n 11012: u64 [a0 + 1392] = 0\n 11016: u64 [a0 + 1384] = 0x3\n 11021: a0 = s1 + 0x280\n 11025: a1 = s1 + 0x15a0\n 11029: ra = 372, jump @21\n      : @403 [@dyn 186] (gas: 34)\n 11035: a2 = u64 [s1 + 0x290]\n 11039: t2 = u64 [s1 + 0x288]\n 11043: t0 = u64 [s1 + 0x298]\n 11047: a5 = u64 [s1 + 0x280]\n 11051: a0 = a2 << 0x3f\n 11054: a1 = t2 >> 0x1\n 11057: a0 = a0 | a1\n 11060: a1 = t0 << 0x3f\n 11063: u64 [s1 + 0xb0] = a2\n 11067: a2 = a2 >> 0x1\n 11070: a1 = a1 | a2\n 11073: a2 = t2 << 0x3f\n 11076: a3 = a5 >> 0x1\n 11079: a4 = a3 | a2\n 11082: a2 = t0 >> 0x1\n 11085: u64 [s1 + 0xa8] = a5\n 11089: a5 = a5 & 0x1\n 11092: a3 = -a5\n 11094: a1 = a1 & a3\n 11097: t1 = a3 & a0\n 11100: a2 = a2 & a3\n 11103: ra = a4 & 0x7f\n 11106: a4 = ra if a5 == 0\n 11109: u64 [s1 + 0x70] = a4\n 11112: a0 = a4 <u 0x20\n 11115: u64 [s1 + 0x60] = t1\n 11118: a0 = 0 if t1 != 0\n 11120: u64 [s1 + 0x68] = a1\n 11123: u64 [s1 + 0x58] = a2\n 11126: a1 = a1 | a2\n 11129: a0 = 0 if a1 != 0\n 11131: u64 [s1 + 0xb8] = a5\n 11135: a1 = a5 <u 0x1\n 11138: jump @405 if a1 == a0\n      : @404 (gas: 1)\n 11141: jump @694\n      : @405 (gas: 12)\n 11144: a2 = u64 [s1 + 0x28]\n 11147: a4 = u64 [s1 + 0x30]\n 11150: a0 = a4 | a2\n 11153: a1 = u64 [s1 + 0x18]\n 11156: a3 = u64 [s1 + 0x20]\n 11159: a1 = a1 | a3\n 11162: a0 = a0 | a1\n 11165: a0 = a0 >> 0x20\n 11168: a1 = a1 | a2\n 11171: a1 = a1 << 0x20\n 11174: a1 = a1 | a0\n 11177: jump @407 if a1 == 0\n      : @406 (gas: 1)\n 11180: jump @653\n      : @407 (gas: 15)\n 11183: a0 = a4\n 11185: u64 [s1 + 0x90] = ra\n 11189: u64 [s1 + 0x98] = t2\n 11193: u64 [s1 + 0xa0] = t0\n 11197: a1 = u64 [s1 + 0x70]\n 11200: a3 = s1 + 0x200\n 11204: u64 [a3 + 0x60] = a1\n 11207: a1 = u64 [s1 + 0x60]\n 11210: u64 [a3 + 0x68] = a1\n 11213: a1 = u64 [s1 + 0x68]\n 11216: u64 [a3 + 0x70] = a1\n 11219: a1 = s1 + 0x260\n 11223: a2 = u64 [s1 + 0x58]\n 11226: u64 [a3 + 0x78] = a2\n 11229: ra = 374, jump @19\n      : @408 [@dyn 187] (gas: 2)\n 11235: a0 = u64 [s1 + 0xb8]\n 11239: jump @410 if a0 == 0\n      : @409 (gas: 1)\n 11242: jump @654\n      : @410 (gas: 1)\n 11245: t0 = 376, jump @1394\n      : @411 [@dyn 188] (gas: 1)\n 11251: jump @413 if a1 != 0\n      : @412 (gas: 1)\n 11254: jump @653\n      : @413 (gas: 13)\n 11257: a1 = u64 [s1 + 0xa8]\n 11261: a1 = a1 & 0xffffffffffffff00\n 11265: i32 a0 = a3 + 0x20\n 11268: a3 = u64 [s1 + 0x98]\n 11272: a2 = s1 + 0x100\n 11276: u64 [a2 + 0xe8] = a3\n 11280: u64 [a2 + 0xe0] = a1\n 11284: a1 = u64 [s1 + 0xb0]\n 11288: u64 [a2 + 0xf0] = a1\n 11292: a1 = s1 + 0x1e0\n 11296: a3 = u64 [s1 + 0xa0]\n 11300: u64 [a2 + 0xf8] = a3\n 11304: ra = 378, jump @19\n      : @414 [@dyn 189] (gas: 9)\n 11310: t2 = 0\n 11312: t1 = 0\n 11314: u64 [s1 + 176] = 0\n 11318: a0 = u64 [s1 + 0x90]\n 11322: a0 = a0 >u 0\n 11324: a0 = a0 << 0x5\n 11327: u64 [s1 + 0xb8] = a0\n 11331: t0 = 0x17c\n 11335: jump @1388\n      : @415 (gas: 1)\n 11338: t0 = 380, jump @1388\n      : @416 [@dyn 190] (gas: 28)\n 11344: t0 = u64 [s1 + 0x20]\n 11347: a3 = a2 + t0\n 11350: ra = a3 + a0\n 11353: a3 = ra ^ a2\n 11356: a4 = ra <u a2\n 11359: a4 = a0 if a3 == 0\n 11362: a0 = a2 <u t2\n 11365: a0 = a1 if a1 == 0\n 11368: a0 = a0 + t1\n 11371: a1 = a0 <u t1\n 11374: a2 = u64 [s1 + 0x28]\n 11377: a2 = a2 + a0\n 11380: a4 = a4 + a2\n 11383: a0 = a2 <u a0\n 11386: a2 = a4 <u a2\n 11389: t1 = u64 [s1 + 0x18]\n 11392: a3 = u64 [s1 + 0xb0]\n 11396: a3 = a3 + t1\n 11399: a1 = a1 + a3\n 11402: a0 = a0 + a1\n 11405: a5 = a0 + a2\n 11408: a0 = a5 >u 0\n 11410: a1 = a4 >u 0\n 11412: a1 = a0 if a5 != 0\n 11415: a0 = a4 | a5\n 11418: a2 = ra >u 0\n 11420: a2 = a1 if a0 != 0\n 11423: jump @418 if a2 == 0\n      : @417 (gas: 1)\n 11426: jump @763\n      : @418 (gas: 6)\n 11429: a0 = u64 [s1 + 0x30]\n 11432: a1 = u64 [s1 + 0xb8]\n 11436: a0 = a1 <u a0\n 11439: a1 = ra ^ t0\n 11442: a2 = ra <u t0\n 11445: t0 = 382, jump @1386\n      : @419 [@dyn 191] (gas: 1)\n 11451: jump @421 if a3 == 0\n      : @420 (gas: 1)\n 11454: jump @763\n      : @421 (gas: 11)\n 11457: a0 = u64 [s1 + 0xb8]\n 11461: u64 [s1 + 0x1c0] = a0\n 11465: u64 [s1 + 0x1c8] = ra\n 11469: u64 [s1 + 0x1d0] = a4\n 11473: a0 = 0x40\n 11476: a1 = s1 + 0x1c0\n 11480: u64 [s1 + 0x1d8] = a5\n 11484: u64 [s1 + 0xa8] = ra\n 11488: u64 [s1 + 0xa0] = a4\n 11492: u64 [s1 + 0xb0] = a5\n 11496: ra = 384, jump @19\n      : @422 [@dyn 192] (gas: 21)\n 11502: a0 = u64 [s1 + 0x18]\n 11505: a4 = s1 + 0x100\n 11509: u64 [a4 + 0x78] = a0\n 11512: a0 = u64 [s1 + 0x28]\n 11515: u64 [a4 + 0x70] = a0\n 11518: a0 = u64 [s1 + 0x20]\n 11521: u64 [a4 + 0x68] = a0\n 11524: a0 = u64 [s1 + 0x30]\n 11527: u64 [a4 + 0x60] = a0\n 11530: a0 = u64 [s1 + 0xb0]\n 11534: u64 [a4 + 0x98] = a0\n 11538: a0 = u64 [s1 + 0xa0]\n 11542: u64 [a4 + 0x90] = a0\n 11546: a0 = u64 [s1 + 0xa8]\n 11550: u64 [a4 + 0x88] = a0\n 11554: a0 = s1 + 0x1a0\n 11558: a1 = s1 + 0x180\n 11562: a2 = s1 + 0x160\n 11566: a3 = u64 [s1 + 0xb8]\n 11570: u64 [a4 + 0x80] = a3\n 11574: ra = 386, jump @1021\n      : @423 [@dyn 193] (gas: 12)\n 11580: a2 = u64 [s1 + 0xa0]\n 11584: a4 = u64 [s1 + 0xa8]\n 11588: t0 = u64 [s1 + 0xb8]\n 11592: a0 = t0 | a2\n 11595: a1 = u64 [s1 + 0xb0]\n 11599: a1 = a1 | a4\n 11602: a0 = a0 | a1\n 11605: a0 = a0 >> 0x20\n 11608: a1 = a1 | a2\n 11611: a1 = a1 << 0x20\n 11614: a0 = a0 | a1\n 11617: jump @425 if a0 == 0\n      : @424 (gas: 1)\n 11620: jump @653\n      : @425 (gas: 7)\n 11623: a5 = s1 + 0x100\n 11627: a0 = u64 [a5 + 0xa8]\n 11631: a1 = u64 [a5 + 0xb8]\n 11635: u64 [s1 + 0x98] = a1\n 11639: t1 = u64 [s1 + 0x1a0]\n 11643: a3 = u64 [a5 + 0xb0]\n 11647: jump @505\n      : @426 (gas: 8)\n 11650: u64 [a2 + 1984] = 0\n 11654: u64 [a2 + 1976] = 0\n 11658: u64 [a2 + 1968] = 0\n 11662: u64 [a2 + 1960] = 0\n 11666: a0 = s1 + 0x1000\n 11670: i32 a0 = a0 + 0x7e0\n 11674: ecalli 10 // 'value_transferred'\n 11676: fallthrough\n      : @427 (gas: 10)\n 11677: a3 = s1 + 0x1038\n 11681: a4 = a3 + 0x700\n 11685: a0 = u64 [a4 + 0xb8]\n 11689: a1 = u64 [a4 + 0xc0]\n 11693: a2 = u64 [a4 + 0xb0]\n 11697: a3 = u64 [a4 + 0xa8]\n 11701: a1 = a1 | a2\n 11704: a0 = a0 | a3\n 11707: a0 = a0 | a1\n 11710: jump @429 if a0 == 0\n      : @428 (gas: 1)\n 11713: jump @700\n      : @429 (gas: 4)\n 11716: a0 = u64 [s1 + 0xb8]\n 11720: a0 = i32 [a0]\n 11722: a1 = 0x43\n 11725: jump @431 if a1 <u a0\n      : @430 (gas: 1)\n 11728: jump @701\n      : @431 (gas: 5)\n 11731: a0 = s1 + 0x7ff\n 11735: a0 = a0 + 0x3e1\n 11739: ra = 0x184\n 11743: t0 = 0x3f8\n 11747: jump @1417\n      : @432 [@dyn 194] (gas: 42)\n 11750: a1 = s1 + 0x7ff\n 11754: a1 = a1 + 0x39\n 11757: a2 = a1 + 0x300\n 11761: a0 = u64 [a2 + 0xb8]\n 11765: u64 [s1 + 0x78] = a0\n 11768: a0 = u64 [a2 + 0xb0]\n 11772: u64 [s1 + 0xa8] = a0\n 11776: a0 = u64 [a2 + 0xa8]\n 11780: u64 [s1 + 0xb0] = a0\n 11784: a0 = s1 + 0x2000\n 11788: i32 a0 = a0 + 0xfffffffffffff800\n 11792: a1 = 0x24\n 11795: ecalli 1 // 'call_data_load'\n 11797: a0 = s1 + 0x1038\n 11801: a2 = a0 + 0x700\n 11805: a1 = u64 [a2 + 0xe0]\n 11809: u64 [s1 + 0xa0] = a1\n 11813: a1 = u64 [a2 + 0xd8]\n 11817: u64 [s1 + 0x90] = a1\n 11821: a1 = u64 [a2 + 0xd0]\n 11825: u64 [s1 + 0x88] = a1\n 11829: a0 = u64 [a2 + 0xc8]\n 11833: u64 [s1 + 0x80] = a0\n 11837: a0 = u64 [0x20040]\n 11842: u64 [s1 + 0x40] = a0\n 11845: a3 = s1 + 0x7ff\n 11849: a3 = a3 + 0x39\n 11852: a4 = a3 + 0x300\n 11856: u64 [a4 + 0xa0] = a0\n 11860: a1 = u64 [0x20048]\n 11865: a2 = u64 [0x20050]\n 11870: a0 = u64 [0x20058]\n 11875: u64 [s1 + 0x30] = a1\n 11878: u64 [a4 + 0x98] = a1\n 11882: u64 [s1 + 0x28] = a2\n 11885: u64 [a4 + 0x90] = a2\n 11889: a1 = s1 + 0x7ff\n 11893: a1 = a1 + 0x3c1\n 11897: u64 [s1 + 0x38] = a0\n 11900: u64 [a4 + 0x88] = a0\n 11904: a0 = 0\n 11906: ra = 390, jump @19\n      : @433 [@dyn 195] (gas: 11)\n 11912: a1 = s1 + 0x7ff\n 11916: a1 = a1 + 0x39\n 11919: u64 [a1 + 896] = 0\n 11923: u64 [a1 + 888] = 0\n 11927: u64 [a1 + 872] = 0x6\n 11932: a2 = a1\n 11934: a0 = 0x20\n 11937: a1 = s1 + 0x7ff\n 11941: a1 = a1 + 0x3a1\n 11945: u64 [a2 + 880] = 0\n 11949: ra = 392, jump @19\n      : @434 [@dyn 196] (gas: 3)\n 11955: a1 = 0x20264\n 11960: a0 = i32 [0x20264]\n 11965: jump @436 if a0 >u 63\n      : @435 (gas: 2)\n 11969: u32 [0x20264] = 0x40\n 11975: fallthrough\n      : @436 (gas: 15)\n 11976: a0 = sp + 0xffffffffffffffe0\n 11979: a2 = a0 & 0xffffffffffffffe0\n 11982: u64 [s1 + 0x70] = a2\n 11985: sp = a2\n 11987: a0 = 0x20270\n 11992: i32 a0 = a0 + 0\n 11994: u64 [s1 + 0x98] = a1\n 11998: i32 a2 = a2 + 0\n 12000: a1 = 0x40\n 12003: u64 [s1 + 0xb8] = a0\n 12007: ra = 0x18a\n 12011: ecalli 6 // 'hash_keccak_256'\n 12013: a3 = u64 [s1 + 0x70]\n 12016: t0 = 0x18c\n 12020: jump @1375\n      : @437 [@dyn 197] (gas: 2)\n 12023: a3 = u64 [s1 + 0x70]\n 12026: t0 = 396, jump @1375\n      : @438 [@dyn 198] (gas: 9)\n 12032: a0 = 0x30270\n 12037: u64 [s1 + 0x70] = a0\n 12040: i32 a0 = a0 + 0\n 12042: u64 [s1 + 0x20] = a0\n 12045: ra = 0x18e\n 12049: ecalli 3 // 'caller'\n 12051: a2 = u64 [s1 + 0x70]\n 12054: t0 = 0x190\n 12058: jump @1347\n      : @439 [@dyn 199] (gas: 2)\n 12061: a2 = u64 [s1 + 0x70]\n 12064: t0 = 400, jump @1347\n      : @440 [@dyn 200] (gas: 9)\n 12070: u64 [a2 + 864] = 0\n 12074: a4 = a2 + 0x300\n 12078: u64 [a4 + 0x58] = a1\n 12081: u64 [a4 + 0x50] = a0\n 12084: a1 = s1 + 0x7ff\n 12088: a1 = a1 + 0x381\n 12092: u64 [a4 + 0x48] = a3\n 12095: a0 = 0\n 12097: ra = 402, jump @19\n      : @441 [@dyn 201] (gas: 16)\n 12103: a0 = u64 [s1 + 0x48]\n 12106: a1 = s1 + 0x7ff\n 12110: a1 = a1 + 0x39\n 12113: a2 = a1 + 0x300\n 12117: u64 [a2 + 0x40] = a0\n 12120: a0 = u64 [s1 + 0x50]\n 12123: u64 [a2 + 0x38] = a0\n 12126: a0 = u64 [s1 + 0x58]\n 12129: u64 [a2 + 0x30] = a0\n 12132: a3 = a1\n 12134: a0 = 0x20\n 12137: a1 = s1 + 0x7ff\n 12141: a1 = a1 + 0x361\n 12145: a2 = u64 [s1 + 0x60]\n 12148: u64 [a3 + 0x328] = a2\n 12152: ra = 404, jump @19\n      : @442 [@dyn 202] (gas: 3)\n 12158: a1 = u64 [s1 + 0x98]\n 12162: a0 = i32 [a1]\n 12164: jump @444 if a0 >u 63\n      : @443 (gas: 2)\n 12168: u32 [a1 + 0] = 0x40\n 12171: fallthrough\n      : @444 (gas: 4)\n 12172: a0 = sp + 0xffffffffffffffe0\n 12175: a0 = a0 & 0xffffffffffffffe0\n 12178: u64 [s1 + 0x60] = a0\n 12181: t0 = 406, jump @1406\n      : @445 [@dyn 203] (gas: 5)\n 12187: ra = 0x198\n 12191: ecalli 6 // 'hash_keccak_256'\n 12193: a3 = u64 [s1 + 0x60]\n 12196: t0 = 0x19a\n 12200: jump @1383\n      : @446 [@dyn 204] (gas: 2)\n 12203: a3 = u64 [s1 + 0x60]\n 12206: t0 = 410, jump @1383\n      : @447 [@dyn 205] (gas: 3)\n 12212: a0 = s1 + 0x7ff\n 12216: a0 = a0 + 0x341\n 12220: ra = 412, jump @21\n      : @448 [@dyn 206] (gas: 4)\n 12226: a2 = s1 + 0x7ff\n 12230: a2 = a2 + 0x39\n 12233: a0 = u8 [a2 + 0x308]\n 12237: jump @450 if a0 != 0\n      : @449 (gas: 1)\n 12240: jump @702\n      : @450 (gas: 9)\n 12243: a0 = u64 [s1 + 0x78]\n 12246: a0 = a0 << 0x20\n 12249: a2 = a0 >> 0x20\n 12252: a0 = u64 [s1 + 0xb0]\n 12256: a1 = u64 [s1 + 0xa8]\n 12260: a0 = a0 | a1\n 12263: u64 [s1 + 0x70] = a2\n 12266: a0 = a0 | a2\n 12269: jump @452 if a0 != 0\n      : @451 (gas: 1)\n 12272: jump @710\n      : @452 (gas: 1)\n 12275: ra = 414, jump @1338\n      : @453 [@dyn 207] (gas: 9)\n 12281: a0 = s1 + 0x1838\n 12285: u64 [a0 + 0] = 0\n 12287: u64 [a0 + 4294967288] = 0\n 12290: u64 [a0 + 4294967280] = 0\n 12293: u64 [a0 + 4294967272] = 0x2\n 12297: a0 = s1 + 0x7ff\n 12301: a0 = a0 + 0x321\n 12305: a1 = s1 + 0x1820\n 12309: ra = 416, jump @21\n      : @454 [@dyn 208] (gas: 40)\n 12315: a1 = s1 + 0x7ff\n 12319: a1 = a1 + 0x39\n 12322: t2 = u64 [a1 + 0x300]\n 12326: a2 = a1 + 0x200\n 12330: a0 = u64 [a2 + 0xf8]\n 12334: a4 = u64 [a2 + 0xe8]\n 12338: a5 = u64 [a2 + 0xf0]\n 12342: a1 = sp + 0xffffffffffffffe0\n 12345: a1 = a1 & 0xffffffffffffffe0\n 12348: sp = a1\n 12350: a3 = u64 [s1 + 0x88]\n 12354: a3 = a3 + a5\n 12357: t0 = u64 [s1 + 0x80]\n 12361: t0 = t0 + a4\n 12364: a4 = t0 <u a4\n 12367: a3 = a3 + a4\n 12370: t1 = a3 ^ a5\n 12373: a2 = a3 <u a5\n 12376: a2 = a4 if t1 == 0\n 12379: a4 = u64 [s1 + 0x90]\n 12383: a4 = a4 + a0\n 12386: a5 = a4 + a2\n 12389: t1 = a5 <u a4\n 12392: ra = u64 [s1 + 0xa0]\n 12396: ra = ra + t2\n 12399: a4 = a4 <u a0\n 12402: a4 = a4 + ra\n 12405: ra = a4 + t1\n 12408: t1 = a5 <u a0\n 12411: a4 = t2 ^ ra\n 12414: t2 = ra <u t2\n 12417: t2 = t1 if a4 == 0\n 12420: a0 = a0 ^ a5\n 12423: a0 = a0 | a4\n 12426: t2 = a2 if a0 == 0\n 12429: u64 [a1 + 0x10] = a5\n 12432: u64 [a1 + 0x8] = a3\n 12435: u64 [a1] = t0\n 12437: u64 [a1 + 0x18] = ra\n 12440: jump @456 if t2 == 0\n      : @455 (gas: 1)\n 12443: jump @712\n      : @456 (gas: 7)\n 12446: a0 = s1 + 0x1838\n 12450: u64 [a0 + 32] = 0\n 12453: u64 [a0 + 24] = 0\n 12456: u64 [a0 + 16] = 0\n 12459: u64 [a0 + 8] = 0x2\n 12463: a0 = s1 + 0x1840\n 12467: ra = 418, jump @24\n      : @457 [@dyn 209] (gas: 14)\n 12473: a2 = s1 + 0x7ff\n 12477: a2 = a2 + 0x39\n 12480: u64 [a2 + 736] = 0\n 12484: a0 = u64 [s1 + 0x70]\n 12487: a3 = a2 + 0x200\n 12491: u64 [a3 + 0xd8] = a0\n 12495: a0 = u64 [s1 + 0xa8]\n 12499: u64 [a3 + 0xd0] = a0\n 12503: a1 = s1 + 0x7ff\n 12507: a1 = a1 + 0x301\n 12511: a0 = u64 [s1 + 0xb0]\n 12515: u64 [a3 + 0xc8] = a0\n 12519: a0 = 0\n 12521: ra = 420, jump @19\n      : @458 [@dyn 210] (gas: 11)\n 12527: a0 = s1 + 0x7ff\n 12531: a0 = a0 + 0x39\n 12534: u64 [a0 + 704] = 0\n 12538: u64 [a0 + 696] = 0\n 12542: u64 [a0 + 688] = 0\n 12546: a2 = a0\n 12548: a0 = 0x20\n 12551: a1 = s1 + 0x7ff\n 12555: a1 = a1 + 0x2e1\n 12559: u64 [a2 + 680] = 0\n 12563: ra = 422, jump @19\n      : @459 [@dyn 211] (gas: 7)\n 12569: a0 = sp + 0xffffffffffffffe0\n 12572: a0 = a0 & 0xffffffffffffffe0\n 12575: u64 [s1 + 0x78] = a0\n 12578: sp = a0\n 12580: a2 = u64 [s1 + 0x98]\n 12584: a0 = i32 [a2]\n 12586: jump @461 if a0 >u 63\n      : @460 (gas: 2)\n 12590: u32 [a2 + 0] = 0x40\n 12593: fallthrough\n      : @461 (gas: 4)\n 12594: a0 = sp + 0xffffffffffffffe0\n 12597: a0 = a0 & 0xffffffffffffffe0\n 12600: u64 [s1 + 0x98] = a0\n 12604: t0 = 424, jump @1406\n      : @462 [@dyn 212] (gas: 5)\n 12610: ra = 0x1aa\n 12614: ecalli 6 // 'hash_keccak_256'\n 12616: a3 = u64 [s1 + 0x98]\n 12620: t0 = 0x1ac\n 12624: jump @1356\n      : @463 [@dyn 213] (gas: 2)\n 12627: a3 = u64 [s1 + 0x98]\n 12631: t0 = 428, jump @1356\n      : @464 [@dyn 214] (gas: 8)\n 12637: a1 = u64 [s1 + 0x78]\n 12640: u64 [a1 + 0x18] = a3\n 12643: u64 [a1 + 0x10] = a2\n 12646: u64 [a1 + 0x8] = a4\n 12649: u64 [a1] = a0\n 12651: a0 = s1 + 0x7ff\n 12655: a0 = a0 + 0x2c1\n 12659: ra = 430, jump @21\n      : @465 [@dyn 215] (gas: 33)\n 12665: a2 = s1 + 0x7ff\n 12669: a2 = a2 + 0x39\n 12672: a4 = a2 + 0x200\n 12676: a0 = u64 [a4 + 0x90]\n 12680: a1 = u64 [a4 + 0x88]\n 12684: t0 = u64 [a2 + 0x2a0]\n 12688: a3 = u64 [a4 + 0x98]\n 12692: a4 = u64 [s1 + 0x88]\n 12696: a4 = a4 + a0\n 12699: a5 = u64 [s1 + 0x80]\n 12703: a5 = a5 + a1\n 12706: a1 = a5 <u a1\n 12709: a4 = a4 + a1\n 12712: a2 = a4 ^ a0\n 12715: a0 = a4 <u a0\n 12718: a0 = a1 if a2 == 0\n 12721: a1 = u64 [s1 + 0x90]\n 12725: a1 = a1 + a3\n 12728: a2 = u64 [s1 + 0xa0]\n 12732: t0 = t0 + a2\n 12735: a2 = a1 <u a3\n 12738: a2 = a2 + t0\n 12741: a0 = a0 + a1\n 12744: a1 = a0 <u a1\n 12747: a1 = a1 + a2\n 12750: a2 = s1 + 0x1838\n 12754: u64 [a2 + 0x28] = a5\n 12757: u64 [a2 + 0x30] = a4\n 12760: u64 [a2 + 0x38] = a0\n 12763: u64 [a2 + 0x40] = a1\n 12766: a1 = s1 + 0x1860\n 12770: a0 = u64 [s1 + 0x78]\n 12773: ra = 432, jump @24\n      : @466 [@dyn 216] (gas: 4)\n 12779: a0 = s1 + 0x7ff\n 12783: a0 = a0 + 0x2a1\n 12787: a1 = 0x40\n 12790: ra = 434, jump @17\n      : @467 [@dyn 217] (gas: 8)\n 12796: a3 = s1 + 0x7ff\n 12800: a3 = a3 + 0x39\n 12803: a5 = a3 + 0x200\n 12807: a4 = u64 [a5 + 0x80]\n 12811: a1 = u64 [a5 + 0x78]\n 12814: a2 = u64 [a5 + 0x70]\n 12817: a0 = u64 [a5 + 0x68]\n 12820: t0 = 436, jump @1367\n      : @468 [@dyn 218] (gas: 1)\n 12826: jump @470 if a1 == 0\n      : @469 (gas: 1)\n 12829: jump @653\n      : @470 (gas: 13)\n 12832: a1 = u64 [s1 + 0x80]\n 12836: a4 = a3 + 0x200\n 12840: u64 [a4 + 0x48] = a1\n 12843: a1 = u64 [s1 + 0x88]\n 12847: u64 [a4 + 0x50] = a1\n 12850: a1 = u64 [s1 + 0x90]\n 12854: u64 [a4 + 0x58] = a1\n 12857: a1 = s1 + 0x7ff\n 12861: a1 = a1 + 0x281\n 12865: a2 = u64 [s1 + 0xa0]\n 12869: u64 [a4 + 0x60] = a2\n 12872: u64 [s1 + 0xa0] = a0\n 12876: ra = 438, jump @19\n      : @471 [@dyn 219] (gas: 32)\n 12882: a5 = s1 + 0x7ff\n 12886: a5 = a5 + 0x39\n 12889: u64 [a5 + 512] = 0\n 12893: a0 = u64 [s1 + 0x70]\n 12896: a1 = a5 + 0x100\n 12900: u64 [a1 + 0xf8] = a0\n 12904: a0 = u64 [s1 + 0xa8]\n 12908: u64 [a1 + 0xf0] = a0\n 12912: a0 = u64 [s1 + 0xb0]\n 12916: u64 [a1 + 0xe8] = a0\n 12920: u64 [a5 + 544] = 0\n 12924: u64 [a5 + 536] = 0\n 12928: u64 [a5 + 528] = 0\n 12932: a0 = u64 [0x200a0]\n 12937: a1 = u64 [0x200a8]\n 12942: a2 = u64 [0x200b0]\n 12947: a3 = u64 [0x200b8]\n 12952: a4 = a5 + 0x200\n 12956: u64 [a4 + 0x40] = a0\n 12959: u64 [a4 + 0x38] = a1\n 12962: u64 [a4 + 0x30] = a2\n 12965: u64 [a4 + 0x28] = a3\n 12968: a1 = 0x20\n 12971: a2 = s1 + 0x7ff\n 12975: a2 = a2 + 0x261\n 12979: a3 = s1 + 0x7ff\n 12983: a3 = a3 + 0x241\n 12987: a4 = s1 + 0x7ff\n 12991: a4 = a4 + 0x221\n 12995: u64 [a5 + 520] = 0\n 12999: a0 = u64 [s1 + 0xa0]\n 13003: ra = 440, jump @27\n      : @472 [@dyn 220] (gas: 5)\n 13009: a0 = 0\n 13011: a1 = u64 [s1 + 0xb8]\n 13015: a2 = 0\n 13017: ecalli 7 // 'seal_return'\n 13019: jump @824\n      : @473 (gas: 11)\n 13022: a0 = s1 + 0x1838\n 13026: u64 [a0 + 544] = 0\n 13030: u64 [a0 + 536] = 0\n 13034: u64 [a0 + 528] = 0\n 13038: u64 [a0 + 520] = 0\n 13042: a0 = s1 + 0x2000\n 13046: i32 a0 = a0 + 0xfffffffffffffa40\n 13050: ra = 0x1ba\n 13054: ecalli 10 // 'value_transferred'\n 13056: t0 = 0x1bc\n 13060: jump @1384\n      : @474 [@dyn 221] (gas: 1)\n 13063: t0 = 444, jump @1384\n      : @475 [@dyn 222] (gas: 1)\n 13069: t0 = 446, jump @1385\n      : @476 [@dyn 223] (gas: 1)\n 13075: jump @478 if a0 == 0\n      : @477 (gas: 1)\n 13078: jump @717\n      : @478 (gas: 3)\n 13081: a0 = u64 [s1 + 0xb8]\n 13085: a0 = i32 [a0]\n 13087: jump @480 if a0 >u 3\n      : @479 (gas: 1)\n 13091: jump @718\n      : @480 (gas: 3)\n 13094: a0 = s1 + 0x1160\n 13098: a1 = 0x40\n 13101: ra = 448, jump @17\n      : @481 [@dyn 224] (gas: 18)\n 13107: a1 = s1 + 0x1038\n 13111: a2 = a1 + 0x100\n 13115: a0 = u64 [a2 + 0x40]\n 13118: u64 [s1 + 0x18] = a0\n 13121: a0 = u64 [a2 + 0x38]\n 13124: u64 [s1 + 0x28] = a0\n 13127: a0 = u64 [a2 + 0x30]\n 13130: u64 [s1 + 0x20] = a0\n 13133: a0 = u64 [a2 + 0x28]\n 13136: u64 [s1 + 0x30] = a0\n 13139: a1 = s1 + 0x1838\n 13143: u64 [a1 + 576] = 0\n 13147: u64 [a1 + 568] = 0\n 13151: u64 [a1 + 560] = 0\n 13155: u64 [a1 + 552] = 0x4\n 13160: a0 = s1 + 0x1140\n 13164: a1 = s1 + 0x1a60\n 13168: ra = 450, jump @21\n      : @482 [@dyn 225] (gas: 35)\n 13174: a0 = s1 + 0x1038\n 13178: t2 = u64 [a0 + 0x118]\n 13182: ra = u64 [a0 + 0x110]\n 13186: t1 = u64 [a0 + 0x120]\n 13190: a4 = u64 [a0 + 0x108]\n 13194: a0 = t2 << 0x3f\n 13197: a1 = ra >> 0x1\n 13200: a0 = a0 | a1\n 13203: a1 = t1 << 0x3f\n 13206: a2 = t2 >> 0x1\n 13209: a1 = a1 | a2\n 13212: a2 = ra << 0x3f\n 13215: a3 = a4 >> 0x1\n 13218: a5 = a3 | a2\n 13221: a2 = t1 >> 0x1\n 13224: u64 [s1 + 0xb0] = a4\n 13228: a4 = a4 & 0x1\n 13231: a3 = -a4\n 13233: a1 = a1 & a3\n 13236: t0 = a3 & a0\n 13239: a2 = a2 & a3\n 13242: a0 = a5 & 0x7f\n 13245: u64 [s1 + 0xa8] = a0\n 13249: a5 = a0 if a4 == 0\n 13252: u64 [s1 + 0x70] = a5\n 13255: a0 = a5 <u 0x20\n 13258: u64 [s1 + 0x60] = t0\n 13261: a0 = 0 if t0 != 0\n 13263: u64 [s1 + 0x68] = a1\n 13266: u64 [s1 + 0x58] = a2\n 13269: a1 = a1 | a2\n 13272: a0 = 0 if a1 != 0\n 13274: u64 [s1 + 0xb8] = a4\n 13278: a1 = a4 <u 0x1\n 13281: jump @484 if a1 == a0\n      : @483 (gas: 1)\n 13284: jump @719\n      : @484 (gas: 12)\n 13287: a2 = u64 [s1 + 0x28]\n 13290: a3 = u64 [s1 + 0x30]\n 13293: a0 = a3 | a2\n 13296: a1 = u64 [s1 + 0x20]\n 13299: a4 = u64 [s1 + 0x18]\n 13302: a1 = a1 | a4\n 13305: a0 = a0 | a1\n 13308: a0 = a0 >> 0x20\n 13311: a1 = a1 | a2\n 13314: a1 = a1 << 0x20\n 13317: a1 = a1 | a0\n 13320: jump @486 if a1 == 0\n      : @485 (gas: 1)\n 13323: jump @653\n      : @486 (gas: 15)\n 13326: a0 = a3\n 13328: u64 [s1 + 0x90] = ra\n 13332: u64 [s1 + 0x98] = t2\n 13336: u64 [s1 + 0xa0] = t1\n 13340: a1 = u64 [s1 + 0x70]\n 13343: a3 = s1 + 0x1038\n 13347: u64 [a3 + 0xe8] = a1\n 13351: a1 = u64 [s1 + 0x60]\n 13354: u64 [a3 + 0xf0] = a1\n 13358: a1 = u64 [s1 + 0x68]\n 13361: u64 [a3 + 0xf8] = a1\n 13365: a1 = s1 + 0x1120\n 13369: a2 = u64 [s1 + 0x58]\n 13372: u64 [a3 + 0x100] = a2\n 13376: ra = 452, jump @19\n      : @487 [@dyn 226] (gas: 2)\n 13382: a0 = u64 [s1 + 0xb8]\n 13386: jump @489 if a0 == 0\n      : @488 (gas: 1)\n 13389: jump @667\n      : @489 (gas: 1)\n 13392: t0 = 454, jump @1394\n      : @490 [@dyn 227] (gas: 1)\n 13398: jump @492 if a1 != 0\n      : @491 (gas: 1)\n 13401: jump @653\n      : @492 (gas: 13)\n 13404: a1 = u64 [s1 + 0xb0]\n 13408: a1 = a1 & 0xffffffffffffff00\n 13412: i32 a0 = a3 + 0x20\n 13415: a2 = s1 + 0x1038\n 13419: a3 = u64 [s1 + 0x90]\n 13423: u64 [a2 + 0x70] = a3\n 13426: u64 [a2 + 0x68] = a1\n 13429: a1 = u64 [s1 + 0x98]\n 13433: u64 [a2 + 0x78] = a1\n 13436: a1 = s1 + 0x10a0\n 13440: a3 = u64 [s1 + 0xa0]\n 13444: u64 [a2 + 0x80] = a3\n 13448: ra = 456, jump @19\n      : @493 [@dyn 228] (gas: 9)\n 13454: t2 = 0\n 13456: t1 = 0\n 13458: u64 [s1 + 176] = 0\n 13462: a0 = u64 [s1 + 0xa8]\n 13466: a0 = a0 >u 0\n 13468: a0 = a0 << 0x5\n 13471: u64 [s1 + 0xb8] = a0\n 13475: t0 = 0x1ca\n 13479: jump @1388\n      : @494 (gas: 1)\n 13482: t0 = 458, jump @1388\n      : @495 [@dyn 229] (gas: 28)\n 13488: t0 = u64 [s1 + 0x20]\n 13491: a3 = a2 + t0\n 13494: ra = a3 + a0\n 13497: a3 = ra ^ a2\n 13500: a4 = ra <u a2\n 13503: a4 = a0 if a3 == 0\n 13506: a0 = a2 <u t2\n 13509: a0 = a1 if a1 == 0\n 13512: a0 = a0 + t1\n 13515: a1 = a0 <u t1\n 13518: a2 = u64 [s1 + 0x28]\n 13521: a2 = a2 + a0\n 13524: a4 = a4 + a2\n 13527: a0 = a2 <u a0\n 13530: a2 = a4 <u a2\n 13533: t1 = u64 [s1 + 0x18]\n 13536: a3 = u64 [s1 + 0xb0]\n 13540: a3 = a3 + t1\n 13543: a1 = a1 + a3\n 13546: a0 = a0 + a1\n 13549: a5 = a0 + a2\n 13552: a0 = a5 >u 0\n 13554: a1 = a4 >u 0\n 13556: a1 = a0 if a5 != 0\n 13559: a0 = a4 | a5\n 13562: a2 = ra >u 0\n 13564: a2 = a1 if a0 != 0\n 13567: jump @497 if a2 == 0\n      : @496 (gas: 1)\n 13570: jump @769\n      : @497 (gas: 6)\n 13573: a0 = u64 [s1 + 0x30]\n 13576: a1 = u64 [s1 + 0xb8]\n 13580: a0 = a1 <u a0\n 13583: a1 = ra ^ t0\n 13586: a2 = ra <u t0\n 13589: t0 = 460, jump @1386\n      : @498 [@dyn 230] (gas: 1)\n 13595: jump @500 if a3 == 0\n      : @499 (gas: 1)\n 13598: jump @769\n      : @500 (gas: 13)\n 13601: a2 = s1 + 0x1038\n 13605: a0 = u64 [s1 + 0xb8]\n 13609: u64 [a2 + 0x48] = a0\n 13612: a3 = ra\n 13614: u64 [a2 + 0x50] = a3\n 13617: u64 [a2 + 0x58] = a4\n 13620: a0 = 0x40\n 13623: a1 = s1 + 0x1080\n 13627: u64 [a2 + 0x60] = a5\n 13630: u64 [s1 + 0xa8] = a3\n 13634: u64 [s1 + 0xa0] = a4\n 13638: u64 [s1 + 0xb0] = a5\n 13642: ra = 462, jump @19\n      : @501 [@dyn 231] (gas: 23)\n 13648: a1 = s1 + 0x1038\n 13652: a0 = u64 [s1 + 0x18]\n 13655: u64 [a1] = a0\n 13657: a0 = u64 [s1 + 0x28]\n 13660: a2 = a1 + 0xffffffffffffff00\n 13664: u64 [a2 + 0xf8] = a0\n 13668: a0 = u64 [s1 + 0x20]\n 13671: u64 [a2 + 0xf0] = a0\n 13675: a0 = u64 [s1 + 0x30]\n 13678: u64 [a2 + 0xe8] = a0\n 13682: a0 = u64 [s1 + 0xb0]\n 13686: u64 [a1 + 0x20] = a0\n 13689: a0 = u64 [s1 + 0xa0]\n 13693: u64 [a1 + 0x18] = a0\n 13696: a0 = u64 [s1 + 0xa8]\n 13700: u64 [a1 + 0x10] = a0\n 13703: a4 = a1\n 13705: a0 = s1 + 0x1060\n 13709: a1 = s1 + 0x1040\n 13713: a2 = s1 + 0x1020\n 13717: a3 = u64 [s1 + 0xb8]\n 13721: u64 [a4 + 0x8] = a3\n 13724: ra = 464, jump @1021\n      : @502 [@dyn 232] (gas: 12)\n 13730: a3 = u64 [s1 + 0xa0]\n 13734: a4 = u64 [s1 + 0xa8]\n 13738: t0 = u64 [s1 + 0xb8]\n 13742: a0 = t0 | a3\n 13745: a1 = u64 [s1 + 0xb0]\n 13749: a1 = a1 | a4\n 13752: a0 = a0 | a1\n 13755: a0 = a0 >> 0x20\n 13758: a1 = a1 | a3\n 13761: a1 = a1 << 0x20\n 13764: a0 = a0 | a1\n 13767: jump @504 if a0 == 0\n      : @503 (gas: 1)\n 13770: jump @653\n      : @504 (gas: 8)\n 13773: a1 = s1 + 0x1038\n 13777: a0 = u64 [a1 + 0x30]\n 13780: a2 = u64 [a1 + 0x40]\n 13783: u64 [s1 + 0x98] = a2\n 13787: a2 = a3\n 13789: t1 = u64 [a1 + 0x28]\n 13792: a3 = u64 [a1 + 0x38]\n 13795: fallthrough\n      : @505 (gas: 24)\n 13796: t2 = a0 ^ a4\n 13799: a5 = a0 <u a4\n 13802: ra = t1 <u t0\n 13805: a5 = ra if t2 == 0\n 13808: a1 = a3 - a2\n 13811: t2 = a1 - a5\n 13814: a1 = a1 <u a5\n 13817: a3 = a3 <u a2\n 13820: a2 = u64 [s1 + 0x98]\n 13824: a3 = a2 - a3\n 13827: a2 = u64 [s1 + 0xb0]\n 13831: a3 = a3 - a2\n 13834: a3 = a3 - a1\n 13837: a0 = a0 - a4\n 13840: a0 = a0 - ra\n 13843: a1 = t1 - t0\n 13846: a0 = a0 | a3\n 13849: a2 = a1 | t2\n 13852: a2 = a2 | a0\n 13855: a0 = a0 | t2\n 13858: a2 = a2 >> 0x20\n 13861: a0 = a0 << 0x20\n 13864: a0 = a0 | a2\n 13867: jump @507 if a0 == 0\n      : @506 (gas: 1)\n 13870: jump @653\n      : @507 (gas: 3)\n 13873: a0 = t0\n 13875: u64 [s1 + 0xb8] = a1\n 13879: ra = 466, jump @33\n      : @508 [@dyn 233] (gas: 6)\n 13885: i32 a1 = a0 + 0\n 13887: a2 = i32 [s1 + 0xb8]\n 13891: a0 = 0\n 13893: ra = 0x2ca\n 13897: ecalli 7 // 'seal_return'\n 13899: jump @780\n      : @509 (gas: 8)\n 13902: u64 [a2 + 1856] = 0\n 13906: u64 [a2 + 1848] = 0\n 13910: u64 [a2 + 1840] = 0\n 13914: u64 [a2 + 1832] = 0\n 13918: a0 = s1 + 0x1000\n 13922: i32 a0 = a0 + 0x760\n 13926: ecalli 10 // 'value_transferred'\n 13928: fallthrough\n      : @510 (gas: 10)\n 13929: a3 = s1 + 0x1038\n 13933: a4 = a3 + 0x700\n 13937: a0 = u64 [a4 + 0x38]\n 13940: a1 = u64 [a4 + 0x40]\n 13943: a2 = u64 [a4 + 0x30]\n 13946: a3 = u64 [a4 + 0x28]\n 13949: a1 = a1 | a2\n 13952: a0 = a0 | a3\n 13955: a0 = a0 | a1\n 13958: jump @512 if a0 == 0\n      : @511 (gas: 1)\n 13961: jump @724\n      : @512 (gas: 3)\n 13964: a0 = u64 [s1 + 0xb8]\n 13968: a0 = i32 [a0]\n 13970: jump @514 if a0 >u 3\n      : @513 (gas: 1)\n 13974: jump @725\n      : @514 (gas: 1)\n 13977: ra = 468, jump @1157\n      : @515 [@dyn 234] (gas: 9)\n 13983: a0 = s1 + 0x1038\n 13987: u64 [a0 + 1888] = 0\n 13991: u64 [a0 + 1880] = 0\n 13995: u64 [a0 + 1872] = 0\n 13999: u64 [a0 + 1864] = 0x5\n 14004: a0 = s1 + 0x7ff\n 14008: a0 = a0 + 0x121\n 14012: a1 = s1 + 0x1780\n 14016: ra = 470, jump @21\n      : @516 [@dyn 235] (gas: 5)\n 14022: a3 = s1 + 0x7ff\n 14026: a3 = a3 + 0x39\n 14029: a0 = u64 [a3 + 0xe8]\n 14033: a1 = a0 & 0xff\n 14037: jump @518 if a1 != 0\n      : @517 (gas: 1)\n 14040: jump @726\n      : @518 (gas: 17)\n 14043: a1 = u64 [a3 + 0x100]\n 14047: a2 = u64 [a3 + 0xf8]\n 14051: a3 = u64 [a3 + 0xf0]\n 14055: a0 = a0 & 0xffffffffffffff00\n 14059: a4 = s1 + 0x1038\n 14063: u64 [a4 + 1920] = 0\n 14067: u64 [a4 + 1912] = 0\n 14071: u64 [a4 + 1904] = 0\n 14075: u64 [a4 + 1896] = 0x5\n 14080: a5 = a4 + 0x700\n 14084: u64 [a5 + 0x90] = a3\n 14088: u64 [a5 + 0x88] = a0\n 14092: u64 [a5 + 0x98] = a2\n 14096: u64 [a5 + 0xa0] = a1\n 14100: a0 = s1 + 0x17a0\n 14104: a1 = s1 + 0x17c0\n 14108: ra = 472, jump @24\n      : @519 [@dyn 236] (gas: 4)\n 14114: a0 = s1 + 0x7ff\n 14118: a0 = a0 + 0x101\n 14122: a1 = 0x40\n 14125: ra = 474, jump @17\n      : @520 [@dyn 237] (gas: 17)\n 14131: a0 = s1 + 0x7ff\n 14135: a0 = a0 + 0x39\n 14138: a1 = u64 [a0 + 0xe0]\n 14142: u64 [s1 + 0xb0] = a1\n 14146: a1 = u64 [a0 + 0xd8]\n 14150: u64 [s1 + 0xa8] = a1\n 14154: a1 = u64 [a0 + 0xd0]\n 14158: u64 [s1 + 0xa0] = a1\n 14162: a0 = u64 [a0 + 0xc8]\n 14166: u64 [s1 + 0xb8] = a0\n 14170: a0 = 0x30270\n 14175: u64 [s1 + 0x98] = a0\n 14179: i32 a0 = a0 + 0\n 14181: ra = 0x1dc\n 14185: ecalli 3 // 'caller'\n 14187: t0 = 0x1de\n 14191: jump @1404\n      : @521 [@dyn 238] (gas: 1)\n 14194: t0 = 478, jump @1404\n      : @522 [@dyn 239] (gas: 1)\n 14200: jump @653 if a0 != 0\n      : @523 (gas: 2)\n 14204: a2 = u64 [s1 + 0x98]\n 14208: t0 = 480, jump @1347\n      : @524 [@dyn 240] (gas: 8)\n 14214: u64 [a2 + 192] = 0\n 14218: u64 [a2 + 0xb8] = a1\n 14222: u64 [a2 + 0xb0] = a0\n 14226: a1 = s1 + 0x7ff\n 14230: a1 = a1 + 0xe1\n 14234: u64 [a2 + 0xa8] = a3\n 14238: a0 = a4\n 14240: ra = 482, jump @19\n      : @525 [@dyn 241] (gas: 16)\n 14246: a0 = u64 [0x200c0]\n 14251: a1 = u64 [0x200c8]\n 14256: a2 = s1 + 0x7ff\n 14260: a2 = a2 + 0x39\n 14263: u64 [a2 + 0xa0] = a0\n 14267: a0 = u64 [0x200d0]\n 14272: u64 [a2 + 0x98] = a1\n 14276: a3 = u64 [0x200d8]\n 14281: u64 [a2 + 0x90] = a0\n 14285: a0 = a2\n 14287: a1 = 0x20\n 14290: a2 = s1 + 0x7ff\n 14294: a2 = a2 + 0xc1\n 14298: u64 [a0 + 0x88] = a3\n 14302: a0 = u64 [s1 + 0xb8]\n 14306: ra = 484, jump @25\n      : @526 [@dyn 242] (gas: 6)\n 14312: a1 = 0x20270\n 14317: i32 a1 = a1 + 0\n 14319: a0 = 0\n 14321: a2 = 0\n 14323: ecalli 7 // 'seal_return'\n 14325: jump @824\n      : @527 (gas: 8)\n 14328: u64 [a2 + 1504] = 0\n 14332: u64 [a2 + 1496] = 0\n 14336: u64 [a2 + 1488] = 0\n 14340: u64 [a2 + 1480] = 0\n 14344: a0 = s1 + 0x1000\n 14348: i32 a0 = a0 + 0x600\n 14352: ecalli 10 // 'value_transferred'\n 14354: fallthrough\n      : @528 (gas: 10)\n 14355: a4 = s1 + 0x1038\n 14359: a5 = a4 + 0x500\n 14363: a0 = u64 [a5 + 0xd8]\n 14367: a1 = u64 [a5 + 0xe0]\n 14371: a2 = u64 [a5 + 0xd0]\n 14375: a3 = u64 [a5 + 0xc8]\n 14379: a1 = a1 | a2\n 14382: a0 = a0 | a3\n 14385: a0 = a0 | a1\n 14388: jump @530 if a0 == 0\n      : @529 (gas: 1)\n 14391: jump @731\n      : @530 (gas: 3)\n 14394: a0 = u64 [s1 + 0xb8]\n 14398: a0 = i32 [a0]\n 14400: jump @532 if a0 >u 3\n      : @531 (gas: 1)\n 14404: jump @732\n      : @532 (gas: 7)\n 14407: u64 [a4 + 1536] = 0\n 14411: u64 [a4 + 1528] = 0\n 14415: u64 [a4 + 1520] = 0\n 14419: u64 [a4 + 1512] = 0x2\n 14424: a0 = s1 + 0x500\n 14428: a1 = s1 + 0x1620\n 14432: ra = 486, jump @21\n      : @533 [@dyn 243] (gas: 12)\n 14438: a1 = s1 + 0x500\n 14442: a0 = u64 [a1 + 0x18]\n 14445: u64 [s1 + 0xb8] = a0\n 14449: a0 = u64 [a1 + 0x10]\n 14452: u64 [s1 + 0xb0] = a0\n 14456: a0 = u64 [a1 + 0x8]\n 14459: u64 [s1 + 0xa8] = a0\n 14463: a0 = u64 [a1]\n 14465: u64 [s1 + 0xa0] = a0\n 14469: a0 = s1 + 0x4e0\n 14473: a1 = 0x40\n 14476: ra = 488, jump @17\n      : @534 [@dyn 244] (gas: 6)\n 14482: a4 = s1 + 0x400\n 14486: a0 = u64 [a4 + 0xf8]\n 14490: a1 = u64 [a4 + 0xf0]\n 14494: a2 = u64 [a4 + 0xe8]\n 14498: a3 = u64 [a4 + 0xe0]\n 14502: t0 = 490, jump @1409\n      : @535 [@dyn 245] (gas: 1)\n 14508: jump @653 if a0 != 0\n      : @536 (gas: 14)\n 14512: a0 = u64 [s1 + 0xa0]\n 14516: a2 = s1 + 0x400\n 14520: u64 [a2 + 0xc0] = a0\n 14524: a0 = u64 [s1 + 0xa8]\n 14528: u64 [a2 + 0xc8] = a0\n 14532: a0 = u64 [s1 + 0xb0]\n 14536: u64 [a2 + 0xd0] = a0\n 14540: a1 = s1 + 0x4c0\n 14544: a0 = u64 [s1 + 0xb8]\n 14548: u64 [a2 + 0xd8] = a0\n 14552: a0 = a3\n 14554: u64 [s1 + 0xb8] = a3\n 14558: ra = 0x2c6\n 14562: jump @19\n      : @537 (gas: 2)\n 14565: a2 = s1 + 0x1838\n 14569: jump @539 if a0 == 1889567281\n      : @538 (gas: 1)\n 14576: jump @733\n      : @539 (gas: 8)\n 14579: u64 [a2 + 224] = 0\n 14583: u64 [a2 + 216] = 0\n 14587: u64 [a2 + 208] = 0\n 14591: u64 [a2 + 200] = 0\n 14595: a0 = s1 + 0x2000\n 14599: i32 a0 = a0 + 0xfffffffffffff900\n 14603: ecalli 10 // 'value_transferred'\n 14605: fallthrough\n      : @540 (gas: 9)\n 14606: a3 = s1 + 0x1838\n 14610: a0 = u64 [a3 + 0xd8]\n 14614: a1 = u64 [a3 + 0xe0]\n 14618: a2 = u64 [a3 + 0xd0]\n 14622: a3 = u64 [a3 + 0xc8]\n 14626: a1 = a1 | a2\n 14629: a0 = a0 | a3\n 14632: a0 = a0 | a1\n 14635: jump @542 if a0 == 0\n      : @541 (gas: 1)\n 14638: jump @739\n      : @542 (gas: 4)\n 14641: a0 = u64 [s1 + 0xb8]\n 14645: a0 = i32 [a0]\n 14647: a1 = 0x23\n 14650: jump @544 if a1 <u a0\n      : @543 (gas: 1)\n 14653: jump @740\n      : @544 (gas: 5)\n 14656: a0 = s1 + 0x7ff\n 14660: a0 = a0 + 0x541\n 14664: ra = 0x1ec\n 14668: t0 = 0x3f8\n 14672: jump @1417\n      : @545 [@dyn 246] (gas: 14)\n 14675: a3 = s1 + 0x7ff\n 14679: a3 = a3 + 0x39\n 14682: a0 = u64 [a3 + 0x508]\n 14686: a1 = u64 [a3 + 0x510]\n 14690: a2 = u32 [a3 + 0x518]\n 14694: u64 [a3 + 1280] = 0\n 14698: a4 = a3 + 0x400\n 14702: u64 [a4 + 0xf8] = a2\n 14706: u64 [a4 + 0xf0] = a1\n 14710: a1 = s1 + 0x7ff\n 14714: a1 = a1 + 0x521\n 14718: u64 [a4 + 0xe8] = a0\n 14722: a0 = 0\n 14724: ra = 494, jump @19\n      : @546 [@dyn 247] (gas: 11)\n 14730: a0 = s1 + 0x7ff\n 14734: a0 = a0 + 0x39\n 14737: u64 [a0 + 1248] = 0\n 14741: u64 [a0 + 1240] = 0\n 14745: u64 [a0 + 1232] = 0\n 14749: a2 = a0\n 14751: a0 = 0x20\n 14754: a1 = s1 + 0x7ff\n 14758: a1 = a1 + 0x501\n 14762: u64 [a2 + 1224] = 0\n 14766: ra = 496, jump @19\n      : @547 [@dyn 248] (gas: 2)\n 14772: a1 = i32 [0x20264]\n 14777: jump @549 if a1 >u 63\n      : @548 (gas: 2)\n 14781: u32 [0x20264] = 0x40\n 14787: fallthrough\n      : @549 (gas: 11)\n 14788: a0 = sp + 0xffffffffffffffe0\n 14791: a2 = a0 & 0xffffffffffffffe0\n 14794: u64 [s1 + 0xb8] = a2\n 14798: sp = a2\n 14800: a0 = 0x20270\n 14805: i32 a0 = a0 + 0\n 14807: i32 a2 = a2 + 0\n 14809: a1 = 0x40\n 14812: ra = 0x1f2\n 14816: ecalli 6 // 'hash_keccak_256'\n 14818: fallthrough\n      : @550 [@dyn 249] (gas: 6)\n 14819: a3 = u64 [s1 + 0xb8]\n 14823: a0 = u64 [a3 + 0x18]\n 14826: a1 = u64 [a3 + 0x10]\n 14829: a2 = u64 [a3 + 0x8]\n 14832: a3 = u64 [a3]\n 14834: t0 = 500, jump @1377\n      : @551 [@dyn 250] (gas: 9)\n 14840: a4 = s1 + 0x1838\n 14844: u64 [a4 + 0x100] = a3\n 14848: u64 [a4 + 0xf8] = a2\n 14852: u64 [a4 + 0xf0] = a1\n 14856: u64 [a4 + 0xe8] = a0\n 14860: a0 = s1 + 0x7ff\n 14864: a0 = a0 + 0x4e1\n 14868: a1 = s1 + 0x1920\n 14872: ra = 502, jump @21\n      : @552 [@dyn 251] (gas: 15)\n 14878: a1 = s1 + 0x7ff\n 14882: a1 = a1 + 0x39\n 14885: a2 = a1 + 0x400\n 14889: a0 = u64 [a2 + 0xc0]\n 14893: u64 [s1 + 0xb8] = a0\n 14897: a0 = u64 [a2 + 0xb8]\n 14901: u64 [s1 + 0xb0] = a0\n 14905: a0 = u64 [a2 + 0xb0]\n 14909: u64 [s1 + 0xa8] = a0\n 14913: a0 = u64 [a2 + 0xa8]\n 14917: u64 [s1 + 0xa0] = a0\n 14921: a0 = s1 + 0x7ff\n 14925: a0 = a0 + 0x4c1\n 14929: a1 = 0x40\n 14932: ra = 504, jump @17\n      : @553 [@dyn 252] (gas: 4)\n 14938: a3 = s1 + 0x7ff\n 14942: a3 = a3 + 0x39\n 14945: a5 = a3 + 0x400\n 14949: t0 = 506, jump @1408\n      : @554 [@dyn 253] (gas: 1)\n 14955: jump @653 if a0 != 0\n      : @555 (gas: 15)\n 14959: a0 = u64 [s1 + 0xa0]\n 14963: a2 = a3 + 0x400\n 14967: u64 [a2 + 0x68] = a0\n 14970: a0 = u64 [s1 + 0xa8]\n 14974: u64 [a2 + 0x70] = a0\n 14977: a0 = u64 [s1 + 0xb0]\n 14981: u64 [a2 + 0x78] = a0\n 14984: a1 = s1 + 0x7ff\n 14988: a1 = a1 + 0x4a1\n 14992: a0 = u64 [s1 + 0xb8]\n 14996: u64 [a2 + 0x80] = a0\n 15000: a0 = a4\n 15002: u64 [s1 + 0xb8] = a4\n 15006: ra = 0x2c6\n 15010: jump @19\n      : @556 (gas: 11)\n 15013: a0 = s1 + 0x1838\n 15017: u64 [a0 + 352] = 0\n 15021: u64 [a0 + 344] = 0\n 15025: u64 [a0 + 336] = 0\n 15029: u64 [a0 + 328] = 0\n 15033: a0 = s1 + 0x2000\n 15037: i32 a0 = a0 + 0xfffffffffffff980\n 15041: ra = 0x1fc\n 15045: ecalli 10 // 'value_transferred'\n 15047: t0 = 0x1fe\n 15051: jump @1397\n      : @557 [@dyn 254] (gas: 1)\n 15054: t0 = 510, jump @1397\n      : @558 [@dyn 255] (gas: 1)\n 15060: t0 = 512, jump @1396\n      : @559 [@dyn 256] (gas: 1)\n 15066: jump @561 if a0 == 0\n      : @560 (gas: 1)\n 15069: jump @741\n      : @561 (gas: 3)\n 15072: a0 = u64 [s1 + 0xb8]\n 15076: a0 = i32 [a0]\n 15078: jump @563 if a0 >u 3\n      : @562 (gas: 1)\n 15082: jump @742\n      : @563 (gas: 1)\n 15085: ra = 514, jump @1157\n      : @564 [@dyn 257] (gas: 1)\n 15091: ra = 516, jump @1338\n      : @565 [@dyn 258] (gas: 9)\n 15097: a1 = s1 + 0x1838\n 15101: u64 [a1 + 384] = 0\n 15105: u64 [a1 + 376] = 0\n 15109: u64 [a1 + 368] = 0\n 15113: u64 [a1 + 360] = 0x5\n 15118: a0 = s1 + 0x7ff\n 15122: a0 = a0 + 0x681\n 15126: a1 = s1 + 0x19a0\n 15130: ra = 518, jump @21\n      : @566 [@dyn 259] (gas: 22)\n 15136: a3 = s1 + 0x7ff\n 15140: a3 = a3 + 0x39\n 15143: a4 = a3 + 0x600\n 15147: a0 = u64 [a4 + 0x48]\n 15150: a1 = u64 [a4 + 0x50]\n 15153: a2 = u64 [a4 + 0x58]\n 15156: a3 = u64 [a4 + 0x60]\n 15159: a0 = a0 & 0xffffffffffffff00\n 15163: a0 = a0 | 0x1\n 15166: a4 = s1 + 0x1838\n 15170: u64 [a4 + 416] = 0\n 15174: u64 [a4 + 408] = 0\n 15178: u64 [a4 + 400] = 0\n 15182: u64 [a4 + 392] = 0x5\n 15187: a5 = a4 + 0x100\n 15191: u64 [a5 + 0xc0] = a3\n 15195: u64 [a5 + 0xb8] = a2\n 15199: u64 [a5 + 0xb0] = a1\n 15203: u64 [a5 + 0xa8] = a0\n 15207: a0 = s1 + 0x19c0\n 15211: a1 = s1 + 0x19e0\n 15215: ra = 520, jump @24\n      : @567 [@dyn 260] (gas: 4)\n 15221: a0 = s1 + 0x7ff\n 15225: a0 = a0 + 0x661\n 15229: a1 = 0x40\n 15232: ra = 522, jump @17\n      : @568 [@dyn 261] (gas: 18)\n 15238: a0 = s1 + 0x7ff\n 15242: a0 = a0 + 0x39\n 15245: a2 = a0 + 0x600\n 15249: a1 = u64 [a2 + 0x40]\n 15252: u64 [s1 + 0xb0] = a1\n 15256: a1 = u64 [a2 + 0x38]\n 15259: u64 [s1 + 0xa8] = a1\n 15263: a1 = u64 [a2 + 0x30]\n 15266: u64 [s1 + 0xa0] = a1\n 15270: a0 = u64 [a2 + 0x28]\n 15273: u64 [s1 + 0xb8] = a0\n 15277: a0 = 0x30270\n 15282: u64 [s1 + 0x98] = a0\n 15286: i32 a0 = a0 + 0\n 15288: ra = 0x20c\n 15292: ecalli 3 // 'caller'\n 15294: t0 = 0x20e\n 15298: jump @1404\n      : @569 [@dyn 262] (gas: 1)\n 15301: t0 = 526, jump @1404\n      : @570 [@dyn 263] (gas: 1)\n 15307: jump @653 if a0 != 0\n      : @571 (gas: 2)\n 15311: a2 = u64 [s1 + 0x98]\n 15315: t0 = 528, jump @1347\n      : @572 [@dyn 264] (gas: 9)\n 15321: u64 [a2 + 1568] = 0\n 15325: a5 = a2 + 0x600\n 15329: u64 [a5 + 0x18] = a1\n 15332: u64 [a5 + 0x10] = a0\n 15335: a1 = s1 + 0x7ff\n 15339: a1 = a1 + 0x641\n 15343: u64 [a5 + 0x8] = a3\n 15346: a0 = a4\n 15348: ra = 530, jump @19\n      : @573 [@dyn 265] (gas: 16)\n 15354: a0 = u64 [0x20080]\n 15359: a1 = u64 [0x20088]\n 15364: a2 = s1 + 0x7ff\n 15368: a2 = a2 + 0x39\n 15371: u64 [a2 + 0x600] = a0\n 15375: a0 = u64 [0x20090]\n 15380: u64 [a2 + 0x5f8] = a1\n 15384: a3 = u64 [0x20098]\n 15389: u64 [a2 + 0x5f0] = a0\n 15393: a0 = a2\n 15395: a1 = 0x20\n 15398: a2 = s1 + 0x7ff\n 15402: a2 = a2 + 0x621\n 15406: u64 [a0 + 0x5e8] = a3\n 15410: a0 = u64 [s1 + 0xb8]\n 15414: ra = 532, jump @25\n      : @574 [@dyn 266] (gas: 6)\n 15420: a1 = 0x20270\n 15425: i32 a1 = a1 + 0\n 15427: a0 = 0\n 15429: a2 = 0\n 15431: ecalli 7 // 'seal_return'\n 15433: jump @824\n      : @575 (gas: 5)\n 15436: i32 a1 = a1 + 0\n 15438: a0 = 0\n 15440: a2 = 0\n 15442: ecalli 7 // 'seal_return'\n 15444: jump @824\n      : @576 (gas: 10)\n 15447: u64 [a2 + 1632] = 0\n 15451: u64 [a2 + 1624] = 0\n 15455: u64 [a2 + 1616] = 0\n 15459: u64 [a2 + 1608] = 0\n 15463: a0 = s1 + 0x1000\n 15467: i32 a0 = a0 + 0x680\n 15471: ra = 0x216\n 15475: ecalli 10 // 'value_transferred'\n 15477: t0 = 0x218\n 15481: jump @1378\n      : @577 [@dyn 267] (gas: 1)\n 15484: t0 = 536, jump @1378\n      : @578 [@dyn 268] (gas: 1)\n 15490: t0 = 538, jump @1396\n      : @579 [@dyn 269] (gas: 1)\n 15496: jump @581 if a0 == 0\n      : @580 (gas: 1)\n 15499: jump @743\n      : @581 (gas: 3)\n 15502: a0 = u64 [s1 + 0xb8]\n 15506: a0 = i32 [a0]\n 15508: jump @583 if a0 >u 35\n      : @582 (gas: 1)\n 15512: jump @744\n      : @583 (gas: 7)\n 15515: a0 = s1 + 0x1000\n 15519: i32 a0 = a0 + 0x6a0\n 15523: a1 = 0x4\n 15526: ra = 0x21c\n 15530: ecalli 1 // 'call_data_load'\n 15532: t0 = 0x21e\n 15536: jump @1378\n      : @584 [@dyn 270] (gas: 1)\n 15539: t0 = 542, jump @1378\n      : @585 [@dyn 271] (gas: 11)\n 15545: a2 = u64 [a4 + 0x68]\n 15548: a0 = u64 [a4 + 0x70]\n 15551: a1 = u64 [a4 + 0x78]\n 15554: a3 = u64 [a4 + 0x80]\n 15558: u64 [s1 + 0x6b8] = a3\n 15562: u64 [s1 + 0x6b0] = a1\n 15566: u64 [s1 + 0x6a8] = a0\n 15570: a0 = s1 + 0x6c0\n 15574: a1 = s1 + 0x6a0\n 15578: u64 [s1 + 0x6a0] = a2\n 15582: ra = 544, jump @1050\n      : @586 [@dyn 272] (gas: 11)\n 15588: a0 = u64 [s1 + 0x6d8]\n 15592: u64 [s1 + 0xb8] = a0\n 15596: a0 = u64 [s1 + 0x6d0]\n 15600: u64 [s1 + 0xb0] = a0\n 15604: a0 = u64 [s1 + 0x6c8]\n 15608: u64 [s1 + 0xa8] = a0\n 15612: a0 = u64 [s1 + 0x6c0]\n 15616: u64 [s1 + 0xa0] = a0\n 15620: a0 = s1 + 0x680\n 15624: a1 = 0x40\n 15627: ra = 546, jump @17\n      : @587 [@dyn 273] (gas: 6)\n 15633: a4 = s1 + 0x600\n 15637: a0 = u64 [a4 + 0x98]\n 15641: a1 = u64 [a4 + 0x90]\n 15645: a2 = u64 [a4 + 0x88]\n 15649: a3 = u64 [a4 + 0x80]\n 15653: t0 = 548, jump @1409\n      : @588 [@dyn 274] (gas: 1)\n 15659: jump @653 if a0 != 0\n      : @589 (gas: 14)\n 15663: a0 = u64 [s1 + 0xa0]\n 15667: a2 = s1 + 0x600\n 15671: u64 [a2 + 0x60] = a0\n 15674: a0 = u64 [s1 + 0xa8]\n 15678: u64 [a2 + 0x68] = a0\n 15681: a0 = u64 [s1 + 0xb0]\n 15685: u64 [a2 + 0x70] = a0\n 15688: a1 = s1 + 0x660\n 15692: a0 = u64 [s1 + 0xb8]\n 15696: u64 [a2 + 0x78] = a0\n 15699: a0 = a3\n 15701: u64 [s1 + 0xb8] = a3\n 15705: ra = 0x2c6\n 15709: jump @19\n      : @590 (gas: 11)\n 15712: a0 = s1 + 0x1838\n 15716: u64 [a0 + 640] = 0\n 15720: u64 [a0 + 632] = 0\n 15724: u64 [a0 + 624] = 0\n 15728: u64 [a0 + 616] = 0\n 15732: a0 = s1 + 0x2000\n 15736: i32 a0 = a0 + 0xfffffffffffffaa0\n 15740: ra = 0x226\n 15744: ecalli 10 // 'value_transferred'\n 15746: t0 = 0x228\n 15750: jump @1384\n      : @591 [@dyn 275] (gas: 1)\n 15753: t0 = 552, jump @1384\n      : @592 [@dyn 276] (gas: 8)\n 15759: a0 = u64 [a4 + 0x78]\n 15762: a1 = u64 [a4 + 0x80]\n 15766: a2 = u64 [a4 + 0x70]\n 15769: a3 = u64 [a4 + 0x68]\n 15772: a1 = a1 | a2\n 15775: a0 = a0 | a3\n 15778: a0 = a0 | a1\n 15781: jump @594 if a0 == 0\n      : @593 (gas: 1)\n 15784: jump @745\n      : @594 (gas: 4)\n 15787: a0 = u64 [s1 + 0xb8]\n 15791: a0 = i32 [a0]\n 15793: a1 = 0x43\n 15796: jump @596 if a1 <u a0\n      : @595 (gas: 1)\n 15799: jump @746\n      : @596 (gas: 4)\n 15802: a0 = s1 + 0x1260\n 15806: ra = 0x22a\n 15810: t0 = 0x3f8\n 15814: jump @1417\n      : @597 [@dyn 277] (gas: 31)\n 15817: a1 = s1 + 0x1038\n 15821: a2 = a1 + 0x200\n 15825: a0 = u64 [a2 + 0x28]\n 15828: u64 [s1 + 0xb8] = a0\n 15832: a0 = u64 [a2 + 0x30]\n 15835: u64 [s1 + 0xb0] = a0\n 15839: a0 = u64 [a2 + 0x38]\n 15842: u64 [s1 + 0xa8] = a0\n 15846: a0 = u64 [a2 + 0x40]\n 15849: u64 [s1 + 0xa0] = a0\n 15853: a0 = s1 + 0x2000\n 15857: i32 a0 = a0 + 0xfffffffffffffac0\n 15861: a1 = 0x24\n 15864: ecalli 1 // 'call_data_load'\n 15866: a0 = s1 + 0x1838\n 15870: a2 = a0 + 0x200\n 15874: a1 = u64 [a2 + 0x88]\n 15878: u64 [s1 + 0x98] = a1\n 15882: a1 = u64 [a2 + 0x90]\n 15886: u64 [s1 + 0x90] = a1\n 15890: a1 = u64 [a2 + 0x98]\n 15894: u64 [s1 + 0x88] = a1\n 15898: a0 = u64 [a2 + 0xa0]\n 15902: u64 [s1 + 0x80] = a0\n 15906: a0 = 0x30270\n 15911: u64 [s1 + 0x78] = a0\n 15914: i32 a0 = a0 + 0\n 15916: ra = 0x22c\n 15920: ecalli 3 // 'caller'\n 15922: t0 = 0x22e\n 15926: jump @1379\n      : @598 [@dyn 278] (gas: 1)\n 15929: t0 = 558, jump @1379\n      : @599 [@dyn 279] (gas: 27)\n 15935: a3 = s1 + 0x1038\n 15939: a4 = u64 [s1 + 0x80]\n 15943: a5 = a3 + 0x100\n 15947: u64 [a5 + 0xe0] = a4\n 15951: a4 = u64 [s1 + 0x88]\n 15955: u64 [a5 + 0xd8] = a4\n 15959: a4 = u64 [s1 + 0x90]\n 15963: u64 [a5 + 0xd0] = a4\n 15967: a4 = u64 [s1 + 0x98]\n 15971: u64 [a5 + 0xc8] = a4\n 15975: a4 = u64 [s1 + 0xa0]\n 15979: u64 [a3 + 0x200] = a4\n 15983: a4 = u64 [s1 + 0xa8]\n 15987: u64 [a5 + 0xf8] = a4\n 15991: a4 = u64 [s1 + 0xb0]\n 15995: u64 [a5 + 0xf0] = a4\n 15999: a4 = u64 [s1 + 0xb8]\n 16003: u64 [a5 + 0xe8] = a4\n 16007: a4 = a3 + 0x200\n 16011: u64 [a4 + 0x18] = a2\n 16014: u64 [a4 + 0x10] = a0\n 16017: u64 [a4 + 0x8] = a1\n 16020: a0 = s1 + 0x1240\n 16024: a1 = s1 + 0x1220\n 16028: a2 = s1 + 0x1200\n 16032: u64 [a3 + 544] = 0\n 16036: ra = 560, jump @1105\n      : @600 [@dyn 280] (gas: 3)\n 16042: a0 = s1 + 0x11e0\n 16046: a1 = 0x40\n 16049: ra = 562, jump @17\n      : @601 [@dyn 281] (gas: 7)\n 16055: a3 = s1 + 0x1038\n 16059: a5 = a3 + 0x100\n 16063: a4 = u64 [a5 + 0xc0]\n 16067: a1 = u64 [a5 + 0xb8]\n 16071: a2 = u64 [a5 + 0xb0]\n 16075: a0 = u64 [a5 + 0xa8]\n 16079: t0 = 564, jump @1367\n      : @602 [@dyn 282] (gas: 1)\n 16085: jump @653 if a1 != 0\n      : @603 (gas: 8)\n 16089: u64 [a3 + 416] = 0\n 16093: u64 [a3 + 408] = 0\n 16097: u64 [a3 + 392] = 0x1\n 16102: a1 = s1 + 0x11c0\n 16106: u64 [a3 + 400] = 0\n 16110: u64 [s1 + 0xb8] = a0\n 16114: ra = 0x2c6\n 16118: jump @19\n      : @604 (gas: 10)\n 16121: u64 [a2 + 1568] = 0\n 16125: u64 [a2 + 1560] = 0\n 16129: u64 [a2 + 1552] = 0\n 16133: u64 [a2 + 1544] = 0\n 16137: a0 = s1 + 0x1000\n 16141: i32 a0 = a0 + 0x640\n 16145: ra = 0x236\n 16149: ecalli 10 // 'value_transferred'\n 16151: t0 = 0x238\n 16155: jump @1378\n      : @605 [@dyn 283] (gas: 1)\n 16158: t0 = 568, jump @1378\n      : @606 [@dyn 284] (gas: 1)\n 16164: t0 = 570, jump @1385\n      : @607 [@dyn 285] (gas: 1)\n 16170: jump @747 if a0 != 0\n      : @608 (gas: 4)\n 16174: a0 = u64 [s1 + 0xb8]\n 16178: a0 = i32 [a0]\n 16180: a1 = 0x63\n 16183: jump @748 if a1 >=u a0\n      : @609 (gas: 4)\n 16187: a0 = s1 + 0x640\n 16191: ra = 0x23c\n 16195: t0 = 0x3f8\n 16199: jump @1417\n      : @610 [@dyn 286] (gas: 12)\n 16202: a0 = u64 [s1 + 0x640]\n 16206: u64 [s1 + 0xb8] = a0\n 16210: a0 = u64 [s1 + 0x648]\n 16214: u64 [s1 + 0xb0] = a0\n 16218: a0 = u64 [s1 + 0x650]\n 16222: u64 [s1 + 0xa8] = a0\n 16226: a0 = u64 [s1 + 0x658]\n 16230: u64 [s1 + 0xa0] = a0\n 16234: a0 = s1 + 0x620\n 16238: ra = 0x23e\n 16242: t0 = 0x402\n 16246: jump @1417\n      : @611 [@dyn 287] (gas: 65)\n 16249: a0 = u64 [s1 + 0x620]\n 16253: u64 [s1 + 0x78] = a0\n 16256: a0 = u64 [s1 + 0x628]\n 16260: u64 [s1 + 0x70] = a0\n 16263: a0 = u64 [s1 + 0x630]\n 16267: u64 [s1 + 0x68] = a0\n 16270: a0 = u64 [s1 + 0x638]\n 16274: u64 [s1 + 0x60] = a0\n 16277: a0 = s1 + 0x1000\n 16281: i32 a0 = a0 + 0x660\n 16285: a1 = 0x44\n 16288: ecalli 1 // 'call_data_load'\n 16290: a0 = s1 + 0x1038\n 16294: a2 = a0 + 0x600\n 16298: a1 = u64 [a2 + 0x28]\n 16301: u64 [s1 + 0x98] = a1\n 16305: a1 = u64 [a2 + 0x30]\n 16308: u64 [s1 + 0x90] = a1\n 16312: a1 = u64 [a2 + 0x38]\n 16315: u64 [s1 + 0x88] = a1\n 16319: a0 = u64 [a2 + 0x40]\n 16322: u64 [s1 + 0x80] = a0\n 16326: a0 = 0x30270\n 16331: u64 [s1 + 0x58] = a0\n 16334: i32 a0 = a0 + 0\n 16336: ecalli 3 // 'caller'\n 16338: a2 = u64 [s1 + 0x58]\n 16341: a0 = u64 [a2 + 0x8]\n 16344: a1 = i32 [a2 + 0x10]\n 16347: a2 = u64 [a2]\n 16349: a0 = reverse a0\n 16351: a3 = a0 << 0x20\n 16354: a1 = reverse a1\n 16356: a1 = a1 >> 0x20\n 16359: a3 = a3 | a1\n 16362: a0 = a0 >> 0x20\n 16365: a1 = reverse a2\n 16367: a2 = a1 << 0x20\n 16370: a0 = a0 | a2\n 16373: a1 = a1 >> 0x20\n 16376: a2 = u64 [s1 + 0x80]\n 16380: u64 [s1 + 0x5d8] = a2\n 16384: a2 = u64 [s1 + 0x88]\n 16388: u64 [s1 + 0x5d0] = a2\n 16392: a2 = u64 [s1 + 0x90]\n 16396: u64 [s1 + 0x5c8] = a2\n 16400: a2 = u64 [s1 + 0x98]\n 16404: u64 [s1 + 0x5c0] = a2\n 16408: u64 [s1 + 1528] = 0\n 16412: a2 = u64 [s1 + 0xa0]\n 16416: a4 = s1 + 0x600\n 16420: u64 [a4 + 0x18] = a2\n 16423: a2 = u64 [s1 + 0xa8]\n 16427: u64 [a4 + 0x10] = a2\n 16430: a2 = u64 [s1 + 0xb0]\n 16434: u64 [a4 + 0x8] = a2\n 16437: a2 = u64 [s1 + 0xb8]\n 16441: u64 [a4] = a2\n 16443: u64 [s1 + 0x5f0] = a1\n 16447: u64 [s1 + 0x5e8] = a0\n 16451: a0 = s1 + 0x600\n 16455: a1 = s1 + 0x5e0\n 16459: a2 = s1 + 0x5c0\n 16463: u64 [s1 + 0x5e0] = a3\n 16467: ra = 576, jump @1058\n      : @612 [@dyn 288] (gas: 28)\n 16473: a0 = u64 [s1 + 0x80]\n 16477: u64 [s1 + 0x578] = a0\n 16481: a0 = u64 [s1 + 0x88]\n 16485: u64 [s1 + 0x570] = a0\n 16489: a0 = u64 [s1 + 0x90]\n 16493: u64 [s1 + 0x568] = a0\n 16497: a0 = u64 [s1 + 0x98]\n 16501: u64 [s1 + 0x560] = a0\n 16505: a0 = u64 [s1 + 0x60]\n 16508: u64 [s1 + 0x598] = a0\n 16512: a0 = u64 [s1 + 0x68]\n 16515: u64 [s1 + 0x590] = a0\n 16519: a0 = u64 [s1 + 0x70]\n 16522: u64 [s1 + 0x588] = a0\n 16526: a0 = u64 [s1 + 0x78]\n 16529: u64 [s1 + 0x580] = a0\n 16533: a0 = u64 [s1 + 0xa0]\n 16537: u64 [s1 + 0x5b8] = a0\n 16541: a0 = u64 [s1 + 0xa8]\n 16545: u64 [s1 + 0x5b0] = a0\n 16549: a0 = u64 [s1 + 0xb0]\n 16553: u64 [s1 + 0x5a8] = a0\n 16557: a0 = s1 + 0x5a0\n 16561: a1 = s1 + 0x580\n 16565: a2 = s1 + 0x560\n 16569: a3 = u64 [s1 + 0xb8]\n 16573: u64 [s1 + 0x5a0] = a3\n 16577: ra = 578, jump @1105\n      : @613 [@dyn 289] (gas: 3)\n 16583: a0 = s1 + 0x540\n 16587: a1 = 0x40\n 16590: ra = 580, jump @17\n      : @614 [@dyn 290] (gas: 6)\n 16596: a4 = s1 + 0x500\n 16600: a3 = u64 [a4 + 0x58]\n 16603: a1 = u64 [a4 + 0x50]\n 16606: a2 = u64 [a4 + 0x48]\n 16609: a0 = u64 [a4 + 0x40]\n 16612: t0 = 582, jump @1368\n      : @615 [@dyn 291] (gas: 1)\n 16618: jump @653 if a1 != 0\n      : @616 (gas: 8)\n 16622: u64 [s1 + 1336] = 0\n 16626: u64 [s1 + 1328] = 0\n 16630: u64 [s1 + 1320] = 0\n 16634: a1 = s1 + 0x520\n 16638: u64 [s1 + 1312] = 0x1\n 16643: u64 [s1 + 0xb8] = a0\n 16647: ra = 0x2c6\n 16651: jump @19\n      : @617 (gas: 9)\n 16654: a0 = s1 + 0x1838\n 16658: u64 [a0 + 832] = 0\n 16662: u64 [a0 + 824] = 0\n 16666: u64 [a0 + 816] = 0\n 16670: u64 [a0 + 808] = 0\n 16674: a0 = s1 + 0x2000\n 16678: i32 a0 = a0 + 0xfffffffffffffb60\n 16682: ecalli 10 // 'value_transferred'\n 16684: fallthrough\n      : @618 (gas: 10)\n 16685: a3 = s1 + 0x1838\n 16689: a4 = a3 + 0x300\n 16693: a0 = u64 [a4 + 0x38]\n 16696: a1 = u64 [a4 + 0x40]\n 16699: a2 = u64 [a4 + 0x30]\n 16702: a3 = u64 [a4 + 0x28]\n 16705: a1 = a1 | a2\n 16708: a0 = a0 | a3\n 16711: a0 = a0 | a1\n 16714: jump @749 if a0 != 0\n      : @619 (gas: 3)\n 16718: a0 = u64 [s1 + 0xb8]\n 16722: a0 = i32 [a0]\n 16724: jump @750 if a0 <=u 3\n      : @620 (gas: 3)\n 16729: a0 = s1 + 0x14e0\n 16733: a1 = 0x40\n 16736: ra = 584, jump @17\n      : @621 [@dyn 292] (gas: 7)\n 16742: a3 = s1 + 0x1038\n 16746: a5 = a3 + 0x400\n 16750: a4 = u64 [a5 + 0xc0]\n 16754: a1 = u64 [a5 + 0xb8]\n 16758: a2 = u64 [a5 + 0xb0]\n 16762: a0 = u64 [a5 + 0xa8]\n 16766: t0 = 586, jump @1367\n      : @622 [@dyn 293] (gas: 1)\n 16772: jump @653 if a1 != 0\n      : @623 (gas: 13)\n 16776: a1 = u64 [0x20020]\n 16781: a5 = a3 + 0x400\n 16785: u64 [a5 + 0xa0] = a1\n 16789: a4 = u64 [0x20028]\n 16794: a1 = u64 [0x20030]\n 16799: a2 = u64 [0x20038]\n 16804: u64 [a5 + 0x98] = a4\n 16808: u64 [a5 + 0x90] = a1\n 16812: a1 = s1 + 0x14c0\n 16816: u64 [a5 + 0x88] = a2\n 16820: u64 [s1 + 0xb8] = a0\n 16824: ra = 0x2c6\n 16828: jump @19\n      : @624 (gas: 10)\n 16831: u64 [a2 + 1440] = 0\n 16835: u64 [a2 + 1432] = 0\n 16839: u64 [a2 + 1424] = 0\n 16843: u64 [a2 + 1416] = 0\n 16847: a0 = s1 + 0x1000\n 16851: i32 a0 = a0 + 0x5c0\n 16855: ra = 0x24c\n 16859: ecalli 10 // 'value_transferred'\n 16861: t0 = 0x24e\n 16865: jump @1422\n      : @625 [@dyn 294] (gas: 1)\n 16868: t0 = 590, jump @1422\n      : @626 [@dyn 295] (gas: 8)\n 16874: a0 = u64 [a4 + 0x98]\n 16878: a1 = u64 [a4 + 0xa0]\n 16882: a2 = u64 [a4 + 0x90]\n 16886: a3 = u64 [a4 + 0x88]\n 16890: a1 = a1 | a2\n 16893: a0 = a0 | a3\n 16896: a0 = a0 | a1\n 16899: jump @751 if a0 != 0\n      : @627 (gas: 4)\n 16903: a0 = u64 [s1 + 0xb8]\n 16907: a0 = i32 [a0]\n 16909: a1 = 0x43\n 16912: jump @752 if a1 >=u a0\n      : @628 (gas: 4)\n 16916: a0 = s1 + 0x4a0\n 16920: ra = 0x250\n 16924: t0 = 0x3f8\n 16928: jump @1417\n      : @629 [@dyn 296] (gas: 36)\n 16931: a1 = s1 + 0x400\n 16935: a0 = u64 [a1 + 0xb0]\n 16939: u64 [s1 + 0x98] = a0\n 16943: a0 = u64 [a1 + 0xa8]\n 16947: u64 [s1 + 0xb0] = a0\n 16951: a0 = u64 [a1 + 0xa0]\n 16955: u64 [s1 + 0xb8] = a0\n 16959: a0 = sp + 0xffffffffffffffe0\n 16962: a0 = a0 & 0xffffffffffffffe0\n 16965: u64 [s1 + 0xa0] = a0\n 16969: sp = a0\n 16971: a0 = s1 + 0x1000\n 16975: i32 a0 = a0 + 0x5e0\n 16979: a1 = 0x24\n 16982: ecalli 1 // 'call_data_load'\n 16984: a0 = s1 + 0x1038\n 16988: a4 = a0 + 0x500\n 16992: a1 = u64 [a4 + 0xc0]\n 16996: a2 = u64 [a4 + 0xb8]\n 17000: a3 = u64 [a4 + 0xb0]\n 17004: a0 = u64 [a4 + 0xa8]\n 17008: u64 [s1 + 0x50] = a1\n 17011: a4 = u64 [s1 + 0xa0]\n 17015: u64 [a4 + 0x18] = a1\n 17018: u64 [s1 + 0x48] = a2\n 17021: u64 [a4 + 0x10] = a2\n 17024: u64 [s1 + 0x40] = a3\n 17027: u64 [a4 + 0x8] = a3\n 17030: u64 [s1 + 0x38] = a0\n 17033: u64 [a4] = a0\n 17035: a0 = 0x30270\n 17040: u64 [s1 + 0xa8] = a0\n 17044: i32 a0 = a0 + 0\n 17046: u64 [s1 + 0x90] = a0\n 17050: ecalli 3 // 'caller'\n 17052: fallthrough\n      : @630 (gas: 7)\n 17053: a2 = u64 [s1 + 0xa8]\n 17057: a0 = u32 [a2 + 0x10]\n 17060: a1 = u64 [a2]\n 17062: a2 = u64 [a2 + 0x8]\n 17065: a0 = a0 | a1\n 17068: a0 = a0 | a2\n 17071: jump @753 if a0 == 0\n      : @631 (gas: 9)\n 17075: a0 = u64 [s1 + 0x98]\n 17079: a0 = a0 << 0x20\n 17082: a1 = a0 >> 0x20\n 17085: a0 = u64 [s1 + 0xb0]\n 17089: a2 = u64 [s1 + 0xb8]\n 17093: a0 = a0 | a2\n 17096: u64 [s1 + 0x98] = a1\n 17100: a0 = a0 | a1\n 17103: jump @758 if a0 == 0\n      : @632 (gas: 23)\n 17107: a0 = u64 [s1 + 0x90]\n 17111: ecalli 3 // 'caller'\n 17113: a2 = u64 [s1 + 0xa8]\n 17117: a0 = u64 [a2 + 0x8]\n 17120: a1 = i32 [a2 + 0x10]\n 17123: a2 = u64 [a2]\n 17125: a0 = reverse a0\n 17127: a3 = a0 << 0x20\n 17130: a1 = reverse a1\n 17132: a1 = a1 >> 0x20\n 17135: a3 = a3 | a1\n 17138: a0 = a0 >> 0x20\n 17141: a1 = reverse a2\n 17143: a2 = a1 << 0x20\n 17146: a0 = a0 | a2\n 17149: a1 = a1 >> 0x20\n 17152: u64 [s1 + 1176] = 0\n 17156: u64 [s1 + 0x490] = a1\n 17160: u64 [s1 + 0x488] = a0\n 17164: a1 = s1 + 0x480\n 17168: u64 [s1 + 0x480] = a3\n 17172: a0 = 0\n 17174: ra = 594, jump @19\n      : @633 [@dyn 297] (gas: 7)\n 17180: u64 [s1 + 1144] = 0\n 17184: u64 [s1 + 1136] = 0\n 17188: u64 [s1 + 1120] = 0x1\n 17193: a0 = 0x20\n 17196: a1 = s1 + 0x460\n 17200: u64 [s1 + 1128] = 0\n 17204: ra = 596, jump @19\n      : @634 [@dyn 298] (gas: 3)\n 17210: a1 = 0x20264\n 17215: a0 = i32 [0x20264]\n 17220: jump @636 if a0 >u 63\n      : @635 (gas: 2)\n 17224: u32 [0x20264] = 0x40\n 17230: fallthrough\n      : @636 (gas: 15)\n 17231: a0 = sp + 0xffffffffffffffe0\n 17234: a2 = a0 & 0xffffffffffffffe0\n 17237: u64 [s1 + 0x78] = a2\n 17240: sp = a2\n 17242: a0 = 0x20270\n 17247: i32 a0 = a0 + 0\n 17249: i32 a2 = a2 + 0\n 17251: u64 [s1 + 0x88] = a1\n 17255: a1 = 0x40\n 17258: u64 [s1 + 0x80] = a0\n 17262: ra = 0x256\n 17266: ecalli 6 // 'hash_keccak_256'\n 17268: a3 = u64 [s1 + 0x78]\n 17271: t0 = 0x258\n 17275: jump @1405\n      : @637 [@dyn 299] (gas: 2)\n 17278: a3 = u64 [s1 + 0x78]\n 17281: t0 = 600, jump @1405\n      : @638 [@dyn 300] (gas: 21)\n 17287: u64 [s1 + 0x70] = a0\n 17290: a0 = reverse a1\n 17292: u64 [s1 + 0x68] = a0\n 17295: a0 = reverse a2\n 17297: u64 [s1 + 0x60] = a0\n 17300: a0 = reverse a3\n 17302: u64 [s1 + 0x58] = a0\n 17305: a0 = sp + 0xffffffffffffffe0\n 17308: a0 = a0 & 0xffffffffffffffe0\n 17311: u64 [s1 + 0x78] = a0\n 17314: sp = a0\n 17316: u64 [s1 + 1112] = 0\n 17320: a0 = u64 [s1 + 0x98]\n 17324: u64 [s1 + 0x450] = a0\n 17328: a0 = u64 [s1 + 0xb0]\n 17332: u64 [s1 + 0x448] = a0\n 17336: a1 = s1 + 0x440\n 17340: a0 = u64 [s1 + 0xb8]\n 17344: u64 [s1 + 0x440] = a0\n 17348: a0 = 0\n 17350: ra = 602, jump @19\n      : @639 [@dyn 301] (gas: 12)\n 17356: a0 = u64 [s1 + 0x58]\n 17359: a3 = s1 + 0x400\n 17363: u64 [a3 + 0x38] = a0\n 17366: a0 = u64 [s1 + 0x60]\n 17369: u64 [a3 + 0x30] = a0\n 17372: a0 = u64 [s1 + 0x68]\n 17375: u64 [a3 + 0x28] = a0\n 17378: a0 = 0x20\n 17381: a1 = s1 + 0x420\n 17385: a2 = u64 [s1 + 0x70]\n 17388: u64 [a3 + 0x20] = a2\n 17391: ra = 604, jump @19\n      : @640 [@dyn 302] (gas: 3)\n 17397: a1 = u64 [s1 + 0x88]\n 17401: a0 = i32 [a1]\n 17403: jump @642 if a0 >u 63\n      : @641 (gas: 2)\n 17407: u32 [a1 + 0] = 0x40\n 17410: fallthrough\n      : @642 (gas: 24)\n 17411: a0 = sp + 0xffffffffffffffe0\n 17414: a0 = a0 & 0xffffffffffffffe0\n 17417: u64 [s1 + 0x88] = a0\n 17421: sp = a0\n 17423: i32 a2 = a0 + 0\n 17425: a1 = 0x40\n 17428: a0 = u64 [s1 + 0x80]\n 17432: ecalli 6 // 'hash_keccak_256'\n 17434: a3 = u64 [s1 + 0x88]\n 17438: a0 = u64 [a3 + 0x18]\n 17441: a1 = u64 [a3 + 0x10]\n 17444: a2 = u64 [a3 + 0x8]\n 17447: a3 = u64 [a3]\n 17449: a4 = reverse a0\n 17451: a1 = reverse a1\n 17453: a2 = reverse a2\n 17455: a3 = reverse a3\n 17457: a0 = u64 [s1 + 0x78]\n 17460: u64 [a0 + 0x18] = a3\n 17463: u64 [a0 + 0x10] = a2\n 17466: u64 [a0 + 0x8] = a1\n 17469: u64 [a0] = a4\n 17471: a1 = u64 [s1 + 0xa0]\n 17475: ra = 606, jump @24\n      : @643 [@dyn 303] (gas: 3)\n 17481: a0 = s1 + 0x400\n 17485: a1 = 0x40\n 17488: ra = 608, jump @17\n      : @644 [@dyn 304] (gas: 6)\n 17494: a4 = s1 + 0x400\n 17498: a0 = u64 [a4 + 0x18]\n 17501: a1 = u64 [a4 + 0x10]\n 17504: a2 = u64 [a4 + 0x8]\n 17507: a3 = u64 [a4]\n 17509: t0 = 610, jump @1409\n      : @645 [@dyn 305] (gas: 1)\n 17515: jump @653 if a0 != 0\n      : @646 (gas: 12)\n 17519: a0 = u64 [s1 + 0x38]\n 17522: u64 [s1 + 0x3e0] = a0\n 17526: a0 = u64 [s1 + 0x40]\n 17529: u64 [s1 + 0x3e8] = a0\n 17533: a0 = u64 [s1 + 0x48]\n 17536: u64 [s1 + 0x3f0] = a0\n 17540: a1 = s1 + 0x3e0\n 17544: a0 = u64 [s1 + 0x50]\n 17547: u64 [s1 + 0x3f8] = a0\n 17551: a0 = a3\n 17553: u64 [s1 + 0xa0] = a3\n 17557: ra = 612, jump @19\n      : @647 [@dyn 306] (gas: 6)\n 17563: a0 = u64 [s1 + 0x90]\n 17567: ra = 0x266\n 17571: ecalli 3 // 'caller'\n 17573: a2 = u64 [s1 + 0xa8]\n 17577: t0 = 0x268\n 17581: jump @1352\n      : @648 [@dyn 307] (gas: 2)\n 17584: a2 = u64 [s1 + 0xa8]\n 17588: t0 = 616, jump @1352\n      : @649 [@dyn 308] (gas: 31)\n 17594: t0 = a1 | a0\n 17597: a3 = a3 >> 0x20\n 17600: a2 = reverse a2\n 17602: a1 = a2 << 0x20\n 17605: a1 = a1 | a3\n 17608: a2 = a2 >> 0x20\n 17611: u64 [s1 + 920] = 0\n 17615: a0 = u64 [s1 + 0x98]\n 17619: u64 [s1 + 0x390] = a0\n 17623: a0 = u64 [s1 + 0xb0]\n 17627: u64 [s1 + 0x388] = a0\n 17631: a0 = u64 [s1 + 0xb8]\n 17635: u64 [s1 + 0x380] = a0\n 17639: u64 [s1 + 952] = 0\n 17643: a3 = u64 [0x200e0]\n 17648: a4 = u64 [0x200e8]\n 17653: a5 = u64 [0x200f0]\n 17658: a0 = u64 [0x200f8]\n 17663: u64 [s1 + 0x3d8] = a3\n 17667: u64 [s1 + 0x3d0] = a4\n 17671: u64 [s1 + 0x3c8] = a5\n 17675: u64 [s1 + 0x3c0] = a0\n 17679: u64 [s1 + 0x3b0] = a2\n 17683: u64 [s1 + 0x3a8] = a1\n 17687: a1 = 0x20\n 17690: a2 = s1 + 0x3c0\n 17694: a3 = s1 + 0x3a0\n 17698: a4 = s1 + 0x380\n 17702: u64 [s1 + 0x3a0] = t0\n 17706: a0 = u64 [s1 + 0xa0]\n 17710: ra = 618, jump @27\n      : @650 [@dyn 309] (gas: 3)\n 17716: a0 = s1 + 0x360\n 17720: a1 = 0x40\n 17723: ra = 620, jump @17\n      : @651 [@dyn 310] (gas: 6)\n 17729: a4 = s1 + 0x300\n 17733: a3 = u64 [a4 + 0x78]\n 17736: a1 = u64 [a4 + 0x70]\n 17739: a2 = u64 [a4 + 0x68]\n 17742: a0 = u64 [a4 + 0x60]\n 17745: t0 = 622, jump @1368\n      : @652 [@dyn 311] (gas: 1)\n 17751: jump @776 if a1 == 0\n      : @653 (gas: 1)\n 17755: trap\n      : @654 (gas: 7)\n 17756: u64 [s1 + 600] = 0\n 17760: u64 [s1 + 592] = 0\n 17764: u64 [s1 + 584] = 0\n 17768: a1 = s1 + 0x240\n 17772: u64 [s1 + 576] = 0x3\n 17777: a0 = 0\n 17779: ra = 624, jump @19\n      : @655 [@dyn 312] (gas: 1)\n 17785: t0 = 626, jump @1415\n      : @656 [@dyn 313] (gas: 30)\n 17791: t0 = u64 [0x20100]\n 17796: a3 = u64 [0x20108]\n 17801: a1 = u64 [s1 + 0x30]\n 17804: a0 = a1 + 0x20\n 17807: u64 [s1 + 0x50] = a0\n 17810: a0 = a0 <u a1\n 17813: a1 = u64 [s1 + 0x20]\n 17816: a2 = a1 + a0\n 17819: u64 [s1 + 0x48] = a2\n 17822: a1 = a2 <u a1\n 17825: a1 = a0 if a0 == 0\n 17828: a5 = u64 [0x20110]\n 17833: a0 = u64 [0x20118]\n 17838: ra = t0\n 17840: u64 [a4 + 0x18] = t0\n 17843: u64 [s1 + 0x78] = a3\n 17846: u64 [a4 + 0x10] = a3\n 17849: t0 = a5\n 17851: u64 [a4 + 0x8] = a5\n 17854: u64 [s1 + 0x98] = a4\n 17858: a2 = a0\n 17860: u64 [a4] = a0\n 17862: a0 = u64 [s1 + 0x28]\n 17865: a1 = a1 + a0\n 17868: u64 [s1 + 0x40] = a1\n 17871: a0 = a1 <u a0\n 17874: a1 = u64 [s1 + 0x18]\n 17877: a0 = a0 + a1\n 17880: u64 [s1 + 0x38] = a0\n 17883: fallthrough\n      : @657 (gas: 3)\n 17884: u64 [s1 + 0x80] = a2\n 17888: u64 [s1 + 0x88] = t0\n 17892: t0 = 628, jump @1366\n      : @658 [@dyn 314] (gas: 1)\n 17898: jump @660 if a3 != 0\n      : @659 (gas: 1)\n 17901: jump @415\n      : @660 (gas: 5)\n 17904: a0 = s1 + 0x220\n 17908: a1 = u64 [s1 + 0x98]\n 17912: u64 [s1 + 0xa8] = t1\n 17916: u64 [s1 + 0xa0] = t2\n 17920: ra = 630, jump @21\n      : @661 [@dyn 315] (gas: 1)\n 17926: t0 = 632, jump @1370\n      : @662 [@dyn 316] (gas: 6)\n 17932: t0 = a1 <u a5\n 17935: a5 = u64 [s1 + 0xb0]\n 17939: a3 = u64 [s1 + 0x38]\n 17942: a5 = a5 + a3\n 17945: a5 = a5 + t0\n 17948: t0 = 634, jump @1399\n      : @663 [@dyn 317] (gas: 1)\n 17954: jump @653 if a1 != 0\n      : @664 (gas: 12)\n 17958: a3 = s1 + 0x200\n 17962: a2 = u64 [a3 + 0x38]\n 17965: a1 = u64 [a3 + 0x30]\n 17968: a5 = u64 [a3 + 0x28]\n 17971: a4 = u64 [a3 + 0x20]\n 17974: u64 [a3] = a4\n 17976: u64 [a3 + 0x8] = a5\n 17979: u64 [a3 + 0x10] = a1\n 17982: a1 = s1 + 0x200\n 17986: u64 [a3 + 0x18] = a2\n 17989: u64 [s1 + 0xb8] = t2\n 17993: ra = 636, jump @19\n      : @665 [@dyn 318] (gas: 1)\n 17999: t0 = 638, jump @1354\n      : @666 [@dyn 319] (gas: 14)\n 18005: t0 = ra\n 18007: a5 = u64 [s1 + 0x98]\n 18011: u64 [a5 + 0x8] = ra\n 18014: a2 = a3\n 18016: u64 [a5] = a3\n 18018: a3 = t2\n 18020: u64 [a5 + 0x10] = a3\n 18023: ra = a0\n 18025: u64 [a5 + 0x18] = a0\n 18028: u64 [s1 + 0x78] = a3\n 18031: u64 [s1 + 0xb8] = t1\n 18035: t2 = a1\n 18037: t1 = a4\n 18039: jump @657\n      : @667 (gas: 8)\n 18042: a2 = s1 + 0x1038\n 18046: u64 [a2 + 224] = 0\n 18050: u64 [a2 + 216] = 0\n 18054: u64 [a2 + 208] = 0\n 18058: a1 = s1 + 0x1100\n 18062: u64 [a2 + 200] = 0x4\n 18067: a0 = 0\n 18069: ra = 640, jump @19\n      : @668 [@dyn 320] (gas: 1)\n 18075: t0 = 642, jump @1415\n      : @669 [@dyn 321] (gas: 30)\n 18081: t0 = u64 [0x20060]\n 18086: a3 = u64 [0x20068]\n 18091: a1 = u64 [s1 + 0x30]\n 18094: a0 = a1 + 0x20\n 18097: u64 [s1 + 0x50] = a0\n 18100: a0 = a0 <u a1\n 18103: a1 = u64 [s1 + 0x20]\n 18106: a2 = a1 + a0\n 18109: u64 [s1 + 0x48] = a2\n 18112: a1 = a2 <u a1\n 18115: a1 = a0 if a0 == 0\n 18118: a5 = u64 [0x20070]\n 18123: a0 = u64 [0x20078]\n 18128: ra = t0\n 18130: u64 [a4 + 0x18] = t0\n 18133: u64 [s1 + 0x78] = a3\n 18136: u64 [a4 + 0x10] = a3\n 18139: t0 = a5\n 18141: u64 [a4 + 0x8] = a5\n 18144: u64 [s1 + 0x98] = a4\n 18148: a2 = a0\n 18150: u64 [a4] = a0\n 18152: a0 = u64 [s1 + 0x28]\n 18155: a1 = a1 + a0\n 18158: u64 [s1 + 0x40] = a1\n 18161: a0 = a1 <u a0\n 18164: a1 = u64 [s1 + 0x18]\n 18167: a0 = a0 + a1\n 18170: u64 [s1 + 0x38] = a0\n 18173: fallthrough\n      : @670 (gas: 3)\n 18174: u64 [s1 + 0x80] = a2\n 18178: u64 [s1 + 0x88] = t0\n 18182: t0 = 644, jump @1366\n      : @671 [@dyn 322] (gas: 1)\n 18188: jump @673 if a3 != 0\n      : @672 (gas: 1)\n 18191: jump @494\n      : @673 (gas: 5)\n 18194: a0 = s1 + 0x10e0\n 18198: a1 = u64 [s1 + 0x98]\n 18202: u64 [s1 + 0xa8] = t1\n 18206: u64 [s1 + 0xa0] = t2\n 18210: ra = 646, jump @21\n      : @674 [@dyn 323] (gas: 1)\n 18216: t0 = 648, jump @1370\n      : @675 [@dyn 324] (gas: 6)\n 18222: t0 = a1 <u a5\n 18225: a5 = u64 [s1 + 0xb0]\n 18229: a3 = u64 [s1 + 0x38]\n 18232: a5 = a5 + a3\n 18235: a5 = a5 + t0\n 18238: t0 = 650, jump @1399\n      : @676 [@dyn 325] (gas: 1)\n 18244: jump @653 if a1 != 0\n      : @677 (gas: 12)\n 18248: a5 = s1 + 0x1038\n 18252: t0 = u64 [a5 + 0xc0]\n 18256: a1 = u64 [a5 + 0xb8]\n 18260: a2 = u64 [a5 + 0xb0]\n 18264: a4 = u64 [a5 + 0xa8]\n 18268: u64 [a5 + 0x88] = a4\n 18272: u64 [a5 + 0x90] = a2\n 18276: u64 [a5 + 0x98] = a1\n 18280: a1 = s1 + 0x10c0\n 18284: u64 [a5 + 0xa0] = t0\n 18288: u64 [s1 + 0xb8] = t2\n 18292: ra = 652, jump @19\n      : @678 [@dyn 326] (gas: 1)\n 18298: t0 = 654, jump @1354\n      : @679 [@dyn 327] (gas: 14)\n 18304: t0 = ra\n 18306: a5 = u64 [s1 + 0x98]\n 18310: u64 [a5 + 0x8] = ra\n 18313: a2 = a3\n 18315: u64 [a5] = a3\n 18317: a3 = t2\n 18319: u64 [a5 + 0x10] = a3\n 18322: ra = a0\n 18324: u64 [a5 + 0x18] = a0\n 18327: u64 [s1 + 0x78] = a3\n 18330: u64 [s1 + 0xb8] = t1\n 18334: t2 = a1\n 18336: t1 = a4\n 18338: jump @670\n      : @680 (gas: 6)\n 18341: a1 = 0x20270\n 18346: i32 a1 = a1 + 0\n 18348: a0 = 0x1\n 18351: a2 = 0\n 18353: ecalli 7 // 'seal_return'\n 18355: jump @824\n      : @681 (gas: 6)\n 18358: a1 = 0x20270\n 18363: i32 a1 = a1 + 0\n 18365: a0 = 0x1\n 18368: a2 = 0\n 18370: ecalli 7 // 'seal_return'\n 18372: jump @824\n      : @682 (gas: 6)\n 18375: a1 = 0x20270\n 18380: i32 a1 = a1 + 0\n 18382: a0 = 0x1\n 18385: a2 = 0\n 18387: ecalli 7 // 'seal_return'\n 18389: jump @824\n      : @683 (gas: 6)\n 18392: a1 = 0x20270\n 18397: i32 a1 = a1 + 0\n 18399: a0 = 0x1\n 18402: a2 = 0\n 18404: ecalli 7 // 'seal_return'\n 18406: jump @824\n      : @684 (gas: 6)\n 18409: a1 = 0x20270\n 18414: i32 a1 = a1 + 0\n 18416: a0 = 0x1\n 18419: a2 = 0\n 18421: ecalli 7 // 'seal_return'\n 18423: jump @824\n      : @685 (gas: 6)\n 18426: a1 = 0x20270\n 18431: i32 a1 = a1 + 0\n 18433: a0 = 0x1\n 18436: a2 = 0\n 18438: ecalli 7 // 'seal_return'\n 18440: jump @824\n      : @686 (gas: 6)\n 18443: a1 = 0x20270\n 18448: i32 a1 = a1 + 0\n 18450: a0 = 0x1\n 18453: a2 = 0\n 18455: ecalli 7 // 'seal_return'\n 18457: jump @824\n      : @687 (gas: 6)\n 18460: a1 = 0x20270\n 18465: i32 a1 = a1 + 0\n 18467: a0 = 0x1\n 18470: a2 = 0\n 18472: ecalli 7 // 'seal_return'\n 18474: jump @824\n      : @688 (gas: 6)\n 18477: a1 = 0x20270\n 18482: i32 a1 = a1 + 0\n 18484: a0 = 0x1\n 18487: a2 = 0\n 18489: ecalli 7 // 'seal_return'\n 18491: jump @824\n      : @689 (gas: 6)\n 18494: a1 = 0x20270\n 18499: i32 a1 = a1 + 0\n 18501: a0 = 0x1\n 18504: a2 = 0\n 18506: ecalli 7 // 'seal_return'\n 18508: jump @824\n      : @690 (gas: 6)\n 18511: a1 = 0x20270\n 18516: i32 a1 = a1 + 0\n 18518: a0 = 0x1\n 18521: a2 = 0\n 18523: ecalli 7 // 'seal_return'\n 18525: jump @824\n      : @691 (gas: 6)\n 18528: a1 = 0x20270\n 18533: i32 a1 = a1 + 0\n 18535: a0 = 0x1\n 18538: a2 = 0\n 18540: ecalli 7 // 'seal_return'\n 18542: jump @824\n      : @692 (gas: 6)\n 18545: a1 = 0x20270\n 18550: i32 a1 = a1 + 0\n 18552: a0 = 0x1\n 18555: a2 = 0\n 18557: ecalli 7 // 'seal_return'\n 18559: jump @824\n      : @693 (gas: 6)\n 18562: a1 = 0x20270\n 18567: i32 a1 = a1 + 0\n 18569: a0 = 0x1\n 18572: a2 = 0\n 18574: ecalli 7 // 'seal_return'\n 18576: jump @824\n      : @694 (gas: 6)\n 18579: u64 [s1 + 272] = 0\n 18583: u64 [s1 + 264] = 0\n 18587: u64 [s1 + 256] = 0\n 18591: t0 = 0x290\n 18595: a0 = 0x4e487b7100000000\n 18605: fallthrough\n      : @695 [@dyn 328] (gas: 4)\n 18606: a1 = s1 + 0x100\n 18610: u64 [s1 + 0x118] = a0\n 18614: a0 = 0\n 18616: ra = 658, jump @19\n      : @696 [@dyn 329] (gas: 7)\n 18622: u64 [s1 + 248] = 0\n 18626: u64 [s1 + 240] = 0\n 18630: u64 [s1 + 224] = 0x22\n 18635: a0 = 0x4\n 18638: a1 = s1 + 0xe0\n 18642: u64 [s1 + 232] = 0\n 18646: ra = 660, jump @19\n      : @697 [@dyn 330] (gas: 2)\n 18652: a1 = i32 [0x20264]\n 18657: jump @699 if a1 >u 63\n      : @698 (gas: 3)\n 18661: u32 [0x20264] = 0x40\n 18667: a1 = 0x20270\n 18672: jump @775\n      : @699 (gas: 2)\n 18675: a1 = 0x20270\n 18680: jump @775\n      : @700 (gas: 6)\n 18683: a1 = 0x20270\n 18688: i32 a1 = a1 + 0\n 18690: a0 = 0x1\n 18693: a2 = 0\n 18695: ecalli 7 // 'seal_return'\n 18697: jump @824\n      : @701 (gas: 6)\n 18700: a1 = 0x20270\n 18705: i32 a1 = a1 + 0\n 18707: a0 = 0x1\n 18710: a2 = 0\n 18712: ecalli 7 // 'seal_return'\n 18714: jump @824\n      : @702 (gas: 9)\n 18717: u64 [a2 + 344] = 0\n 18721: u64 [a2 + 336] = 0\n 18725: u64 [a2 + 328] = 0\n 18729: a0 = 0xe2517d3f00000000\n 18739: a1 = s1 + 0x7ff\n 18743: a1 = a1 + 0x181\n 18747: u64 [a2 + 0x160] = a0\n 18751: a0 = 0\n 18753: ra = 662, jump @19\n      : @703 [@dyn 331] (gas: 6)\n 18759: a0 = u64 [s1 + 0x20]\n 18762: ra = 0x298\n 18766: ecalli 3 // 'caller'\n 18768: a2 = u64 [s1 + 0x70]\n 18771: t0 = 0x29a\n 18775: jump @1347\n      : @704 [@dyn 332] (gas: 2)\n 18778: a2 = u64 [s1 + 0x70]\n 18781: t0 = 666, jump @1347\n      : @705 [@dyn 333] (gas: 9)\n 18787: u64 [a2 + 320] = 0\n 18791: a4 = a2 + 0x100\n 18795: u64 [a4 + 0x38] = a1\n 18798: u64 [a4 + 0x30] = a0\n 18801: a0 = 0x4\n 18804: a1 = s1 + 0x7ff\n 18808: a1 = a1 + 0x161\n 18812: u64 [a4 + 0x28] = a3\n 18815: ra = 668, jump @19\n      : @706 [@dyn 334] (gas: 16)\n 18821: a0 = u64 [s1 + 0x40]\n 18824: a1 = s1 + 0x7ff\n 18828: a1 = a1 + 0x39\n 18831: a2 = a1 + 0x100\n 18835: u64 [a2 + 0x20] = a0\n 18838: a0 = u64 [s1 + 0x30]\n 18841: u64 [a2 + 0x18] = a0\n 18844: a0 = u64 [s1 + 0x28]\n 18847: u64 [a2 + 0x10] = a0\n 18850: a3 = a1\n 18852: a0 = 0x24\n 18855: a1 = s1 + 0x7ff\n 18859: a1 = a1 + 0x141\n 18863: a2 = u64 [s1 + 0x38]\n 18866: u64 [a3 + 0x108] = a2\n 18870: ra = 670, jump @19\n      : @707 [@dyn 335] (gas: 3)\n 18876: a0 = u64 [s1 + 0x98]\n 18880: a0 = i32 [a0]\n 18882: jump @709 if a0 >u 95\n      : @708 (gas: 7)\n 18886: a1 = u64 [s1 + 0x98]\n 18890: u32 [a1 + 0] = 0x60\n 18893: a0 = 0x1\n 18896: a2 = 0x44\n 18899: a1 = u64 [s1 + 0xb8]\n 18903: ecalli 7 // 'seal_return'\n 18905: jump @717\n      : @709 (gas: 5)\n 18908: a0 = 0x1\n 18911: a2 = 0x44\n 18914: a1 = u64 [s1 + 0xb8]\n 18918: ecalli 7 // 'seal_return'\n 18920: jump @717\n      : @710 (gas: 12)\n 18923: a0 = s1 + 0x7ff\n 18927: a0 = a0 + 0x39\n 18930: u64 [a0 + 408] = 0\n 18934: u64 [a0 + 400] = 0\n 18938: u64 [a0 + 392] = 0\n 18942: a2 = a0\n 18944: a0 = 0xec442f0500000000\n 18954: a1 = s1 + 0x7ff\n 18958: a1 = a1 + 0x1c1\n 18962: u64 [a2 + 0x1a0] = a0\n 18966: a0 = 0\n 18968: ra = 672, jump @19\n      : @711 [@dyn 336] (gas: 12)\n 18974: a0 = s1 + 0x7ff\n 18978: a0 = a0 + 0x39\n 18981: u64 [a0 + 384] = 0\n 18985: u64 [a0 + 376] = 0\n 18989: u64 [a0 + 368] = 0\n 18993: a2 = a0\n 18995: a0 = 0x4\n 18998: a1 = s1 + 0x7ff\n 19002: a1 = a1 + 0x1a1\n 19006: u64 [a2 + 360] = 0\n 19010: ra = 0x2a4\n 19014: jump @19\n      : @712 (gas: 12)\n 19017: a0 = s1 + 0x7ff\n 19021: a0 = a0 + 0x39\n 19024: u64 [a0 + 472] = 0\n 19028: u64 [a0 + 464] = 0\n 19032: u64 [a0 + 456] = 0\n 19036: a2 = a0\n 19038: a0 = 0x4e487b7100000000\n 19048: a1 = s1 + 0x7ff\n 19052: a1 = a1 + 0x201\n 19056: u64 [a2 + 0x1e0] = a0\n 19060: a0 = 0\n 19062: ra = 674, jump @19\n      : @713 [@dyn 337] (gas: 11)\n 19068: a1 = s1 + 0x7ff\n 19072: a1 = a1 + 0x39\n 19075: u64 [a1 + 448] = 0\n 19079: u64 [a1 + 440] = 0\n 19083: u64 [a1 + 424] = 0x11\n 19088: a2 = a1\n 19090: a0 = 0x4\n 19093: a1 = s1 + 0x7ff\n 19097: a1 = a1 + 0x1e1\n 19101: u64 [a2 + 432] = 0\n 19105: ra = 676, jump @19\n      : @714 [@dyn 338] (gas: 3)\n 19111: a0 = u64 [s1 + 0x98]\n 19115: a0 = i32 [a0]\n 19117: jump @716 if a0 >u 63\n      : @715 (gas: 7)\n 19121: a1 = u64 [s1 + 0x98]\n 19125: u32 [a1 + 0] = 0x40\n 19128: a0 = 0x1\n 19131: a2 = 0x24\n 19134: a1 = u64 [s1 + 0xb8]\n 19138: ecalli 7 // 'seal_return'\n 19140: jump @717\n      : @716 (gas: 5)\n 19142: a0 = 0x1\n 19145: a2 = 0x24\n 19148: a1 = u64 [s1 + 0xb8]\n 19152: ecalli 7 // 'seal_return'\n 19154: fallthrough\n      : @717 (gas: 6)\n 19155: a1 = 0x20270\n 19160: i32 a1 = a1 + 0\n 19162: a0 = 0x1\n 19165: a2 = 0\n 19167: ecalli 7 // 'seal_return'\n 19169: jump @824\n      : @718 (gas: 6)\n 19172: a1 = 0x20270\n 19177: i32 a1 = a1 + 0\n 19179: a0 = 0x1\n 19182: a2 = 0\n 19184: ecalli 7 // 'seal_return'\n 19186: jump @824\n      : @719 (gas: 12)\n 19189: a0 = s1 + 0x7ff\n 19193: a0 = a0 + 0x39\n 19196: u64 [a0 + 1944] = 0\n 19200: u64 [a0 + 1936] = 0\n 19204: u64 [a0 + 1928] = 0\n 19208: a2 = a0\n 19210: a0 = 0x4e487b7100000000\n 19220: a1 = s1 + 0x7ff\n 19224: a1 = a1 + 0x7c1\n 19228: u64 [a2 + 0x7a0] = a0\n 19232: a0 = 0\n 19234: ra = 678, jump @19\n      : @720 [@dyn 339] (gas: 11)\n 19240: a1 = s1 + 0x7ff\n 19244: a1 = a1 + 0x39\n 19247: u64 [a1 + 1920] = 0\n 19251: u64 [a1 + 1912] = 0\n 19255: u64 [a1 + 1896] = 0x22\n 19260: a2 = a1\n 19262: a0 = 0x4\n 19265: a1 = s1 + 0x7ff\n 19269: a1 = a1 + 0x7a1\n 19273: u64 [a2 + 1904] = 0\n 19277: ra = 680, jump @19\n      : @721 [@dyn 340] (gas: 2)\n 19283: a1 = i32 [0x20264]\n 19288: jump @723 if a1 >u 63\n      : @722 (gas: 3)\n 19292: u32 [0x20264] = 0x40\n 19298: a1 = 0x20270\n 19303: jump @775\n      : @723 (gas: 2)\n 19306: a1 = 0x20270\n 19311: jump @775\n      : @724 (gas: 6)\n 19314: a1 = 0x20270\n 19319: i32 a1 = a1 + 0\n 19321: a0 = 0x1\n 19324: a2 = 0\n 19326: ecalli 7 // 'seal_return'\n 19328: jump @824\n      : @725 (gas: 6)\n 19331: a1 = 0x20270\n 19336: i32 a1 = a1 + 0\n 19338: a0 = 0x1\n 19341: a2 = 0\n 19343: ecalli 7 // 'seal_return'\n 19345: jump @824\n      : @726 (gas: 9)\n 19348: u64 [a3 + 120] = 0\n 19351: u64 [a3 + 112] = 0\n 19354: a0 = 0x8dfc202b00000000\n 19364: u64 [a3 + 0x80] = a0\n 19368: a1 = s1 + 0x7ff\n 19372: a1 = a1 + 0xa1\n 19376: u64 [a3 + 104] = 0\n 19379: a0 = 0\n 19381: ra = 682, jump @19\n      : @727 [@dyn 341] (gas: 2)\n 19387: a1 = i32 [0x20264]\n 19392: jump @729 if a1 >u 31\n      : @728 (gas: 3)\n 19396: u32 [0x20264] = 0x20\n 19402: a1 = 0x20270\n 19407: jump @730\n      : @729 (gas: 2)\n 19409: a1 = 0x20270\n 19414: fallthrough\n      : @730 (gas: 5)\n 19415: i32 a1 = a1 + 0\n 19417: a0 = 0x1\n 19420: a2 = 0x4\n 19423: ecalli 7 // 'seal_return'\n 19425: fallthrough\n      : @731 (gas: 6)\n 19426: a1 = 0x20270\n 19431: i32 a1 = a1 + 0\n 19433: a0 = 0x1\n 19436: a2 = 0\n 19438: ecalli 7 // 'seal_return'\n 19440: jump @824\n      : @732 (gas: 6)\n 19443: a1 = 0x20270\n 19448: i32 a1 = a1 + 0\n 19450: a0 = 0x1\n 19453: a2 = 0\n 19455: ecalli 7 // 'seal_return'\n 19457: jump @824\n      : @733 (gas: 1)\n 19460: jump @780 if a0 != 3578229791\n      : @734 (gas: 11)\n 19468: a0 = s1 + 0x1838\n 19472: u64 [a0 + 736] = 0\n 19476: u64 [a0 + 728] = 0\n 19480: u64 [a0 + 720] = 0\n 19484: u64 [a0 + 712] = 0\n 19488: a0 = s1 + 0x2000\n 19492: i32 a0 = a0 + 0xfffffffffffffb00\n 19496: ra = 0x2ac\n 19500: ecalli 10 // 'value_transferred'\n 19502: t0 = 0x2ae\n 19506: jump @1384\n      : @735 [@dyn 342] (gas: 1)\n 19509: t0 = 686, jump @1384\n      : @736 [@dyn 343] (gas: 1)\n 19515: t0 = 688, jump @1416\n      : @737 [@dyn 344] (gas: 1)\n 19521: jump @791 if a0 == 0\n      : @738 (gas: 6)\n 19525: a1 = 0x20270\n 19530: i32 a1 = a1 + 0\n 19532: a0 = 0x1\n 19535: a2 = 0\n 19537: ecalli 7 // 'seal_return'\n 19539: jump @824\n      : @739 (gas: 6)\n 19542: a1 = 0x20270\n 19547: i32 a1 = a1 + 0\n 19549: a0 = 0x1\n 19552: a2 = 0\n 19554: ecalli 7 // 'seal_return'\n 19556: jump @824\n      : @740 (gas: 6)\n 19559: a1 = 0x20270\n 19564: i32 a1 = a1 + 0\n 19566: a0 = 0x1\n 19569: a2 = 0\n 19571: ecalli 7 // 'seal_return'\n 19573: jump @824\n      : @741 (gas: 6)\n 19576: a1 = 0x20270\n 19581: i32 a1 = a1 + 0\n 19583: a0 = 0x1\n 19586: a2 = 0\n 19588: ecalli 7 // 'seal_return'\n 19590: jump @824\n      : @742 (gas: 6)\n 19593: a1 = 0x20270\n 19598: i32 a1 = a1 + 0\n 19600: a0 = 0x1\n 19603: a2 = 0\n 19605: ecalli 7 // 'seal_return'\n 19607: jump @824\n      : @743 (gas: 6)\n 19610: a1 = 0x20270\n 19615: i32 a1 = a1 + 0\n 19617: a0 = 0x1\n 19620: a2 = 0\n 19622: ecalli 7 // 'seal_return'\n 19624: jump @824\n      : @744 (gas: 6)\n 19627: a1 = 0x20270\n 19632: i32 a1 = a1 + 0\n 19634: a0 = 0x1\n 19637: a2 = 0\n 19639: ecalli 7 // 'seal_return'\n 19641: jump @824\n      : @745 (gas: 6)\n 19644: a1 = 0x20270\n 19649: i32 a1 = a1 + 0\n 19651: a0 = 0x1\n 19654: a2 = 0\n 19656: ecalli 7 // 'seal_return'\n 19658: jump @824\n      : @746 (gas: 6)\n 19661: a1 = 0x20270\n 19666: i32 a1 = a1 + 0\n 19668: a0 = 0x1\n 19671: a2 = 0\n 19673: ecalli 7 // 'seal_return'\n 19675: jump @824\n      : @747 (gas: 6)\n 19678: a1 = 0x20270\n 19683: i32 a1 = a1 + 0\n 19685: a0 = 0x1\n 19688: a2 = 0\n 19690: ecalli 7 // 'seal_return'\n 19692: jump @824\n      : @748 (gas: 6)\n 19695: a1 = 0x20270\n 19700: i32 a1 = a1 + 0\n 19702: a0 = 0x1\n 19705: a2 = 0\n 19707: ecalli 7 // 'seal_return'\n 19709: jump @824\n      : @749 (gas: 6)\n 19712: a1 = 0x20270\n 19717: i32 a1 = a1 + 0\n 19719: a0 = 0x1\n 19722: a2 = 0\n 19724: ecalli 7 // 'seal_return'\n 19726: jump @824\n      : @750 (gas: 6)\n 19729: a1 = 0x20270\n 19734: i32 a1 = a1 + 0\n 19736: a0 = 0x1\n 19739: a2 = 0\n 19741: ecalli 7 // 'seal_return'\n 19743: jump @824\n      : @751 (gas: 6)\n 19746: a1 = 0x20270\n 19751: i32 a1 = a1 + 0\n 19753: a0 = 0x1\n 19756: a2 = 0\n 19758: ecalli 7 // 'seal_return'\n 19760: jump @824\n      : @752 (gas: 6)\n 19763: a1 = 0x20270\n 19768: i32 a1 = a1 + 0\n 19770: a0 = 0x1\n 19773: a2 = 0\n 19775: ecalli 7 // 'seal_return'\n 19777: jump @824\n      : @753 (gas: 8)\n 19780: u64 [s1 + 752] = 0\n 19784: u64 [s1 + 744] = 0\n 19788: u64 [s1 + 736] = 0\n 19792: a0 = 0xe602df0500000000\n 19802: a1 = s1 + 0x2e0\n 19806: u64 [s1 + 0x2f8] = a0\n 19810: a0 = 0\n 19812: ra = 690, jump @19\n      : @754 [@dyn 345] (gas: 7)\n 19818: u64 [s1 + 728] = 0\n 19822: u64 [s1 + 720] = 0\n 19826: u64 [s1 + 712] = 0\n 19830: a0 = 0x4\n 19833: a1 = s1 + 0x2c0\n 19837: u64 [s1 + 704] = 0\n 19841: ra = 692, jump @19\n      : @755 [@dyn 346] (gas: 2)\n 19847: a1 = i32 [0x20264]\n 19852: jump @757 if a1 >u 63\n      : @756 (gas: 3)\n 19856: u32 [0x20264] = 0x40\n 19862: a1 = 0x20270\n 19867: jump @775\n      : @757 (gas: 2)\n 19870: a1 = 0x20270\n 19875: jump @775\n      : @758 (gas: 8)\n 19878: u64 [s1 + 816] = 0\n 19882: u64 [s1 + 808] = 0\n 19886: u64 [s1 + 800] = 0\n 19890: a0 = 0x94280d6200000000\n 19900: a1 = s1 + 0x320\n 19904: u64 [s1 + 0x338] = a0\n 19908: a0 = 0\n 19910: ra = 694, jump @19\n      : @759 [@dyn 347] (gas: 7)\n 19916: u64 [s1 + 792] = 0\n 19920: u64 [s1 + 784] = 0\n 19924: u64 [s1 + 776] = 0\n 19928: a0 = 0x4\n 19931: a1 = s1 + 0x300\n 19935: u64 [s1 + 768] = 0\n 19939: ra = 696, jump @19\n      : @760 [@dyn 348] (gas: 2)\n 19945: a1 = i32 [0x20264]\n 19950: jump @762 if a1 >u 63\n      : @761 (gas: 3)\n 19954: u32 [0x20264] = 0x40\n 19960: a1 = 0x20270\n 19965: jump @775\n      : @762 (gas: 2)\n 19968: a1 = 0x20270\n 19973: jump @775\n      : @763 (gas: 6)\n 19976: u64 [s1 + 336] = 0\n 19980: u64 [s1 + 328] = 0\n 19984: u64 [s1 + 320] = 0\n 19988: t0 = 0x2ba\n 19992: a0 = 0x4e487b7100000000\n 20002: fallthrough\n      : @764 [@dyn 349] (gas: 4)\n 20003: a1 = s1 + 0x140\n 20007: u64 [s1 + 0x158] = a0\n 20011: a0 = 0\n 20013: ra = 700, jump @19\n      : @765 [@dyn 350] (gas: 7)\n 20019: u64 [s1 + 312] = 0\n 20023: u64 [s1 + 304] = 0\n 20027: u64 [s1 + 288] = 0x41\n 20032: a0 = 0x4\n 20035: a1 = s1 + 0x120\n 20039: u64 [s1 + 296] = 0\n 20043: ra = 702, jump @19\n      : @766 [@dyn 351] (gas: 2)\n 20049: a1 = i32 [0x20264]\n 20054: jump @768 if a1 >u 63\n      : @767 (gas: 3)\n 20058: u32 [0x20264] = 0x40\n 20064: a1 = 0x20270\n 20069: jump @775\n      : @768 (gas: 2)\n 20072: a1 = 0x20270\n 20077: jump @775\n      : @769 (gas: 9)\n 20079: a0 = s1 + 0x7ff\n 20083: a0 = a0 + 0x39\n 20086: u64 [a0 + 2008] = 0\n 20090: u64 [a0 + 2000] = 0\n 20094: u64 [a0 + 1992] = 0\n 20098: a2 = a0\n 20100: t0 = 0x2c0\n 20104: a0 = 0x4e487b7100000000\n 20114: fallthrough\n      : @770 [@dyn 352] (gas: 4)\n 20115: a1 = s1 + 0x1000\n 20119: u64 [a2 + 0x7e0] = a0\n 20123: a0 = 0\n 20125: ra = 706, jump @19\n      : @771 [@dyn 353] (gas: 11)\n 20131: a1 = s1 + 0x7ff\n 20135: a1 = a1 + 0x39\n 20138: u64 [a1 + 1984] = 0\n 20142: u64 [a1 + 1976] = 0\n 20146: u64 [a1 + 1960] = 0x41\n 20151: a2 = a1\n 20153: a0 = 0x4\n 20156: a1 = s1 + 0x7ff\n 20160: a1 = a1 + 0x7e1\n 20164: u64 [a2 + 1968] = 0\n 20168: ra = 708, jump @19\n      : @772 [@dyn 354] (gas: 2)\n 20174: a1 = i32 [0x20264]\n 20179: jump @774 if a1 >u 63\n      : @773 (gas: 3)\n 20183: u32 [0x20264] = 0x40\n 20189: a1 = 0x20270\n 20194: jump @775\n      : @774 (gas: 2)\n 20196: a1 = 0x20270\n 20201: fallthrough\n      : @775 (gas: 5)\n 20202: i32 a1 = a1 + 0\n 20204: a0 = 0x1\n 20207: a2 = 0x24\n 20210: ecalli 7 // 'seal_return'\n 20212: fallthrough\n      : @776 (gas: 7)\n 20213: u64 [s1 + 856] = 0\n 20217: u64 [s1 + 848] = 0\n 20221: u64 [s1 + 840] = 0\n 20225: a1 = s1 + 0x340\n 20229: u64 [s1 + 832] = 0x1\n 20234: u64 [s1 + 0xb8] = a0\n 20238: ra = 710, jump @19\n      : @777 [@dyn 355] (gas: 3)\n 20244: a1 = 0x20\n 20247: a0 = u64 [s1 + 0xb8]\n 20251: ra = 712, jump @33\n      : @778 [@dyn 356] (gas: 6)\n 20257: i32 a1 = a0 + 0\n 20259: a2 = 0x20\n 20262: a0 = 0\n 20264: ra = 0x2ca\n 20268: ecalli 7 // 'seal_return'\n 20270: jump @780\n      : @779 (gas: 5)\n 20272: a2 = 0x20\n 20275: a0 = 0\n 20277: ra = 0x2ca\n 20281: ecalli 7 // 'seal_return'\n 20283: fallthrough\n      : @780 [@dyn 357] (gas: 1)\n 20284: jump @786 if a0 != 33540519\n      : @781 (gas: 11)\n 20291: a0 = s1 + 0x1038\n 20295: u64 [a0 + 1312] = 0\n 20299: u64 [a0 + 1304] = 0\n 20303: u64 [a0 + 1296] = 0\n 20307: u64 [a0 + 1288] = 0\n 20311: a0 = s1 + 0x1000\n 20315: i32 a0 = a0 + 0x540\n 20319: ra = 0x2cc\n 20323: ecalli 10 // 'value_transferred'\n 20325: t0 = 0x2ce\n 20329: jump @1422\n      : @782 [@dyn 358] (gas: 1)\n 20332: t0 = 718, jump @1422\n      : @783 [@dyn 359] (gas: 1)\n 20338: t0 = 720, jump @1385\n      : @784 [@dyn 360] (gas: 1)\n 20344: jump @798 if a0 == 0\n      : @785 (gas: 6)\n 20348: a1 = 0x20270\n 20353: i32 a1 = a1 + 0\n 20355: a0 = 0x1\n 20358: a2 = 0\n 20360: ecalli 7 // 'seal_return'\n 20362: jump @824\n      : @786 (gas: 1)\n 20365: jump @793 if a0 != 791671133\n      : @787 (gas: 11)\n 20373: a0 = s1 + 0x1038\n 20377: u64 [a0 + 1696] = 0\n 20381: u64 [a0 + 1688] = 0\n 20385: u64 [a0 + 1680] = 0\n 20389: u64 [a0 + 1672] = 0\n 20393: a0 = s1 + 0x1000\n 20397: i32 a0 = a0 + 0x6c0\n 20401: ra = 0x2d2\n 20405: ecalli 10 // 'value_transferred'\n 20407: t0 = 0x2d4\n 20411: jump @1378\n      : @788 [@dyn 361] (gas: 1)\n 20414: t0 = 724, jump @1378\n      : @789 [@dyn 362] (gas: 8)\n 20420: a0 = u64 [a4 + 0x98]\n 20424: a1 = u64 [a4 + 0xa0]\n 20428: a2 = u64 [a4 + 0x90]\n 20432: a3 = u64 [a4 + 0x88]\n 20436: a1 = a1 | a2\n 20439: a0 = a0 | a3\n 20442: a0 = a0 | a1\n 20445: jump @809 if a0 == 0\n      : @790 (gas: 6)\n 20449: a1 = 0x20270\n 20454: i32 a1 = a1 + 0\n 20456: a0 = 0x1\n 20459: a2 = 0\n 20461: ecalli 7 // 'seal_return'\n 20463: jump @824\n      : @791 (gas: 3)\n 20466: a0 = u64 [s1 + 0xb8]\n 20470: a0 = i32 [a0]\n 20472: jump @800 if a0 >u 67\n      : @792 (gas: 6)\n 20477: a1 = 0x20270\n 20482: i32 a1 = a1 + 0\n 20484: a0 = 0x1\n 20487: a2 = 0\n 20489: ecalli 7 // 'seal_return'\n 20491: jump @824\n      : @793 (gas: 1)\n 20494: jump @805 if a0 != 911641278\n      : @794 (gas: 11)\n 20502: a0 = s1 + 0x1038\n 20506: u64 [a0 + 1792] = 0\n 20510: u64 [a0 + 1784] = 0\n 20514: u64 [a0 + 1776] = 0\n 20518: u64 [a0 + 1768] = 0\n 20522: a0 = s1 + 0x1000\n 20526: i32 a0 = a0 + 0x720\n 20530: ra = 0x2d6\n 20534: ecalli 10 // 'value_transferred'\n 20536: t0 = 0x2d8\n 20540: jump @1378\n      : @795 [@dyn 363] (gas: 1)\n 20543: t0 = 728, jump @1378\n      : @796 [@dyn 364] (gas: 8)\n 20549: a0 = u64 [a4 + 0xf8]\n 20553: a1 = u64 [a3 + 0x700]\n 20557: a2 = u64 [a4 + 0xf0]\n 20561: a3 = u64 [a4 + 0xe8]\n 20565: a1 = a1 | a2\n 20568: a0 = a0 | a3\n 20571: a0 = a0 | a1\n 20574: jump @814 if a0 == 0\n      : @797 (gas: 6)\n 20578: a1 = 0x20270\n 20583: i32 a1 = a1 + 0\n 20585: a0 = 0x1\n 20588: a2 = 0\n 20590: ecalli 7 // 'seal_return'\n 20592: jump @824\n      : @798 (gas: 3)\n 20595: a0 = u64 [s1 + 0xb8]\n 20599: a0 = i32 [a0]\n 20601: jump @811 if a0 >u 35\n      : @799 (gas: 6)\n 20606: a1 = 0x20270\n 20611: i32 a1 = a1 + 0\n 20613: a0 = 0x1\n 20616: a2 = 0\n 20618: ecalli 7 // 'seal_return'\n 20620: jump @824\n      : @800 (gas: 18)\n 20623: a0 = s1 + 0x2000\n 20627: i32 a0 = a0 + 0xfffffffffffffb20\n 20631: a1 = 0x4\n 20634: ecalli 1 // 'call_data_load'\n 20636: a0 = s1 + 0x1838\n 20640: a2 = a0 + 0x200\n 20644: a1 = u64 [a2 + 0xe8]\n 20648: u64 [s1 + 0xb8] = a1\n 20652: a1 = u64 [a2 + 0xf0]\n 20656: u64 [s1 + 0xb0] = a1\n 20660: a1 = u64 [a2 + 0xf8]\n 20664: u64 [s1 + 0xa8] = a1\n 20668: a0 = u64 [a0 + 0x300]\n 20672: u64 [s1 + 0xa0] = a0\n 20676: a0 = s1 + 0x1380\n 20680: ra = 0x2da\n 20684: t0 = 0x402\n 20688: jump @1417\n      : @801 [@dyn 365] (gas: 22)\n 20691: a1 = s1 + 0x1038\n 20695: a2 = a1 + 0x300\n 20699: a0 = u64 [a2 + 0x48]\n 20702: u64 [s1 + 0x98] = a0\n 20706: a0 = u64 [a2 + 0x50]\n 20709: u64 [s1 + 0x90] = a0\n 20713: a0 = u64 [a2 + 0x58]\n 20716: u64 [s1 + 0x88] = a0\n 20720: a0 = u64 [a2 + 0x60]\n 20723: u64 [s1 + 0x80] = a0\n 20727: a0 = u64 [s1 + 0xa0]\n 20731: u64 [a2 + 0x20] = a0\n 20734: a0 = u64 [s1 + 0xa8]\n 20738: u64 [a2 + 0x18] = a0\n 20741: a0 = u64 [s1 + 0xb0]\n 20745: u64 [a2 + 0x10] = a0\n 20748: a3 = a1\n 20750: a0 = s1 + 0x1360\n 20754: a1 = s1 + 0x1340\n 20758: a2 = u64 [s1 + 0xb8]\n 20762: u64 [a3 + 0x308] = a2\n 20766: ra = 732, jump @1050\n      : @802 [@dyn 366] (gas: 13)\n 20772: a4 = s1 + 0x1038\n 20776: a5 = a4 + 0x300\n 20780: a1 = u64 [a5 + 0x28]\n 20783: a0 = u64 [a5 + 0x30]\n 20786: a2 = u64 [a5 + 0x38]\n 20789: a3 = u64 [a5 + 0x40]\n 20792: u64 [a5] = a3\n 20794: a3 = a4 + 0x200\n 20798: u64 [a3 + 0xf8] = a2\n 20802: u64 [a3 + 0xf0] = a0\n 20806: a0 = s1 + 0x1320\n 20810: u64 [a3 + 0xe8] = a1\n 20814: ra = 734, jump @1186\n      : @803 [@dyn 367] (gas: 25)\n 20820: a0 = s1 + 0x1038\n 20824: a1 = u64 [s1 + 0x80]\n 20828: a2 = a0 + 0x200\n 20832: u64 [a2 + 0xa0] = a1\n 20836: a1 = u64 [s1 + 0x88]\n 20840: u64 [a2 + 0x98] = a1\n 20844: a1 = u64 [s1 + 0x90]\n 20848: u64 [a2 + 0x90] = a1\n 20852: a1 = u64 [s1 + 0x98]\n 20856: u64 [a2 + 0x88] = a1\n 20860: a1 = u64 [s1 + 0xa0]\n 20864: u64 [a2 + 0xc0] = a1\n 20868: a1 = u64 [s1 + 0xa8]\n 20872: u64 [a2 + 0xb8] = a1\n 20876: a1 = u64 [s1 + 0xb0]\n 20880: u64 [a2 + 0xb0] = a1\n 20884: a4 = a0\n 20886: a0 = s1 + 0x1300\n 20890: a1 = s1 + 0x12e0\n 20894: a2 = s1 + 0x12c0\n 20898: a3 = u64 [s1 + 0xb8]\n 20902: u64 [a4 + 0x2a8] = a3\n 20906: ra = 0x2e0\n 20910: t0 = 0x520\n 20914: jump @1402\n      : @804 [@dyn 368] (gas: 2)\n 20917: a1 = 0x20270\n 20922: jump @575\n      : @805 (gas: 1)\n 20925: jump @816 if a0 != 1117154408\n      : @806 (gas: 9)\n 20933: a0 = s1 + 0x1838\n 20937: u64 [a0 + 96] = 0\n 20940: u64 [a0 + 88] = 0\n 20943: u64 [a0 + 80] = 0\n 20946: u64 [a0 + 72] = 0\n 20949: a0 = s1 + 0x2000\n 20953: i32 a0 = a0 + 0xfffffffffffff880\n 20957: ecalli 10 // 'value_transferred'\n 20959: fallthrough\n      : @807 (gas: 9)\n 20960: a3 = s1 + 0x1838\n 20964: a0 = u64 [a3 + 0x58]\n 20967: a1 = u64 [a3 + 0x60]\n 20970: a2 = u64 [a3 + 0x50]\n 20973: a3 = u64 [a3 + 0x48]\n 20976: a1 = a1 | a2\n 20979: a0 = a0 | a3\n 20982: a0 = a0 | a1\n 20985: jump @824 if a0 == 0\n      : @808 (gas: 6)\n 20989: a1 = 0x20270\n 20994: i32 a1 = a1 + 0\n 20996: a0 = 0x1\n 20999: a2 = 0\n 21001: ecalli 7 // 'seal_return'\n 21003: jump @824\n      : @809 (gas: 3)\n 21006: a0 = u64 [s1 + 0xb8]\n 21010: a0 = i32 [a0]\n 21012: jump @826 if a0 >u 67\n      : @810 (gas: 6)\n 21017: a1 = 0x20270\n 21022: i32 a1 = a1 + 0\n 21024: a0 = 0x1\n 21027: a2 = 0\n 21029: ecalli 7 // 'seal_return'\n 21031: jump @824\n      : @811 (gas: 7)\n 21034: a0 = s1 + 0x1000\n 21038: i32 a0 = a0 + 0x560\n 21042: a1 = 0x4\n 21045: ecalli 1 // 'call_data_load'\n 21047: t0 = 0x2e2\n 21051: a1 = s1 + 0x1038\n 21055: fallthrough\n      : @812 [@dyn 369] (gas: 11)\n 21056: a4 = a1 + 0x500\n 21060: a0 = u64 [a4 + 0x40]\n 21063: a2 = u64 [a4 + 0x38]\n 21066: a3 = u64 [a4 + 0x28]\n 21069: a1 = u64 [a4 + 0x30]\n 21072: a4 = a0 << 0x20\n 21075: a4 = a4 >> 0x20\n 21078: a2 = a2 | a3\n 21081: a4 = a4 | a1\n 21084: a4 = a4 | a2\n 21087: jump @831 if a4 == 0\n      : @813 (gas: 6)\n 21091: a1 = 0x20270\n 21096: i32 a1 = a1 + 0\n 21098: a0 = 0x1\n 21101: a2 = 0\n 21103: ecalli 7 // 'seal_return'\n 21105: jump @824\n      : @814 (gas: 4)\n 21108: a0 = u64 [s1 + 0xb8]\n 21112: a0 = i32 [a0]\n 21114: a1 = 0x43\n 21117: jump @835 if a1 <u a0\n      : @815 (gas: 6)\n 21121: a1 = 0x20270\n 21126: i32 a1 = a1 + 0\n 21128: a0 = 0x1\n 21131: a2 = 0\n 21133: ecalli 7 // 'seal_return'\n 21135: jump @824\n      : @816 (gas: 1)\n 21137: jump @822 if a0 != 2043438992\n      : @817 (gas: 11)\n 21144: a0 = s1 + 0x1838\n 21148: u64 [a0 + 288] = 0\n 21152: u64 [a0 + 280] = 0\n 21156: u64 [a0 + 272] = 0\n 21160: u64 [a0 + 264] = 0\n 21164: a0 = s1 + 0x2000\n 21168: i32 a0 = a0 + 0xfffffffffffff940\n 21172: ra = 0x2e4\n 21176: ecalli 10 // 'value_transferred'\n 21178: t0 = 0x2e6\n 21182: jump @1397\n      : @818 [@dyn 370] (gas: 1)\n 21185: t0 = 742, jump @1397\n      : @819 [@dyn 371] (gas: 1)\n 21191: t0 = 744, jump @1385\n      : @820 [@dyn 372] (gas: 1)\n 21197: jump @840 if a0 == 0\n      : @821 (gas: 6)\n 21201: a1 = 0x20270\n 21206: i32 a1 = a1 + 0\n 21208: a0 = 0x1\n 21211: a2 = 0\n 21213: ecalli 7 // 'seal_return'\n 21215: jump @824\n      : @822 (gas: 6)\n 21217: a1 = 0x20270\n 21222: i32 a1 = a1 + 0\n 21224: a0 = 0x1\n 21227: a2 = 0\n 21229: ecalli 7 // 'seal_return'\n 21231: jump @824\n      : @823 (gas: 5)\n 21233: i32 a1 = a1 + 0\n 21235: a0 = 0x1\n 21238: a2 = 0\n 21240: ecalli 7 // 'seal_return'\n 21242: fallthrough\n      : @824 (gas: 3)\n 21243: a0 = u64 [s1 + 0xb8]\n 21247: a0 = i32 [a0]\n 21249: jump @842 if a0 >u 35\n      : @825 (gas: 2)\n 21254: a1 = 0x20270\n 21259: jump @823\n      : @826 (gas: 18)\n 21261: a0 = s1 + 0x1000\n 21265: i32 a0 = a0 + 0x6e0\n 21269: a1 = 0x4\n 21272: ecalli 1 // 'call_data_load'\n 21274: a0 = s1 + 0x1038\n 21278: a2 = a0 + 0x600\n 21282: a1 = u64 [a2 + 0xa8]\n 21286: u64 [s1 + 0xb8] = a1\n 21290: a1 = u64 [a2 + 0xb0]\n 21294: u64 [s1 + 0xb0] = a1\n 21298: a1 = u64 [a2 + 0xb8]\n 21302: u64 [s1 + 0xa8] = a1\n 21306: a0 = u64 [a2 + 0xc0]\n 21310: u64 [s1 + 0xa0] = a0\n 21314: a0 = s1 + 0x7a0\n 21318: ra = 0x2ea\n 21322: t0 = 0x402\n 21326: jump @1417\n      : @827 [@dyn 373] (gas: 19)\n 21329: a0 = u64 [s1 + 0x7a0]\n 21333: u64 [s1 + 0x98] = a0\n 21337: a0 = u64 [s1 + 0x7a8]\n 21341: u64 [s1 + 0x90] = a0\n 21345: a0 = u64 [s1 + 0x7b0]\n 21349: u64 [s1 + 0x88] = a0\n 21353: a0 = u64 [s1 + 0x7b8]\n 21357: u64 [s1 + 0x80] = a0\n 21361: a0 = u64 [s1 + 0xa0]\n 21365: u64 [s1 + 0x778] = a0\n 21369: a0 = u64 [s1 + 0xa8]\n 21373: u64 [s1 + 0x770] = a0\n 21377: a0 = u64 [s1 + 0xb0]\n 21381: u64 [s1 + 0x768] = a0\n 21385: a0 = s1 + 0x780\n 21389: a1 = s1 + 0x760\n 21393: a2 = u64 [s1 + 0xb8]\n 21397: u64 [s1 + 0x760] = a2\n 21401: ra = 748, jump @1050\n      : @828 [@dyn 374] (gas: 10)\n 21407: a1 = u64 [s1 + 0x780]\n 21411: a0 = u64 [s1 + 0x788]\n 21415: a2 = u64 [s1 + 0x790]\n 21419: a3 = u64 [s1 + 0x798]\n 21423: u64 [s1 + 0x758] = a3\n 21427: u64 [s1 + 0x750] = a2\n 21431: u64 [s1 + 0x748] = a0\n 21435: a0 = s1 + 0x740\n 21439: u64 [s1 + 0x740] = a1\n 21443: ra = 750, jump @1186\n      : @829 [@dyn 375] (gas: 24)\n 21449: a0 = u64 [s1 + 0x80]\n 21453: a1 = s1 + 0x600\n 21457: u64 [a1 + 0xf8] = a0\n 21461: a0 = u64 [s1 + 0x88]\n 21465: u64 [a1 + 0xf0] = a0\n 21469: a0 = u64 [s1 + 0x90]\n 21473: u64 [a1 + 0xe8] = a0\n 21477: a0 = u64 [s1 + 0x98]\n 21481: u64 [a1 + 0xe0] = a0\n 21485: a0 = u64 [s1 + 0xa0]\n 21489: a4 = s1 + 0x700\n 21493: u64 [a4 + 0x18] = a0\n 21496: a0 = u64 [s1 + 0xa8]\n 21500: u64 [a4 + 0x10] = a0\n 21503: a0 = u64 [s1 + 0xb0]\n 21507: u64 [a4 + 0x8] = a0\n 21510: a0 = s1 + 0x720\n 21514: a1 = s1 + 0x700\n 21518: a2 = s1 + 0x6e0\n 21522: a3 = u64 [s1 + 0xb8]\n 21526: u64 [a4] = a3\n 21528: ra = 0x2f0\n 21532: t0 = 0x4de\n 21536: jump @1402\n      : @830 [@dyn 376] (gas: 2)\n 21539: a1 = 0x20270\n 21544: jump @575\n      : @831 (gas: 18)\n 21547: a3 = 0x7965db0b00000000\n 21557: a3 = a3 ^ a0\n 21560: a3 = a3 | a1\n 21563: a3 = a3 | a2\n 21566: a3 = a3 <u 0x1\n 21569: a4 = 0x1ffc9a700000000\n 21579: a0 = a0 ^ a4\n 21582: a0 = a0 | a1\n 21585: a0 = a0 | a2\n 21588: a0 = a0 <u 0x1\n 21591: a0 = a0 | a3\n 21594: u64 [s1 + 216] = 0\n 21598: u64 [s1 + 208] = 0\n 21602: u64 [s1 + 0xc0] = a0\n 21606: a0 = 0x80\n 21610: a1 = s1 + 0xc0\n 21614: u64 [s1 + 200] = 0\n 21618: ra = 754, jump @19\n      : @832 [@dyn 377] (gas: 2)\n 21624: a1 = i32 [0x20264]\n 21629: jump @834 if a1 >u 159\n      : @833 (gas: 4)\n 21634: u32 [0x20264] = 0xa0\n 21641: a0 = 0x20270\n 21646: i32 a1 = a0 + 0x80\n 21650: jump @779\n      : @834 (gas: 3)\n 21653: a0 = 0x20270\n 21658: i32 a1 = a0 + 0x80\n 21662: jump @779\n      : @835 (gas: 5)\n 21665: a0 = s1 + 0x7ff\n 21669: a0 = a0 + 0x81\n 21673: ra = 0x2f4\n 21677: t0 = 0x402\n 21681: jump @1417\n      : @836 [@dyn 378] (gas: 15)\n 21684: a0 = s1 + 0x7ff\n 21688: a0 = a0 + 0x39\n 21691: a1 = u64 [a0 + 0x60]\n 21694: u64 [s1 + 0xa0] = a1\n 21698: a1 = u64 [a0 + 0x58]\n 21701: u64 [s1 + 0xa8] = a1\n 21705: a1 = u64 [a0 + 0x50]\n 21708: u64 [s1 + 0xb0] = a1\n 21712: a0 = u64 [a0 + 0x48]\n 21715: u64 [s1 + 0xb8] = a0\n 21719: a0 = 0x30270\n 21724: u64 [s1 + 0x98] = a0\n 21728: i32 a0 = a0 + 0\n 21730: ecalli 3 // 'caller'\n 21732: fallthrough\n      : @837 (gas: 25)\n 21733: a2 = u64 [s1 + 0x98]\n 21737: a0 = u64 [a2 + 0x8]\n 21740: a1 = u64 [a2]\n 21742: a2 = i32 [a2 + 0x10]\n 21745: a0 = reverse a0\n 21747: a3 = a0 >> 0x20\n 21750: a1 = reverse a1\n 21752: a4 = a1 << 0x20\n 21755: a3 = a3 | a4\n 21758: a0 = a0 << 0x20\n 21761: a2 = reverse a2\n 21763: a2 = a2 >> 0x20\n 21766: a0 = a0 | a2\n 21769: a1 = a1 >> 0x20\n 21772: a2 = u64 [s1 + 0xa8]\n 21776: a2 = a2 << 0x20\n 21779: a2 = a2 >> 0x20\n 21782: a1 = a1 ^ a2\n 21785: a2 = u64 [s1 + 0xb8]\n 21789: a0 = a0 ^ a2\n 21792: a0 = a0 | a1\n 21795: a1 = u64 [s1 + 0xb0]\n 21799: a1 = a1 ^ a3\n 21802: a0 = a0 | a1\n 21805: jump @846 if a0 != 0\n      : @838 (gas: 39)\n 21809: a0 = s1 + 0x1000\n 21813: i32 a0 = a0 + 0x740\n 21817: a1 = 0x4\n 21820: ecalli 1 // 'call_data_load'\n 21822: a2 = s1 + 0x1038\n 21826: a4 = a2 + 0x700\n 21830: a3 = u64 [a4 + 0x8]\n 21833: a0 = u64 [a4 + 0x10]\n 21836: a1 = u64 [a4 + 0x18]\n 21839: a2 = u64 [a4 + 0x20]\n 21842: a4 = u64 [s1 + 0xa0]\n 21846: a5 = s1 + 0x1000\n 21850: u64 [a5 + 0xfffffffffffff818] = a4\n 21854: a4 = u64 [s1 + 0xa8]\n 21858: a5 = s1 + 0x1000\n 21862: u64 [a5 + 0xfffffffffffff810] = a4\n 21866: a4 = u64 [s1 + 0xb0]\n 21870: a5 = s1 + 0x1000\n 21874: u64 [a5 + 0xfffffffffffff808] = a4\n 21878: a4 = u64 [s1 + 0xb8]\n 21882: a5 = s1 + 0x1000\n 21886: u64 [a5 + 0xfffffffffffff800] = a4\n 21890: a4 = s1 + 0x7ff\n 21894: a4 = a4 + 0x39\n 21897: u64 [a4] = a2\n 21899: u64 [a4 + 0xfffffffffffffff8] = a1\n 21902: a1 = s1 + 0x1000\n 21906: u64 [a1 + 0xfffffffffffff828] = a0\n 21910: a0 = s1 + 0x7ff\n 21914: a0 = a0 + 0x41\n 21917: a1 = s1 + 0x7ff\n 21921: a1 = a1 + 0x21\n 21924: a2 = s1 + 0x7ff\n 21928: a2 = a2 + 0x1\n 21931: a4 = s1 + 0x1000\n 21935: u64 [a4 + 0xfffffffffffff820] = a3\n 21939: ra = 0x2f6\n 21943: t0 = 0x520\n 21947: jump @1402\n      : @839 [@dyn 379] (gas: 2)\n 21950: a1 = 0x20270\n 21955: jump @575\n      : @840 (gas: 4)\n 21958: a0 = u64 [s1 + 0xb8]\n 21962: a0 = i32 [a0]\n 21964: a1 = 0x43\n 21967: jump @850 if a1 <u a0\n      : @841 (gas: 2)\n 21971: a1 = 0x20270\n 21976: jump @823\n      : @842 (gas: 21)\n 21979: a0 = s1 + 0x2000\n 21983: i32 a0 = a0 + 0xfffffffffffff8a0\n 21987: a1 = 0x4\n 21990: ecalli 1 // 'call_data_load'\n 21992: a0 = s1 + 0x1838\n 21996: a1 = u64 [a0 + 0x68]\n 21999: u64 [s1 + 0xb8] = a1\n 22003: a1 = u64 [a0 + 0x70]\n 22006: u64 [s1 + 0xb0] = a1\n 22010: a1 = u64 [a0 + 0x78]\n 22013: u64 [s1 + 0xa8] = a1\n 22017: a0 = u64 [a0 + 0x80]\n 22021: u64 [s1 + 0xa0] = a0\n 22025: a0 = 0x30270\n 22030: u64 [s1 + 0x98] = a0\n 22034: i32 a0 = a0 + 0\n 22036: ra = 0x2f8\n 22040: ecalli 3 // 'caller'\n 22042: a2 = u64 [s1 + 0x98]\n 22046: t0 = 0x2fa\n 22050: jump @1347\n      : @843 [@dyn 380] (gas: 2)\n 22053: a2 = u64 [s1 + 0x98]\n 22057: t0 = 762, jump @1347\n      : @844 [@dyn 381] (gas: 18)\n 22063: a4 = u64 [s1 + 0xa0]\n 22067: a5 = a2 + 0x300\n 22071: u64 [a5 + 0xe0] = a4\n 22075: a4 = u64 [s1 + 0xa8]\n 22079: u64 [a5 + 0xd8] = a4\n 22083: a4 = u64 [s1 + 0xb0]\n 22087: u64 [a5 + 0xd0] = a4\n 22091: a4 = u64 [s1 + 0xb8]\n 22095: u64 [a5 + 0xc8] = a4\n 22099: u64 [a2 + 1024] = 0\n 22103: u64 [a5 + 0xf8] = a1\n 22107: u64 [a5 + 0xf0] = a0\n 22111: a0 = s1 + 0x7ff\n 22115: a0 = a0 + 0x421\n 22119: a1 = s1 + 0x7ff\n 22123: a1 = a1 + 0x401\n 22127: u64 [a5 + 0xe8] = a3\n 22131: ra = 764, jump @1299\n      : @845 [@dyn 382] (gas: 2)\n 22137: a1 = 0x20270\n 22142: jump @575\n      : @846 (gas: 11)\n 22145: a2 = s1 + 0x7ff\n 22149: a2 = a2 + 0x39\n 22152: u64 [a2 + 56] = 0\n 22155: u64 [a2 + 48] = 0\n 22158: a0 = 0x6697b23200000000\n 22168: u64 [a2 + 0x40] = a0\n 22171: a1 = s1 + 0x7ff\n 22175: a1 = a1 + 0x61\n 22178: u64 [a2 + 40] = 0\n 22181: a0 = 0\n 22183: ra = 766, jump @19\n      : @847 [@dyn 383] (gas: 2)\n 22189: a1 = i32 [0x20264]\n 22194: jump @849 if a1 >u 31\n      : @848 (gas: 3)\n 22198: u32 [0x20264] = 0x20\n 22204: a1 = 0x20270\n 22209: jump @730\n      : @849 (gas: 2)\n 22212: a1 = 0x20270\n 22217: jump @730\n      : @850 (gas: 5)\n 22220: a0 = s1 + 0x7ff\n 22224: a0 = a0 + 0x601\n 22228: ra = 0x300\n 22232: t0 = 0x3f8\n 22236: jump @1417\n      : @851 [@dyn 384] (gas: 32)\n 22239: a1 = s1 + 0x7ff\n 22243: a1 = a1 + 0x39\n 22246: a2 = a1 + 0x500\n 22250: a0 = u64 [a2 + 0xc8]\n 22254: u64 [s1 + 0xb8] = a0\n 22258: a0 = u64 [a2 + 0xd0]\n 22262: u64 [s1 + 0xb0] = a0\n 22266: a0 = u64 [a2 + 0xd8]\n 22270: u64 [s1 + 0xa8] = a0\n 22274: a0 = u64 [a2 + 0xe0]\n 22278: u64 [s1 + 0xa0] = a0\n 22282: a0 = s1 + 0x2000\n 22286: i32 a0 = a0 + 0xfffffffffffff960\n 22290: a1 = 0x24\n 22293: ecalli 1 // 'call_data_load'\n 22295: a0 = s1 + 0x1838\n 22299: a2 = a0 + 0x100\n 22303: a1 = u64 [a2 + 0x28]\n 22306: u64 [s1 + 0x98] = a1\n 22310: a1 = u64 [a2 + 0x30]\n 22313: u64 [s1 + 0x90] = a1\n 22317: a1 = u64 [a2 + 0x38]\n 22320: u64 [s1 + 0x88] = a1\n 22324: a0 = u64 [a2 + 0x40]\n 22327: u64 [s1 + 0x80] = a0\n 22331: a0 = 0x30270\n 22336: u64 [s1 + 0x78] = a0\n 22339: i32 a0 = a0 + 0\n 22341: ra = 0x302\n 22345: ecalli 3 // 'caller'\n 22347: t0 = 0x304\n 22351: jump @1379\n      : @852 [@dyn 385] (gas: 1)\n 22354: t0 = 772, jump @1379\n      : @853 [@dyn 386] (gas: 31)\n 22360: a3 = s1 + 0x7ff\n 22364: a3 = a3 + 0x39\n 22367: a4 = u64 [s1 + 0x80]\n 22371: a5 = a3 + 0x500\n 22375: u64 [a5 + 0x80] = a4\n 22379: a4 = u64 [s1 + 0x88]\n 22383: u64 [a5 + 0x78] = a4\n 22386: a4 = u64 [s1 + 0x90]\n 22390: u64 [a5 + 0x70] = a4\n 22393: a4 = u64 [s1 + 0x98]\n 22397: u64 [a5 + 0x68] = a4\n 22400: u64 [a3 + 1440] = 0\n 22404: a4 = u64 [s1 + 0xa0]\n 22408: u64 [a5 + 0xc0] = a4\n 22412: a4 = u64 [s1 + 0xa8]\n 22416: u64 [a5 + 0xb8] = a4\n 22420: a4 = u64 [s1 + 0xb0]\n 22424: u64 [a5 + 0xb0] = a4\n 22428: u64 [a5 + 0x98] = a2\n 22432: u64 [a5 + 0x90] = a0\n 22436: u64 [a5 + 0x88] = a1\n 22440: a4 = a3\n 22442: a0 = s1 + 0x7ff\n 22446: a0 = a0 + 0x5e1\n 22450: a1 = s1 + 0x7ff\n 22454: a1 = a1 + 0x5c1\n 22458: a2 = s1 + 0x7ff\n 22462: a2 = a2 + 0x5a1\n 22466: a3 = u64 [s1 + 0xb8]\n 22470: u64 [a4 + 0x5a8] = a3\n 22474: ra = 774, jump @1058\n      : @854 [@dyn 387] (gas: 25)\n 22480: a0 = u64 [s1 + 0x80]\n 22484: a1 = s1 + 0x7ff\n 22488: a1 = a1 + 0x39\n 22491: a2 = a1 + 0x500\n 22495: u64 [a2 + 0x40] = a0\n 22498: a0 = u64 [s1 + 0x88]\n 22502: u64 [a2 + 0x38] = a0\n 22505: a0 = u64 [s1 + 0x90]\n 22509: u64 [a2 + 0x30] = a0\n 22512: a0 = u64 [s1 + 0x98]\n 22516: u64 [a2 + 0x28] = a0\n 22519: a0 = u64 [s1 + 0xa0]\n 22523: u64 [a2 + 0x60] = a0\n 22526: a0 = u64 [s1 + 0xa8]\n 22530: u64 [a2 + 0x58] = a0\n 22533: a0 = u64 [s1 + 0xb0]\n 22537: u64 [a2 + 0x50] = a0\n 22540: a3 = a1\n 22542: a0 = s1 + 0x7ff\n 22546: a0 = a0 + 0x581\n 22550: a1 = s1 + 0x7ff\n 22554: a1 = a1 + 0x561\n 22558: a2 = u64 [s1 + 0xb8]\n 22562: u64 [a3 + 0x548] = a2\n 22566: ra = 776, jump @1299\n      : @855 [@dyn 388] (gas: 2)\n 22572: a1 = 0x20270\n 22577: jump @575\n      : @856 (gas: 17)\n 22580: sp = sp + 0xffffffffffffff30\n 22584: u64 [sp + 0xc8] = ra\n 22588: u64 [sp + 0xc0] = s0\n 22592: u64 [sp + 0xb8] = s1\n 22596: s0 = sp + 0xd0\n 22600: sp = sp & 0xfffffffffffffff0\n 22603: a2 = u64 [a1 + 0x18]\n 22606: u64 [sp + 0x10] = a2\n 22609: a2 = u64 [a1 + 0x10]\n 22612: u64 [sp + 0x8] = a2\n 22615: a2 = u64 [a1 + 0x8]\n 22618: u64 [sp] = a2\n 22620: s1 = u64 [a1]\n 22622: u64 [sp + 0x28] = a0\n 22625: a0 = sp + 0x90\n 22629: a1 = 0x40\n 22632: ra = 778, jump @17\n      : @857 [@dyn 389] (gas: 39)\n 22638: a1 = u64 [sp + 0x98]\n 22642: a2 = u64 [sp + 0x90]\n 22646: a0 = s1 + 0x1f\n 22649: ra = a0 <u s1\n 22652: a3 = u64 [sp]\n 22654: a4 = a3 + ra\n 22657: a0 = a0 & 0xffffffffffffffe0\n 22660: t1 = a1 + a4\n 22663: t0 = a2 + a0\n 22666: u64 [sp + 0x20] = a2\n 22669: a5 = t0 <u a2\n 22672: t1 = t1 + a5\n 22675: s1 = t1 ^ a1\n 22678: u64 [sp + 0x18] = a1\n 22681: a2 = t1 <u a1\n 22684: a2 = a5 if s1 == 0\n 22687: t2 = u64 [sp + 0xa8]\n 22691: a4 = a4 <u a3\n 22694: s1 = u64 [sp + 0xa0]\n 22698: a4 = ra if ra == 0\n 22701: a0 = u64 [sp + 0x8]\n 22704: a4 = a4 + a0\n 22707: a5 = a4 <u a0\n 22710: a4 = a4 + s1\n 22713: a3 = a4 + a2\n 22716: a0 = u64 [sp + 0x10]\n 22719: a0 = a0 + t2\n 22722: a0 = a0 + a5\n 22725: a5 = a3 <u a4\n 22728: a4 = a4 <u s1\n 22731: a0 = a0 + a4\n 22734: a4 = a0 + a5\n 22737: a0 = a4 >u 0\n 22739: a5 = a3 >u 0\n 22741: a5 = a0 if a4 != 0\n 22744: a0 = a3 | a4\n 22747: a1 = t1 >u 0\n 22749: a1 = a5 if a0 != 0\n 22752: jump @861 if a1 != 0\n      : @858 (gas: 8)\n 22755: a0 = a3 <u s1\n 22758: a1 = a4 ^ t2\n 22761: a5 = a4 <u t2\n 22764: a5 = a0 if a1 == 0\n 22767: a0 = a3 ^ s1\n 22770: a0 = a0 | a1\n 22773: a2 = a5 if a0 != 0\n 22776: jump @861 if a2 != 0\n      : @859 (gas: 8)\n 22779: u64 [sp + 0x70] = t0\n 22782: u64 [sp + 0x78] = t1\n 22785: u64 [sp + 0x80] = a3\n 22789: a0 = 0x40\n 22792: a1 = sp + 0x70\n 22795: u64 [sp + 0x88] = a4\n 22799: u64 [sp + 0x10] = t2\n 22802: ra = 780, jump @19\n      : @860 [@dyn 390] (gas: 14)\n 22808: a0 = u64 [sp + 0x28]\n 22811: a1 = u64 [sp + 0x10]\n 22814: u64 [a0 + 0x18] = a1\n 22817: u64 [a0 + 0x10] = s1\n 22820: a1 = u64 [sp + 0x18]\n 22823: u64 [a0 + 0x8] = a1\n 22826: a1 = u64 [sp + 0x20]\n 22829: u64 [a0] = a1\n 22831: sp = s0 + 0xffffffffffffff30\n 22835: ra = u64 [sp + 0xc8]\n 22839: s0 = u64 [sp + 0xc0]\n 22843: s1 = u64 [sp + 0xb8]\n 22847: sp = sp + 0xd0\n 22851: ret\n      : @861 (gas: 6)\n 22853: u64 [sp + 96] = 0\n 22856: u64 [sp + 88] = 0\n 22859: u64 [sp + 80] = 0\n 22862: t0 = 0x30e\n 22866: a0 = 0x4e487b7100000000\n 22876: fallthrough\n      : @862 [@dyn 391] (gas: 4)\n 22877: a1 = sp + 0x50\n 22880: u64 [sp + 0x68] = a0\n 22883: a0 = 0\n 22885: ra = 784, jump @19\n      : @863 [@dyn 392] (gas: 7)\n 22891: u64 [sp + 72] = 0\n 22894: u64 [sp + 64] = 0\n 22897: u64 [sp + 48] = 0x41\n 22901: a0 = 0x4\n 22904: a1 = sp + 0x30\n 22907: u64 [sp + 56] = 0\n 22910: ra = 786, jump @19\n      : @864 [@dyn 393] (gas: 2)\n 22916: a1 = i32 [0x20264]\n 22921: jump @866 if a1 >u 63\n      : @865 (gas: 2)\n 22925: u32 [0x20264] = 0x40\n 22931: fallthrough\n      : @866 (gas: 7)\n 22932: a1 = 0x20270\n 22937: i32 a1 = a1 + 0\n 22939: a0 = 0x1\n 22942: a2 = 0x24\n 22945: ra = 0x314\n 22949: ecalli 7 // 'seal_return'\n 22951: fallthrough\n      : @867 [@dyn 394] (gas: 37)\n 22952: sp = sp + 0xfffffffffffffe70\n 22956: u64 [sp + 0x188] = ra\n 22960: u64 [sp + 0x180] = s0\n 22964: u64 [sp + 0x178] = s1\n 22968: s0 = sp + 0x190\n 22972: sp = sp & 0xfffffffffffffff0\n 22975: t2 = u64 [a1]\n 22977: a4 = u64 [a2 + 0x8]\n 22980: ra = u64 [a1 + 0x8]\n 22983: s1 = u64 [a2]\n 22985: a3 = t2 + 0x1f\n 22988: t0 = a3 <u t2\n 22991: a5 = ra + t0\n 22994: u64 [sp + 0x20] = s1\n 22997: t1 = a3 <u s1\n 23000: a3 = a5 ^ a4\n 23003: u64 [sp + 0x28] = a4\n 23006: a4 = a5 <u a4\n 23009: a4 = t1 if a3 == 0\n 23012: s1 = u64 [a1 + 0x10]\n 23015: a3 = a5 <u ra\n 23018: a3 = t0 if t0 == 0\n 23021: a5 = u64 [a2 + 0x18]\n 23024: t0 = u64 [a1 + 0x18]\n 23027: t1 = u64 [a2 + 0x10]\n 23030: a3 = a3 + s1\n 23033: a1 = a3 <u s1\n 23036: a1 = a1 + t0\n 23039: a2 = a1 ^ a5\n 23042: u64 [sp + 0x10] = a5\n 23045: a1 = a1 <s a5\n 23048: a5 = a3 <u t1\n 23051: a1 = a5 if a2 == 0\n 23054: a3 = a3 ^ t1\n 23057: a2 = a2 | a3\n 23060: a4 = a1 if a2 != 0\n 23063: jump @885 if a4 == 0\n      : @868 (gas: 13)\n 23067: u64 [sp + 0x8] = a0\n 23070: u64 [sp + 0x18] = t1\n 23073: a0 = t2 | s1\n 23076: u64 [sp + 0x38] = ra\n 23079: u64 [sp + 0x30] = t0\n 23082: a1 = ra | t0\n 23085: a0 = a0 | a1\n 23088: a0 = a0 >> 0x20\n 23091: u64 [sp + 0x58] = s1\n 23094: a1 = a1 | s1\n 23097: a1 = a1 << 0x20\n 23100: a0 = a0 | a1\n 23103: jump @884 if a0 != 0\n      : @869 (gas: 4)\n 23107: a0 = sp + 0x150\n 23111: u64 [sp + 0x50] = t2\n 23114: a1 = t2\n 23116: ra = 790, jump @17\n      : @870 [@dyn 395] (gas: 12)\n 23122: a3 = u64 [sp + 0x168]\n 23126: a2 = u64 [sp + 0x160]\n 23130: a4 = u64 [sp + 0x158]\n 23134: a0 = a3 >u 0\n 23136: a1 = a2 >u 0\n 23138: a1 = a0 if a3 != 0\n 23141: u64 [sp + 0x80] = a2\n 23145: u64 [sp + 0x88] = a3\n 23149: a0 = a2 | a3\n 23152: a2 = a4 >u 0\n 23154: a2 = a1 if a0 != 0\n 23157: jump @886 if a2 != 0\n      : @871 (gas: 20)\n 23161: a1 = u64 [sp + 0x150]\n 23165: a0 = a1 + 0x1f\n 23168: u64 [sp + 0x48] = a1\n 23171: a1 = a0 <u a1\n 23174: u64 [sp + 0x78] = a4\n 23177: a1 = a1 + a4\n 23180: a1 = a1 & 0x1\n 23183: a0 = a0 & 0xffffffffffffffe0\n 23186: a2 = a0 + 0x20\n 23189: a0 = a2 <u a0\n 23192: a3 = a1 + a0\n 23195: a4 = a3 <u a1\n 23198: a4 = a0 if a0 == 0\n 23201: u64 [sp + 296] = 0\n 23205: u64 [sp + 0x110] = a2\n 23209: u64 [sp + 0x118] = a3\n 23213: a0 = sp + 0x130\n 23217: a1 = sp + 0x110\n 23221: u64 [sp + 0x120] = a4\n 23225: ra = 792, jump @856\n      : @872 [@dyn 396] (gas: 15)\n 23231: a2 = u64 [sp + 0x148]\n 23235: a3 = u64 [sp + 0x140]\n 23239: a1 = u64 [sp + 0x138]\n 23243: a0 = u64 [sp + 0x130]\n 23247: u64 [sp + 0x40] = a1\n 23250: u64 [sp + 0x68] = a2\n 23253: a2 = a2 | a1\n 23256: a1 = a0 | a3\n 23259: a1 = a1 | a2\n 23262: a1 = a1 >> 0x20\n 23265: u64 [sp + 0x70] = a3\n 23268: a2 = a2 | a3\n 23271: a2 = a2 << 0x20\n 23274: a1 = a1 | a2\n 23277: jump @884 if a1 != 0\n      : @873 (gas: 11)\n 23281: s1 = u64 [sp + 0x48]\n 23284: u64 [sp + 0xf0] = s1\n 23288: a1 = u64 [sp + 0x78]\n 23291: u64 [sp + 0xf8] = a1\n 23295: a1 = u64 [sp + 0x80]\n 23299: u64 [sp + 0x100] = a1\n 23303: a1 = sp + 0xf0\n 23307: a2 = u64 [sp + 0x88]\n 23311: u64 [sp + 0x108] = a2\n 23315: u64 [sp + 0x60] = a0\n 23318: ra = 794, jump @19\n      : @874 [@dyn 397] (gas: 45)\n 23324: a0 = u64 [sp + 0x50]\n 23327: a3 = a0 + s1\n 23330: a2 = a3 <u a0\n 23333: t2 = u64 [sp + 0x38]\n 23336: a0 = u64 [sp + 0x78]\n 23339: a0 = a0 + t2\n 23342: a0 = a0 + a2\n 23345: a4 = a0 ^ t2\n 23348: a1 = a0 <u t2\n 23351: a1 = a2 if a4 == 0\n 23354: t1 = u64 [sp + 0x58]\n 23357: a2 = u64 [sp + 0x80]\n 23361: a2 = a2 + t1\n 23364: a5 = a3 + 0x20\n 23367: t0 = a5 <u a3\n 23370: a4 = a0 + t0\n 23373: a3 = u64 [sp + 0x20]\n 23376: a5 = a3 <u a5\n 23379: a3 = u64 [sp + 0x28]\n 23382: s1 = a4 ^ a3\n 23385: a3 = a3 <u a4\n 23388: a5 = a3 if s1 != 0\n 23391: a3 = a2 <u t1\n 23394: t1 = u64 [sp + 0x30]\n 23397: s1 = u64 [sp + 0x88]\n 23401: s1 = s1 + t1\n 23404: a3 = a3 + s1\n 23407: a1 = a1 + a2\n 23410: a2 = a1 <u a2\n 23413: a2 = a2 + a3\n 23416: a0 = a4 <u a0\n 23419: a0 = t0 if t0 == 0\n 23422: a0 = a0 + a1\n 23425: a1 = a0 <u a1\n 23428: a1 = a1 + a2\n 23431: a3 = u64 [sp + 0x10]\n 23434: a2 = a1 ^ a3\n 23437: a1 = a3 <u a1\n 23440: a4 = u64 [sp + 0x18]\n 23443: a3 = a4 <u a0\n 23446: a1 = a3 if a2 == 0\n 23449: a0 = a0 ^ a4\n 23452: a0 = a0 | a2\n 23455: a5 = a1 if a0 != 0\n 23458: jump @892 if a5 != 0\n      : @875 (gas: 10)\n 23462: a0 = u64 [sp + 0x70]\n 23465: a1 = u64 [sp + 0x68]\n 23468: a1 = a1 | a0\n 23471: a0 = 0xffffffe0\n 23481: a4 = u64 [sp + 0x60]\n 23484: a2 = a4 <u a0\n 23487: a3 = u64 [sp + 0x40]\n 23490: a2 = 0 if a3 != 0\n 23492: a2 = 0 if a1 != 0\n 23494: jump @884 if a2 == 0\n      : @876 (gas: 12)\n 23498: a3 = a4\n 23500: a1 = u64 [sp + 0x58]\n 23503: a1 = a1 | t1\n 23506: a5 = u64 [sp + 0x50]\n 23509: a0 = a5 <u a0\n 23512: a0 = 0 if t2 != 0\n 23514: a0 = 0 if a1 != 0\n 23516: ra = u64 [sp + 0x88]\n 23520: a2 = u64 [sp + 0x80]\n 23524: a4 = u64 [sp + 0x78]\n 23527: s1 = u64 [sp + 0x48]\n 23530: jump @884 if a0 == 0\n      : @877 (gas: 8)\n 23534: a0 = s1 | a2\n 23537: a1 = a4 | ra\n 23540: a0 = a0 | a1\n 23543: a0 = a0 >> 0x20\n 23546: a1 = a1 | a2\n 23549: a1 = a1 << 0x20\n 23552: a0 = a0 | a1\n 23555: jump @884 if a0 != 0\n      : @878 (gas: 5)\n 23559: i32 a0 = a3 + 0x20\n 23562: i32 a1 = a5 + 0x20\n 23565: u64 [sp + 0x58] = a1\n 23568: a1 = s1\n 23570: ra = 796, jump @33\n      : @879 [@dyn 398] (gas: 4)\n 23576: u64 [sp + 0x50] = a0\n 23579: a0 = u64 [sp + 0x58]\n 23582: a1 = s1\n 23584: ra = 798, jump @33\n      : @880 [@dyn 399] (gas: 4)\n 23590: a1 = a0\n 23592: a0 = u64 [sp + 0x50]\n 23595: a2 = s1\n 23597: ra = 800, jump @0\n      : @881 [@dyn 400] (gas: 27)\n 23603: a1 = u64 [sp + 0x60]\n 23606: a0 = a1 + s1\n 23609: a1 = a0 <u a1\n 23612: s1 = u64 [sp + 0x40]\n 23615: a2 = u64 [sp + 0x78]\n 23618: a2 = a2 + s1\n 23621: a2 = a2 + a1\n 23624: a3 = a2 ^ s1\n 23627: a4 = a2 <u s1\n 23630: a4 = a1 if a3 == 0\n 23633: a5 = u64 [sp + 0x70]\n 23636: a1 = u64 [sp + 0x80]\n 23640: a1 = a1 + a5\n 23643: a4 = a4 + a1\n 23646: t0 = a4 <u a1\n 23649: a1 = a1 <u a5\n 23652: a5 = u64 [sp + 0x88]\n 23656: a3 = u64 [sp + 0x68]\n 23659: a5 = a5 + a3\n 23662: a1 = a1 + a5\n 23665: a1 = a1 + t0\n 23668: a1 = a1 | a4\n 23671: a3 = 0xffffffe0\n 23681: a3 = a0 <u a3\n 23684: a3 = 0 if a2 != 0\n 23686: a3 = 0 if a1 != 0\n 23688: jump @884 if a3 == 0\n      : @882 (gas: 7)\n 23691: i32 a0 = a0 + 0x20\n 23694: u64 [sp + 232] = 0\n 23698: u64 [sp + 224] = 0\n 23702: u64 [sp + 216] = 0\n 23706: a1 = sp + 0xd0\n 23710: u64 [sp + 208] = 0\n 23714: ra = 802, jump @19\n      : @883 [@dyn 401] (gas: 14)\n 23720: a0 = u64 [sp + 0x8]\n 23723: a1 = u64 [sp + 0x68]\n 23726: u64 [a0 + 0x18] = a1\n 23729: a1 = u64 [sp + 0x70]\n 23732: u64 [a0 + 0x10] = a1\n 23735: u64 [a0 + 0x8] = s1\n 23738: a1 = u64 [sp + 0x60]\n 23741: u64 [a0] = a1\n 23743: sp = s0 + 0xfffffffffffffe70\n 23747: ra = u64 [sp + 0x188]\n 23751: s0 = u64 [sp + 0x180]\n 23755: s1 = u64 [sp + 0x178]\n 23759: sp = sp + 0x190\n 23763: ret\n      : @884 (gas: 1)\n 23765: trap\n      : @885 (gas: 2)\n 23766: a1 = 0x20270\n 23771: jump @893\n      : @886 (gas: 6)\n 23773: u64 [sp + 192] = 0\n 23777: u64 [sp + 184] = 0\n 23781: u64 [sp + 176] = 0\n 23785: t0 = 0x324\n 23789: a0 = 0x4e487b7100000000\n 23799: fallthrough\n      : @887 [@dyn 402] (gas: 4)\n 23800: a1 = sp + 0xb0\n 23804: u64 [sp + 0xc8] = a0\n 23808: a0 = 0\n 23810: ra = 806, jump @19\n      : @888 [@dyn 403] (gas: 7)\n 23816: u64 [sp + 168] = 0\n 23820: u64 [sp + 160] = 0\n 23824: u64 [sp + 144] = 0x41\n 23829: a0 = 0x4\n 23832: a1 = sp + 0x90\n 23836: u64 [sp + 152] = 0\n 23840: ra = 808, jump @19\n      : @889 [@dyn 404] (gas: 2)\n 23846: a1 = i32 [0x20264]\n 23851: jump @891 if a1 >u 63\n      : @890 (gas: 2)\n 23855: u32 [0x20264] = 0x40\n 23861: fallthrough\n      : @891 (gas: 7)\n 23862: a1 = 0x20270\n 23867: i32 a1 = a1 + 0\n 23869: a0 = 0x1\n 23872: a2 = 0x24\n 23875: ecalli 7 // 'seal_return'\n 23877: a1 = 0x20270\n 23882: jump @893\n      : @892 (gas: 2)\n 23884: a1 = 0x20270\n 23889: fallthrough\n      : @893 (gas: 6)\n 23890: i32 a1 = a1 + 0\n 23892: a0 = 0x1\n 23895: a2 = 0\n 23897: ra = 0x32a\n 23901: ecalli 7 // 'seal_return'\n 23903: fallthrough\n      : @894 [@dyn 405] (gas: 22)\n 23904: sp = sp + 0xfffffffffffffda0\n 23908: a2 = sp + 0x200\n 23912: u64 [a2 + 0x58] = ra\n 23915: u64 [a2 + 0x50] = s0\n 23918: u64 [a2 + 0x48] = s1\n 23921: s0 = sp + 0x260\n 23925: sp = sp & 0xffffffffffffffe0\n 23928: s1 = sp\n 23930: a2 = u64 [a1 + 0x10]\n 23933: u64 [s1 + 0x30] = a2\n 23936: a2 = u64 [a1 + 0x8]\n 23939: u64 [s1 + 0x50] = a2\n 23942: a1 = u64 [a1]\n 23944: u64 [s1 + 0x58] = a1\n 23947: u64 [s1 + 0x38] = a0\n 23950: u64 [s1 + 536] = 0\n 23954: u64 [s1 + 528] = 0\n 23958: u64 [s1 + 520] = 0\n 23962: a1 = s1 + 0x200\n 23966: u64 [s1 + 512] = 0\n 23970: a0 = 0\n 23972: ra = 812, jump @19\n      : @895 [@dyn 406] (gas: 7)\n 23978: u64 [s1 + 504] = 0\n 23982: u64 [s1 + 496] = 0\n 23986: u64 [s1 + 480] = 0x6\n 23991: a0 = 0x20\n 23994: a1 = s1 + 0x1e0\n 23998: u64 [s1 + 488] = 0\n 24002: ra = 814, jump @19\n      : @896 [@dyn 407] (gas: 3)\n 24008: a1 = 0x20264\n 24013: a0 = i32 [0x20264]\n 24018: jump @898 if a0 >u 63\n      : @897 (gas: 2)\n 24022: u32 [0x20264] = 0x40\n 24028: fallthrough\n      : @898 (gas: 14)\n 24029: a0 = sp + 0xffffffffffffffe0\n 24032: a2 = a0 & 0xffffffffffffffe0\n 24035: u64 [s1 + 0x28] = a2\n 24038: sp = a2\n 24040: a0 = 0x20270\n 24045: i32 a0 = a0 + 0\n 24047: i32 a2 = a2 + 0\n 24049: u64 [s1 + 0x48] = a1\n 24052: a1 = 0x40\n 24055: u64 [s1 + 0x40] = a0\n 24058: ra = 0x330\n 24062: ecalli 6 // 'hash_keccak_256'\n 24064: t0 = 0x332\n 24068: jump @1353\n      : @899 [@dyn 408] (gas: 1)\n 24071: t0 = 818, jump @1353\n      : @900 [@dyn 409] (gas: 13)\n 24077: a0 = u64 [s1 + 0x30]\n 24080: a0 = a0 << 0x20\n 24083: a0 = a0 >> 0x20\n 24086: u64 [s1 + 472] = 0\n 24090: u64 [s1] = a0\n 24092: u64 [s1 + 0x1d0] = a0\n 24096: a0 = u64 [s1 + 0x50]\n 24099: u64 [s1 + 0x1c8] = a0\n 24103: a1 = s1 + 0x1c0\n 24107: a0 = u64 [s1 + 0x58]\n 24110: u64 [s1 + 0x1c0] = a0\n 24114: a0 = 0\n 24116: ra = 820, jump @19\n      : @901 [@dyn 410] (gas: 12)\n 24122: a0 = u64 [s1 + 0x8]\n 24125: a3 = s1 + 0x100\n 24129: u64 [a3 + 0xb8] = a0\n 24133: a0 = u64 [s1 + 0x10]\n 24136: u64 [a3 + 0xb0] = a0\n 24140: a0 = u64 [s1 + 0x18]\n 24143: u64 [a3 + 0xa8] = a0\n 24147: a0 = 0x20\n 24150: a1 = s1 + 0x1a0\n 24154: a2 = u64 [s1 + 0x20]\n 24157: u64 [a3 + 0xa0] = a2\n 24161: ra = 822, jump @19\n      : @902 [@dyn 411] (gas: 3)\n 24167: a1 = u64 [s1 + 0x48]\n 24170: a0 = i32 [a1]\n 24172: jump @904 if a0 >u 63\n      : @903 (gas: 3)\n 24176: u32 [a1 + 0] = 0x40\n 24179: t0 = 0x338\n 24183: jump @1413\n      : @904 (gas: 1)\n 24186: t0 = 824, jump @1413\n      : @905 [@dyn 412] (gas: 5)\n 24192: ra = 0x33a\n 24196: ecalli 6 // 'hash_keccak_256'\n 24198: a3 = u64 [s1 + 0x30]\n 24201: t0 = 0x33c\n 24205: jump @1364\n      : @906 [@dyn 413] (gas: 2)\n 24208: a3 = u64 [s1 + 0x30]\n 24211: t0 = 828, jump @1364\n      : @907 [@dyn 414] (gas: 2)\n 24217: a0 = s1 + 0x180\n 24221: ra = 830, jump @21\n      : @908 [@dyn 415] (gas: 2)\n 24227: a0 = u8 [s1 + 0x180]\n 24231: jump @910 if a0 == 0\n      : @909 (gas: 2)\n 24234: a1 = 0\n 24236: jump @930\n      : @910 (gas: 6)\n 24239: u64 [s1 + 376] = 0\n 24243: u64 [s1 + 368] = 0\n 24247: u64 [s1 + 360] = 0\n 24251: a1 = s1 + 0x160\n 24255: u64 [s1 + 352] = 0\n 24259: ra = 832, jump @19\n      : @911 [@dyn 416] (gas: 1)\n 24265: t0 = 834, jump @1373\n      : @912 [@dyn 417] (gas: 1)\n 24271: ra = 836, jump @19\n      : @913 [@dyn 418] (gas: 3)\n 24277: a1 = u64 [s1 + 0x48]\n 24280: a0 = i32 [a1]\n 24282: jump @915 if a0 >u 63\n      : @914 (gas: 3)\n 24286: u32 [a1 + 0] = 0x40\n 24289: t0 = 0x346\n 24293: jump @1413\n      : @915 (gas: 1)\n 24296: t0 = 838, jump @1413\n      : @916 [@dyn 419] (gas: 5)\n 24302: ra = 0x348\n 24306: ecalli 6 // 'hash_keccak_256'\n 24308: a3 = u64 [s1 + 0x30]\n 24311: t0 = 0x34a\n 24315: jump @1405\n      : @917 [@dyn 420] (gas: 2)\n 24318: a3 = u64 [s1 + 0x30]\n 24321: t0 = 842, jump @1405\n      : @918 [@dyn 421] (gas: 21)\n 24327: u64 [s1 + 0x28] = a0\n 24330: a0 = reverse a1\n 24332: u64 [s1 + 0x20] = a0\n 24335: a0 = reverse a2\n 24337: u64 [s1 + 0x18] = a0\n 24340: a0 = reverse a3\n 24342: u64 [s1 + 0x10] = a0\n 24345: a0 = sp + 0xffffffffffffffe0\n 24348: a0 = a0 & 0xffffffffffffffe0\n 24351: u64 [s1 + 0x30] = a0\n 24354: sp = a0\n 24356: u64 [s1 + 312] = 0\n 24360: a0 = u64 [s1]\n 24362: u64 [s1 + 0x130] = a0\n 24366: a0 = u64 [s1 + 0x50]\n 24369: u64 [s1 + 0x128] = a0\n 24373: a1 = s1 + 0x120\n 24377: a0 = u64 [s1 + 0x58]\n 24380: u64 [s1 + 0x120] = a0\n 24384: a0 = 0\n 24386: ra = 844, jump @19\n      : @919 [@dyn 422] (gas: 12)\n 24392: a0 = u64 [s1 + 0x10]\n 24395: a3 = s1 + 0x100\n 24399: u64 [a3 + 0x18] = a0\n 24402: a0 = u64 [s1 + 0x18]\n 24405: u64 [a3 + 0x10] = a0\n 24408: a0 = u64 [s1 + 0x20]\n 24411: u64 [a3 + 0x8] = a0\n 24414: a0 = 0x20\n 24417: a1 = s1 + 0x100\n 24421: a2 = u64 [s1 + 0x28]\n 24424: u64 [a3] = a2\n 24426: ra = 846, jump @19\n      : @920 [@dyn 423] (gas: 3)\n 24432: a1 = u64 [s1 + 0x48]\n 24435: a0 = i32 [a1]\n 24437: jump @922 if a0 >u 63\n      : @921 (gas: 2)\n 24441: u32 [a1 + 0] = 0x40\n 24444: fallthrough\n      : @922 (gas: 12)\n 24445: a0 = sp + 0xffffffffffffffe0\n 24448: a0 = a0 & 0xffffffffffffffe0\n 24451: u64 [s1 + 0x48] = a0\n 24454: sp = a0\n 24456: i32 a2 = a0 + 0\n 24458: a1 = 0x40\n 24461: a0 = u64 [s1 + 0x40]\n 24464: ra = 0x350\n 24468: ecalli 6 // 'hash_keccak_256'\n 24470: a3 = u64 [s1 + 0x48]\n 24473: t0 = 0x352\n 24477: jump @1356\n      : @923 [@dyn 424] (gas: 2)\n 24480: a3 = u64 [s1 + 0x48]\n 24483: t0 = 850, jump @1356\n      : @924 [@dyn 425] (gas: 7)\n 24489: a1 = u64 [s1 + 0x30]\n 24492: u64 [a1 + 0x18] = a3\n 24495: u64 [a1 + 0x10] = a2\n 24498: u64 [a1 + 0x8] = a4\n 24501: u64 [a1] = a0\n 24503: a0 = s1 + 0xe0\n 24507: ra = 852, jump @21\n      : @925 [@dyn 426] (gas: 14)\n 24513: a0 = u64 [s1 + 0xe0]\n 24517: a1 = u64 [s1 + 0xe8]\n 24521: a2 = u64 [s1 + 0xf8]\n 24525: a3 = u64 [s1 + 0xf0]\n 24529: a0 = a0 & 0xffffffffffffff00\n 24533: a0 = a0 | 0x1\n 24536: a4 = s1 + 0x200\n 24540: u64 [a4 + 0x38] = a2\n 24543: u64 [a4 + 0x30] = a3\n 24546: u64 [a4 + 0x28] = a1\n 24549: u64 [a4 + 0x20] = a0\n 24552: a1 = s1 + 0x220\n 24556: a0 = u64 [s1 + 0x30]\n 24559: ra = 854, jump @24\n      : @926 [@dyn 427] (gas: 8)\n 24565: a0 = 0x30270\n 24570: u64 [s1 + 0x48] = a0\n 24573: i32 a0 = a0 + 0\n 24575: ra = 0x358\n 24579: ecalli 3 // 'caller'\n 24581: a2 = u64 [s1 + 0x48]\n 24584: t0 = 0x35a\n 24588: jump @1352\n      : @927 [@dyn 428] (gas: 2)\n 24591: a2 = u64 [s1 + 0x48]\n 24594: t0 = 858, jump @1352\n      : @928 [@dyn 429] (gas: 36)\n 24600: t0 = a1 | a0\n 24603: a3 = a3 >> 0x20\n 24606: a2 = reverse a2\n 24608: a1 = a2 << 0x20\n 24611: a1 = a1 | a3\n 24614: a2 = a2 >> 0x20\n 24617: u64 [s1 + 120] = 0\n 24620: u64 [s1 + 152] = 0\n 24624: a0 = u64 [s1]\n 24626: u64 [s1 + 0x90] = a0\n 24630: a0 = u64 [s1 + 0x50]\n 24633: u64 [s1 + 0x88] = a0\n 24637: a0 = u64 [s1 + 0x58]\n 24640: u64 [s1 + 0x80] = a0\n 24644: u64 [s1 + 184] = 0\n 24648: u64 [s1 + 176] = 0\n 24652: u64 [s1 + 168] = 0\n 24656: u64 [s1 + 160] = 0\n 24660: a3 = u64 [0x20120]\n 24665: a4 = u64 [0x20128]\n 24670: a5 = u64 [0x20130]\n 24675: a0 = u64 [0x20138]\n 24680: u64 [s1 + 0xd8] = a3\n 24684: u64 [s1 + 0xd0] = a4\n 24688: u64 [s1 + 0xc8] = a5\n 24692: u64 [s1 + 0xc0] = a0\n 24696: u64 [s1 + 0x70] = a2\n 24699: u64 [s1 + 0x68] = a1\n 24702: a2 = s1 + 0xc0\n 24706: a3 = s1 + 0xa0\n 24710: a4 = s1 + 0x80\n 24714: a5 = s1 + 0x60\n 24717: u64 [s1 + 0x60] = t0\n 24720: a0 = 0\n 24722: a1 = 0\n 24724: ra = 860, jump @30\n      : @929 [@dyn 430] (gas: 2)\n 24730: a1 = 0x1\n 24733: fallthrough\n      : @930 (gas: 12)\n 24734: a2 = u64 [s1 + 0x38]\n 24737: u64 [a2] = a1\n 24739: u64 [a2 + 8] = 0\n 24742: u64 [a2 + 16] = 0\n 24745: u64 [a2 + 24] = 0\n 24748: sp = s0 + 0xfffffffffffffda0\n 24752: a0 = sp + 0x200\n 24756: ra = u64 [a0 + 0x58]\n 24759: s0 = u64 [a0 + 0x50]\n 24762: s1 = u64 [a0 + 0x48]\n 24765: sp = sp + 0x260\n 24769: ret\n      : @931 [@dyn 431] (gas: 7)\n 24771: a0 = u64 [0x20140]\n 24776: u64 [s1 + 0x20] = a0\n 24779: u64 [s1 + 0x238] = a0\n 24783: a1 = u64 [0x20148]\n 24788: a2 = u64 [0x20150]\n 24793: a0 = u64 [0x20158]\n 24798: t0 = 864, jump @1401\n      : @932 [@dyn 432] (gas: 1)\n 24804: ra = 866, jump @19\n      : @933 [@dyn 433] (gas: 1)\n 24810: t0 = 868, jump @1362\n      : @934 [@dyn 434] (gas: 1)\n 24816: ra = 870, jump @19\n      : @935 [@dyn 435] (gas: 3)\n 24822: a1 = 0x20264\n 24827: a0 = i32 [0x20264]\n 24832: jump @937 if a0 >u 63\n      : @936 (gas: 2)\n 24836: u32 [0x20264] = 0x40\n 24842: fallthrough\n      : @937 (gas: 6)\n 24843: a0 = sp + 0xffffffffffffffe0\n 24846: a2 = a0 & 0xffffffffffffffe0\n 24849: u64 [s1 + 0x48] = a2\n 24852: sp = a2\n 24854: a0 = 0x20270\n 24859: t0 = 872, jump @1420\n      : @938 [@dyn 436] (gas: 4)\n 24865: ra = 0x36a\n 24869: ecalli 6 // 'hash_keccak_256'\n 24871: t0 = 0x36c\n 24875: jump @1348\n      : @939 [@dyn 437] (gas: 1)\n 24878: t0 = 876, jump @1348\n      : @940 [@dyn 438] (gas: 1)\n 24884: ra = 878, jump @19\n      : @941 [@dyn 439] (gas: 1)\n 24890: t0 = 880, jump @1371\n      : @942 [@dyn 440] (gas: 1)\n 24896: ra = 882, jump @19\n      : @943 [@dyn 441] (gas: 3)\n 24902: a1 = u64 [s1 + 0x68]\n 24905: a0 = i32 [a1]\n 24907: jump @945 if a0 >u 63\n      : @944 (gas: 3)\n 24911: u32 [a1 + 0] = 0x40\n 24914: t0 = 0x374\n 24918: jump @1358\n      : @945 (gas: 1)\n 24921: t0 = 884, jump @1358\n      : @946 [@dyn 442] (gas: 4)\n 24927: ra = 0x376\n 24931: ecalli 6 // 'hash_keccak_256'\n 24933: t0 = 0x378\n 24937: jump @1355\n      : @947 [@dyn 443] (gas: 1)\n 24940: t0 = 888, jump @1355\n      : @948 [@dyn 444] (gas: 1)\n 24946: ra = 890, jump @21\n      : @949 [@dyn 445] (gas: 2)\n 24952: a0 = u8 [s1 + 0x1a0]\n 24956: jump @951 if a0 == 0\n      : @950 (gas: 5)\n 24959: a1 = 0\n 24961: a0 = 0\n 24963: a2 = u64 [s1 + 0x58]\n 24966: t0 = 0x3a2\n 24970: jump @1360\n      : @951 (gas: 1)\n 24973: t0 = 892, jump @1387\n      : @952 [@dyn 446] (gas: 1)\n 24979: ra = 894, jump @19\n      : @953 [@dyn 447] (gas: 1)\n 24985: t0 = 896, jump @1361\n      : @954 [@dyn 448] (gas: 1)\n 24991: ra = 898, jump @19\n      : @955 [@dyn 449] (gas: 3)\n 24997: a1 = u64 [s1 + 0x68]\n 25000: a0 = i32 [a1]\n 25002: jump @957 if a0 >u 63\n      : @956 (gas: 3)\n 25006: u32 [a1 + 0] = 0x40\n 25009: t0 = 0x384\n 25013: jump @1358\n      : @957 (gas: 1)\n 25016: t0 = 900, jump @1358\n      : @958 [@dyn 450] (gas: 4)\n 25022: ra = 0x386\n 25026: ecalli 6 // 'hash_keccak_256'\n 25028: t0 = 0x388\n 25032: jump @1349\n      : @959 [@dyn 451] (gas: 1)\n 25035: t0 = 904, jump @1349\n      : @960 [@dyn 452] (gas: 1)\n 25041: ra = 906, jump @19\n      : @961 [@dyn 453] (gas: 1)\n 25047: t0 = 908, jump @1372\n      : @962 [@dyn 454] (gas: 1)\n 25053: ra = 910, jump @19\n      : @963 [@dyn 455] (gas: 3)\n 25059: a1 = u64 [s1 + 0x68]\n 25062: a0 = i32 [a1]\n 25064: jump @965 if a0 >u 63\n      : @964 (gas: 2)\n 25068: u32 [a1 + 0] = 0x40\n 25071: fallthrough\n      : @965 (gas: 4)\n 25072: a0 = sp + 0xffffffffffffffe0\n 25075: a0 = a0 & 0xffffffffffffffe0\n 25078: u64 [s1 + 0x68] = a0\n 25081: t0 = 912, jump @1365\n      : @966 [@dyn 456] (gas: 4)\n 25087: ra = 0x392\n 25091: ecalli 6 // 'hash_keccak_256'\n 25093: t0 = 0x394\n 25097: jump @1357\n      : @967 [@dyn 457] (gas: 1)\n 25100: t0 = 916, jump @1357\n      : @968 [@dyn 458] (gas: 1)\n 25106: ra = 918, jump @21\n      : @969 [@dyn 459] (gas: 1)\n 25112: t0 = 920, jump @1359\n      : @970 [@dyn 460] (gas: 1)\n 25118: ra = 922, jump @24\n      : @971 [@dyn 461] (gas: 8)\n 25124: a0 = 0x30270\n 25129: u64 [s1 + 0x68] = a0\n 25132: i32 a0 = a0 + 0\n 25134: ra = 0x39c\n 25138: ecalli 3 // 'caller'\n 25140: a2 = u64 [s1 + 0x68]\n 25143: t0 = 0x39e\n 25147: jump @1352\n      : @972 [@dyn 462] (gas: 2)\n 25150: a2 = u64 [s1 + 0x68]\n 25153: t0 = 926, jump @1352\n      : @973 [@dyn 463] (gas: 40)\n 25159: t0 = a1 | a0\n 25162: a3 = a3 >> 0x20\n 25165: a2 = reverse a2\n 25167: a1 = a2 << 0x20\n 25170: a1 = a1 | a3\n 25173: a2 = a2 >> 0x20\n 25176: u64 [s1 + 152] = 0\n 25180: u64 [s1 + 184] = 0\n 25184: a0 = u64 [s1]\n 25186: u64 [s1 + 0xb0] = a0\n 25190: a0 = u64 [s1 + 0x70]\n 25193: u64 [s1 + 0xa8] = a0\n 25197: a0 = u64 [s1 + 0x78]\n 25200: u64 [s1 + 0xa0] = a0\n 25204: a0 = u64 [s1 + 0x20]\n 25207: u64 [s1 + 0xd8] = a0\n 25211: a0 = u64 [s1 + 0x18]\n 25214: u64 [s1 + 0xd0] = a0\n 25218: a0 = u64 [s1 + 0x10]\n 25221: u64 [s1 + 0xc8] = a0\n 25225: a0 = u64 [s1 + 0x8]\n 25228: u64 [s1 + 0xc0] = a0\n 25232: a3 = u64 [0x20160]\n 25237: a4 = u64 [0x20168]\n 25242: a5 = u64 [0x20170]\n 25247: a0 = u64 [0x20178]\n 25252: u64 [s1 + 0xf8] = a3\n 25256: u64 [s1 + 0xf0] = a4\n 25260: u64 [s1 + 0xe8] = a5\n 25264: u64 [s1 + 0xe0] = a0\n 25268: u64 [s1 + 0x90] = a2\n 25272: u64 [s1 + 0x88] = a1\n 25276: a2 = s1 + 0xe0\n 25280: a3 = s1 + 0xc0\n 25284: a4 = s1 + 0xa0\n 25288: a5 = s1 + 0x80\n 25292: u64 [s1 + 0x80] = t0\n 25296: a0 = 0\n 25298: a1 = 0\n 25300: ra = 928, jump @30\n      : @974 [@dyn 464] (gas: 4)\n 25306: a0 = 0\n 25308: a1 = 0x1\n 25311: a2 = u64 [s1 + 0x58]\n 25314: t0 = 930, jump @1360\n      : @975 [@dyn 465] (gas: 1)\n 25320: ret\n      : @976 [@dyn 466] (gas: 7)\n 25322: a0 = u64 [0x20180]\n 25327: u64 [s1 + 0x20] = a0\n 25330: u64 [s1 + 0x238] = a0\n 25334: a1 = u64 [0x20188]\n 25339: a2 = u64 [0x20190]\n 25344: a0 = u64 [0x20198]\n 25349: t0 = 934, jump @1401\n      : @977 [@dyn 467] (gas: 1)\n 25355: ra = 936, jump @19\n      : @978 [@dyn 468] (gas: 1)\n 25361: t0 = 938, jump @1362\n      : @979 [@dyn 469] (gas: 1)\n 25367: ra = 940, jump @19\n      : @980 [@dyn 470] (gas: 3)\n 25373: a1 = 0x20264\n 25378: a0 = i32 [0x20264]\n 25383: jump @982 if a0 >u 63\n      : @981 (gas: 2)\n 25387: u32 [0x20264] = 0x40\n 25393: fallthrough\n      : @982 (gas: 6)\n 25394: a0 = sp + 0xffffffffffffffe0\n 25397: a2 = a0 & 0xffffffffffffffe0\n 25400: u64 [s1 + 0x48] = a2\n 25403: sp = a2\n 25405: a0 = 0x20270\n 25410: t0 = 942, jump @1420\n      : @983 [@dyn 471] (gas: 4)\n 25416: ra = 0x3b0\n 25420: ecalli 6 // 'hash_keccak_256'\n 25422: t0 = 0x3b2\n 25426: jump @1348\n      : @984 [@dyn 472] (gas: 1)\n 25429: t0 = 946, jump @1348\n      : @985 [@dyn 473] (gas: 1)\n 25435: ra = 948, jump @19\n      : @986 [@dyn 474] (gas: 1)\n 25441: t0 = 950, jump @1371\n      : @987 [@dyn 475] (gas: 1)\n 25447: ra = 952, jump @19\n      : @988 [@dyn 476] (gas: 3)\n 25453: a1 = u64 [s1 + 0x68]\n 25456: a0 = i32 [a1]\n 25458: jump @990 if a0 >u 63\n      : @989 (gas: 3)\n 25462: u32 [a1 + 0] = 0x40\n 25465: t0 = 0x3ba\n 25469: jump @1358\n      : @990 (gas: 1)\n 25472: t0 = 954, jump @1358\n      : @991 [@dyn 477] (gas: 4)\n 25478: ra = 0x3bc\n 25482: ecalli 6 // 'hash_keccak_256'\n 25484: t0 = 0x3be\n 25488: jump @1355\n      : @992 [@dyn 478] (gas: 1)\n 25491: t0 = 958, jump @1355\n      : @993 [@dyn 479] (gas: 1)\n 25497: ra = 960, jump @21\n      : @994 [@dyn 480] (gas: 2)\n 25503: a0 = u8 [s1 + 0x1a0]\n 25507: jump @996 if a0 == 0\n      : @995 (gas: 5)\n 25510: a1 = 0\n 25512: a0 = 0\n 25514: a2 = u64 [s1 + 0x58]\n 25517: t0 = 0x3e8\n 25521: jump @1360\n      : @996 (gas: 1)\n 25524: t0 = 962, jump @1387\n      : @997 [@dyn 481] (gas: 1)\n 25530: ra = 964, jump @19\n      : @998 [@dyn 482] (gas: 1)\n 25536: t0 = 966, jump @1361\n      : @999 [@dyn 483] (gas: 1)\n 25542: ra = 968, jump @19\n      : @1000 [@dyn 484] (gas: 3)\n 25548: a1 = u64 [s1 + 0x68]\n 25551: a0 = i32 [a1]\n 25553: jump @1002 if a0 >u 63\n      : @1001 (gas: 3)\n 25557: u32 [a1 + 0] = 0x40\n 25560: t0 = 0x3ca\n 25564: jump @1358\n      : @1002 (gas: 1)\n 25567: t0 = 970, jump @1358\n      : @1003 [@dyn 485] (gas: 4)\n 25573: ra = 0x3cc\n 25577: ecalli 6 // 'hash_keccak_256'\n 25579: t0 = 0x3ce\n 25583: jump @1349\n      : @1004 [@dyn 486] (gas: 1)\n 25586: t0 = 974, jump @1349\n      : @1005 [@dyn 487] (gas: 1)\n 25592: ra = 976, jump @19\n      : @1006 [@dyn 488] (gas: 1)\n 25598: t0 = 978, jump @1372\n      : @1007 [@dyn 489] (gas: 1)\n 25604: ra = 980, jump @19\n      : @1008 [@dyn 490] (gas: 3)\n 25610: a1 = u64 [s1 + 0x68]\n 25613: a0 = i32 [a1]\n 25615: jump @1010 if a0 >u 63\n      : @1009 (gas: 2)\n 25619: u32 [a1 + 0] = 0x40\n 25622: fallthrough\n      : @1010 (gas: 4)\n 25623: a0 = sp + 0xffffffffffffffe0\n 25626: a0 = a0 & 0xffffffffffffffe0\n 25629: u64 [s1 + 0x68] = a0\n 25632: t0 = 982, jump @1365\n      : @1011 [@dyn 491] (gas: 4)\n 25638: ra = 0x3d8\n 25642: ecalli 6 // 'hash_keccak_256'\n 25644: t0 = 0x3da\n 25648: jump @1357\n      : @1012 [@dyn 492] (gas: 1)\n 25651: t0 = 986, jump @1357\n      : @1013 [@dyn 493] (gas: 1)\n 25657: ra = 988, jump @21\n      : @1014 [@dyn 494] (gas: 1)\n 25663: t0 = 990, jump @1359\n      : @1015 [@dyn 495] (gas: 1)\n 25669: ra = 992, jump @24\n      : @1016 [@dyn 496] (gas: 8)\n 25675: a0 = 0x30270\n 25680: u64 [s1 + 0x68] = a0\n 25683: i32 a0 = a0 + 0\n 25685: ra = 0x3e2\n 25689: ecalli 3 // 'caller'\n 25691: a2 = u64 [s1 + 0x68]\n 25694: t0 = 0x3e4\n 25698: jump @1352\n      : @1017 [@dyn 497] (gas: 2)\n 25701: a2 = u64 [s1 + 0x68]\n 25704: t0 = 996, jump @1352\n      : @1018 [@dyn 498] (gas: 40)\n 25710: t0 = a1 | a0\n 25713: a3 = a3 >> 0x20\n 25716: a2 = reverse a2\n 25718: a1 = a2 << 0x20\n 25721: a1 = a1 | a3\n 25724: a2 = a2 >> 0x20\n 25727: u64 [s1 + 152] = 0\n 25731: u64 [s1 + 184] = 0\n 25735: a0 = u64 [s1]\n 25737: u64 [s1 + 0xb0] = a0\n 25741: a0 = u64 [s1 + 0x70]\n 25744: u64 [s1 + 0xa8] = a0\n 25748: a0 = u64 [s1 + 0x78]\n 25751: u64 [s1 + 0xa0] = a0\n 25755: a0 = u64 [s1 + 0x20]\n 25758: u64 [s1 + 0xd8] = a0\n 25762: a0 = u64 [s1 + 0x18]\n 25765: u64 [s1 + 0xd0] = a0\n 25769: a0 = u64 [s1 + 0x10]\n 25772: u64 [s1 + 0xc8] = a0\n 25776: a0 = u64 [s1 + 0x8]\n 25779: u64 [s1 + 0xc0] = a0\n 25783: a3 = u64 [0x201a0]\n 25788: a4 = u64 [0x201a8]\n 25793: a5 = u64 [0x201b0]\n 25798: a0 = u64 [0x201b8]\n 25803: u64 [s1 + 0xf8] = a3\n 25807: u64 [s1 + 0xf0] = a4\n 25811: u64 [s1 + 0xe8] = a5\n 25815: u64 [s1 + 0xe0] = a0\n 25819: u64 [s1 + 0x90] = a2\n 25823: u64 [s1 + 0x88] = a1\n 25827: a2 = s1 + 0xe0\n 25831: a3 = s1 + 0xc0\n 25835: a4 = s1 + 0xa0\n 25839: a5 = s1 + 0x80\n 25843: u64 [s1 + 0x80] = t0\n 25847: a0 = 0\n 25849: a1 = 0\n 25851: ra = 998, jump @30\n      : @1019 [@dyn 499] (gas: 4)\n 25857: a0 = 0\n 25859: a1 = 0x1\n 25862: a2 = u64 [s1 + 0x58]\n 25865: t0 = 1000, jump @1360\n      : @1020 [@dyn 500] (gas: 1)\n 25871: ret\n      : @1021 (gas: 22)\n 25873: sp = sp + 0xfffffffffffffee0\n 25877: u64 [sp + 0x118] = ra\n 25881: u64 [sp + 0x110] = s0\n 25885: u64 [sp + 0x108] = s1\n 25889: s0 = sp + 0x120\n 25893: sp = sp & 0xfffffffffffffff0\n 25896: a4 = u64 [a1 + 0x10]\n 25899: a3 = u64 [a1 + 0x18]\n 25902: a5 = u64 [a1 + 0x8]\n 25905: t0 = u64 [a1]\n 25907: u64 [sp + 0x68] = a3\n 25910: u64 [sp + 0x78] = a5\n 25913: a1 = a5 | a3\n 25916: a3 = t0 | a4\n 25919: a3 = a3 | a1\n 25922: a3 = a3 >> 0x20\n 25925: u64 [sp + 0x70] = a4\n 25928: a1 = a1 | a4\n 25931: a1 = a1 << 0x20\n 25934: a1 = a1 | a3\n 25937: u64 [sp + 0x8] = a0\n 25940: jump @1036 if a1 != 0\n      : @1022 (gas: 15)\n 25944: a0 = u64 [a2 + 0x18]\n 25947: u64 [sp + 0x48] = a0\n 25950: s1 = u64 [a2 + 0x10]\n 25953: a0 = u64 [a2 + 0x8]\n 25956: u64 [sp + 0x50] = a0\n 25959: a0 = u64 [a2]\n 25961: u64 [sp + 0x58] = a0\n 25964: u64 [sp + 248] = 0\n 25968: u64 [sp + 240] = 0\n 25972: u64 [sp + 232] = 0\n 25976: a1 = sp + 0xe0\n 25980: u64 [sp + 224] = 0x20\n 25985: a0 = t0\n 25987: u64 [sp + 0x60] = t0\n 25990: ra = 1002, jump @19\n      : @1023 [@dyn 501] (gas: 12)\n 25996: a1 = u64 [sp + 0x58]\n 25999: a0 = a1 | s1\n 26002: a2 = u64 [sp + 0x48]\n 26005: a3 = u64 [sp + 0x50]\n 26008: a2 = a2 | a3\n 26011: a0 = a0 | a2\n 26014: a0 = a0 >> 0x20\n 26017: u64 [sp + 0x20] = s1\n 26020: a2 = a2 | s1\n 26023: a2 = a2 << 0x20\n 26026: a0 = a0 | a2\n 26029: jump @1036 if a0 != 0\n      : @1024 (gas: 2)\n 26033: a0 = sp + 0xc0\n 26037: ra = 1004, jump @17\n      : @1025 [@dyn 502] (gas: 13)\n 26043: a0 = u64 [sp + 0x70]\n 26046: a1 = u64 [sp + 0x68]\n 26049: a1 = a1 | a0\n 26052: a0 = 0x100000000\n 26062: u64 [sp + 0x10] = a0\n 26065: a0 = 0xffffffe0\n 26075: a2 = u64 [sp + 0x60]\n 26078: a0 = a2 <u a0\n 26081: a3 = u64 [sp + 0x78]\n 26084: a0 = 0 if a3 != 0\n 26086: u64 [sp + 0x18] = a1\n 26089: a0 = 0 if a1 != 0\n 26091: jump @1036 if a0 == 0\n      : @1026 (gas: 16)\n 26095: a3 = u64 [sp + 0xd8]\n 26099: a4 = u64 [sp + 0xd0]\n 26103: a5 = u64 [sp + 0xc8]\n 26107: a1 = u64 [sp + 0xc0]\n 26111: i32 a0 = a2 + 0x20\n 26114: u64 [sp + 0x28] = a1\n 26117: u64 [sp + 0xa0] = a1\n 26121: u64 [sp + 0x30] = a5\n 26124: u64 [sp + 0xa8] = a5\n 26128: u64 [sp + 0x38] = a4\n 26131: u64 [sp + 0xb0] = a4\n 26135: a1 = sp + 0xa0\n 26139: u64 [sp + 0x40] = a3\n 26142: u64 [sp + 0xb8] = a3\n 26146: s1 = a2\n 26148: ra = 1006, jump @19\n      : @1027 [@dyn 503] (gas: 8)\n 26154: a0 = u64 [sp + 0x10]\n 26157: a0 = a0 + 0xffffffffffffffc0\n 26160: a0 = s1 <u a0\n 26163: a1 = u64 [sp + 0x78]\n 26166: a0 = 0 if a1 != 0\n 26168: a1 = u64 [sp + 0x18]\n 26171: a0 = 0 if a1 != 0\n 26173: jump @1036 if a0 == 0\n      : @1028 (gas: 10)\n 26177: a0 = u64 [sp + 0x48]\n 26180: a1 = u64 [sp + 0x20]\n 26183: a0 = a0 | a1\n 26186: a1 = 0xffffffe0\n 26196: a3 = u64 [sp + 0x58]\n 26199: a1 = a3 <u a1\n 26202: a4 = u64 [sp + 0x50]\n 26205: a1 = 0 if a4 != 0\n 26207: a1 = 0 if a0 != 0\n 26209: jump @1036 if a1 == 0\n      : @1029 (gas: 13)\n 26213: a2 = s1\n 26215: a1 = u64 [sp + 0x28]\n 26218: a5 = u64 [sp + 0x38]\n 26221: a0 = a1 | a5\n 26224: a4 = u64 [sp + 0x40]\n 26227: s1 = u64 [sp + 0x30]\n 26230: a4 = a4 | s1\n 26233: a0 = a0 | a4\n 26236: a0 = a0 >> 0x20\n 26239: a4 = a4 | a5\n 26242: a4 = a4 << 0x20\n 26245: a0 = a0 | a4\n 26248: jump @1036 if a0 != 0\n      : @1030 (gas: 5)\n 26252: i32 a0 = a2 + 0x40\n 26255: i32 a3 = a3 + 0x20\n 26258: u64 [sp + 0x58] = a3\n 26261: s1 = a1\n 26263: ra = 1008, jump @33\n      : @1031 [@dyn 504] (gas: 4)\n 26269: u64 [sp + 0x50] = a0\n 26272: a0 = u64 [sp + 0x58]\n 26275: a1 = s1\n 26277: ra = 1010, jump @33\n      : @1032 [@dyn 505] (gas: 4)\n 26283: a1 = a0\n 26285: a0 = u64 [sp + 0x50]\n 26288: a2 = s1\n 26290: ra = 1012, jump @0\n      : @1033 [@dyn 506] (gas: 27)\n 26296: a0 = u64 [sp + 0x60]\n 26299: a0 = a0 + s1\n 26302: a1 = a0 <u s1\n 26305: a2 = u64 [sp + 0x78]\n 26308: a4 = u64 [sp + 0x30]\n 26311: a2 = a2 + a4\n 26314: a2 = a2 + a1\n 26317: a3 = a2 ^ a4\n 26320: a4 = a2 <u a4\n 26323: a4 = a1 if a3 == 0\n 26326: a1 = u64 [sp + 0x70]\n 26329: a3 = u64 [sp + 0x38]\n 26332: a1 = a1 + a3\n 26335: a3 = a1 <u a3\n 26338: a5 = u64 [sp + 0x68]\n 26341: s1 = u64 [sp + 0x40]\n 26344: a5 = a5 + s1\n 26347: a3 = a3 + a5\n 26350: a4 = a4 + a1\n 26353: a1 = a4 <u a1\n 26356: a1 = a1 + a3\n 26359: a1 = a1 | a4\n 26362: a3 = 0xffffffc0\n 26372: a3 = a0 <u a3\n 26375: a3 = 0 if a2 != 0\n 26377: a3 = 0 if a1 != 0\n 26379: jump @1036 if a3 == 0\n      : @1034 (gas: 7)\n 26383: i32 a0 = a0 + 0x40\n 26386: u64 [sp + 152] = 0\n 26390: u64 [sp + 144] = 0\n 26394: u64 [sp + 136] = 0\n 26398: a1 = sp + 0x80\n 26402: u64 [sp + 128] = 0\n 26406: ra = 1014, jump @19\n      : @1035 [@dyn 507] (gas: 35)\n 26412: s1 = u64 [sp + 0x28]\n 26415: s1 = s1 + 0x1f\n 26418: a0 = 0x1ffffffe0\n 26428: a0 = a0 & s1\n 26431: a1 = u64 [sp + 0x60]\n 26434: a0 = a0 + a1\n 26437: a1 = a0 <u a1\n 26440: a3 = u64 [sp + 0x78]\n 26443: a2 = a3 + a1\n 26446: a3 = a2 <u a3\n 26449: a3 = a1 if a1 == 0\n 26452: a1 = u64 [sp + 0x70]\n 26455: a3 = a3 + a1\n 26458: a1 = a3 <u a1\n 26461: a4 = u64 [sp + 0x68]\n 26464: a1 = a1 + a4\n 26467: a4 = a0 + 0x40\n 26470: a0 = a4 <u a0\n 26473: a5 = a2 + a0\n 26476: a2 = a5 <u a2\n 26479: a2 = a0 if a0 == 0\n 26482: a2 = a2 + a3\n 26485: a0 = a2 <u a3\n 26488: a0 = a0 + a1\n 26491: a1 = u64 [sp + 0x8]\n 26494: u64 [a1] = a4\n 26496: u64 [a1 + 0x8] = a5\n 26499: u64 [a1 + 0x10] = a2\n 26502: u64 [a1 + 0x18] = a0\n 26505: sp = s0 + 0xfffffffffffffee0\n 26509: ra = u64 [sp + 0x118]\n 26513: s0 = u64 [sp + 0x110]\n 26517: s1 = u64 [sp + 0x108]\n 26521: sp = sp + 0x120\n 26525: ret\n      : @1036 (gas: 1)\n 26527: trap\n      : @1037 [@dyn 508] (gas: 5)\n 26528: a1 = 0x4\n 26531: ra = 0x3fa\n 26535: ecalli 1 // 'call_data_load'\n 26537: t0 = 0x3fc\n 26541: jump @1393\n      : @1038 [@dyn 509] (gas: 1)\n 26544: t0 = 1020, jump @1393\n      : @1039 [@dyn 510] (gas: 1)\n 26550: jump @1042 if a3 == 0\n      : @1040 (gas: 1)\n 26553: t0 = 1022, jump @1407\n      : @1041 [@dyn 511] (gas: 1)\n 26559: ret\n      : @1042 (gas: 8)\n 26561: a1 = 0x20270\n 26566: i32 a1 = a1 + 0\n 26568: a0 = 0x1\n 26571: a2 = 0\n 26573: ra = 0x400\n 26577: ecalli 7 // 'seal_return'\n 26579: t0 = 0x402\n 26583: jump @1417\n      : @1043 [@dyn 512] (gas: 1)\n 26586: t0 = 1026, jump @1417\n      : @1044 [@dyn 513] (gas: 5)\n 26592: a1 = 0x24\n 26595: ra = 0x404\n 26599: ecalli 1 // 'call_data_load'\n 26601: t0 = 0x406\n 26605: jump @1393\n      : @1045 [@dyn 514] (gas: 1)\n 26608: t0 = 1030, jump @1393\n      : @1046 [@dyn 515] (gas: 1)\n 26614: jump @1049 if a3 == 0\n      : @1047 (gas: 1)\n 26617: t0 = 1032, jump @1407\n      : @1048 [@dyn 516] (gas: 1)\n 26623: ret\n      : @1049 (gas: 7)\n 26625: a1 = 0x20270\n 26630: i32 a1 = a1 + 0\n 26632: a0 = 0x1\n 26635: a2 = 0\n 26637: ra = 0x40a\n 26641: ecalli 7 // 'seal_return'\n 26643: fallthrough\n      : @1050 [@dyn 517] (gas: 19)\n 26644: sp = sp + 0xffffffffffffff40\n 26648: u64 [sp + 0xb8] = ra\n 26652: u64 [sp + 0xb0] = s0\n 26656: u64 [sp + 0xa8] = s1\n 26660: s0 = sp + 0xc0\n 26664: sp = sp & 0xffffffffffffffe0\n 26667: s1 = sp\n 26669: a2 = u64 [a1]\n 26671: a3 = u64 [a1 + 0x8]\n 26674: a4 = u64 [a1 + 0x10]\n 26677: a1 = u64 [a1 + 0x18]\n 26680: u64 [s1 + 0x18] = a0\n 26683: u64 [s1 + 0x78] = a1\n 26686: u64 [s1 + 0x70] = a4\n 26689: u64 [s1 + 0x68] = a3\n 26692: a1 = s1 + 0x60\n 26695: u64 [s1 + 0x60] = a2\n 26698: a0 = 0\n 26700: ra = 1036, jump @19\n      : @1051 [@dyn 518] (gas: 7)\n 26706: u64 [s1 + 88] = 0\n 26709: u64 [s1 + 80] = 0\n 26712: u64 [s1 + 64] = 0x6\n 26716: a0 = 0x20\n 26719: a1 = s1 + 0x40\n 26722: u64 [s1 + 72] = 0\n 26725: ra = 1038, jump @19\n      : @1052 [@dyn 519] (gas: 2)\n 26731: a1 = i32 [0x20264]\n 26736: jump @1054 if a1 >u 63\n      : @1053 (gas: 2)\n 26740: u32 [0x20264] = 0x40\n 26746: fallthrough\n      : @1054 (gas: 11)\n 26747: a0 = sp + 0xffffffffffffffe0\n 26750: a2 = a0 & 0xffffffffffffffe0\n 26753: u64 [s1 + 0x10] = a2\n 26756: sp = a2\n 26758: a0 = 0x20270\n 26763: i32 a0 = a0 + 0\n 26765: i32 a2 = a2 + 0\n 26767: a1 = 0x40\n 26770: ra = 0x410\n 26774: ecalli 6 // 'hash_keccak_256'\n 26776: fallthrough\n      : @1055 [@dyn 520] (gas: 6)\n 26777: a3 = u64 [s1 + 0x10]\n 26780: a0 = u64 [a3]\n 26782: a1 = u64 [a3 + 0x8]\n 26785: a2 = u64 [a3 + 0x10]\n 26788: a3 = u64 [a3 + 0x18]\n 26791: t0 = 1042, jump @1377\n      : @1056 [@dyn 521] (gas: 15)\n 26797: a3 = a3 + 0x1\n 26800: a4 = a3 <u 0x1\n 26803: a2 = a2 + a4\n 26806: a4 = a3 | a2\n 26809: a4 = a4 <u 0x1\n 26812: a4 = a4 + a1\n 26815: a1 = a4 <u a1\n 26818: a0 = a0 + a1\n 26821: u64 [s1 + 0x80] = a3\n 26825: u64 [s1 + 0x88] = a2\n 26829: u64 [s1 + 0x90] = a4\n 26833: u64 [s1 + 0x98] = a0\n 26837: a0 = s1 + 0x20\n 26840: a1 = s1 + 0x80\n 26844: ra = 1044, jump @21\n      : @1057 [@dyn 522] (gas: 15)\n 26850: a0 = u64 [s1 + 0x30]\n 26853: a1 = u64 [s1 + 0x38]\n 26856: a2 = u64 [s1 + 0x20]\n 26859: a3 = u64 [s1 + 0x28]\n 26862: a4 = u64 [s1 + 0x18]\n 26865: u64 [a4 + 0x10] = a0\n 26868: u64 [a4 + 0x18] = a1\n 26871: u64 [a4] = a2\n 26873: u64 [a4 + 0x8] = a3\n 26876: sp = s0 + 0xffffffffffffff40\n 26880: ra = u64 [sp + 0xb8]\n 26884: s0 = u64 [sp + 0xb0]\n 26888: s1 = u64 [sp + 0xa8]\n 26892: sp = sp + 0xc0\n 26896: ret\n      : @1058 (gas: 37)\n 26898: sp = sp + 0xfffffffffffffce0\n 26902: a3 = sp + 0x300\n 26906: u64 [a3 + 0x18] = ra\n 26909: u64 [a3 + 0x10] = s0\n 26912: u64 [a3 + 0x8] = s1\n 26915: s0 = sp + 0x320\n 26919: sp = sp & 0xffffffffffffffe0\n 26922: s1 = sp\n 26924: a3 = u64 [a2 + 0x18]\n 26927: u64 [s1 + 0x98] = a3\n 26931: a3 = u64 [a2 + 0x10]\n 26934: u64 [s1 + 0x90] = a3\n 26938: a3 = u64 [a2 + 0x8]\n 26941: u64 [s1 + 0xa0] = a3\n 26945: a2 = u64 [a2]\n 26947: u64 [s1 + 0xa8] = a2\n 26951: a2 = u64 [a1 + 0x10]\n 26954: u64 [s1 + 0x88] = a2\n 26958: a2 = u64 [a1 + 0x8]\n 26961: u64 [s1 + 0x80] = a2\n 26965: a1 = u64 [a1]\n 26967: u64 [s1 + 0x78] = a1\n 26970: a2 = u64 [a0]\n 26972: a1 = u64 [a0 + 0x8]\n 26975: a0 = u32 [a0 + 0x10]\n 26978: a3 = 0xffffffff\n 26988: u64 [s1 + 0x70] = a3\n 26991: u64 [s1 + 728] = 0\n 26995: u64 [s1 + 0x40] = a0\n 26998: u64 [s1 + 0x2d0] = a0\n 27002: u64 [s1 + 0x30] = a1\n 27005: u64 [s1 + 0x2c8] = a1\n 27009: a1 = s1 + 0x2c0\n 27013: u64 [s1 + 0x38] = a2\n 27016: u64 [s1 + 0x2c0] = a2\n 27020: a0 = 0\n 27022: ra = 1046, jump @19\n      : @1059 [@dyn 523] (gas: 7)\n 27028: u64 [s1 + 696] = 0\n 27032: u64 [s1 + 688] = 0\n 27036: u64 [s1 + 672] = 0x1\n 27041: a0 = 0x20\n 27044: a1 = s1 + 0x2a0\n 27048: u64 [s1 + 680] = 0\n 27052: ra = 1048, jump @19\n      : @1060 [@dyn 524] (gas: 3)\n 27058: a1 = 0x20264\n 27063: a0 = i32 [0x20264]\n 27068: jump @1062 if a0 >u 63\n      : @1061 (gas: 2)\n 27072: u32 [0x20264] = 0x40\n 27078: fallthrough\n      : @1062 (gas: 15)\n 27079: a0 = sp + 0xffffffffffffffe0\n 27082: a2 = a0 & 0xffffffffffffffe0\n 27085: u64 [s1 + 0x68] = a2\n 27088: sp = a2\n 27090: a0 = 0x20270\n 27095: i32 a0 = a0 + 0\n 27097: i32 a2 = a2 + 0\n 27099: u64 [s1 + 0xb0] = a1\n 27103: a1 = 0x40\n 27106: u64 [s1 + 0xb8] = a0\n 27110: ra = 0x41a\n 27114: ecalli 6 // 'hash_keccak_256'\n 27116: a3 = u64 [s1 + 0x68]\n 27119: t0 = 0x41c\n 27123: jump @1375\n      : @1063 [@dyn 525] (gas: 2)\n 27126: a3 = u64 [s1 + 0x68]\n 27129: t0 = 1052, jump @1375\n      : @1064 [@dyn 526] (gas: 17)\n 27135: a0 = u64 [s1 + 0x78]\n 27138: a0 = a0 & 0xffffffffffffffff\n 27141: a1 = u64 [s1 + 0x80]\n 27145: a1 = a1 & 0xffffffffffffffff\n 27148: a2 = u64 [s1 + 0x88]\n 27152: a3 = u64 [s1 + 0x70]\n 27155: a2 = a2 & a3\n 27158: u64 [s1 + 664] = 0\n 27162: u64 [s1 + 0x78] = a2\n 27165: u64 [s1 + 0x290] = a2\n 27169: u64 [s1 + 0x80] = a1\n 27173: u64 [s1 + 0x288] = a1\n 27177: a1 = s1 + 0x280\n 27181: u64 [s1 + 0x88] = a0\n 27185: u64 [s1 + 0x280] = a0\n 27189: a0 = 0\n 27191: ra = 1054, jump @19\n      : @1065 [@dyn 527] (gas: 12)\n 27197: a0 = u64 [s1 + 0x48]\n 27200: a3 = s1 + 0x200\n 27204: u64 [a3 + 0x78] = a0\n 27207: a0 = u64 [s1 + 0x50]\n 27210: u64 [a3 + 0x70] = a0\n 27213: a0 = u64 [s1 + 0x58]\n 27216: u64 [a3 + 0x68] = a0\n 27219: a0 = 0x20\n 27222: a1 = s1 + 0x260\n 27226: a2 = u64 [s1 + 0x60]\n 27229: u64 [a3 + 0x60] = a2\n 27232: ra = 1056, jump @19\n      : @1066 [@dyn 528] (gas: 3)\n 27238: a1 = u64 [s1 + 0xb0]\n 27242: a0 = i32 [a1]\n 27244: jump @1068 if a0 >u 63\n      : @1067 (gas: 2)\n 27248: u32 [a1 + 0] = 0x40\n 27251: fallthrough\n      : @1068 (gas: 4)\n 27252: a0 = sp + 0xffffffffffffffe0\n 27255: a0 = a0 & 0xffffffffffffffe0\n 27258: u64 [s1 + 0x70] = a0\n 27261: t0 = 1058, jump @1406\n      : @1069 [@dyn 529] (gas: 5)\n 27267: ra = 0x424\n 27271: ecalli 6 // 'hash_keccak_256'\n 27273: a3 = u64 [s1 + 0x70]\n 27276: t0 = 0x426\n 27280: jump @1383\n      : @1070 [@dyn 530] (gas: 2)\n 27283: a3 = u64 [s1 + 0x70]\n 27286: t0 = 1062, jump @1383\n      : @1071 [@dyn 531] (gas: 2)\n 27292: a0 = s1 + 0x240\n 27296: ra = 1064, jump @21\n      : @1072 [@dyn 532] (gas: 9)\n 27302: ra = u64 [s1 + 0x258]\n 27306: t1 = u64 [s1 + 0x250]\n 27310: a4 = u64 [s1 + 0x248]\n 27314: t0 = u64 [s1 + 0x240]\n 27318: a0 = a4 & ra\n 27321: a1 = t0 & t1\n 27324: a0 = a0 & a1\n 27327: a1 = 0xffffffffffffffff\n 27330: jump @1089 if a0 == a1\n      : @1073 (gas: 23)\n 27334: a0 = u64 [s1 + 0xa8]\n 27338: a2 = t0 <u a0\n 27341: a1 = u64 [s1 + 0xa0]\n 27345: a0 = a4 ^ a1\n 27348: a5 = a4 <u a1\n 27351: u64 [s1 + 0x50] = a2\n 27354: a5 = a2 if a0 == 0\n 27357: a2 = u64 [s1 + 0x90]\n 27361: a3 = t1 <u a2\n 27364: a1 = u64 [s1 + 0x98]\n 27368: a0 = ra ^ a1\n 27371: a1 = ra <u a1\n 27374: u64 [s1 + 0x28] = a3\n 27377: a1 = a3 if a0 == 0\n 27380: a2 = t1 ^ a2\n 27383: a0 = a0 | a2\n 27386: u64 [s1 + 0x48] = a5\n 27389: a1 = a5 if a0 == 0\n 27392: u64 [s1 + 0x70] = t0\n 27395: u64 [s1 + 0x68] = a4\n 27398: u64 [s1 + 0x60] = ra\n 27401: u64 [s1 + 0x58] = t1\n 27404: jump @1090 if a1 != 0\n      : @1074 (gas: 6)\n 27408: a3 = u64 [s1 + 0x40]\n 27411: a2 = u64 [s1 + 0x38]\n 27414: a0 = a2 | a3\n 27417: t2 = u64 [s1 + 0x30]\n 27420: a0 = a0 | t2\n 27423: jump @1097 if a0 == 0\n      : @1075 (gas: 6)\n 27427: a0 = u64 [s1 + 0x88]\n 27431: a1 = u64 [s1 + 0x78]\n 27434: a0 = a0 | a1\n 27437: a1 = u64 [s1 + 0x80]\n 27441: a0 = a0 | a1\n 27444: jump @1099 if a0 == 0\n      : @1076 (gas: 7)\n 27448: u64 [s1 + 568] = 0\n 27452: u64 [s1 + 0x220] = a2\n 27456: u64 [s1 + 0x228] = t2\n 27460: a1 = s1 + 0x220\n 27464: u64 [s1 + 0x230] = a3\n 27468: a0 = 0\n 27470: ra = 1066, jump @19\n      : @1077 [@dyn 533] (gas: 7)\n 27476: u64 [s1 + 536] = 0\n 27480: u64 [s1 + 528] = 0\n 27484: u64 [s1 + 512] = 0x1\n 27489: a0 = 0x20\n 27492: a1 = s1 + 0x200\n 27496: u64 [s1 + 520] = 0\n 27500: ra = 1068, jump @19\n      : @1078 [@dyn 534] (gas: 3)\n 27506: a1 = u64 [s1 + 0xb0]\n 27510: a0 = i32 [a1]\n 27512: jump @1080 if a0 >u 63\n      : @1079 (gas: 2)\n 27516: u32 [a1 + 0] = 0x40\n 27519: fallthrough\n      : @1080 (gas: 4)\n 27520: a0 = sp + 0xffffffffffffffe0\n 27523: a0 = a0 & 0xffffffffffffffe0\n 27526: u64 [s1 + 0x40] = a0\n 27529: t0 = 1070, jump @1406\n      : @1081 [@dyn 535] (gas: 5)\n 27535: ra = 0x430\n 27539: ecalli 6 // 'hash_keccak_256'\n 27541: a3 = u64 [s1 + 0x40]\n 27544: t0 = 0x432\n 27548: jump @1405\n      : @1082 [@dyn 536] (gas: 2)\n 27551: a3 = u64 [s1 + 0x40]\n 27554: t0 = 1074, jump @1405\n      : @1083 [@dyn 537] (gas: 21)\n 27560: u64 [s1 + 0x38] = a0\n 27563: a0 = reverse a1\n 27565: u64 [s1 + 0x30] = a0\n 27568: a0 = reverse a2\n 27570: u64 [s1 + 0x20] = a0\n 27573: a0 = reverse a3\n 27575: u64 [s1 + 0x18] = a0\n 27578: a0 = sp + 0xffffffffffffffe0\n 27581: a0 = a0 & 0xffffffffffffffe0\n 27584: u64 [s1 + 0x40] = a0\n 27587: sp = a0\n 27589: u64 [s1 + 504] = 0\n 27593: a0 = u64 [s1 + 0x78]\n 27596: u64 [s1 + 0x1f0] = a0\n 27600: a0 = u64 [s1 + 0x80]\n 27604: u64 [s1 + 0x1e8] = a0\n 27608: a1 = s1 + 0x1e0\n 27612: a0 = u64 [s1 + 0x88]\n 27616: u64 [s1 + 0x1e0] = a0\n 27620: a0 = 0\n 27622: ra = 1076, jump @19\n      : @1084 [@dyn 538] (gas: 12)\n 27628: a0 = u64 [s1 + 0x18]\n 27631: a3 = s1 + 0x100\n 27635: u64 [a3 + 0xd8] = a0\n 27639: a0 = u64 [s1 + 0x20]\n 27642: u64 [a3 + 0xd0] = a0\n 27646: a0 = u64 [s1 + 0x30]\n 27649: u64 [a3 + 0xc8] = a0\n 27653: a0 = 0x20\n 27656: a1 = s1 + 0x1c0\n 27660: a2 = u64 [s1 + 0x38]\n 27663: u64 [a3 + 0xc0] = a2\n 27667: ra = 1078, jump @19\n      : @1085 [@dyn 539] (gas: 3)\n 27673: a1 = u64 [s1 + 0xb0]\n 27677: a0 = i32 [a1]\n 27679: jump @1087 if a0 >u 63\n      : @1086 (gas: 2)\n 27683: u32 [a1 + 0] = 0x40\n 27686: fallthrough\n      : @1087 (gas: 4)\n 27687: a0 = sp + 0xffffffffffffffe0\n 27690: a0 = a0 & 0xffffffffffffffe0\n 27693: u64 [s1 + 0xb0] = a0\n 27697: t0 = 1080, jump @1406\n      : @1088 [@dyn 540] (gas: 43)\n 27703: ecalli 6 // 'hash_keccak_256'\n 27705: a2 = u64 [s1 + 0xb0]\n 27709: a0 = u64 [a2]\n 27711: a0 = reverse a0\n 27713: a1 = u64 [a2 + 0x8]\n 27716: a5 = u64 [s1 + 0x40]\n 27719: u64 [a5 + 0x18] = a0\n 27722: a0 = u64 [a2 + 0x10]\n 27725: a2 = u64 [a2 + 0x18]\n 27728: a1 = reverse a1\n 27730: u64 [a5 + 0x10] = a1\n 27733: a0 = reverse a0\n 27735: u64 [a5 + 0x8] = a0\n 27738: a0 = reverse a2\n 27740: u64 [a5] = a0\n 27742: a0 = u64 [s1 + 0x90]\n 27746: a1 = u64 [s1 + 0x58]\n 27749: a0 = a1 - a0\n 27752: a2 = u64 [s1 + 0x48]\n 27755: a1 = a0 - a2\n 27758: a0 = a0 <u a2\n 27761: a2 = u64 [s1 + 0x98]\n 27765: a3 = u64 [s1 + 0x60]\n 27768: a2 = a3 - a2\n 27771: a3 = u64 [s1 + 0x28]\n 27774: a2 = a2 - a3\n 27777: a2 = a2 - a0\n 27780: a0 = u64 [s1 + 0xa0]\n 27784: a3 = u64 [s1 + 0x68]\n 27787: a0 = a3 - a0\n 27790: a3 = u64 [s1 + 0x50]\n 27793: a0 = a0 - a3\n 27796: a3 = u64 [s1 + 0xa8]\n 27800: a4 = u64 [s1 + 0x70]\n 27803: a3 = a4 - a3\n 27806: a4 = s1 + 0x200\n 27810: u64 [a4 + 0xf8] = a2\n 27814: u64 [a4 + 0xf0] = a1\n 27818: u64 [a4 + 0xe8] = a0\n 27822: u64 [a4 + 0xe0] = a3\n 27826: a1 = s1 + 0x2e0\n 27830: a0 = a5\n 27832: ra = 1082, jump @24\n      : @1089 [@dyn 541] (gas: 7)\n 27838: sp = s0 + 0xfffffffffffffce0\n 27842: a0 = sp + 0x300\n 27846: ra = u64 [a0 + 0x18]\n 27849: s0 = u64 [a0 + 0x10]\n 27852: s1 = u64 [a0 + 0x8]\n 27855: sp = sp + 0x320\n 27859: ret\n      : @1090 (gas: 8)\n 27861: u64 [s1 + 304] = 0\n 27865: u64 [s1 + 296] = 0\n 27869: u64 [s1 + 288] = 0\n 27873: a0 = 0xfb8f41b200000000\n 27883: a1 = s1 + 0x120\n 27887: u64 [s1 + 0x138] = a0\n 27891: a0 = 0\n 27893: ra = 1084, jump @19\n      : @1091 [@dyn 542] (gas: 11)\n 27899: u64 [s1 + 280] = 0\n 27903: a0 = u64 [s1 + 0x78]\n 27906: a3 = s1 + 0x100\n 27910: u64 [a3 + 0x10] = a0\n 27913: a0 = u64 [s1 + 0x80]\n 27917: u64 [a3 + 0x8] = a0\n 27920: a0 = 0x4\n 27923: a1 = s1 + 0x100\n 27927: a2 = u64 [s1 + 0x88]\n 27931: u64 [a3] = a2\n 27933: ra = 1086, jump @19\n      : @1092 [@dyn 543] (gas: 11)\n 27939: a0 = u64 [s1 + 0x60]\n 27942: u64 [s1 + 0xf8] = a0\n 27946: a0 = u64 [s1 + 0x58]\n 27949: u64 [s1 + 0xf0] = a0\n 27953: a0 = u64 [s1 + 0x68]\n 27956: u64 [s1 + 0xe8] = a0\n 27960: a0 = 0x24\n 27963: a1 = s1 + 0xe0\n 27967: a2 = u64 [s1 + 0x70]\n 27970: u64 [s1 + 0xe0] = a2\n 27974: ra = 1088, jump @19\n      : @1093 [@dyn 544] (gas: 11)\n 27980: a0 = u64 [s1 + 0x98]\n 27984: u64 [s1 + 0xd8] = a0\n 27988: a0 = u64 [s1 + 0x90]\n 27992: u64 [s1 + 0xd0] = a0\n 27996: a0 = u64 [s1 + 0xa0]\n 28000: u64 [s1 + 0xc8] = a0\n 28004: a0 = 0x44\n 28007: a1 = s1 + 0xc0\n 28011: a2 = u64 [s1 + 0xa8]\n 28015: u64 [s1 + 0xc0] = a2\n 28019: ra = 1090, jump @19\n      : @1094 [@dyn 545] (gas: 3)\n 28025: a0 = u64 [s1 + 0xb0]\n 28029: a0 = i32 [a0]\n 28031: jump @1096 if a0 >u 127\n      : @1095 (gas: 5)\n 28035: a1 = u64 [s1 + 0xb0]\n 28039: u32 [a1 + 0] = 0x80\n 28043: a0 = 0x1\n 28046: a2 = 0x64\n 28049: jump @1104\n      : @1096 (gas: 6)\n 28052: a0 = 0x1\n 28055: a2 = 0x64\n 28058: a1 = u64 [s1 + 0xb8]\n 28062: ra = 0x44a\n 28066: ecalli 7 // 'seal_return'\n 28068: jump @1105\n      : @1097 (gas: 8)\n 28071: u64 [s1 + 368] = 0\n 28075: u64 [s1 + 360] = 0\n 28079: u64 [s1 + 352] = 0\n 28083: a0 = 0xe602df0500000000\n 28093: a1 = s1 + 0x160\n 28097: u64 [s1 + 0x178] = a0\n 28101: a0 = 0\n 28103: ra = 1092, jump @19\n      : @1098 [@dyn 546] (gas: 8)\n 28109: u64 [s1 + 344] = 0\n 28113: u64 [s1 + 336] = 0\n 28117: u64 [s1 + 328] = 0\n 28121: a0 = 0x4\n 28124: a1 = s1 + 0x140\n 28128: u64 [s1 + 320] = 0\n 28132: ra = 0x448\n 28136: jump @19\n      : @1099 (gas: 8)\n 28139: u64 [s1 + 432] = 0\n 28143: u64 [s1 + 424] = 0\n 28147: u64 [s1 + 416] = 0\n 28151: a0 = 0x94280d6200000000\n 28161: a1 = s1 + 0x1a0\n 28165: u64 [s1 + 0x1b8] = a0\n 28169: a0 = 0\n 28171: ra = 1094, jump @19\n      : @1100 [@dyn 547] (gas: 7)\n 28177: u64 [s1 + 408] = 0\n 28181: u64 [s1 + 400] = 0\n 28185: u64 [s1 + 392] = 0\n 28189: a0 = 0x4\n 28192: a1 = s1 + 0x180\n 28196: u64 [s1 + 384] = 0\n 28200: ra = 1096, jump @19\n      : @1101 [@dyn 548] (gas: 3)\n 28206: a0 = u64 [s1 + 0xb0]\n 28210: a0 = i32 [a0]\n 28212: jump @1103 if a0 >u 63\n      : @1102 (gas: 5)\n 28216: a1 = u64 [s1 + 0xb0]\n 28220: u32 [a1 + 0] = 0x40\n 28223: a0 = 0x1\n 28226: a2 = 0x24\n 28229: jump @1104\n      : @1103 (gas: 6)\n 28231: a0 = 0x1\n 28234: a2 = 0x24\n 28237: a1 = u64 [s1 + 0xb8]\n 28241: ra = 0x44a\n 28245: ecalli 7 // 'seal_return'\n 28247: jump @1105\n      : @1104 (gas: 4)\n 28249: a1 = u64 [s1 + 0xb8]\n 28253: ra = 0x44a\n 28257: ecalli 7 // 'seal_return'\n 28259: fallthrough\n      : @1105 [@dyn 549] (gas: 17)\n 28260: sp = sp + 0xfffffffffffffc20\n 28264: a3 = sp + 0x300\n 28268: u64 [a3 + 0xd8] = ra\n 28272: u64 [a3 + 0xd0] = s0\n 28276: u64 [a3 + 0xc8] = s1\n 28280: s0 = sp + 0x3e0\n 28284: sp = sp & 0xffffffffffffffe0\n 28287: s1 = sp\n 28289: a5 = u32 [a0 + 0x10]\n 28292: a3 = u64 [a0]\n 28294: a4 = u64 [a0 + 0x8]\n 28297: u64 [s1 + 0x78] = a3\n 28300: u64 [s1 + 0x68] = a5\n 28303: a0 = a3 | a5\n 28306: u64 [s1 + 0x70] = a4\n 28309: a0 = a0 | a4\n 28312: jump @1139 if a0 == 0\n      : @1106 (gas: 14)\n 28316: a0 = u64 [a1 + 0x10]\n 28319: a3 = u64 [a1 + 0x8]\n 28322: a1 = u64 [a1]\n 28324: a4 = 0xffffffffffffffff\n 28327: a5 = 0xffffffff\n 28337: a3 = a3 & a4\n 28340: a1 = a1 & a4\n 28343: a0 = a0 & a5\n 28346: u64 [s1 + 0x48] = a1\n 28349: u64 [s1 + 0x38] = a0\n 28352: a0 = a0 | a1\n 28355: u64 [s1 + 0x40] = a3\n 28358: a0 = a0 | a3\n 28361: jump @1144 if a0 == 0\n      : @1107 (gas: 9)\n 28365: a0 = u64 [a2 + 0x18]\n 28368: u64 [s1 + 0x98] = a0\n 28372: a0 = u64 [a2 + 0x10]\n 28375: u64 [s1 + 0x88] = a0\n 28379: a0 = u64 [a2 + 0x8]\n 28382: u64 [s1 + 0x80] = a0\n 28386: a0 = u64 [a2]\n 28388: u64 [s1 + 0x90] = a0\n 28392: ra = 1100, jump @1338\n      : @1108 [@dyn 550] (gas: 11)\n 28398: u64 [s1 + 824] = 0\n 28402: a0 = u64 [s1 + 0x68]\n 28405: a2 = s1 + 0x300\n 28409: u64 [a2 + 0x30] = a0\n 28412: a0 = u64 [s1 + 0x70]\n 28415: u64 [a2 + 0x28] = a0\n 28418: a1 = s1 + 0x320\n 28422: a0 = u64 [s1 + 0x78]\n 28425: u64 [a2 + 0x20] = a0\n 28428: a0 = 0\n 28430: ra = 1102, jump @19\n      : @1109 [@dyn 551] (gas: 7)\n 28436: u64 [s1 + 792] = 0\n 28440: u64 [s1 + 784] = 0\n 28444: u64 [s1 + 776] = 0\n 28448: a0 = 0x20\n 28451: a1 = s1 + 0x300\n 28455: u64 [s1 + 768] = 0\n 28459: ra = 1104, jump @19\n      : @1110 [@dyn 552] (gas: 3)\n 28465: a2 = 0x20264\n 28470: a0 = i32 [0x20264]\n 28475: jump @1112 if a0 >u 63\n      : @1111 (gas: 2)\n 28479: u32 [0x20264] = 0x40\n 28485: fallthrough\n      : @1112 (gas: 15)\n 28486: u64 [s1 + 0x58] = a2\n 28489: a0 = sp + 0xffffffffffffffe0\n 28492: a2 = a0 & 0xffffffffffffffe0\n 28495: u64 [s1 + 0x50] = a2\n 28498: sp = a2\n 28500: a0 = 0x20270\n 28505: i32 a0 = a0 + 0\n 28507: i32 a2 = a2 + 0\n 28509: a1 = 0x40\n 28512: u64 [s1 + 0x60] = a0\n 28515: ra = 0x452\n 28519: ecalli 6 // 'hash_keccak_256'\n 28521: a3 = u64 [s1 + 0x50]\n 28524: t0 = 0x454\n 28528: jump @1395\n      : @1113 [@dyn 553] (gas: 2)\n 28531: a3 = u64 [s1 + 0x50]\n 28534: t0 = 1108, jump @1395\n      : @1114 [@dyn 554] (gas: 7)\n 28540: u64 [a4 + 0x58] = a3\n 28543: u64 [a4 + 0x50] = a2\n 28546: u64 [a4 + 0x48] = a1\n 28549: u64 [a4 + 0x40] = a0\n 28552: a0 = s1 + 0x2e0\n 28556: a1 = s1 + 0x340\n 28560: ra = 1110, jump @21\n      : @1115 [@dyn 555] (gas: 28)\n 28566: a1 = s1 + 0x200\n 28570: a2 = u64 [a1 + 0xf8]\n 28574: a0 = u64 [a1 + 0xf0]\n 28578: a5 = u64 [a1 + 0xe8]\n 28582: a4 = u64 [a1 + 0xe0]\n 28586: a1 = u64 [s1 + 0x98]\n 28590: t1 = a2 ^ a1\n 28593: u64 [s1 + 0x28] = a2\n 28596: a1 = a2 <u a1\n 28599: a2 = u64 [s1 + 0x88]\n 28603: a3 = a0 <u a2\n 28606: u64 [s1 + 0x10] = a3\n 28609: a1 = a3 if t1 == 0\n 28612: a3 = u64 [s1 + 0x80]\n 28616: t0 = a5 ^ a3\n 28619: u64 [s1 + 0x30] = a5\n 28622: a5 = a5 <u a3\n 28625: a3 = u64 [s1 + 0x90]\n 28629: u64 [s1 + 0x50] = a4\n 28632: a3 = a4 <u a3\n 28635: u64 [s1 + 0x18] = a3\n 28638: a5 = a3 if t0 == 0\n 28641: u64 [s1 + 0x20] = a0\n 28644: a2 = a2 ^ a0\n 28647: a0 = a2 | t1\n 28650: u64 [s1 + 0x8] = a5\n 28653: a1 = a5 if a0 == 0\n 28656: jump @1150 if a1 != 0\n      : @1116 (gas: 11)\n 28660: u64 [s1 + 728] = 0\n 28664: a0 = u64 [s1 + 0x78]\n 28667: a2 = s1 + 0x200\n 28671: u64 [a2 + 0xc0] = a0\n 28675: a0 = u64 [s1 + 0x70]\n 28678: u64 [a2 + 0xc8] = a0\n 28682: a1 = s1 + 0x2c0\n 28686: a0 = u64 [s1 + 0x68]\n 28689: u64 [a2 + 0xd0] = a0\n 28693: a0 = 0\n 28695: ra = 1112, jump @19\n      : @1117 [@dyn 556] (gas: 7)\n 28701: u64 [s1 + 696] = 0\n 28705: u64 [s1 + 688] = 0\n 28709: u64 [s1 + 680] = 0\n 28713: a0 = 0x20\n 28716: a1 = s1 + 0x2a0\n 28720: u64 [s1 + 672] = 0\n 28724: ra = 1114, jump @19\n      : @1118 [@dyn 557] (gas: 28)\n 28730: a0 = u64 [s1 + 0x88]\n 28734: a1 = u64 [s1 + 0x20]\n 28737: a0 = a1 - a0\n 28740: a2 = u64 [s1 + 0x8]\n 28743: a1 = a0 - a2\n 28746: u64 [s1 + 0x20] = a1\n 28749: a0 = a0 <u a2\n 28752: a1 = u64 [s1 + 0x98]\n 28756: a2 = u64 [s1 + 0x28]\n 28759: a1 = a2 - a1\n 28762: a2 = u64 [s1 + 0x10]\n 28765: a1 = a1 - a2\n 28768: a1 = a1 - a0\n 28771: u64 [s1 + 0x28] = a1\n 28774: a2 = u64 [s1 + 0x58]\n 28777: a0 = i32 [a2]\n 28779: a1 = u64 [s1 + 0x80]\n 28783: a3 = u64 [s1 + 0x30]\n 28786: a1 = a3 - a1\n 28789: a3 = u64 [s1 + 0x18]\n 28792: a1 = a1 - a3\n 28795: u64 [s1 + 0x30] = a1\n 28798: a4 = 0x3f\n 28801: a1 = u64 [s1 + 0x90]\n 28805: a3 = u64 [s1 + 0x50]\n 28808: a3 = a3 - a1\n 28811: u64 [s1 + 0x50] = a3\n 28814: jump @1120 if a4 <u a0\n      : @1119 (gas: 2)\n 28817: u32 [a2 + 0] = 0x40\n 28820: fallthrough\n      : @1120 (gas: 4)\n 28821: a0 = sp + 0xffffffffffffffe0\n 28824: a0 = a0 & 0xffffffffffffffe0\n 28827: u64 [s1 + 0x18] = a0\n 28830: t0 = 1116, jump @1365\n      : @1121 [@dyn 558] (gas: 5)\n 28836: ra = 0x45e\n 28840: ecalli 6 // 'hash_keccak_256'\n 28842: a3 = u64 [s1 + 0x18]\n 28845: t0 = 0x460\n 28849: jump @1395\n      : @1122 [@dyn 559] (gas: 2)\n 28852: a3 = u64 [s1 + 0x18]\n 28855: t0 = 1120, jump @1395\n      : @1123 [@dyn 560] (gas: 15)\n 28861: u64 [a4 + 0x78] = a3\n 28864: u64 [a4 + 0x70] = a2\n 28867: u64 [a4 + 0x68] = a1\n 28870: u64 [a4 + 0x60] = a0\n 28873: a0 = u64 [s1 + 0x28]\n 28876: u64 [a4 + 0x98] = a0\n 28880: a0 = u64 [s1 + 0x20]\n 28883: u64 [a4 + 0x90] = a0\n 28887: a0 = u64 [s1 + 0x30]\n 28890: u64 [a4 + 0x88] = a0\n 28894: a0 = u64 [s1 + 0x50]\n 28897: u64 [a4 + 0x80] = a0\n 28901: a0 = s1 + 0x360\n 28905: a1 = s1 + 0x380\n 28909: ra = 1122, jump @24\n      : @1124 [@dyn 561] (gas: 11)\n 28915: u64 [s1 + 664] = 0\n 28919: a0 = u64 [s1 + 0x38]\n 28922: a2 = s1 + 0x200\n 28926: u64 [a2 + 0x90] = a0\n 28930: a0 = u64 [s1 + 0x40]\n 28933: u64 [a2 + 0x88] = a0\n 28937: a1 = s1 + 0x280\n 28941: a0 = u64 [s1 + 0x48]\n 28944: u64 [a2 + 0x80] = a0\n 28948: a0 = 0\n 28950: ra = 1124, jump @19\n      : @1125 [@dyn 562] (gas: 1)\n 28956: t0 = 1126, jump @1410\n      : @1126 [@dyn 563] (gas: 1)\n 28962: ra = 1128, jump @19\n      : @1127 [@dyn 564] (gas: 7)\n 28968: a1 = u64 [s1 + 0x58]\n 28971: a0 = sp + 0xffffffffffffffe0\n 28974: a0 = a0 & 0xffffffffffffffe0\n 28977: u64 [s1 + 0x50] = a0\n 28980: sp = a0\n 28982: a0 = i32 [a1]\n 28984: jump @1129 if a0 >u 63\n      : @1128 (gas: 2)\n 28988: u32 [a1 + 0] = 0x40\n 28991: fallthrough\n      : @1129 (gas: 4)\n 28992: a0 = sp + 0xffffffffffffffe0\n 28995: a0 = a0 & 0xffffffffffffffe0\n 28998: u64 [s1 + 0x58] = a0\n 29001: t0 = 1130, jump @1365\n      : @1130 [@dyn 565] (gas: 17)\n 29007: ecalli 6 // 'hash_keccak_256'\n 29009: a3 = u64 [s1 + 0x58]\n 29012: a0 = u64 [a3 + 0x18]\n 29015: a1 = u64 [a3 + 0x10]\n 29018: a2 = u64 [a3 + 0x8]\n 29021: a3 = u64 [a3]\n 29023: a0 = reverse a0\n 29025: a4 = reverse a1\n 29027: a2 = reverse a2\n 29029: a3 = reverse a3\n 29031: a1 = u64 [s1 + 0x50]\n 29034: u64 [a1 + 0x18] = a3\n 29037: u64 [a1 + 0x10] = a2\n 29040: u64 [a1 + 0x8] = a4\n 29043: u64 [a1] = a0\n 29045: a0 = s1 + 0x240\n 29049: ra = 1132, jump @21\n      : @1131 [@dyn 566] (gas: 30)\n 29055: a0 = u64 [s1 + 0x248]\n 29059: a1 = u64 [s1 + 0x240]\n 29063: t0 = u64 [s1 + 0x258]\n 29067: a3 = u64 [s1 + 0x250]\n 29071: a4 = u64 [s1 + 0x80]\n 29075: a4 = a4 + a0\n 29078: a5 = u64 [s1 + 0x90]\n 29082: a5 = a5 + a1\n 29085: a1 = a5 <u a1\n 29088: a4 = a4 + a1\n 29091: a2 = a4 ^ a0\n 29094: a0 = a4 <u a0\n 29097: a0 = a1 if a2 == 0\n 29100: a1 = u64 [s1 + 0x88]\n 29104: a1 = a1 + a3\n 29107: a2 = u64 [s1 + 0x98]\n 29111: t0 = t0 + a2\n 29114: a2 = a1 <u a3\n 29117: a2 = a2 + t0\n 29120: a0 = a0 + a1\n 29123: a1 = a0 <u a1\n 29126: a1 = a1 + a2\n 29129: a2 = s1 + 0x300\n 29133: u64 [a2 + 0xa0] = a5\n 29137: u64 [a2 + 0xa8] = a4\n 29141: u64 [a2 + 0xb0] = a0\n 29145: u64 [a2 + 0xb8] = a1\n 29149: a1 = s1 + 0x3a0\n 29153: a0 = u64 [s1 + 0x50]\n 29156: ra = 1134, jump @24\n      : @1132 [@dyn 567] (gas: 3)\n 29162: a0 = s1 + 0x220\n 29166: a1 = 0x40\n 29169: ra = 1136, jump @17\n      : @1133 [@dyn 568] (gas: 6)\n 29175: a4 = s1 + 0x200\n 29179: a3 = u64 [a4 + 0x38]\n 29182: a1 = u64 [a4 + 0x30]\n 29185: a2 = u64 [a4 + 0x28]\n 29188: a0 = u64 [a4 + 0x20]\n 29191: t0 = 1138, jump @1368\n      : @1134 [@dyn 569] (gas: 1)\n 29197: jump @1138 if a1 != 0\n      : @1135 (gas: 12)\n 29201: a1 = u64 [s1 + 0x90]\n 29205: a3 = s1 + 0x200\n 29209: u64 [a3] = a1\n 29211: a1 = u64 [s1 + 0x80]\n 29215: u64 [a3 + 0x8] = a1\n 29218: a1 = u64 [s1 + 0x88]\n 29222: u64 [a3 + 0x10] = a1\n 29225: a1 = s1 + 0x200\n 29229: a2 = u64 [s1 + 0x98]\n 29233: u64 [a3 + 0x18] = a2\n 29236: u64 [s1 + 0x98] = a0\n 29240: ra = 1140, jump @19\n      : @1136 [@dyn 570] (gas: 29)\n 29246: u64 [s1 + 440] = 0\n 29250: a0 = u64 [s1 + 0x38]\n 29253: a5 = s1 + 0x100\n 29257: u64 [a5 + 0xb0] = a0\n 29261: a0 = u64 [s1 + 0x40]\n 29264: u64 [a5 + 0xa8] = a0\n 29268: a0 = u64 [s1 + 0x48]\n 29271: u64 [a5 + 0xa0] = a0\n 29275: u64 [s1 + 472] = 0\n 29279: a0 = u64 [s1 + 0x68]\n 29282: u64 [a5 + 0xd0] = a0\n 29286: a0 = u64 [s1 + 0x70]\n 29289: u64 [a5 + 0xc8] = a0\n 29293: a0 = u64 [0x201c0]\n 29298: a1 = u64 [0x201c8]\n 29303: a2 = u64 [0x201d0]\n 29308: a3 = u64 [s1 + 0x78]\n 29311: u64 [a5 + 0xc0] = a3\n 29315: u64 [a5 + 0xf8] = a0\n 29319: u64 [a5 + 0xf0] = a1\n 29323: u64 [a5 + 0xe8] = a2\n 29327: a0 = u64 [0x201d8]\n 29332: a1 = 0x20\n 29335: a2 = s1 + 0x1e0\n 29339: a3 = s1 + 0x1c0\n 29343: a4 = s1 + 0x1a0\n 29347: u64 [a5 + 0xe0] = a0\n 29351: a0 = u64 [s1 + 0x98]\n 29355: ra = 1142, jump @27\n      : @1137 [@dyn 571] (gas: 7)\n 29361: sp = s0 + 0xfffffffffffffc20\n 29365: a0 = sp + 0x300\n 29369: ra = u64 [a0 + 0xd8]\n 29373: s0 = u64 [a0 + 0xd0]\n 29377: s1 = u64 [a0 + 0xc8]\n 29381: sp = sp + 0x3e0\n 29385: ret\n      : @1138 (gas: 1)\n 29387: trap\n      : @1139 (gas: 8)\n 29388: u64 [s1 + 208] = 0\n 29392: u64 [s1 + 200] = 0\n 29396: u64 [s1 + 192] = 0\n 29400: a0 = 0x96c6fd1e00000000\n 29410: a1 = s1 + 0xc0\n 29414: u64 [s1 + 0xd8] = a0\n 29418: a0 = 0\n 29420: ra = 1144, jump @19\n      : @1140 [@dyn 572] (gas: 7)\n 29426: u64 [s1 + 184] = 0\n 29430: u64 [s1 + 176] = 0\n 29434: u64 [s1 + 168] = 0\n 29438: a0 = 0x4\n 29441: a1 = s1 + 0xa0\n 29445: u64 [s1 + 160] = 0\n 29449: ra = 1146, jump @19\n      : @1141 [@dyn 573] (gas: 2)\n 29455: a1 = i32 [0x20264]\n 29460: jump @1143 if a1 >u 63\n      : @1142 (gas: 3)\n 29464: u32 [0x20264] = 0x40\n 29470: a1 = 0x20270\n 29475: jump @1149\n      : @1143 (gas: 2)\n 29477: a1 = 0x20270\n 29482: jump @1149\n      : @1144 (gas: 8)\n 29484: u64 [s1 + 272] = 0\n 29488: u64 [s1 + 264] = 0\n 29492: u64 [s1 + 256] = 0\n 29496: a0 = 0xec442f0500000000\n 29506: a1 = s1 + 0x100\n 29510: u64 [s1 + 0x118] = a0\n 29514: a0 = 0\n 29516: ra = 1148, jump @19\n      : @1145 [@dyn 574] (gas: 7)\n 29522: u64 [s1 + 248] = 0\n 29526: u64 [s1 + 240] = 0\n 29530: u64 [s1 + 232] = 0\n 29534: a0 = 0x4\n 29537: a1 = s1 + 0xe0\n 29541: u64 [s1 + 224] = 0\n 29545: ra = 1150, jump @19\n      : @1146 [@dyn 575] (gas: 2)\n 29551: a1 = i32 [0x20264]\n 29556: jump @1148 if a1 >u 63\n      : @1147 (gas: 3)\n 29560: u32 [0x20264] = 0x40\n 29566: a1 = 0x20270\n 29571: jump @1149\n      : @1148 (gas: 2)\n 29573: a1 = 0x20270\n 29578: fallthrough\n      : @1149 (gas: 5)\n 29579: i32 a1 = a1 + 0\n 29581: a0 = 0x1\n 29584: a2 = 0x24\n 29587: ecalli 7 // 'seal_return'\n 29589: fallthrough\n      : @1150 (gas: 8)\n 29590: u64 [s1 + 400] = 0\n 29594: u64 [s1 + 392] = 0\n 29598: u64 [s1 + 384] = 0\n 29602: a0 = 0xe450d38c00000000\n 29612: a1 = s1 + 0x180\n 29616: u64 [s1 + 0x198] = a0\n 29620: a0 = 0\n 29622: ra = 1152, jump @19\n      : @1151 [@dyn 576] (gas: 10)\n 29628: u64 [s1 + 376] = 0\n 29632: a0 = u64 [s1 + 0x68]\n 29635: u64 [s1 + 0x170] = a0\n 29639: a0 = u64 [s1 + 0x70]\n 29642: u64 [s1 + 0x168] = a0\n 29646: a0 = 0x4\n 29649: a1 = s1 + 0x160\n 29653: a2 = u64 [s1 + 0x78]\n 29656: u64 [s1 + 0x160] = a2\n 29660: ra = 1154, jump @19\n      : @1152 [@dyn 577] (gas: 11)\n 29666: a0 = u64 [s1 + 0x28]\n 29669: u64 [s1 + 0x158] = a0\n 29673: a0 = u64 [s1 + 0x20]\n 29676: u64 [s1 + 0x150] = a0\n 29680: a0 = u64 [s1 + 0x30]\n 29683: u64 [s1 + 0x148] = a0\n 29687: a0 = 0x24\n 29690: a1 = s1 + 0x140\n 29694: a2 = u64 [s1 + 0x50]\n 29697: u64 [s1 + 0x140] = a2\n 29701: ra = 1156, jump @19\n      : @1153 [@dyn 578] (gas: 12)\n 29707: a0 = u64 [s1 + 0x98]\n 29711: a3 = s1 + 0x100\n 29715: u64 [a3 + 0x38] = a0\n 29718: a0 = u64 [s1 + 0x88]\n 29722: u64 [a3 + 0x30] = a0\n 29725: a0 = u64 [s1 + 0x80]\n 29729: u64 [a3 + 0x28] = a0\n 29732: a0 = 0x44\n 29735: a1 = s1 + 0x120\n 29739: a2 = u64 [s1 + 0x90]\n 29743: u64 [a3 + 0x20] = a2\n 29746: ra = 1158, jump @19\n      : @1154 [@dyn 579] (gas: 3)\n 29752: a0 = u64 [s1 + 0x58]\n 29755: a0 = i32 [a0]\n 29757: jump @1156 if a0 >u 127\n      : @1155 (gas: 3)\n 29761: a1 = u64 [s1 + 0x58]\n 29764: u32 [a1 + 0] = 0x80\n 29768: fallthrough\n      : @1156 (gas: 6)\n 29769: a0 = 0x1\n 29772: a2 = 0x64\n 29775: a1 = u64 [s1 + 0x60]\n 29778: ra = 0x488\n 29782: ecalli 7 // 'seal_return'\n 29784: fallthrough\n      : @1157 [@dyn 580] (gas: 22)\n 29785: sp = sp + 0xfffffffffffffe60\n 29789: u64 [sp + 0x198] = ra\n 29793: u64 [sp + 0x190] = s0\n 29797: u64 [sp + 0x188] = s1\n 29801: s0 = sp + 0x1a0\n 29805: sp = sp & 0xffffffffffffffe0\n 29808: s1 = sp\n 29810: a0 = u64 [0x201e0]\n 29815: u64 [s1 + 0x38] = a0\n 29818: u64 [s1 + 0x178] = a0\n 29822: a1 = u64 [0x201e8]\n 29827: a2 = u64 [0x201f0]\n 29832: a0 = u64 [0x201f8]\n 29837: u64 [s1 + 0x28] = a1\n 29840: u64 [s1 + 0x170] = a1\n 29844: u64 [s1 + 0x20] = a2\n 29847: u64 [s1 + 0x168] = a2\n 29851: a1 = s1 + 0x160\n 29855: u64 [s1 + 0x30] = a0\n 29858: u64 [s1 + 0x160] = a0\n 29862: a0 = 0\n 29864: ra = 1162, jump @19\n      : @1158 [@dyn 581] (gas: 1)\n 29870: t0 = 1164, jump @1373\n      : @1159 [@dyn 582] (gas: 1)\n 29876: ra = 1166, jump @19\n      : @1160 [@dyn 583] (gas: 3)\n 29882: a1 = 0x20264\n 29887: a0 = i32 [0x20264]\n 29892: jump @1162 if a0 >u 63\n      : @1161 (gas: 2)\n 29896: u32 [0x20264] = 0x40\n 29902: fallthrough\n      : @1162 (gas: 14)\n 29903: a0 = sp + 0xffffffffffffffe0\n 29906: a2 = a0 & 0xffffffffffffffe0\n 29909: u64 [s1 + 0x68] = a2\n 29912: sp = a2\n 29914: a0 = 0x20270\n 29919: i32 a0 = a0 + 0\n 29921: i32 a2 = a2 + 0\n 29923: u64 [s1 + 0x78] = a1\n 29926: a1 = 0x40\n 29929: u64 [s1 + 0x70] = a0\n 29932: ra = 0x490\n 29936: ecalli 6 // 'hash_keccak_256'\n 29938: t0 = 0x492\n 29942: jump @1374\n      : @1163 [@dyn 584] (gas: 1)\n 29945: t0 = 1170, jump @1374\n      : @1164 [@dyn 585] (gas: 8)\n 29951: a0 = 0x30270\n 29956: u64 [s1 + 0x68] = a0\n 29959: i32 a0 = a0 + 0\n 29961: u64 [s1 + 0x18] = a0\n 29964: ra = 0x494\n 29968: ecalli 3 // 'caller'\n 29970: t0 = 0x496\n 29974: jump @1363\n      : @1165 [@dyn 586] (gas: 1)\n 29977: t0 = 1174, jump @1363\n      : @1166 [@dyn 587] (gas: 1)\n 29983: ra = 1176, jump @19\n      : @1167 [@dyn 588] (gas: 1)\n 29989: t0 = 1178, jump @1392\n      : @1168 [@dyn 589] (gas: 1)\n 29995: ra = 1180, jump @19\n      : @1169 [@dyn 590] (gas: 3)\n 30001: a1 = u64 [s1 + 0x78]\n 30004: a0 = i32 [a1]\n 30006: jump @1171 if a0 >u 63\n      : @1170 (gas: 3)\n 30010: u32 [a1 + 0] = 0x40\n 30013: t0 = 0x49e\n 30017: jump @1414\n      : @1171 (gas: 1)\n 30020: t0 = 1182, jump @1414\n      : @1172 [@dyn 591] (gas: 4)\n 30026: ra = 0x4a0\n 30030: ecalli 6 // 'hash_keccak_256'\n 30032: t0 = 0x4a2\n 30036: jump @1376\n      : @1173 [@dyn 592] (gas: 1)\n 30039: t0 = 1186, jump @1376\n      : @1174 [@dyn 593] (gas: 1)\n 30045: ra = 1188, jump @21\n      : @1175 [@dyn 594] (gas: 2)\n 30051: a0 = u8 [s1 + 0xe0]\n 30055: jump @1177 if a0 == 0\n      : @1176 (gas: 6)\n 30058: sp = s0 + 0xfffffffffffffe60\n 30062: ra = u64 [sp + 0x198]\n 30066: s0 = u64 [sp + 0x190]\n 30070: s1 = u64 [sp + 0x188]\n 30074: sp = sp + 0x1a0\n 30078: ret\n      : @1177 (gas: 1)\n 30080: t0 = 1190, jump @1389\n      : @1178 [@dyn 595] (gas: 1)\n 30086: ra = 1192, jump @19\n      : @1179 [@dyn 596] (gas: 5)\n 30092: a0 = u64 [s1 + 0x18]\n 30095: ra = 0x4aa\n 30099: ecalli 3 // 'caller'\n 30101: t0 = 0x4ac\n 30105: jump @1369\n      : @1180 [@dyn 597] (gas: 1)\n 30108: t0 = 1196, jump @1369\n      : @1181 [@dyn 598] (gas: 1)\n 30114: ra = 1198, jump @19\n      : @1182 [@dyn 599] (gas: 11)\n 30120: a0 = u64 [s1 + 0x38]\n 30123: u64 [s1 + 0x98] = a0\n 30127: a0 = u64 [s1 + 0x28]\n 30130: u64 [s1 + 0x90] = a0\n 30134: a0 = u64 [s1 + 0x20]\n 30137: u64 [s1 + 0x88] = a0\n 30141: a0 = 0x24\n 30144: a1 = s1 + 0x80\n 30148: a2 = u64 [s1 + 0x30]\n 30151: u64 [s1 + 0x80] = a2\n 30155: ra = 1200, jump @19\n      : @1183 [@dyn 600] (gas: 3)\n 30161: a0 = u64 [s1 + 0x78]\n 30164: a0 = i32 [a0]\n 30166: jump @1185 if a0 >u 95\n      : @1184 (gas: 3)\n 30170: a1 = u64 [s1 + 0x78]\n 30173: u32 [a1 + 0] = 0x60\n 30176: fallthrough\n      : @1185 (gas: 6)\n 30177: a0 = 0x1\n 30180: a2 = 0x44\n 30183: a1 = u64 [s1 + 0x70]\n 30186: ra = 0x4b2\n 30190: ecalli 7 // 'seal_return'\n 30192: fallthrough\n      : @1186 [@dyn 601] (gas: 22)\n 30193: sp = sp + 0xfffffffffffffe60\n 30197: u64 [sp + 0x198] = ra\n 30201: u64 [sp + 0x190] = s0\n 30205: u64 [sp + 0x188] = s1\n 30209: s0 = sp + 0x1a0\n 30213: sp = sp & 0xffffffffffffffe0\n 30216: s1 = sp\n 30218: a2 = u64 [a0]\n 30220: a1 = u64 [a0 + 0x8]\n 30223: a3 = u64 [a0 + 0x10]\n 30226: a0 = u64 [a0 + 0x18]\n 30229: u64 [s1 + 0x20] = a0\n 30232: u64 [s1 + 0x178] = a0\n 30236: u64 [s1 + 0x28] = a3\n 30239: u64 [s1 + 0x170] = a3\n 30243: u64 [s1 + 0x30] = a1\n 30246: u64 [s1 + 0x168] = a1\n 30250: a1 = s1 + 0x160\n 30254: u64 [s1 + 0x38] = a2\n 30257: u64 [s1 + 0x160] = a2\n 30261: a0 = 0\n 30263: ra = 1204, jump @19\n      : @1187 [@dyn 602] (gas: 1)\n 30269: t0 = 1206, jump @1373\n      : @1188 [@dyn 603] (gas: 1)\n 30275: ra = 1208, jump @19\n      : @1189 [@dyn 604] (gas: 3)\n 30281: a1 = 0x20264\n 30286: a0 = i32 [0x20264]\n 30291: jump @1191 if a0 >u 63\n      : @1190 (gas: 2)\n 30295: u32 [0x20264] = 0x40\n 30301: fallthrough\n      : @1191 (gas: 14)\n 30302: a0 = sp + 0xffffffffffffffe0\n 30305: a2 = a0 & 0xffffffffffffffe0\n 30308: u64 [s1 + 0x68] = a2\n 30311: sp = a2\n 30313: a0 = 0x20270\n 30318: i32 a0 = a0 + 0\n 30320: i32 a2 = a2 + 0\n 30322: u64 [s1 + 0x78] = a1\n 30325: a1 = 0x40\n 30328: u64 [s1 + 0x70] = a0\n 30331: ra = 0x4ba\n 30335: ecalli 6 // 'hash_keccak_256'\n 30337: t0 = 0x4bc\n 30341: jump @1374\n      : @1192 [@dyn 605] (gas: 1)\n 30344: t0 = 1212, jump @1374\n      : @1193 [@dyn 606] (gas: 8)\n 30350: a0 = 0x30270\n 30355: u64 [s1 + 0x68] = a0\n 30358: i32 a0 = a0 + 0\n 30360: u64 [s1 + 0x18] = a0\n 30363: ra = 0x4be\n 30367: ecalli 3 // 'caller'\n 30369: t0 = 0x4c0\n 30373: jump @1363\n      : @1194 [@dyn 607] (gas: 1)\n 30376: t0 = 1216, jump @1363\n      : @1195 [@dyn 608] (gas: 1)\n 30382: ra = 1218, jump @19\n      : @1196 [@dyn 609] (gas: 1)\n 30388: t0 = 1220, jump @1392\n      : @1197 [@dyn 610] (gas: 1)\n 30394: ra = 1222, jump @19\n      : @1198 [@dyn 611] (gas: 3)\n 30400: a1 = u64 [s1 + 0x78]\n 30403: a0 = i32 [a1]\n 30405: jump @1200 if a0 >u 63\n      : @1199 (gas: 3)\n 30409: u32 [a1 + 0] = 0x40\n 30412: t0 = 0x4c8\n 30416: jump @1414\n      : @1200 (gas: 1)\n 30419: t0 = 1224, jump @1414\n      : @1201 [@dyn 612] (gas: 4)\n 30425: ra = 0x4ca\n 30429: ecalli 6 // 'hash_keccak_256'\n 30431: t0 = 0x4cc\n 30435: jump @1376\n      : @1202 [@dyn 613] (gas: 1)\n 30438: t0 = 1228, jump @1376\n      : @1203 [@dyn 614] (gas: 1)\n 30444: ra = 1230, jump @21\n      : @1204 [@dyn 615] (gas: 2)\n 30450: a0 = u8 [s1 + 0xe0]\n 30454: jump @1206 if a0 == 0\n      : @1205 (gas: 6)\n 30457: sp = s0 + 0xfffffffffffffe60\n 30461: ra = u64 [sp + 0x198]\n 30465: s0 = u64 [sp + 0x190]\n 30469: s1 = u64 [sp + 0x188]\n 30473: sp = sp + 0x1a0\n 30477: ret\n      : @1206 (gas: 1)\n 30479: t0 = 1232, jump @1389\n      : @1207 [@dyn 616] (gas: 1)\n 30485: ra = 1234, jump @19\n      : @1208 [@dyn 617] (gas: 5)\n 30491: a0 = u64 [s1 + 0x18]\n 30494: ra = 0x4d4\n 30498: ecalli 3 // 'caller'\n 30500: t0 = 0x4d6\n 30504: jump @1369\n      : @1209 [@dyn 618] (gas: 1)\n 30507: t0 = 1238, jump @1369\n      : @1210 [@dyn 619] (gas: 1)\n 30513: ra = 1240, jump @19\n      : @1211 [@dyn 620] (gas: 11)\n 30519: a0 = u64 [s1 + 0x20]\n 30522: u64 [s1 + 0x98] = a0\n 30526: a0 = u64 [s1 + 0x28]\n 30529: u64 [s1 + 0x90] = a0\n 30533: a0 = u64 [s1 + 0x30]\n 30536: u64 [s1 + 0x88] = a0\n 30540: a0 = 0x24\n 30543: a1 = s1 + 0x80\n 30547: a2 = u64 [s1 + 0x38]\n 30550: u64 [s1 + 0x80] = a2\n 30554: ra = 1242, jump @19\n      : @1212 [@dyn 621] (gas: 3)\n 30560: a0 = u64 [s1 + 0x78]\n 30563: a0 = i32 [a0]\n 30565: jump @1214 if a0 >u 95\n      : @1213 (gas: 3)\n 30569: a1 = u64 [s1 + 0x78]\n 30572: u32 [a1 + 0] = 0x60\n 30575: fallthrough\n      : @1214 (gas: 7)\n 30576: a0 = 0x1\n 30579: a2 = 0x44\n 30582: a1 = u64 [s1 + 0x70]\n 30585: ra = 0x4dc\n 30589: ecalli 7 // 'seal_return'\n 30591: t0 = 0x4de\n 30595: jump @1402\n      : @1215 [@dyn 622] (gas: 1)\n 30598: t0 = 1246, jump @1402\n      : @1216 [@dyn 623] (gas: 21)\n 30604: u64 [s1 + 0x50] = a3\n 30607: a3 = u64 [a2 + 0x8]\n 30610: u64 [s1 + 0x70] = a3\n 30613: a2 = u64 [a2]\n 30615: u64 [s1 + 0x78] = a2\n 30618: a2 = u64 [a1]\n 30620: a3 = u64 [a1 + 0x8]\n 30623: a4 = u64 [a1 + 0x10]\n 30626: a1 = u64 [a1 + 0x18]\n 30629: u64 [s1 + 0x58] = a0\n 30632: u64 [s1 + 0x8] = a1\n 30635: u64 [s1 + 0x238] = a1\n 30639: u64 [s1 + 0x10] = a4\n 30642: u64 [s1 + 0x230] = a4\n 30646: u64 [s1 + 0x18] = a3\n 30649: u64 [s1 + 0x228] = a3\n 30653: a1 = s1 + 0x220\n 30657: u64 [s1 + 0x20] = a2\n 30660: u64 [s1 + 0x220] = a2\n 30664: a0 = 0\n 30666: ra = 1248, jump @19\n      : @1217 [@dyn 624] (gas: 1)\n 30672: t0 = 1250, jump @1362\n      : @1218 [@dyn 625] (gas: 1)\n 30678: ra = 1252, jump @19\n      : @1219 [@dyn 626] (gas: 3)\n 30684: a1 = 0x20264\n 30689: a0 = i32 [0x20264]\n 30694: jump @1221 if a0 >u 63\n      : @1220 (gas: 2)\n 30698: u32 [0x20264] = 0x40\n 30704: fallthrough\n      : @1221 (gas: 6)\n 30705: a0 = sp + 0xffffffffffffffe0\n 30708: a2 = a0 & 0xffffffffffffffe0\n 30711: u64 [s1 + 0x48] = a2\n 30714: sp = a2\n 30716: a0 = 0x20270\n 30721: t0 = 1254, jump @1420\n      : @1222 [@dyn 627] (gas: 4)\n 30727: ra = 0x4e8\n 30731: ecalli 6 // 'hash_keccak_256'\n 30733: t0 = 0x4ea\n 30737: jump @1348\n      : @1223 [@dyn 628] (gas: 1)\n 30740: t0 = 1258, jump @1348\n      : @1224 [@dyn 629] (gas: 1)\n 30746: ra = 1260, jump @19\n      : @1225 [@dyn 630] (gas: 1)\n 30752: t0 = 1262, jump @1371\n      : @1226 [@dyn 631] (gas: 1)\n 30758: ra = 1264, jump @19\n      : @1227 [@dyn 632] (gas: 3)\n 30764: a1 = u64 [s1 + 0x68]\n 30767: a0 = i32 [a1]\n 30769: jump @1229 if a0 >u 63\n      : @1228 (gas: 3)\n 30773: u32 [a1 + 0] = 0x40\n 30776: t0 = 0x4f2\n 30780: jump @1358\n      : @1229 (gas: 1)\n 30783: t0 = 1266, jump @1358\n      : @1230 [@dyn 633] (gas: 4)\n 30789: ra = 0x4f4\n 30793: ecalli 6 // 'hash_keccak_256'\n 30795: t0 = 0x4f6\n 30799: jump @1355\n      : @1231 [@dyn 634] (gas: 1)\n 30802: t0 = 1270, jump @1355\n      : @1232 [@dyn 635] (gas: 1)\n 30808: ra = 1272, jump @21\n      : @1233 [@dyn 636] (gas: 2)\n 30814: a0 = u8 [s1 + 0x1a0]\n 30818: jump @1235 if a0 == 0\n      : @1234 (gas: 5)\n 30821: a1 = 0\n 30823: a0 = 0\n 30825: a2 = u64 [s1 + 0x58]\n 30828: t0 = 0x51e\n 30832: jump @1360\n      : @1235 (gas: 11)\n 30835: a0 = u64 [s1 + 0x20]\n 30838: u64 [s1 + 0x180] = a0\n 30842: a0 = u64 [s1 + 0x18]\n 30845: u64 [s1 + 0x188] = a0\n 30849: a0 = u64 [s1 + 0x10]\n 30852: u64 [s1 + 0x190] = a0\n 30856: a1 = s1 + 0x180\n 30860: a0 = u64 [s1 + 0x8]\n 30863: u64 [s1 + 0x198] = a0\n 30867: a0 = 0\n 30869: ra = 1274, jump @19\n      : @1236 [@dyn 637] (gas: 1)\n 30875: t0 = 1276, jump @1361\n      : @1237 [@dyn 638] (gas: 1)\n 30881: ra = 1278, jump @19\n      : @1238 [@dyn 639] (gas: 3)\n 30887: a1 = u64 [s1 + 0x68]\n 30890: a0 = i32 [a1]\n 30892: jump @1240 if a0 >u 63\n      : @1239 (gas: 3)\n 30896: u32 [a1 + 0] = 0x40\n 30899: t0 = 0x500\n 30903: jump @1358\n      : @1240 (gas: 1)\n 30906: t0 = 1280, jump @1358\n      : @1241 [@dyn 640] (gas: 4)\n 30912: ra = 0x502\n 30916: ecalli 6 // 'hash_keccak_256'\n 30918: t0 = 0x504\n 30922: jump @1349\n      : @1242 [@dyn 641] (gas: 1)\n 30925: t0 = 1284, jump @1349\n      : @1243 [@dyn 642] (gas: 1)\n 30931: ra = 1286, jump @19\n      : @1244 [@dyn 643] (gas: 1)\n 30937: t0 = 1288, jump @1372\n      : @1245 [@dyn 644] (gas: 1)\n 30943: ra = 1290, jump @19\n      : @1246 [@dyn 645] (gas: 3)\n 30949: a1 = u64 [s1 + 0x68]\n 30952: a0 = i32 [a1]\n 30954: jump @1248 if a0 >u 63\n      : @1247 (gas: 2)\n 30958: u32 [a1 + 0] = 0x40\n 30961: fallthrough\n      : @1248 (gas: 4)\n 30962: a0 = sp + 0xffffffffffffffe0\n 30965: a0 = a0 & 0xffffffffffffffe0\n 30968: u64 [s1 + 0x68] = a0\n 30971: t0 = 1292, jump @1365\n      : @1249 [@dyn 646] (gas: 4)\n 30977: ra = 0x50e\n 30981: ecalli 6 // 'hash_keccak_256'\n 30983: t0 = 0x510\n 30987: jump @1357\n      : @1250 [@dyn 647] (gas: 1)\n 30990: t0 = 1296, jump @1357\n      : @1251 [@dyn 648] (gas: 1)\n 30996: ra = 1298, jump @21\n      : @1252 [@dyn 649] (gas: 1)\n 31002: t0 = 1300, jump @1359\n      : @1253 [@dyn 650] (gas: 1)\n 31008: ra = 1302, jump @24\n      : @1254 [@dyn 651] (gas: 8)\n 31014: a0 = 0x30270\n 31019: u64 [s1 + 0x68] = a0\n 31022: i32 a0 = a0 + 0\n 31024: ra = 0x518\n 31028: ecalli 3 // 'caller'\n 31030: a2 = u64 [s1 + 0x68]\n 31033: t0 = 0x51a\n 31037: jump @1352\n      : @1255 [@dyn 652] (gas: 2)\n 31040: a2 = u64 [s1 + 0x68]\n 31043: t0 = 1306, jump @1352\n      : @1256 [@dyn 653] (gas: 40)\n 31049: t0 = a1 | a0\n 31052: a3 = a3 >> 0x20\n 31055: a2 = reverse a2\n 31057: a1 = a2 << 0x20\n 31060: a1 = a1 | a3\n 31063: a2 = a2 >> 0x20\n 31066: u64 [s1 + 152] = 0\n 31070: u64 [s1 + 184] = 0\n 31074: a0 = u64 [s1]\n 31076: u64 [s1 + 0xb0] = a0\n 31080: a0 = u64 [s1 + 0x70]\n 31083: u64 [s1 + 0xa8] = a0\n 31087: a0 = u64 [s1 + 0x78]\n 31090: u64 [s1 + 0xa0] = a0\n 31094: a0 = u64 [s1 + 0x8]\n 31097: u64 [s1 + 0xd8] = a0\n 31101: a0 = u64 [s1 + 0x10]\n 31104: u64 [s1 + 0xd0] = a0\n 31108: a0 = u64 [s1 + 0x18]\n 31111: u64 [s1 + 0xc8] = a0\n 31115: a0 = u64 [s1 + 0x20]\n 31118: u64 [s1 + 0xc0] = a0\n 31122: a3 = u64 [0x20200]\n 31127: a4 = u64 [0x20208]\n 31132: a5 = u64 [0x20210]\n 31137: a0 = u64 [0x20218]\n 31142: u64 [s1 + 0xf8] = a3\n 31146: u64 [s1 + 0xf0] = a4\n 31150: u64 [s1 + 0xe8] = a5\n 31154: u64 [s1 + 0xe0] = a0\n 31158: u64 [s1 + 0x90] = a2\n 31162: u64 [s1 + 0x88] = a1\n 31166: a2 = s1 + 0xe0\n 31170: a3 = s1 + 0xc0\n 31174: a4 = s1 + 0xa0\n 31178: a5 = s1 + 0x80\n 31182: u64 [s1 + 0x80] = t0\n 31186: a0 = 0\n 31188: a1 = 0\n 31190: ra = 1308, jump @30\n      : @1257 [@dyn 654] (gas: 4)\n 31196: a0 = 0\n 31198: a1 = 0x1\n 31201: a2 = u64 [s1 + 0x58]\n 31204: t0 = 1310, jump @1360\n      : @1258 [@dyn 655] (gas: 1)\n 31210: ret\n      : @1259 [@dyn 656] (gas: 21)\n 31212: u64 [s1 + 0x38] = a3\n 31215: a3 = u64 [a2 + 0x8]\n 31218: u64 [s1 + 0x70] = a3\n 31221: a2 = u64 [a2]\n 31223: u64 [s1 + 0x78] = a2\n 31226: a2 = u64 [a1]\n 31228: a3 = u64 [a1 + 0x8]\n 31231: a4 = u64 [a1 + 0x10]\n 31234: a1 = u64 [a1 + 0x18]\n 31237: u64 [s1 + 0x30] = a0\n 31240: u64 [s1 + 0x40] = a1\n 31243: u64 [s1 + 0x238] = a1\n 31247: u64 [s1 + 0x48] = a4\n 31250: u64 [s1 + 0x230] = a4\n 31254: u64 [s1 + 0x50] = a3\n 31257: u64 [s1 + 0x228] = a3\n 31261: a1 = s1 + 0x220\n 31265: u64 [s1 + 0x58] = a2\n 31268: u64 [s1 + 0x220] = a2\n 31272: a0 = 0\n 31274: ra = 1314, jump @19\n      : @1260 [@dyn 657] (gas: 1)\n 31280: t0 = 1316, jump @1362\n      : @1261 [@dyn 658] (gas: 1)\n 31286: ra = 1318, jump @19\n      : @1262 [@dyn 659] (gas: 3)\n 31292: a1 = 0x20264\n 31297: a0 = i32 [0x20264]\n 31302: jump @1264 if a0 >u 63\n      : @1263 (gas: 2)\n 31306: u32 [0x20264] = 0x40\n 31312: fallthrough\n      : @1264 (gas: 6)\n 31313: a0 = sp + 0xffffffffffffffe0\n 31316: a2 = a0 & 0xffffffffffffffe0\n 31319: u64 [s1 + 0x28] = a2\n 31322: sp = a2\n 31324: a0 = 0x20270\n 31329: t0 = 1320, jump @1420\n      : @1265 [@dyn 660] (gas: 4)\n 31335: ra = 0x52a\n 31339: ecalli 6 // 'hash_keccak_256'\n 31341: t0 = 0x52c\n 31345: jump @1353\n      : @1266 [@dyn 661] (gas: 1)\n 31348: t0 = 1324, jump @1353\n      : @1267 [@dyn 662] (gas: 13)\n 31354: a0 = u64 [s1 + 0x38]\n 31357: a0 = a0 << 0x20\n 31360: a0 = a0 >> 0x20\n 31363: u64 [s1 + 504] = 0\n 31367: u64 [s1 + 0x38] = a0\n 31370: u64 [s1 + 0x1f0] = a0\n 31374: a0 = u64 [s1 + 0x70]\n 31377: u64 [s1 + 0x1e8] = a0\n 31381: a1 = s1 + 0x1e0\n 31385: a0 = u64 [s1 + 0x78]\n 31388: u64 [s1 + 0x1e0] = a0\n 31392: a0 = 0\n 31394: ra = 1326, jump @19\n      : @1268 [@dyn 663] (gas: 12)\n 31400: a0 = u64 [s1 + 0x8]\n 31403: a3 = s1 + 0x100\n 31407: u64 [a3 + 0xd8] = a0\n 31411: a0 = u64 [s1 + 0x10]\n 31414: u64 [a3 + 0xd0] = a0\n 31418: a0 = u64 [s1 + 0x18]\n 31421: u64 [a3 + 0xc8] = a0\n 31425: a0 = 0x20\n 31428: a1 = s1 + 0x1c0\n 31432: a2 = u64 [s1 + 0x20]\n 31435: u64 [a3 + 0xc0] = a2\n 31439: ra = 1328, jump @19\n      : @1269 [@dyn 664] (gas: 3)\n 31445: a1 = u64 [s1 + 0x68]\n 31448: a0 = i32 [a1]\n 31450: jump @1271 if a0 >u 63\n      : @1270 (gas: 2)\n 31454: u32 [a1 + 0] = 0x40\n 31457: fallthrough\n      : @1271 (gas: 4)\n 31458: a0 = sp + 0xffffffffffffffe0\n 31461: a0 = a0 & 0xffffffffffffffe0\n 31464: u64 [s1 + 0x20] = a0\n 31467: t0 = 1330, jump @1365\n      : @1272 [@dyn 665] (gas: 5)\n 31473: ra = 0x534\n 31477: ecalli 6 // 'hash_keccak_256'\n 31479: a3 = u64 [s1 + 0x20]\n 31482: t0 = 0x536\n 31486: jump @1364\n      : @1273 [@dyn 666] (gas: 2)\n 31489: a3 = u64 [s1 + 0x20]\n 31492: t0 = 1334, jump @1364\n      : @1274 [@dyn 667] (gas: 2)\n 31498: a0 = s1 + 0x1a0\n 31502: ra = 1336, jump @21\n      : @1275 [@dyn 668] (gas: 2)\n 31508: a0 = u8 [s1 + 0x1a0]\n 31512: jump @1297 if a0 == 0\n      : @1276 (gas: 11)\n 31516: a0 = u64 [s1 + 0x58]\n 31519: u64 [s1 + 0x180] = a0\n 31523: a0 = u64 [s1 + 0x50]\n 31526: u64 [s1 + 0x188] = a0\n 31530: a0 = u64 [s1 + 0x48]\n 31533: u64 [s1 + 0x190] = a0\n 31537: a1 = s1 + 0x180\n 31541: a0 = u64 [s1 + 0x40]\n 31544: u64 [s1 + 0x198] = a0\n 31548: a0 = 0\n 31550: ra = 1338, jump @19\n      : @1277 [@dyn 669] (gas: 1)\n 31556: t0 = 1340, jump @1361\n      : @1278 [@dyn 670] (gas: 1)\n 31562: ra = 1342, jump @19\n      : @1279 [@dyn 671] (gas: 3)\n 31568: a1 = u64 [s1 + 0x68]\n 31571: a0 = i32 [a1]\n 31573: jump @1281 if a0 >u 63\n      : @1280 (gas: 2)\n 31577: u32 [a1 + 0] = 0x40\n 31580: fallthrough\n      : @1281 (gas: 4)\n 31581: a0 = sp + 0xffffffffffffffe0\n 31584: a0 = a0 & 0xffffffffffffffe0\n 31587: u64 [s1 + 0x28] = a0\n 31590: t0 = 1344, jump @1365\n      : @1282 [@dyn 672] (gas: 4)\n 31596: ra = 0x542\n 31600: ecalli 6 // 'hash_keccak_256'\n 31602: t0 = 0x544\n 31606: jump @1353\n      : @1283 [@dyn 673] (gas: 1)\n 31609: t0 = 1348, jump @1353\n      : @1284 [@dyn 674] (gas: 10)\n 31615: u64 [s1 + 344] = 0\n 31619: a0 = u64 [s1 + 0x38]\n 31622: u64 [s1 + 0x150] = a0\n 31626: a0 = u64 [s1 + 0x70]\n 31629: u64 [s1 + 0x148] = a0\n 31633: a1 = s1 + 0x140\n 31637: a0 = u64 [s1 + 0x78]\n 31640: u64 [s1 + 0x140] = a0\n 31644: a0 = 0\n 31646: ra = 1350, jump @19\n      : @1285 [@dyn 675] (gas: 12)\n 31652: a0 = u64 [s1 + 0x8]\n 31655: a3 = s1 + 0x100\n 31659: u64 [a3 + 0x38] = a0\n 31662: a0 = u64 [s1 + 0x10]\n 31665: u64 [a3 + 0x30] = a0\n 31668: a0 = u64 [s1 + 0x18]\n 31671: u64 [a3 + 0x28] = a0\n 31674: a0 = 0x20\n 31677: a1 = s1 + 0x120\n 31681: a2 = u64 [s1 + 0x20]\n 31684: u64 [a3 + 0x20] = a2\n 31687: ra = 1352, jump @19\n      : @1286 [@dyn 676] (gas: 3)\n 31693: a1 = u64 [s1 + 0x68]\n 31696: a0 = i32 [a1]\n 31698: jump @1288 if a0 >u 63\n      : @1287 (gas: 2)\n 31702: u32 [a1 + 0] = 0x40\n 31705: fallthrough\n      : @1288 (gas: 4)\n 31706: a0 = sp + 0xffffffffffffffe0\n 31709: a0 = a0 & 0xffffffffffffffe0\n 31712: u64 [s1 + 0x68] = a0\n 31715: t0 = 1354, jump @1365\n      : @1289 [@dyn 677] (gas: 5)\n 31721: ra = 0x54c\n 31725: ecalli 6 // 'hash_keccak_256'\n 31727: a3 = u64 [s1 + 0x68]\n 31730: t0 = 0x54e\n 31734: jump @1364\n      : @1290 [@dyn 678] (gas: 2)\n 31737: a3 = u64 [s1 + 0x68]\n 31740: t0 = 1358, jump @1364\n      : @1291 [@dyn 679] (gas: 2)\n 31746: a0 = s1 + 0x100\n 31750: ra = 1360, jump @21\n      : @1292 [@dyn 680] (gas: 14)\n 31756: a4 = s1 + 0x100\n 31760: a0 = u64 [a4]\n 31762: a1 = u64 [a4 + 0x18]\n 31765: a2 = u64 [a4 + 0x10]\n 31768: a3 = u64 [a4 + 0x8]\n 31771: a0 = a0 & 0xffffffffffffff00\n 31775: a4 = s1 + 0x200\n 31779: u64 [a4 + 0x58] = a1\n 31782: u64 [a4 + 0x50] = a2\n 31785: u64 [a4 + 0x48] = a3\n 31788: u64 [a4 + 0x40] = a0\n 31791: a1 = s1 + 0x240\n 31795: a0 = u64 [s1 + 0x28]\n 31798: ra = 1362, jump @24\n      : @1293 [@dyn 681] (gas: 8)\n 31804: a0 = 0x30270\n 31809: u64 [s1 + 0x68] = a0\n 31812: i32 a0 = a0 + 0\n 31814: ra = 0x554\n 31818: ecalli 3 // 'caller'\n 31820: a2 = u64 [s1 + 0x68]\n 31823: t0 = 0x556\n 31827: jump @1352\n      : @1294 [@dyn 682] (gas: 2)\n 31830: a2 = u64 [s1 + 0x68]\n 31833: t0 = 1366, jump @1352\n      : @1295 [@dyn 683] (gas: 40)\n 31839: t0 = a1 | a0\n 31842: a3 = a3 >> 0x20\n 31845: a2 = reverse a2\n 31847: a1 = a2 << 0x20\n 31850: a1 = a1 | a3\n 31853: a2 = a2 >> 0x20\n 31856: u64 [s1 + 152] = 0\n 31860: u64 [s1 + 184] = 0\n 31864: a0 = u64 [s1 + 0x38]\n 31867: u64 [s1 + 0xb0] = a0\n 31871: a0 = u64 [s1 + 0x70]\n 31874: u64 [s1 + 0xa8] = a0\n 31878: a0 = u64 [s1 + 0x78]\n 31881: u64 [s1 + 0xa0] = a0\n 31885: a0 = u64 [s1 + 0x40]\n 31888: u64 [s1 + 0xd8] = a0\n 31892: a0 = u64 [s1 + 0x48]\n 31895: u64 [s1 + 0xd0] = a0\n 31899: a0 = u64 [s1 + 0x50]\n 31902: u64 [s1 + 0xc8] = a0\n 31906: a0 = u64 [s1 + 0x58]\n 31909: u64 [s1 + 0xc0] = a0\n 31913: a3 = u64 [0x20220]\n 31918: a4 = u64 [0x20228]\n 31923: a5 = u64 [0x20230]\n 31928: a0 = u64 [0x20238]\n 31933: u64 [s1 + 0xf8] = a3\n 31937: u64 [s1 + 0xf0] = a4\n 31941: u64 [s1 + 0xe8] = a5\n 31945: u64 [s1 + 0xe0] = a0\n 31949: u64 [s1 + 0x90] = a2\n 31953: u64 [s1 + 0x88] = a1\n 31957: a2 = s1 + 0xe0\n 31961: a3 = s1 + 0xc0\n 31965: a4 = s1 + 0xa0\n 31969: a5 = s1 + 0x80\n 31973: u64 [s1 + 0x80] = t0\n 31977: a0 = 0\n 31979: a1 = 0\n 31981: ra = 1368, jump @30\n      : @1296 [@dyn 684] (gas: 5)\n 31987: a0 = 0\n 31989: a1 = 0x1\n 31992: a2 = u64 [s1 + 0x30]\n 31995: t0 = 0x55a\n 31999: jump @1360\n      : @1297 (gas: 3)\n 32002: a1 = 0\n 32004: a2 = u64 [s1 + 0x30]\n 32007: t0 = 1370, jump @1360\n      : @1298 [@dyn 685] (gas: 1)\n 32013: ret\n      : @1299 (gas: 17)\n 32015: sp = sp + 0xfffffffffffffc80\n 32019: a2 = sp + 0x300\n 32023: u64 [a2 + 0x78] = ra\n 32026: u64 [a2 + 0x70] = s0\n 32029: u64 [a2 + 0x68] = s1\n 32032: s0 = sp + 0x380\n 32036: sp = sp & 0xffffffffffffffe0\n 32039: s1 = sp\n 32041: a3 = u32 [a0 + 0x10]\n 32044: a2 = u64 [a0]\n 32046: a4 = u64 [a0 + 0x8]\n 32049: u64 [s1 + 0x58] = a2\n 32052: u64 [s1 + 0x48] = a3\n 32055: a0 = a2 | a3\n 32058: u64 [s1 + 0x50] = a4\n 32061: a0 = a0 | a4\n 32064: jump @1326 if a0 == 0\n      : @1300 (gas: 9)\n 32068: a0 = u64 [a1 + 0x18]\n 32071: u64 [s1 + 0x78] = a0\n 32074: a0 = u64 [a1 + 0x10]\n 32077: u64 [s1 + 0x68] = a0\n 32080: a0 = u64 [a1 + 0x8]\n 32083: u64 [s1 + 0x60] = a0\n 32086: a0 = u64 [a1]\n 32088: u64 [s1 + 0x70] = a0\n 32091: ra = 1372, jump @1338\n      : @1301 [@dyn 686] (gas: 11)\n 32097: u64 [s1 + 664] = 0\n 32101: a0 = u64 [s1 + 0x48]\n 32104: a2 = s1 + 0x200\n 32108: u64 [a2 + 0x90] = a0\n 32112: a0 = u64 [s1 + 0x50]\n 32115: u64 [a2 + 0x88] = a0\n 32119: a1 = s1 + 0x280\n 32123: a0 = u64 [s1 + 0x58]\n 32126: u64 [a2 + 0x80] = a0\n 32130: a0 = 0\n 32132: ra = 1374, jump @19\n      : @1302 [@dyn 687] (gas: 1)\n 32138: t0 = 1376, jump @1410\n      : @1303 [@dyn 688] (gas: 1)\n 32144: ra = 1378, jump @19\n      : @1304 [@dyn 689] (gas: 3)\n 32150: a2 = 0x20264\n 32155: a0 = i32 [0x20264]\n 32160: jump @1306 if a0 >u 63\n      : @1305 (gas: 2)\n 32164: u32 [0x20264] = 0x40\n 32170: fallthrough\n      : @1306 (gas: 13)\n 32171: u64 [s1 + 0x38] = a2\n 32174: a0 = sp + 0xffffffffffffffe0\n 32177: a2 = a0 & 0xffffffffffffffe0\n 32180: u64 [s1 + 0x30] = a2\n 32183: sp = a2\n 32185: a0 = 0x20270\n 32190: i32 a0 = a0 + 0\n 32192: i32 a2 = a2 + 0\n 32194: a1 = 0x40\n 32197: u64 [s1 + 0x40] = a0\n 32200: ra = 0x564\n 32204: ecalli 6 // 'hash_keccak_256'\n 32206: fallthrough\n      : @1307 [@dyn 690] (gas: 6)\n 32207: a3 = u64 [s1 + 0x30]\n 32210: a0 = u64 [a3 + 0x18]\n 32213: a1 = u64 [a3 + 0x10]\n 32216: a2 = u64 [a3 + 0x8]\n 32219: a3 = u64 [a3]\n 32221: t0 = 1382, jump @1377\n      : @1308 [@dyn 691] (gas: 7)\n 32227: u64 [s1 + 0x2b8] = a3\n 32231: u64 [s1 + 0x2b0] = a2\n 32235: u64 [s1 + 0x2a8] = a1\n 32239: u64 [s1 + 0x2a0] = a0\n 32243: a0 = s1 + 0x240\n 32247: a1 = s1 + 0x2a0\n 32251: ra = 1384, jump @21\n      : @1309 [@dyn 692] (gas: 28)\n 32257: a1 = s1 + 0x200\n 32261: a2 = u64 [a1 + 0x58]\n 32264: a0 = u64 [a1 + 0x50]\n 32267: a5 = u64 [a1 + 0x48]\n 32270: a4 = u64 [a1 + 0x40]\n 32273: a1 = u64 [s1 + 0x78]\n 32276: t1 = a2 ^ a1\n 32279: u64 [s1 + 0x20] = a2\n 32282: a1 = a2 <u a1\n 32285: a2 = u64 [s1 + 0x68]\n 32288: a3 = a0 <u a2\n 32291: u64 [s1 + 0x8] = a3\n 32294: a1 = a3 if t1 == 0\n 32297: a3 = u64 [s1 + 0x60]\n 32300: t0 = a5 ^ a3\n 32303: u64 [s1 + 0x28] = a5\n 32306: a5 = a5 <u a3\n 32309: a3 = u64 [s1 + 0x70]\n 32312: u64 [s1 + 0x30] = a4\n 32315: a3 = a4 <u a3\n 32318: u64 [s1 + 0x10] = a3\n 32321: a5 = a3 if t0 == 0\n 32324: u64 [s1 + 0x18] = a0\n 32327: a2 = a2 ^ a0\n 32330: a0 = a2 | t1\n 32333: u64 [s1] = a5\n 32335: a1 = a5 if a0 == 0\n 32338: jump @1331 if a1 != 0\n      : @1310 (gas: 11)\n 32342: u64 [s1 + 568] = 0\n 32346: a0 = u64 [s1 + 0x58]\n 32349: a2 = s1 + 0x200\n 32353: u64 [a2 + 0x20] = a0\n 32356: a0 = u64 [s1 + 0x50]\n 32359: u64 [a2 + 0x28] = a0\n 32362: a1 = s1 + 0x220\n 32366: a0 = u64 [s1 + 0x48]\n 32369: u64 [a2 + 0x30] = a0\n 32372: a0 = 0\n 32374: ra = 1386, jump @19\n      : @1311 [@dyn 693] (gas: 7)\n 32380: u64 [s1 + 536] = 0\n 32384: u64 [s1 + 528] = 0\n 32388: u64 [s1 + 520] = 0\n 32392: a0 = 0x20\n 32395: a1 = s1 + 0x200\n 32399: u64 [s1 + 512] = 0\n 32403: ra = 1388, jump @19\n      : @1312 [@dyn 694] (gas: 27)\n 32409: a0 = u64 [s1 + 0x68]\n 32412: a1 = u64 [s1 + 0x18]\n 32415: a0 = a1 - a0\n 32418: a2 = u64 [s1]\n 32420: a1 = a0 - a2\n 32423: u64 [s1 + 0x18] = a1\n 32426: a0 = a0 <u a2\n 32429: a1 = u64 [s1 + 0x78]\n 32432: a2 = u64 [s1 + 0x20]\n 32435: a1 = a2 - a1\n 32438: a2 = u64 [s1 + 0x8]\n 32441: a1 = a1 - a2\n 32444: a1 = a1 - a0\n 32447: u64 [s1 + 0x20] = a1\n 32450: a2 = u64 [s1 + 0x38]\n 32453: a0 = i32 [a2]\n 32455: a1 = u64 [s1 + 0x60]\n 32458: a3 = u64 [s1 + 0x28]\n 32461: a1 = a3 - a1\n 32464: a3 = u64 [s1 + 0x10]\n 32467: a1 = a1 - a3\n 32470: u64 [s1 + 0x28] = a1\n 32473: a3 = u64 [s1 + 0x70]\n 32476: a4 = u64 [s1 + 0x30]\n 32479: a4 = a4 - a3\n 32482: u64 [s1 + 0x30] = a4\n 32485: jump @1314 if a0 >u 63\n      : @1313 (gas: 2)\n 32489: u32 [a2 + 0] = 0x40\n 32492: fallthrough\n      : @1314 (gas: 10)\n 32493: a0 = sp + 0xffffffffffffffe0\n 32496: a0 = a0 & 0xffffffffffffffe0\n 32499: u64 [s1 + 0x38] = a0\n 32502: sp = a0\n 32504: i32 a2 = a0 + 0\n 32506: a1 = 0x40\n 32509: a0 = u64 [s1 + 0x40]\n 32512: ra = 0x56e\n 32516: ecalli 6 // 'hash_keccak_256'\n 32518: fallthrough\n      : @1315 [@dyn 695] (gas: 6)\n 32519: a3 = u64 [s1 + 0x38]\n 32522: a0 = u64 [a3 + 0x18]\n 32525: a1 = u64 [a3 + 0x10]\n 32528: a2 = u64 [a3 + 0x8]\n 32531: a3 = u64 [a3]\n 32533: t0 = 1392, jump @1377\n      : @1316 [@dyn 696] (gas: 16)\n 32539: a4 = s1 + 0x200\n 32543: u64 [a4 + 0xd8] = a3\n 32547: u64 [a4 + 0xd0] = a2\n 32551: u64 [a4 + 0xc8] = a1\n 32555: u64 [a4 + 0xc0] = a0\n 32559: a0 = u64 [s1 + 0x20]\n 32562: u64 [a4 + 0xf8] = a0\n 32566: a0 = u64 [s1 + 0x18]\n 32569: u64 [a4 + 0xf0] = a0\n 32573: a0 = u64 [s1 + 0x28]\n 32576: u64 [a4 + 0xe8] = a0\n 32580: a0 = u64 [s1 + 0x30]\n 32583: u64 [a4 + 0xe0] = a0\n 32587: a0 = s1 + 0x2c0\n 32591: a1 = s1 + 0x2e0\n 32595: ra = 1394, jump @24\n      : @1317 [@dyn 697] (gas: 7)\n 32601: u64 [s1 + 792] = 0\n 32605: u64 [s1 + 784] = 0\n 32609: u64 [s1 + 776] = 0\n 32613: u64 [s1 + 768] = 0x2\n 32618: a0 = s1 + 0x1e0\n 32622: a1 = s1 + 0x300\n 32626: ra = 1396, jump @21\n      : @1318 [@dyn 698] (gas: 34)\n 32632: a1 = u64 [s1 + 0x1e8]\n 32636: t0 = u64 [s1 + 0x1f8]\n 32640: t1 = u64 [s1 + 0x1e0]\n 32644: a3 = u64 [s1 + 0x1f0]\n 32648: a4 = u64 [s1 + 0x60]\n 32651: a0 = a1 ^ a4\n 32654: a5 = a1 <u a4\n 32657: ra = u64 [s1 + 0x70]\n 32660: t2 = t1 <u ra\n 32663: a5 = t2 if a0 == 0\n 32666: a0 = u64 [s1 + 0x68]\n 32669: a2 = a3 - a0\n 32672: a3 = a3 <u a0\n 32675: a0 = u64 [s1 + 0x78]\n 32678: a0 = t0 - a0\n 32681: a0 = a0 - a3\n 32684: a3 = a2 <u a5\n 32687: a0 = a0 - a3\n 32690: a3 = a2 - a5\n 32693: a1 = a1 - a4\n 32696: a1 = a1 - t2\n 32699: a4 = s1 + 0x300\n 32703: u64 [a4 + 32] = 0x2\n 32707: a2 = t1 - ra\n 32710: u64 [a4 + 0x40] = a2\n 32713: u64 [a4 + 0x48] = a1\n 32716: u64 [a4 + 0x50] = a3\n 32719: u64 [a4 + 0x58] = a0\n 32722: u64 [s1 + 824] = 0\n 32726: u64 [s1 + 816] = 0\n 32730: u64 [s1 + 808] = 0\n 32734: a0 = s1 + 0x320\n 32738: a1 = s1 + 0x340\n 32742: ra = 1398, jump @24\n      : @1319 [@dyn 699] (gas: 3)\n 32748: a0 = s1 + 0x1c0\n 32752: a1 = 0x40\n 32755: ra = 1400, jump @17\n      : @1320 [@dyn 700] (gas: 6)\n 32761: a4 = s1 + 0x100\n 32765: a3 = u64 [a4 + 0xd8]\n 32769: a1 = u64 [a4 + 0xd0]\n 32773: a2 = u64 [a4 + 0xc8]\n 32777: a0 = u64 [a4 + 0xc0]\n 32781: t0 = 1402, jump @1368\n      : @1321 [@dyn 701] (gas: 1)\n 32787: jump @1325 if a1 != 0\n      : @1322 (gas: 11)\n 32791: a1 = u64 [s1 + 0x70]\n 32794: u64 [s1 + 0x1a0] = a1\n 32798: a1 = u64 [s1 + 0x60]\n 32801: u64 [s1 + 0x1a8] = a1\n 32805: a1 = u64 [s1 + 0x68]\n 32808: u64 [s1 + 0x1b0] = a1\n 32812: a1 = s1 + 0x1a0\n 32816: a2 = u64 [s1 + 0x78]\n 32819: u64 [s1 + 0x1b8] = a2\n 32823: u64 [s1 + 0x78] = a0\n 32826: ra = 1404, jump @19\n      : @1323 [@dyn 702] (gas: 26)\n 32832: u64 [s1 + 344] = 0\n 32836: u64 [s1 + 336] = 0\n 32840: u64 [s1 + 328] = 0\n 32844: u64 [s1 + 320] = 0\n 32848: u64 [s1 + 376] = 0\n 32852: a0 = u64 [s1 + 0x48]\n 32855: a5 = s1 + 0x100\n 32859: u64 [a5 + 0x70] = a0\n 32862: a0 = u64 [s1 + 0x50]\n 32865: u64 [a5 + 0x68] = a0\n 32868: a0 = u64 [0x20240]\n 32873: a1 = u64 [0x20248]\n 32878: a2 = u64 [0x20250]\n 32883: a3 = u64 [s1 + 0x58]\n 32886: u64 [a5 + 0x60] = a3\n 32889: u64 [a5 + 0x98] = a0\n 32893: u64 [a5 + 0x90] = a1\n 32897: u64 [a5 + 0x88] = a2\n 32901: a0 = u64 [0x20258]\n 32906: a1 = 0x20\n 32909: a2 = s1 + 0x180\n 32913: a3 = s1 + 0x160\n 32917: a4 = s1 + 0x140\n 32921: u64 [a5 + 0x80] = a0\n 32925: a0 = u64 [s1 + 0x78]\n 32928: ra = 1406, jump @27\n      : @1324 [@dyn 703] (gas: 7)\n 32934: sp = s0 + 0xfffffffffffffc80\n 32938: a0 = sp + 0x300\n 32942: ra = u64 [a0 + 0x78]\n 32945: s0 = u64 [a0 + 0x70]\n 32948: s1 = u64 [a0 + 0x68]\n 32951: sp = sp + 0x380\n 32955: ret\n      : @1325 (gas: 1)\n 32957: trap\n      : @1326 (gas: 8)\n 32958: u64 [s1 + 176] = 0\n 32962: u64 [s1 + 168] = 0\n 32966: u64 [s1 + 160] = 0\n 32970: a0 = 0x96c6fd1e00000000\n 32980: a1 = s1 + 0xa0\n 32984: u64 [s1 + 0xb8] = a0\n 32988: a0 = 0\n 32990: ra = 1408, jump @19\n      : @1327 [@dyn 704] (gas: 7)\n 32996: u64 [s1 + 152] = 0\n 33000: u64 [s1 + 144] = 0\n 33004: u64 [s1 + 136] = 0\n 33008: a0 = 0x4\n 33011: a1 = s1 + 0x80\n 33015: u64 [s1 + 128] = 0\n 33019: ra = 1410, jump @19\n      : @1328 [@dyn 705] (gas: 2)\n 33025: a1 = i32 [0x20264]\n 33030: jump @1330 if a1 >u 63\n      : @1329 (gas: 2)\n 33034: u32 [0x20264] = 0x40\n 33040: fallthrough\n      : @1330 (gas: 6)\n 33041: a1 = 0x20270\n 33046: i32 a1 = a1 + 0\n 33048: a0 = 0x1\n 33051: a2 = 0x24\n 33054: ecalli 7 // 'seal_return'\n 33056: fallthrough\n      : @1331 (gas: 8)\n 33057: u64 [s1 + 304] = 0\n 33061: u64 [s1 + 296] = 0\n 33065: u64 [s1 + 288] = 0\n 33069: a0 = 0xe450d38c00000000\n 33079: a1 = s1 + 0x120\n 33083: u64 [s1 + 0x138] = a0\n 33087: a0 = 0\n 33089: ra = 1412, jump @19\n      : @1332 [@dyn 706] (gas: 11)\n 33095: u64 [s1 + 280] = 0\n 33099: a0 = u64 [s1 + 0x48]\n 33102: a3 = s1 + 0x100\n 33106: u64 [a3 + 0x10] = a0\n 33109: a0 = u64 [s1 + 0x50]\n 33112: u64 [a3 + 0x8] = a0\n 33115: a0 = 0x4\n 33118: a1 = s1 + 0x100\n 33122: a2 = u64 [s1 + 0x58]\n 33125: u64 [a3] = a2\n 33127: ra = 1414, jump @19\n      : @1333 [@dyn 707] (gas: 11)\n 33133: a0 = u64 [s1 + 0x20]\n 33136: u64 [s1 + 0xf8] = a0\n 33140: a0 = u64 [s1 + 0x18]\n 33143: u64 [s1 + 0xf0] = a0\n 33147: a0 = u64 [s1 + 0x28]\n 33150: u64 [s1 + 0xe8] = a0\n 33154: a0 = 0x24\n 33157: a1 = s1 + 0xe0\n 33161: a2 = u64 [s1 + 0x30]\n 33164: u64 [s1 + 0xe0] = a2\n 33168: ra = 1416, jump @19\n      : @1334 [@dyn 708] (gas: 11)\n 33174: a0 = u64 [s1 + 0x78]\n 33177: u64 [s1 + 0xd8] = a0\n 33181: a0 = u64 [s1 + 0x68]\n 33184: u64 [s1 + 0xd0] = a0\n 33188: a0 = u64 [s1 + 0x60]\n 33191: u64 [s1 + 0xc8] = a0\n 33195: a0 = 0x44\n 33198: a1 = s1 + 0xc0\n 33202: a2 = u64 [s1 + 0x70]\n 33205: u64 [s1 + 0xc0] = a2\n 33209: ra = 1418, jump @19\n      : @1335 [@dyn 709] (gas: 3)\n 33215: a0 = u64 [s1 + 0x38]\n 33218: a0 = i32 [a0]\n 33220: jump @1337 if a0 >u 127\n      : @1336 (gas: 3)\n 33224: a1 = u64 [s1 + 0x38]\n 33227: u32 [a1 + 0] = 0x80\n 33231: fallthrough\n      : @1337 (gas: 6)\n 33232: a0 = 0x1\n 33235: a2 = 0x64\n 33238: a1 = u64 [s1 + 0x40]\n 33241: ra = 0x58c\n 33245: ecalli 7 // 'seal_return'\n 33247: fallthrough\n      : @1338 [@dyn 710] (gas: 12)\n 33248: sp = sp + 0xffffffffffffff80\n 33251: u64 [sp + 0x78] = ra\n 33254: u64 [sp + 0x70] = s0\n 33257: s0 = sp + 0x80\n 33261: sp = sp & 0xffffffffffffffe0\n 33264: u64 [sp + 88] = 0\n 33267: u64 [sp + 80] = 0\n 33270: u64 [sp + 72] = 0\n 33273: u64 [sp + 64] = 0x5\n 33277: a0 = sp + 0x20\n 33280: a1 = sp + 0x40\n 33283: ra = 1422, jump @21\n      : @1339 [@dyn 711] (gas: 2)\n 33289: a0 = u8 [sp + 0x20]\n 33292: jump @1341 if a0 != 0\n      : @1340 (gas: 5)\n 33295: sp = s0 + 0xffffffffffffff80\n 33298: ra = u64 [sp + 0x78]\n 33301: s0 = u64 [sp + 0x70]\n 33304: sp = sp + 0x80\n 33308: ret\n      : @1341 (gas: 8)\n 33310: u64 [sp + 16] = 0\n 33313: u64 [sp + 8] = 0\n 33316: u64 [sp + 0] = 0\n 33318: a0 = 0xd93c066500000000\n 33328: a1 = sp\n 33330: u64 [sp + 0x18] = a0\n 33333: a0 = 0\n 33335: ra = 1424, jump @19\n      : @1342 [@dyn 712] (gas: 2)\n 33342: a1 = i32 [0x20264]\n 33347: jump @1344 if a1 >u 31\n      : @1343 (gas: 2)\n 33351: u32 [0x20264] = 0x20\n 33357: fallthrough\n      : @1344 (gas: 8)\n 33358: a1 = 0x20270\n 33363: i32 a1 = a1 + 0\n 33365: a0 = 0x1\n 33368: a2 = 0x4\n 33371: ecalli 7 // 'seal_return'\n 33373: a0 = 0\n 33375: ra = 0x592\n 33379: jump @39\n      : @1345 [export #0: 'call'] (gas: 2)\n 33382: a0 = 0\n 33384: ra = 1426, jump @39\n      : @1346 [@dyn 713] [export #1: 'deploy'] (gas: 2)\n 33390: a0 = 0x1\n 33393: ra = 1428, jump @39\n      : @1347 [@dyn 714] (gas: 16)\n 33399: a0 = u64 [a2 + 0x8]\n 33402: a1 = i32 [a2 + 0x10]\n 33405: a2 = u64 [a2]\n 33407: a0 = reverse a0\n 33409: a3 = a0 << 0x20\n 33412: a1 = reverse a1\n 33414: a1 = a1 >> 0x20\n 33417: a3 = a3 | a1\n 33420: a0 = a0 >> 0x20\n 33423: a1 = reverse a2\n 33425: a2 = a1 << 0x20\n 33428: a0 = a0 | a2\n 33431: a1 = a1 >> 0x20\n 33434: a2 = s1 + 0x7ff\n 33438: a2 = a2 + 0x39\n 33441: jump [t0]\n      : @1348 (gas: 30)\n 33443: a3 = u64 [s1 + 0x48]\n 33446: a0 = u64 [a3 + 0x18]\n 33449: a1 = u64 [a3 + 0x10]\n 33452: a2 = u64 [a3 + 0x8]\n 33455: a3 = u64 [a3]\n 33457: a0 = reverse a0\n 33459: u64 [s1 + 0x40] = a0\n 33462: a0 = reverse a1\n 33464: u64 [s1 + 0x38] = a0\n 33467: a0 = reverse a2\n 33469: u64 [s1 + 0x30] = a0\n 33472: a0 = reverse a3\n 33474: u64 [s1 + 0x28] = a0\n 33477: a0 = sp + 0xffffffffffffffe0\n 33480: a0 = a0 & 0xffffffffffffffe0\n 33483: u64 [s1 + 0x48] = a0\n 33486: sp = a0\n 33488: a0 = u64 [s1 + 0x50]\n 33491: a0 = a0 << 0x20\n 33494: a0 = a0 >> 0x20\n 33497: u64 [s1 + 504] = 0\n 33501: u64 [s1] = a0\n 33503: u64 [s1 + 0x1f0] = a0\n 33507: a0 = u64 [s1 + 0x70]\n 33510: u64 [s1 + 0x1e8] = a0\n 33514: a1 = s1 + 0x1e0\n 33518: a0 = u64 [s1 + 0x78]\n 33521: u64 [s1 + 0x1e0] = a0\n 33525: a0 = 0\n 33527: jump [t0]\n      : @1349 (gas: 27)\n 33529: a3 = u64 [s1 + 0x50]\n 33532: a0 = u64 [a3 + 0x18]\n 33535: a1 = u64 [a3 + 0x10]\n 33538: a2 = u64 [a3 + 0x8]\n 33541: a3 = u64 [a3]\n 33543: a0 = reverse a0\n 33545: u64 [s1 + 0x48] = a0\n 33548: a0 = reverse a1\n 33550: u64 [s1 + 0x40] = a0\n 33553: a0 = reverse a2\n 33555: u64 [s1 + 0x38] = a0\n 33558: a0 = reverse a3\n 33560: u64 [s1 + 0x30] = a0\n 33563: a0 = sp + 0xffffffffffffffe0\n 33566: a0 = a0 & 0xffffffffffffffe0\n 33569: u64 [s1 + 0x50] = a0\n 33572: sp = a0\n 33574: u64 [s1 + 344] = 0\n 33578: a0 = u64 [s1]\n 33580: u64 [s1 + 0x150] = a0\n 33584: a0 = u64 [s1 + 0x70]\n 33587: u64 [s1 + 0x148] = a0\n 33591: a1 = s1 + 0x140\n 33595: a0 = u64 [s1 + 0x78]\n 33598: u64 [s1 + 0x140] = a0\n 33602: a0 = 0\n 33604: jump [t0]\n      : @1350 (gas: 15)\n 33606: a2 = u64 [s1 + 0x138]\n 33610: a0 = u64 [a2 + 0x8]\n 33613: a1 = i32 [a2 + 0x10]\n 33616: a2 = u64 [a2]\n 33618: a0 = reverse a0\n 33620: a3 = a0 << 0x20\n 33623: a1 = reverse a1\n 33625: a1 = a1 >> 0x20\n 33628: a3 = a3 | a1\n 33631: a0 = a0 >> 0x20\n 33634: a1 = reverse a2\n 33636: a2 = a1 << 0x20\n 33639: a0 = a0 | a2\n 33642: a1 = a1 >> 0x20\n 33645: jump [t0]\n      : @1351 (gas: 24)\n 33647: a4 = u64 [s1 + 0x138]\n 33651: a2 = a4 <u 0x80\n 33655: a3 = u64 [s1 + 0xf0]\n 33659: a1 = a3 if a2 != 0\n 33662: a5 = u64 [s1 + 0xf8]\n 33666: a3 = u64 [s1 + 0x108]\n 33670: a3 = a3 | a5\n 33673: a3 = a0 if a2 == 0\n 33676: a1 = 0xffffffffffffffff if a4 == 0\n 33679: a3 = 0xffffffffffffffff if a4 == 0\n 33682: a4 = u64 [s1 + 0x100]\n 33686: a4 = 0 if a2 == 0\n 33688: a5 = 0 if a2 == 0\n 33690: a0 = u64 [s1 + 0x118]\n 33694: a0 = a0 & ~a3\n 33697: a2 = u64 [s1 + 0x120]\n 33701: a1 = a2 & ~a1\n 33704: a2 = u64 [s1 + 0x128]\n 33708: a2 = a2 & ~a5\n 33711: a3 = u64 [s1 + 0x130]\n 33715: a3 = a3 & ~a4\n 33718: a4 = s1 + 0x7ff\n 33722: a4 = a4 + 0xb9\n 33726: jump [t0]\n      : @1352 (gas: 8)\n 33728: a0 = u64 [a2 + 0x8]\n 33731: a1 = i32 [a2 + 0x10]\n 33734: a2 = u64 [a2]\n 33736: a3 = reverse a0\n 33738: a0 = a3 << 0x20\n 33741: a1 = reverse a1\n 33743: a1 = a1 >> 0x20\n 33746: jump [t0]\n      : @1353 (gas: 18)\n 33748: a3 = u64 [s1 + 0x28]\n 33751: a0 = u64 [a3 + 0x18]\n 33754: a1 = u64 [a3 + 0x10]\n 33757: a2 = u64 [a3 + 0x8]\n 33760: a3 = u64 [a3]\n 33762: a0 = reverse a0\n 33764: u64 [s1 + 0x20] = a0\n 33767: a0 = reverse a1\n 33769: u64 [s1 + 0x18] = a0\n 33772: a0 = reverse a2\n 33774: u64 [s1 + 0x10] = a0\n 33777: a0 = reverse a3\n 33779: u64 [s1 + 0x8] = a0\n 33782: a0 = sp + 0xffffffffffffffe0\n 33785: a0 = a0 & 0xffffffffffffffe0\n 33788: u64 [s1 + 0x28] = a0\n 33791: sp = a0\n 33793: jump [t0]\n      : @1354 (gas: 26)\n 33795: a3 = u64 [s1 + 0x80]\n 33799: a3 = a3 + 0x1\n 33802: a0 = a3 <u 0x1\n 33805: ra = u64 [s1 + 0x88]\n 33809: ra = ra + a0\n 33812: a0 = a3 | ra\n 33815: a0 = a0 <u 0x1\n 33818: a1 = u64 [s1 + 0x78]\n 33821: t2 = a1 + a0\n 33824: a1 = t2 <u a1\n 33827: a0 = u64 [s1 + 0x90]\n 33831: a0 = a0 + a1\n 33834: a1 = u64 [s1 + 0xb8]\n 33838: t1 = a1 + 0x20\n 33841: a2 = t1 <u a1\n 33844: a4 = u64 [s1 + 0xa0]\n 33848: a1 = a4 + a2\n 33851: a4 = a1 <u a4\n 33854: a4 = a2 if a2 == 0\n 33857: a2 = u64 [s1 + 0xa8]\n 33861: a4 = a4 + a2\n 33864: a2 = a4 <u a2\n 33867: a5 = u64 [s1 + 0xb0]\n 33871: a5 = a5 + a2\n 33874: u64 [s1 + 0xb0] = a5\n 33878: jump [t0]\n      : @1355 (gas: 16)\n 33880: a3 = u64 [s1 + 0x50]\n 33883: a0 = u64 [a3 + 0x18]\n 33886: a1 = u64 [a3 + 0x10]\n 33889: a2 = u64 [a3 + 0x8]\n 33892: a3 = u64 [a3]\n 33894: a0 = reverse a0\n 33896: a4 = reverse a1\n 33898: a2 = reverse a2\n 33900: a3 = reverse a3\n 33902: a1 = u64 [s1 + 0x48]\n 33905: u64 [a1 + 0x18] = a3\n 33908: u64 [a1 + 0x10] = a2\n 33911: u64 [a1 + 0x8] = a4\n 33914: u64 [a1] = a0\n 33916: a0 = s1 + 0x1a0\n 33920: jump [t0]\n      : @1356 (gas: 9)\n 33922: a0 = u64 [a3 + 0x18]\n 33925: a1 = u64 [a3 + 0x10]\n 33928: a2 = u64 [a3 + 0x8]\n 33931: a3 = u64 [a3]\n 33933: a0 = reverse a0\n 33935: a4 = reverse a1\n 33937: a2 = reverse a2\n 33939: a3 = reverse a3\n 33941: jump [t0]\n      : @1357 (gas: 16)\n 33943: a3 = u64 [s1 + 0x68]\n 33946: a0 = u64 [a3 + 0x18]\n 33949: a1 = u64 [a3 + 0x10]\n 33952: a2 = u64 [a3 + 0x8]\n 33955: a3 = u64 [a3]\n 33957: a0 = reverse a0\n 33959: a4 = reverse a1\n 33961: a2 = reverse a2\n 33963: a3 = reverse a3\n 33965: a1 = u64 [s1 + 0x50]\n 33968: u64 [a1 + 0x18] = a3\n 33971: u64 [a1 + 0x10] = a2\n 33974: u64 [a1 + 0x8] = a4\n 33977: u64 [a1] = a0\n 33979: a0 = s1 + 0x100\n 33983: jump [t0]\n      : @1358 (gas: 8)\n 33985: a0 = sp + 0xffffffffffffffe0\n 33988: a0 = a0 & 0xffffffffffffffe0\n 33991: u64 [s1 + 0x50] = a0\n 33994: sp = a0\n 33996: i32 a2 = a0 + 0\n 33998: a1 = 0x40\n 34001: a0 = u64 [s1 + 0x60]\n 34004: jump [t0]\n      : @1359 (gas: 15)\n 34006: a4 = s1 + 0x100\n 34010: a0 = u64 [a4]\n 34012: a1 = u64 [a4 + 0x8]\n 34015: a2 = u64 [a4 + 0x18]\n 34018: a3 = u64 [a4 + 0x10]\n 34021: a0 = a0 & 0xffffffffffffff00\n 34025: a0 = a0 | 0x1\n 34028: a4 = s1 + 0x200\n 34032: u64 [a4 + 0x58] = a2\n 34035: u64 [a4 + 0x50] = a3\n 34038: u64 [a4 + 0x48] = a1\n 34041: u64 [a4 + 0x40] = a0\n 34044: a1 = s1 + 0x240\n 34048: a0 = u64 [s1 + 0x50]\n 34051: jump [t0]\n      : @1360 (gas: 11)\n 34053: u64 [a2] = a1\n 34055: u64 [a2 + 0x8] = a0\n 34058: u64 [a2 + 0x10] = a0\n 34061: u64 [a2 + 0x18] = a0\n 34064: sp = s0 + 0xfffffffffffffd80\n 34068: a0 = sp + 0x200\n 34072: ra = u64 [a0 + 0x78]\n 34075: s0 = u64 [a0 + 0x70]\n 34078: s1 = u64 [a0 + 0x68]\n 34081: sp = sp + 0x280\n 34085: jump [t0]\n      : @1361 (gas: 7)\n 34087: u64 [s1 + 376] = 0\n 34091: u64 [s1 + 368] = 0\n 34095: u64 [s1 + 352] = 0x6\n 34100: a0 = 0x20\n 34103: a1 = s1 + 0x160\n 34107: u64 [s1 + 360] = 0\n 34111: jump [t0]\n      : @1362 (gas: 7)\n 34113: u64 [s1 + 536] = 0\n 34117: u64 [s1 + 528] = 0\n 34121: u64 [s1 + 512] = 0x6\n 34126: a0 = 0x20\n 34129: a1 = s1 + 0x200\n 34133: u64 [s1 + 520] = 0\n 34137: jump [t0]\n      : @1363 (gas: 21)\n 34139: a2 = u64 [s1 + 0x68]\n 34142: a0 = u64 [a2 + 0x8]\n 34145: a1 = i32 [a2 + 0x10]\n 34148: a2 = u64 [a2]\n 34150: a0 = reverse a0\n 34152: a3 = a0 << 0x20\n 34155: a1 = reverse a1\n 34157: a1 = a1 >> 0x20\n 34160: a3 = a3 | a1\n 34163: a0 = a0 >> 0x20\n 34166: a1 = reverse a2\n 34168: a2 = a1 << 0x20\n 34171: a0 = a0 | a2\n 34174: a1 = a1 >> 0x20\n 34177: u64 [s1 + 312] = 0\n 34181: u64 [s1 + 0x130] = a1\n 34185: u64 [s1 + 0x128] = a0\n 34189: a1 = s1 + 0x120\n 34193: u64 [s1 + 0x120] = a3\n 34197: a0 = 0\n 34199: jump [t0]\n      : @1364 (gas: 14)\n 34201: a0 = u64 [a3 + 0x18]\n 34204: a1 = u64 [a3 + 0x10]\n 34207: a2 = u64 [a3 + 0x8]\n 34210: a3 = u64 [a3]\n 34212: a0 = reverse a0\n 34214: a4 = reverse a1\n 34216: a2 = reverse a2\n 34218: a3 = reverse a3\n 34220: a1 = u64 [s1 + 0x28]\n 34223: u64 [a1 + 0x18] = a3\n 34226: u64 [a1 + 0x10] = a2\n 34229: u64 [a1 + 0x8] = a4\n 34232: u64 [a1] = a0\n 34234: jump [t0]\n      : @1365 (gas: 5)\n 34236: sp = a0\n 34238: i32 a2 = a0 + 0\n 34240: a1 = 0x40\n 34243: a0 = u64 [s1 + 0x60]\n 34246: jump [t0]\n      : @1366 (gas: 19)\n 34248: u64 [s1 + 0x90] = ra\n 34252: a0 = u64 [s1 + 0x70]\n 34255: a1 = u64 [s1 + 0xb8]\n 34259: a0 = a1 <u a0\n 34262: a2 = u64 [s1 + 0x60]\n 34265: a1 = t2 ^ a2\n 34268: a2 = t2 <u a2\n 34271: a2 = a0 if a1 == 0\n 34274: a4 = u64 [s1 + 0x68]\n 34277: a0 = t1 <u a4\n 34280: a3 = u64 [s1 + 0x58]\n 34283: a1 = u64 [s1 + 0xb0]\n 34287: a5 = a1 ^ a3\n 34290: a3 = a1 <u a3\n 34293: a3 = a0 if a5 == 0\n 34296: a0 = t1 ^ a4\n 34299: a0 = a0 | a5\n 34302: a3 = a2 if a0 == 0\n 34305: jump [t0]\n      : @1367 (gas: 8)\n 34307: a4 = a4 | a2\n 34310: a2 = a0 | a1\n 34313: a2 = a2 | a4\n 34316: a2 = a2 >> 0x20\n 34319: a1 = a1 | a4\n 34322: a1 = a1 << 0x20\n 34325: a1 = a1 | a2\n 34328: jump [t0]\n      : @1368 (gas: 8)\n 34330: a3 = a3 | a2\n 34333: a2 = a0 | a1\n 34336: a2 = a2 | a3\n 34339: a2 = a2 >> 0x20\n 34342: a1 = a1 | a3\n 34345: a1 = a1 << 0x20\n 34348: a1 = a1 | a2\n 34351: jump [t0]\n      : @1369 (gas: 21)\n 34353: a2 = u64 [s1 + 0x68]\n 34356: a0 = u64 [a2 + 0x8]\n 34359: a1 = i32 [a2 + 0x10]\n 34362: a2 = u64 [a2]\n 34364: a0 = reverse a0\n 34366: a3 = a0 << 0x20\n 34369: a1 = reverse a1\n 34371: a1 = a1 >> 0x20\n 34374: a3 = a3 | a1\n 34377: a0 = a0 >> 0x20\n 34380: a1 = reverse a2\n 34382: a2 = a1 << 0x20\n 34385: a0 = a0 | a2\n 34388: a1 = a1 >> 0x20\n 34391: u64 [s1 + 184] = 0\n 34395: u64 [s1 + 0xb0] = a1\n 34399: u64 [s1 + 0xa8] = a0\n 34403: a0 = 0x4\n 34406: a1 = s1 + 0xa0\n 34410: u64 [s1 + 0xa0] = a3\n 34414: jump [t0]\n      : @1370 (gas: 15)\n 34416: t2 = u64 [s1 + 0xb8]\n 34420: t1 = u64 [s1 + 0xa0]\n 34424: ra = u64 [s1 + 0xa8]\n 34428: a1 = u64 [s1 + 0x50]\n 34431: a0 = a1 + t2\n 34434: a1 = a0 <u a1\n 34437: a4 = u64 [s1 + 0x48]\n 34440: a2 = a4 + t1\n 34443: a2 = a2 + a1\n 34446: a5 = a2 ^ a4\n 34449: a4 = a2 <u a4\n 34452: a4 = a1 if a5 == 0\n 34455: a5 = u64 [s1 + 0x40]\n 34458: a1 = a5 + ra\n 34461: jump [t0]\n      : @1371 (gas: 12)\n 34463: a0 = u64 [s1 + 0x28]\n 34466: a3 = s1 + 0x100\n 34470: u64 [a3 + 0xd8] = a0\n 34474: a0 = u64 [s1 + 0x30]\n 34477: u64 [a3 + 0xd0] = a0\n 34481: a0 = u64 [s1 + 0x38]\n 34484: u64 [a3 + 0xc8] = a0\n 34488: a0 = 0x20\n 34491: a1 = s1 + 0x1c0\n 34495: a2 = u64 [s1 + 0x40]\n 34498: u64 [a3 + 0xc0] = a2\n 34502: jump [t0]\n      : @1372 (gas: 12)\n 34504: a0 = u64 [s1 + 0x30]\n 34507: a3 = s1 + 0x100\n 34511: u64 [a3 + 0x38] = a0\n 34514: a0 = u64 [s1 + 0x38]\n 34517: u64 [a3 + 0x30] = a0\n 34520: a0 = u64 [s1 + 0x40]\n 34523: u64 [a3 + 0x28] = a0\n 34526: a0 = 0x20\n 34529: a1 = s1 + 0x120\n 34533: a2 = u64 [s1 + 0x48]\n 34536: u64 [a3 + 0x20] = a2\n 34539: jump [t0]\n      : @1373 (gas: 7)\n 34541: u64 [s1 + 344] = 0\n 34545: u64 [s1 + 336] = 0\n 34549: u64 [s1 + 320] = 0x6\n 34554: a0 = 0x20\n 34557: a1 = s1 + 0x140\n 34561: u64 [s1 + 328] = 0\n 34565: jump [t0]\n      : @1374 (gas: 18)\n 34567: a3 = u64 [s1 + 0x68]\n 34570: a0 = u64 [a3 + 0x18]\n 34573: a1 = u64 [a3 + 0x10]\n 34576: a2 = u64 [a3 + 0x8]\n 34579: a3 = u64 [a3]\n 34581: a0 = reverse a0\n 34583: u64 [s1 + 0x58] = a0\n 34586: a0 = reverse a1\n 34588: u64 [s1 + 0x50] = a0\n 34591: a0 = reverse a2\n 34593: u64 [s1 + 0x48] = a0\n 34596: a0 = reverse a3\n 34598: u64 [s1 + 0x40] = a0\n 34601: a0 = sp + 0xffffffffffffffe0\n 34604: a0 = a0 & 0xffffffffffffffe0\n 34607: u64 [s1 + 0x60] = a0\n 34610: sp = a0\n 34612: jump [t0]\n      : @1375 (gas: 17)\n 34614: a0 = u64 [a3 + 0x18]\n 34617: a1 = u64 [a3 + 0x10]\n 34620: a2 = u64 [a3 + 0x8]\n 34623: a3 = u64 [a3]\n 34625: a0 = reverse a0\n 34627: u64 [s1 + 0x60] = a0\n 34630: a0 = reverse a1\n 34632: u64 [s1 + 0x58] = a0\n 34635: a0 = reverse a2\n 34637: u64 [s1 + 0x50] = a0\n 34640: a0 = reverse a3\n 34642: u64 [s1 + 0x48] = a0\n 34645: a0 = sp + 0xffffffffffffffe0\n 34648: a0 = a0 & 0xffffffffffffffe0\n 34651: u64 [s1 + 0x68] = a0\n 34654: sp = a0\n 34656: jump [t0]\n      : @1376 (gas: 16)\n 34658: a3 = u64 [s1 + 0x58]\n 34661: a0 = u64 [a3 + 0x18]\n 34664: a1 = u64 [a3 + 0x10]\n 34667: a2 = u64 [a3 + 0x8]\n 34670: a3 = u64 [a3]\n 34672: a0 = reverse a0\n 34674: a4 = reverse a1\n 34676: a2 = reverse a2\n 34678: a3 = reverse a3\n 34680: a1 = u64 [s1 + 0x60]\n 34683: u64 [a1 + 0x18] = a3\n 34686: u64 [a1 + 0x10] = a2\n 34689: u64 [a1 + 0x8] = a4\n 34692: u64 [a1] = a0\n 34694: a0 = s1 + 0xe0\n 34698: jump [t0]\n      : @1377 (gas: 5)\n 34700: a0 = reverse a0\n 34702: a1 = reverse a1\n 34704: a2 = reverse a2\n 34706: a3 = reverse a3\n 34708: jump [t0]\n      : @1378 (gas: 4)\n 34710: a0 = 0x1038\n 34714: a3 = s1 + a0\n 34717: a4 = a3 + 0x600\n 34721: jump [t0]\n      : @1379 (gas: 15)\n 34723: a2 = u64 [s1 + 0x78]\n 34726: a0 = u64 [a2 + 0x8]\n 34729: a1 = i32 [a2 + 0x10]\n 34732: a2 = u64 [a2]\n 34734: a0 = reverse a0\n 34736: a3 = a0 << 0x20\n 34739: a1 = reverse a1\n 34741: a1 = a1 >> 0x20\n 34744: a1 = a1 | a3\n 34747: a0 = a0 >> 0x20\n 34750: a2 = reverse a2\n 34752: a3 = a2 << 0x20\n 34755: a0 = a0 | a3\n 34758: a2 = a2 >> 0x20\n 34761: jump [t0]\n      : @1380 (gas: 16)\n 34763: sp = sp + 0xfffffffffffffd80\n 34767: a2 = sp + 0x200\n 34771: u64 [a2 + 0x78] = ra\n 34774: u64 [a2 + 0x70] = s0\n 34777: u64 [a2 + 0x68] = s1\n 34780: s0 = sp + 0x280\n 34784: sp = sp & 0xffffffffffffffe0\n 34787: s1 = sp\n 34789: a2 = u64 [a1 + 0x10]\n 34792: u64 [s1 + 0x50] = a2\n 34795: a2 = u64 [a1 + 0x8]\n 34798: u64 [s1 + 0x70] = a2\n 34801: a1 = u64 [a1]\n 34803: u64 [s1 + 0x78] = a1\n 34806: u64 [s1 + 0x58] = a0\n 34809: jump [t0]\n      : @1381 (gas: 10)\n 34811: a4 = 0 if a2 == 0\n 34813: a1 = u64 [s1 + 0x118]\n 34817: a1 = a1 & ~a3\n 34820: a2 = u64 [s1 + 0x120]\n 34824: a0 = a2 & ~a0\n 34827: a2 = u64 [s1 + 0x128]\n 34831: a2 = a2 & ~a4\n 34834: a3 = u64 [s1 + 0x130]\n 34838: a3 = a3 & ~a5\n 34841: jump [t0]\n      : @1382 (gas: 13)\n 34843: a4 = a0 << 0x3f\n 34846: a5 = a1 >> 0x1\n 34849: t1 = a5 | a4\n 34852: a5 = a3 << 0x3f\n 34855: a0 = a0 >> 0x1\n 34858: a0 = a0 | a5\n 34861: a1 = a1 << 0x3f\n 34864: a5 = a2 >> 0x1\n 34867: a1 = a1 | a5\n 34870: a3 = a3 >> 0x1\n 34873: a2 = a2 & 0x1\n 34876: a5 = -a2\n 34878: jump [t0]\n      : @1383 (gas: 14)\n 34880: a0 = u64 [a3 + 0x18]\n 34883: a1 = u64 [a3 + 0x10]\n 34886: a2 = u64 [a3 + 0x8]\n 34889: a3 = u64 [a3]\n 34891: a0 = reverse a0\n 34893: a4 = reverse a1\n 34895: a2 = reverse a2\n 34897: a3 = reverse a3\n 34899: a1 = u64 [s1 + 0x68]\n 34902: u64 [a1 + 0x18] = a3\n 34905: u64 [a1 + 0x10] = a2\n 34908: u64 [a1 + 0x8] = a4\n 34911: u64 [a1] = a0\n 34913: jump [t0]\n      : @1384 (gas: 4)\n 34915: a0 = 0x1838\n 34919: a3 = s1 + a0\n 34922: a4 = a3 + 0x200\n 34926: jump [t0]\n      : @1385 (gas: 8)\n 34928: a0 = u64 [a4 + 0x18]\n 34931: a1 = u64 [a4 + 0x20]\n 34934: a2 = u64 [a4 + 0x10]\n 34937: a3 = u64 [a4 + 0x8]\n 34940: a1 = a1 | a2\n 34943: a0 = a0 | a3\n 34946: a0 = a0 | a1\n 34949: jump [t0]\n      : @1386 (gas: 10)\n 34951: a2 = a0 if a1 == 0\n 34954: a0 = u64 [s1 + 0x28]\n 34957: t2 = a4 <u a0\n 34960: a1 = a5 ^ t1\n 34963: a3 = a5 <u t1\n 34966: a3 = t2 if a1 == 0\n 34969: a0 = a0 ^ a4\n 34972: a0 = a0 | a1\n 34975: a3 = a2 if a0 == 0\n 34978: jump [t0]\n      : @1387 (gas: 11)\n 34980: a0 = u64 [s1 + 0x20]\n 34983: u64 [s1 + 0x198] = a0\n 34987: a0 = u64 [s1 + 0x18]\n 34990: u64 [s1 + 0x190] = a0\n 34994: a0 = u64 [s1 + 0x10]\n 34997: u64 [s1 + 0x188] = a0\n 35001: a1 = s1 + 0x180\n 35005: a0 = u64 [s1 + 0x8]\n 35008: u64 [s1 + 0x180] = a0\n 35012: a0 = 0\n 35014: jump [t0]\n      : @1388 (gas: 10)\n 35016: a1 = u64 [s1 + 0xb8]\n 35020: a0 = a1 + 0x3f\n 35023: a1 = a0 <u a1\n 35026: a2 = t2 + a1\n 35029: a0 = a0 & 0xffffffffffffffe0\n 35032: ra = u64 [s1 + 0x30]\n 35035: ra = ra + a0\n 35038: u64 [s1 + 0xb8] = ra\n 35042: a0 = ra <u a0\n 35045: jump [t0]\n      : @1389 (gas: 8)\n 35047: u64 [s1 + 208] = 0\n 35051: u64 [s1 + 200] = 0\n 35055: u64 [s1 + 192] = 0\n 35059: a0 = 0xe2517d3f00000000\n 35069: a1 = s1 + 0xc0\n 35073: u64 [s1 + 0xd8] = a0\n 35077: a0 = 0\n 35079: jump [t0]\n      : @1390 (gas: 16)\n 35081: a4 = u64 [a3]\n 35083: u64 [sp + 0x18] = a4\n 35086: a4 = u64 [a3 + 0x8]\n 35089: u64 [sp + 0x20] = a4\n 35092: a4 = u64 [a3 + 0x10]\n 35095: u64 [sp + 0x28] = a4\n 35098: a3 = u64 [a3 + 0x18]\n 35101: u64 [sp + 0x30] = a3\n 35104: s1 = u64 [a2]\n 35106: a3 = u64 [a2 + 0x8]\n 35109: u64 [sp] = a3\n 35111: a3 = u64 [a2 + 0x10]\n 35114: u64 [sp + 0x8] = a3\n 35117: a2 = u64 [a2 + 0x18]\n 35120: u64 [sp + 0x10] = a2\n 35123: jump [t0]\n      : @1391 (gas: 8)\n 35125: a2 = a4 >u 0\n 35127: a1 = a1 ^ 0x1\n 35130: a1 = a2 if a4 != 0\n 35133: a2 = t2 >u 0\n 35135: a3 = a5 >u 0\n 35137: a3 = a2 if a5 == 0\n 35140: a3 = a1 if a0 == 0\n 35143: jump [t0]\n      : @1392 (gas: 12)\n 35145: a0 = u64 [s1 + 0x40]\n 35148: a3 = s1 + 0x100\n 35152: u64 [a3 + 0x18] = a0\n 35155: a0 = u64 [s1 + 0x48]\n 35158: u64 [a3 + 0x10] = a0\n 35161: a0 = u64 [s1 + 0x50]\n 35164: u64 [a3 + 0x8] = a0\n 35167: a0 = 0x20\n 35170: a1 = s1 + 0x100\n 35174: a2 = u64 [s1 + 0x58]\n 35177: u64 [a3] = a2\n 35179: jump [t0]\n      : @1393 (gas: 10)\n 35181: a0 = u64 [sp + 0x10]\n 35184: a1 = u64 [sp + 0x18]\n 35187: a2 = 0x100000000\n 35197: a2 = a2 ^ a0\n 35200: a2 = a2 | a1\n 35203: a3 = a0 >> 0x20\n 35206: a3 = a3 <u 0x1\n 35209: a3 = 0 if a1 != 0\n 35211: a3 = 0 if a2 == 0\n 35213: jump [t0]\n      : @1394 (gas: 10)\n 35215: a0 = u64 [s1 + 0x28]\n 35218: a1 = u64 [s1 + 0x18]\n 35221: a0 = a0 | a1\n 35224: a1 = 0xffffffe0\n 35234: a3 = u64 [s1 + 0x30]\n 35237: a1 = a3 <u a1\n 35240: a2 = u64 [s1 + 0x20]\n 35243: a1 = 0 if a2 != 0\n 35245: a1 = 0 if a0 != 0\n 35247: jump [t0]\n      : @1395 (gas: 10)\n 35249: a0 = u64 [a3 + 0x18]\n 35252: a1 = u64 [a3 + 0x10]\n 35255: a2 = u64 [a3 + 0x8]\n 35258: a3 = u64 [a3]\n 35260: a0 = reverse a0\n 35262: a1 = reverse a1\n 35264: a2 = reverse a2\n 35266: a3 = reverse a3\n 35268: a4 = s1 + 0x300\n 35272: jump [t0]\n      : @1396 (gas: 8)\n 35274: a0 = u64 [a4 + 0x58]\n 35277: a1 = u64 [a4 + 0x60]\n 35280: a2 = u64 [a4 + 0x50]\n 35283: a3 = u64 [a4 + 0x48]\n 35286: a1 = a1 | a2\n 35289: a0 = a0 | a3\n 35292: a0 = a0 | a1\n 35295: jump [t0]\n      : @1397 (gas: 4)\n 35297: a0 = 0x1838\n 35301: a3 = s1 + a0\n 35304: a4 = a3 + 0x100\n 35308: jump [t0]\n      : @1398 (gas: 10)\n 35310: u64 [s1 + 296] = 0\n 35314: a4 = 0\n 35316: ra = 0\n 35318: u64 [s1 + 280] = 0\n 35322: u64 [s1 + 288] = 0\n 35326: a3 = u64 [s1 + 0x108]\n 35330: a0 = u64 [a3 + 0x18]\n 35333: a1 = u64 [a3 + 0x10]\n 35336: a2 = u64 [a3 + 0x8]\n 35339: jump [t0]\n      : @1399 (gas: 11)\n 35341: a4 = a4 + a1\n 35344: a1 = a4 <u a1\n 35347: a1 = a1 + a5\n 35350: a1 = a1 | a2\n 35353: a2 = a0 | a4\n 35356: a2 = a2 | a1\n 35359: a1 = a1 | a4\n 35362: a2 = a2 >> 0x20\n 35365: a1 = a1 << 0x20\n 35368: a1 = a1 | a2\n 35371: jump [t0]\n      : @1400 (gas: 10)\n 35373: u64 [s1 + 0xf8] = a0\n 35377: u64 [s1 + 0x100] = a1\n 35381: a0 = u64 [s1 + 0xf0]\n 35385: a0 = a0 | a1\n 35388: u64 [s1 + 0xf0] = a0\n 35392: a0 = u64 [s1 + 0x138]\n 35396: a2 = a0 + 0xffffffffffffff80\n 35399: a0 = 0xffffffffffffffff\n 35402: a1 = 0xffffffffffffffff\n 35405: jump [t0]\n      : @1401 (gas: 9)\n 35407: u64 [s1 + 0x18] = a1\n 35410: u64 [s1 + 0x230] = a1\n 35414: u64 [s1 + 0x10] = a2\n 35417: u64 [s1 + 0x228] = a2\n 35421: a1 = s1 + 0x220\n 35425: u64 [s1 + 0x8] = a0\n 35428: u64 [s1 + 0x220] = a0\n 35432: a0 = 0\n 35434: jump [t0]\n      : @1402 (gas: 10)\n 35436: sp = sp + 0xfffffffffffffd80\n 35440: a3 = sp + 0x200\n 35444: u64 [a3 + 0x78] = ra\n 35447: u64 [a3 + 0x70] = s0\n 35450: u64 [a3 + 0x68] = s1\n 35453: s0 = sp + 0x280\n 35457: sp = sp & 0xffffffffffffffe0\n 35460: s1 = sp\n 35462: a3 = u64 [a2 + 0x10]\n 35465: jump [t0]\n      : @1403 (gas: 8)\n 35467: a2 = a1 | a5\n 35470: a0 = a0 | a3\n 35473: a2 = a2 | a0\n 35476: a2 = a2 >> 0x20\n 35479: a0 = a0 | a5\n 35482: a0 = a0 << 0x20\n 35485: a0 = a0 | a2\n 35488: jump [t0]\n      : @1404 (gas: 13)\n 35490: a0 = u64 [s1 + 0xb0]\n 35494: a1 = u64 [s1 + 0xa0]\n 35498: a0 = a0 | a1\n 35501: a1 = u64 [s1 + 0xb8]\n 35505: a4 = a1\n 35507: a2 = u64 [s1 + 0xa8]\n 35511: a1 = a1 | a2\n 35514: a1 = a1 | a0\n 35517: a1 = a1 >> 0x20\n 35520: a0 = a0 | a2\n 35523: a0 = a0 << 0x20\n 35526: a0 = a0 | a1\n 35529: jump [t0]\n      : @1405 (gas: 6)\n 35531: a0 = u64 [a3 + 0x18]\n 35534: a1 = u64 [a3 + 0x10]\n 35537: a2 = u64 [a3 + 0x8]\n 35540: a3 = u64 [a3]\n 35542: a0 = reverse a0\n 35544: jump [t0]\n      : @1406 (gas: 5)\n 35546: sp = a0\n 35548: i32 a2 = a0 + 0\n 35550: a1 = 0x40\n 35553: a0 = u64 [s1 + 0xb8]\n 35557: jump [t0]\n      : @1407 (gas: 12)\n 35559: a2 = u64 [sp]\n 35561: a3 = u64 [sp + 0x8]\n 35564: u64 [s1] = a2\n 35566: u64 [s1 + 0x8] = a3\n 35569: u64 [s1 + 0x10] = a0\n 35572: u64 [s1 + 0x18] = a1\n 35575: sp = s0 + 0xffffffffffffffc0\n 35578: ra = u64 [sp + 0x38]\n 35581: s0 = u64 [sp + 0x30]\n 35584: s1 = u64 [sp + 0x28]\n 35587: sp = sp + 0x40\n 35590: jump [t0]\n      : @1408 (gas: 12)\n 35592: a0 = u64 [a5 + 0xa0]\n 35596: a1 = u64 [a5 + 0x98]\n 35600: a2 = u64 [a5 + 0x90]\n 35604: a4 = u64 [a5 + 0x88]\n 35608: a0 = a0 | a2\n 35611: a2 = a4 | a1\n 35614: a2 = a2 | a0\n 35617: a2 = a2 >> 0x20\n 35620: a0 = a0 | a1\n 35623: a0 = a0 << 0x20\n 35626: a0 = a0 | a2\n 35629: jump [t0]\n      : @1409 (gas: 8)\n 35631: a0 = a0 | a2\n 35634: a2 = a3 | a1\n 35637: a2 = a2 | a0\n 35640: a2 = a2 >> 0x20\n 35643: a0 = a0 | a1\n 35646: a0 = a0 << 0x20\n 35649: a0 = a0 | a2\n 35652: jump [t0]\n      : @1410 (gas: 7)\n 35654: u64 [s1 + 632] = 0\n 35658: u64 [s1 + 624] = 0\n 35662: u64 [s1 + 616] = 0\n 35666: a0 = 0x20\n 35669: a1 = s1 + 0x260\n 35673: u64 [s1 + 608] = 0\n 35677: jump [t0]\n      : @1411 (gas: 7)\n 35679: a0 = a0 << 0x3b\n 35682: a1 = a0 >> 0x38\n 35685: u64 [s1 + 0x138] = a1\n 35689: a2 = 0x80 - a1\n 35693: a0 = 0xffffffffffffffff\n 35696: a1 = 0xffffffffffffffff\n 35699: jump [t0]\n      : @1412 (gas: 8)\n 35701: a1 = sp + 0xffffffffffffffe0\n 35704: a1 = a1 & 0xffffffffffffffe0\n 35707: u64 [s1 + 0x108] = a1\n 35711: sp = a1\n 35713: i32 a0 = a0 + 0\n 35715: i32 a2 = a1 + 0\n 35717: a1 = 0x20\n 35720: jump [t0]\n      : @1413 (gas: 8)\n 35722: a0 = sp + 0xffffffffffffffe0\n 35725: a0 = a0 & 0xffffffffffffffe0\n 35728: u64 [s1 + 0x30] = a0\n 35731: sp = a0\n 35733: i32 a2 = a0 + 0\n 35735: a1 = 0x40\n 35738: a0 = u64 [s1 + 0x40]\n 35741: jump [t0]\n      : @1414 (gas: 8)\n 35743: a0 = sp + 0xffffffffffffffe0\n 35746: a0 = a0 & 0xffffffffffffffe0\n 35749: u64 [s1 + 0x58] = a0\n 35752: sp = a0\n 35754: i32 a2 = a0 + 0\n 35756: a1 = 0x40\n 35759: a0 = u64 [s1 + 0x70]\n 35762: jump [t0]\n      : @1415 (gas: 9)\n 35764: a0 = sp + 0xffffffffffffffe0\n 35767: a4 = a0 & 0xffffffffffffffe0\n 35770: sp = a4\n 35772: a0 = 0\n 35774: u64 [s1 + 184] = 0\n 35778: t2 = 0\n 35780: t1 = 0\n 35782: u64 [s1 + 176] = 0\n 35786: jump [t0]\n      : @1416 (gas: 8)\n 35788: a0 = u64 [a4 + 0xd8]\n 35792: a1 = u64 [a4 + 0xe0]\n 35796: a2 = u64 [a4 + 0xd0]\n 35800: a3 = u64 [a4 + 0xc8]\n 35804: a1 = a1 | a2\n 35807: a0 = a0 | a3\n 35810: a0 = a0 | a1\n 35813: jump [t0]\n      : @1417 (gas: 9)\n 35815: sp = sp + 0xffffffffffffffc0\n 35818: u64 [sp + 0x38] = ra\n 35821: u64 [sp + 0x30] = s0\n 35824: u64 [sp + 0x28] = s1\n 35827: s0 = sp + 0x40\n 35830: sp = sp & 0xffffffffffffffe0\n 35833: s1 = a0\n 35835: i32 a0 = sp + 0\n 35837: jump [t0]\n      : @1418 (gas: 8)\n 35839: a0 = a0 + a4\n 35842: a3 = a3 + a1\n 35845: a5 = a3 <u a1\n 35848: a0 = a0 + a5\n 35851: ra = u64 [s1 + 0x100]\n 35855: ra = ra + a3\n 35858: a3 = ra <u a3\n 35861: jump [t0]\n      : @1419 (gas: 6)\n 35863: a1 = a3 << 0x3\n 35866: u64 [s1 + 0x138] = a1\n 35870: i32 a2 = 0x80 - a1\n 35874: a0 = 0xffffffffffffffff\n 35877: a1 = 0xffffffffffffffff\n 35880: jump [t0]\n      : @1420 (gas: 6)\n 35882: i32 a0 = a0 + 0\n 35884: i32 a2 = a2 + 0\n 35886: u64 [s1 + 0x68] = a1\n 35889: a1 = 0x40\n 35892: u64 [s1 + 0x60] = a0\n 35895: jump [t0]\n      : @1421 (gas: 7)\n 35897: a3 = a3 | a5\n 35900: a3 = a1 if a2 == 0\n 35903: a1 = 0xffffffffffffffff\n 35906: a0 = a1 if a4 == 0\n 35909: a3 = a1 if a4 == 0\n 35912: a5 = 0 if a2 == 0\n 35914: jump [t0]\n      : @1422 (gas: 4)\n 35916: a0 = 0x1038\n 35920: a3 = s1 + a0\n 35923: a4 = a3 + 0x500\n 35927: jump [t0]\n      : @1423 (gas: 2)\n 35929: a3 = a2 & 0x40\n 35932: jump @1427 if a3 != 0\n      : @1424 (gas: 1)\n 35935: jump @1426 if a2 == 0\n      : @1425 (gas: 6)\n 35938: i32 a3 = 0x40 - a2\n 35941: a3 = a1 << a3\n 35944: a1 = a1 >> a2\n 35947: a0 = a0 >> a2\n 35950: a0 = a0 | a3\n 35953: ret\n      : @1426 (gas: 1)\n 35955: ret\n      : @1427 (gas: 4)\n 35957: a0 = a2 + 0xffffffffffffffc0\n 35960: a0 = a1 >> a0\n 35963: a1 = 0\n 35965: ret\n      : @1428 (gas: 2)\n 35967: a3 = a2 & 0x40\n 35970: jump @1432 if a3 != 0\n      : @1429 (gas: 1)\n 35973: jump @1431 if a2 == 0\n      : @1430 (gas: 6)\n 35976: i32 a3 = 0x40 - a2\n 35979: a3 = a0 >> a3\n 35982: a0 = a0 << a2\n 35985: a1 = a1 << a2\n 35988: a1 = a1 | a3\n 35991: ret\n      : @1431 (gas: 1)\n 35993: ret\n      : @1432 (gas: 4)\n 35995: a1 = a2 + 0xffffffffffffffc0\n 35998: a1 = a0 << a1\n 36001: a0 = 0\n 36003: ret\n",
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "MINTER_ROLE()": "d5391393",
              "PAUSER_ROLE()": "e63ab1e9",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "decimals()": "313ce567",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "supportsInterface(bytes4)": "01ffc9a7",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "unpause()": "3f4ba83a"
            }
          },
          "irOptimized": "/// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 1:\"@openzeppelin/contracts/access/IAccessControl.sol\", 3:\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\", 4:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 5:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 6:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\", 7:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 8:\"@openzeppelin/contracts/utils/Context.sol\", 9:\"@openzeppelin/contracts/utils/Pausable.sol\", 10:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 11:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 15:\"contracts/MyToken.sol\"\nobject \"MyToken_2188\" {\n    code {\n        {\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"MyToken_2188\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 96)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let value := mload(memoryDataOffset)\n            let offset := mload(add(memoryDataOffset, 32))\n            if gt(offset, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let offset_1 := mload(add(memoryDataOffset, 64))\n            if gt(offset_1, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let value2 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value1)\n            if gt(newLen, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            let _2 := sload(/** @src 4:1648:1661  \"_name = name_\" */ 0x03)\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            length := shr(1, _2)\n            let outOfPlaceEncoding := and(_2, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            if gt(length, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:1648:1661  \"_name = name_\" */ 0x03)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32)\n                let deleteStart := add(data, shr(5, add(newLen, 31)))\n                if lt(newLen, 32) { deleteStart := data }\n                let _3 := add(data, shr(5, add(length, 31)))\n                let start := deleteStart\n                for { } lt(start, _3) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            srcOffset := 32\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:1648:1661  \"_name = name_\" */ 0x03)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ srcOffset)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                for { } lt(i, loopEnd) { i := add(i, 32) }\n                {\n                    sstore(dstPtr, mload(add(value1, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, 32)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value1, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 4:1648:1661  \"_name = name_\" */ 0x03, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 4:1648:1661  \"_name = name_\" */ 0x03, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                if newLen\n                {\n                    value_1 := mload(add(value1, srcOffset))\n                }\n                sstore(/** @src 4:1648:1661  \"_name = name_\" */ 0x03, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(value_1, not(shr(shl(/** @src 4:1648:1661  \"_name = name_\" */ 0x03, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ newLen), not(0)))), shl(1, newLen)))\n            }\n            let newLen_1 := mload(value2)\n            if gt(newLen_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 4:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            let _4 := sload(/** @src 4:1671:1688  \"_symbol = symbol_\" */ 0x04)\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            length_1 := shr(1, _4)\n            let outOfPlaceEncoding_1 := and(_4, 1)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 4:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            if gt(length_1, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                if lt(newLen_1, 32) { deleteStart_1 := data_1 }\n                let _5 := add(data_1, shr(5, add(length_1, 31)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _5) { start_1 := add(start_1, 1) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            srcOffset_1 := 32\n            switch gt(newLen_1, 31)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ srcOffset_1)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                {\n                    sstore(dstPtr_1, mload(add(value2, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, 1)\n                    srcOffset_1 := add(srcOffset_1, 32)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(value2, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 4:1648:1661  \"_name = name_\" */ 0x03, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 4:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ add(shl(1, newLen_1), 1))\n            }\n            default {\n                let value_2 := /** @src -1:-1:-1 */ 0\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                if newLen_1\n                {\n                    value_2 := mload(add(value2, srcOffset_1))\n                }\n                sstore(/** @src 4:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(value_2, not(shr(shl(/** @src 4:1648:1661  \"_name = name_\" */ 0x03, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ newLen_1), not(0)))), shl(1, newLen_1)))\n            }\n            /// @src 15:618:660  \"_grantRole(DEFAULT_ADMIN_ROLE, msg.sender)\"\n            pop(fun_grantRole_7030(/** @src 15:649:659  \"msg.sender\" */ caller()))\n            /// @src 15:670:705  \"_grantRole(PAUSER_ROLE, msg.sender)\"\n            pop(fun_grantRole_7031(/** @src 15:649:659  \"msg.sender\" */ caller()))\n            /// @src 15:715:750  \"_grantRole(MINTER_ROLE, msg.sender)\"\n            pop(fun_grantRole(/** @src 15:649:659  \"msg.sender\" */ caller()))\n            /// @src 4:7509:7530  \"account == address(0)\"\n            let _6 := iszero(/** @src 15:649:659  \"msg.sender\" */ caller())\n            /// @src 4:7505:7596  \"if (account == address(0)) {...\"\n            if /** @src 4:7509:7530  \"account == address(0)\" */ _6\n            /// @src 4:7505:7596  \"if (account == address(0)) {...\"\n            {\n                /// @src 4:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src 4:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src -1:-1:-1 */ 0)\n                /// @src 4:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                revert(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n            }\n            /// @src 9:1939:2000  \"if (paused()) {...\"\n            if /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 9:1796:1803  \"_paused\" */ 0x05), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n            /// @src 9:1939:2000  \"if (paused()) {...\"\n            {\n                /// @src 9:1974:1989  \"EnforcedPause()\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:1974:1989  \"EnforcedPause()\" */ shl(224, 0xd93c0665))\n                revert(/** @src -1:-1:-1 */ 0, /** @src 4:1671:1688  \"_symbol = symbol_\" */ 0x04)\n            }\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let _7 := sload(/** @src 4:6214:6235  \"_totalSupply += value\" */ 0x02)\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let sum := add(_7, value)\n            if gt(_7, sum)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 4:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x11)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            sstore(/** @src 4:6214:6235  \"_totalSupply += value\" */ 0x02, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sum)\n            /// @src 4:6624:7049  \"if (to == address(0)) {...\"\n            _6 := /** @src -1:-1:-1 */ 0\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 15:649:659  \"msg.sender\" */ caller())\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(32, /** @src -1:-1:-1 */ 0)\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 64)\n            sstore(dataSlot, add(sload(/** @src 4:7002:7024  \"_balances[to] += value\" */ dataSlot), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ value))\n            /// @src 4:7064:7089  \"Transfer(from, to, value)\"\n            let _8 := /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n            mstore(_8, value)\n            /// @src 4:7064:7089  \"Transfer(from, to, value)\"\n            log3(_8, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 4:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src -1:-1:-1 */ 0, /** @src 15:649:659  \"msg.sender\" */ caller())\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let _9 := mload(64)\n            let _10 := datasize(\"MyToken_2188_deployed\")\n            codecopy(_9, dataoffset(\"MyToken_2188_deployed\"), _10)\n            return(_9, _10)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let length := mload(offset)\n            if gt(length, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            let array_1 := allocate_memory(add(and(add(length, 0x1f), not(31)), 0x20))\n            mstore(array_1, length)\n            if gt(add(add(offset, length), 0x20), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mcopy(add(array_1, 0x20), add(offset, 0x20), length)\n            mstore(add(add(array_1, length), 0x20), /** @src -1:-1:-1 */ 0)\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            array := array_1\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole_7030(var_account) -> var\n        {\n            /// @src 0:6256:6260  \"bool\"\n            var := /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n            mstore(0, 0)\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let dataSlot := keccak256(0, 0x40)\n            /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n            let dataSlot_1 := /** @src -1:-1:-1 */ 0\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n            mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var := /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0, 0)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot_2 := keccak256(0, 0x40)\n                /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 8:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole_7031(var_account) -> var\n        {\n            /// @src 0:6256:6260  \"bool\"\n            var := /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n            mstore(0, /** @src 15:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let dataSlot := keccak256(0, 0x40)\n            /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n            let dataSlot_1 := /** @src -1:-1:-1 */ 0\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n            mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var := /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0, /** @src 15:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot_2 := keccak256(0, 0x40)\n                /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 15:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 8:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole(var_account) -> var\n        {\n            /// @src 0:6256:6260  \"bool\"\n            var := /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n            mstore(0, /** @src 15:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let dataSlot := keccak256(0, 0x40)\n            /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n            let dataSlot_1 := /** @src -1:-1:-1 */ 0\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n            mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var := /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0, /** @src 15:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot_2 := keccak256(0, 0x40)\n                /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 15:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 8:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 4:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 6:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\", 8:\"@openzeppelin/contracts/utils/Context.sol\", 9:\"@openzeppelin/contracts/utils/Pausable.sol\", 10:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 15:\"contracts/MyToken.sol\"\n    object \"MyToken_2188_deployed\" {\n        code {\n            {\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _2 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _2)) { revert(0, 0) }\n                        /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        let expr := /** @src 0:2673:2720  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _2, /** @src 0:2688:2720  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                        /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 10:862:902  \"interfaceId == type(IERC165).interfaceId\" */ eq(_2, /** @src 10:877:902  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(_1, iszero(iszero(expr)))\n                        return(_1, 32)\n                    }\n                    case 0x06fdde03 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr := mload(64)\n                        let ret := 0\n                        let slotValue := sload(/** @src 4:1837:1842  \"_name\" */ 0x03)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let length := 0\n                        length := shr(1, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(memPtr, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(memPtr, 32), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, /** @src 4:1837:1842  \"_name\" */ 0x03)\n                            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i := 0\n                            for { } lt(i, length) { i := add(i, 32) }\n                            {\n                                mstore(add(add(memPtr, i), 32), sload(dataPos))\n                                dataPos := add(dataPos, 1)\n                            }\n                            ret := add(add(memPtr, i), 32)\n                        }\n                        let newFreePtr := add(memPtr, and(add(sub(ret, memPtr), 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                        return(newFreePtr, sub(abi_encode_string(newFreePtr, memPtr), newFreePtr))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0 := abi_decode_address()\n                        let value_1 := calldataload(36)\n                        /// @src 4:9790:9879  \"if (owner == address(0)) {...\"\n                        if /** @src 4:9794:9813  \"owner == address(0)\" */ iszero(/** @src 8:735:745  \"msg.sender\" */ caller())\n                        /// @src 4:9790:9879  \"if (owner == address(0)) {...\"\n                        {\n                            /// @src 4:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                            mstore(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 4:9836:9868  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(4, 0)\n                            /// @src 4:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                            revert(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 36)\n                        }\n                        let _3 := and(/** @src 4:9892:9913  \"spender == address(0)\" */ value0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                        /// @src 4:9888:9978  \"if (spender == address(0)) {...\"\n                        if /** @src 4:9892:9913  \"spender == address(0)\" */ iszero(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _3)\n                        /// @src 4:9888:9978  \"if (spender == address(0)) {...\"\n                        {\n                            /// @src 4:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                            mstore(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 4:9936:9967  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(4, 0)\n                            /// @src 4:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                            revert(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 36)\n                        }\n                        mstore(0, /** @src 8:735:745  \"msg.sender\" */ caller())\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(32, 1)\n                        let dataSlot := keccak256(0, 64)\n                        /// @src 4:9987:10014  \"_allowances[owner][spender]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _3)\n                        mstore(0x20, /** @src 4:9987:10005  \"_allowances[owner]\" */ dataSlot)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                        sstore(/** @src 4:9987:10014  \"_allowances[owner][spender]\" */ dataSlot_1, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ value_1)\n                        /// @src 4:10066:10097  \"Approval(owner, spender, value)\"\n                        let _4 := /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n                        mstore(_4, value_1)\n                        /// @src 4:10066:10097  \"Approval(owner, spender, value)\"\n                        log3(_4, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 4:10066:10097  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 8:735:745  \"msg.sender\" */ caller(), /** @src 4:10066:10097  \"Approval(owner, spender, value)\" */ _3)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, 1)\n                        return(memPos, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _5 := sload(/** @src 4:2908:2920  \"_totalSupply\" */ 0x02)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _5)\n                        return(memPos_1, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_1 := abi_decode_address()\n                        let value1 := abi_decode_address_8411()\n                        let value_2 := calldataload(68)\n                        /// @src 4:4931:4936  \"value\"\n                        fun_spendAllowance(value0_1, /** @src 8:735:745  \"msg.sender\" */ caller(), /** @src 4:4931:4936  \"value\" */ value_2)\n                        /// @src 4:4967:4972  \"value\"\n                        fun_transfer(value0_1, value1, value_2)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, 1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x248a9ca3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let ret_1 := fun_getRoleAdmin(calldataload(4))\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, ret_1)\n                        return(memPos_3, 32)\n                    }\n                    case 0x2f2ff15d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_3 := calldataload(4)\n                        let value1_1 := abi_decode_address_8411()\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 0:4300:4318  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value_3))\n                        /// @src 0:4330:4355  \"_grantRole(role, account)\"\n                        pop(fun_grantRole(value_3, value1_1))\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, /** @src 4:2761:2763  \"18\" */ 0x12)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(memPos_4, 32)\n                    }\n                    case 0x36568abe {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_2 := abi_decode_address_8411()\n                        /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                        if /** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ iszero(eq(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ value1_2, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 8:735:745  \"msg.sender\" */ caller()))\n                        /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                        {\n                            /// @src 0:5478:5508  \"AccessControlBadConfirmation()\"\n                            mstore(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 0:5478:5508  \"AccessControlBadConfirmation()\" */ shl(225, 0x334bd919))\n                            revert(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 4)\n                        }\n                        /// @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\"\n                        pop(fun_revokeRole(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ calldataload(4), /** @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\" */ value1_2))\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x3f4ba83a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole_8414()\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let _6 := sload(/** @src 9:1796:1803  \"_paused\" */ 0x05)\n                        /// @src 9:2136:2198  \"if (!paused()) {...\"\n                        if /** @src 9:2140:2149  \"!paused()\" */ iszero(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(_6, 0xff))\n                        /// @src 9:2136:2198  \"if (!paused()) {...\"\n                        {\n                            /// @src 9:2172:2187  \"ExpectedPause()\"\n                            mstore(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 9:2172:2187  \"ExpectedPause()\" */ shl(224, 0x8dfc202b))\n                            revert(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 4)\n                        }\n                        sstore(/** @src 9:1796:1803  \"_paused\" */ 0x05, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(_6, not(255)))\n                        /// @src 9:2674:2696  \"Unpaused(_msgSender())\"\n                        let _7 := /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n                        mstore(_7, /** @src 8:735:745  \"msg.sender\" */ caller())\n                        /// @src 9:2674:2696  \"Unpaused(_msgSender())\"\n                        log1(_7, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 9:2674:2696  \"Unpaused(_msgSender())\" */ 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x40c10f19 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_2 := abi_decode_address()\n                        let value_4 := calldataload(36)\n                        mstore(0, /** @src 15:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(32, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                        let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 8:735:745  \"msg.sender\" */ caller(), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot_2)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                        /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                        if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n                        /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                            mstore(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(4, /** @src 8:735:745  \"msg.sender\" */ caller())\n                            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(36, /** @src 15:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                            /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                            revert(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 68)\n                        }\n                        let _8 := and(/** @src 4:7509:7530  \"account == address(0)\" */ value0_2, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                        /// @src 4:7509:7530  \"account == address(0)\"\n                        let _9 := iszero(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _8)\n                        /// @src 4:7505:7596  \"if (account == address(0)) {...\"\n                        if /** @src 4:7509:7530  \"account == address(0)\" */ _9\n                        /// @src 4:7505:7596  \"if (account == address(0)) {...\"\n                        {\n                            /// @src 4:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 4:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                            /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(4, 0)\n                            /// @src 4:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                            revert(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 36)\n                        }\n                        /// @src 9:1315:1387  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let _10 := sload(/** @src 4:6214:6235  \"_totalSupply += value\" */ 0x02)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let sum := add(_10, value_4)\n                        if gt(_10, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        sstore(/** @src 4:6214:6235  \"_totalSupply += value\" */ 0x02, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sum)\n                        /// @src 4:6624:7049  \"if (to == address(0)) {...\"\n                        _9 := /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                        mstore(0, _8)\n                        mstore(32, 0)\n                        let dataSlot_4 := keccak256(0, 64)\n                        sstore(dataSlot_4, add(sload(/** @src 4:7002:7024  \"_balances[to] += value\" */ dataSlot_4), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ value_4))\n                        /// @src 4:7064:7089  \"Transfer(from, to, value)\"\n                        let _11 := /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n                        mstore(_11, value_4)\n                        /// @src 4:7064:7089  \"Transfer(from, to, value)\"\n                        log3(_11, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 4:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 4:7064:7089  \"Transfer(from, to, value)\" */ _8)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x42966c68 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        /// @src 6:692:697  \"value\"\n                        fun_burn(/** @src 8:735:745  \"msg.sender\" */ caller(), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ calldataload(4))\n                        return(0, 0)\n                    }\n                    case 0x5c975abb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let converted := and(sload(/** @src 9:1796:1803  \"_paused\" */ 0x05), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, iszero(iszero(converted)))\n                        return(memPos_5, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, 0)\n                        let _12 := sload(keccak256(0, 64))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, _12)\n                        return(memPos_6, 32)\n                    }\n                    case 0x79cc6790 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_3 := abi_decode_address()\n                        let value_5 := calldataload(36)\n                        /// @src 6:1135:1140  \"value\"\n                        fun_spendAllowance(value0_3, /** @src 8:735:745  \"msg.sender\" */ caller(), /** @src 6:1135:1140  \"value\" */ value_5)\n                        /// @src 6:1166:1171  \"value\"\n                        fun_burn(value0_3, value_5)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x8456cb59 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole_8414()\n                        /// @src 9:1315:1387  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        sstore(/** @src 9:2398:2412  \"_paused = true\" */ 0x05, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 9:2398:2412  \"_paused = true\" */ 0x05), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 9:2408:2412  \"true\" */ 0x01))\n                        /// @src 9:2427:2447  \"Paused(_msgSender())\"\n                        let _13 := /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n                        mstore(_13, /** @src 8:735:745  \"msg.sender\" */ caller())\n                        /// @src 9:2427:2447  \"Paused(_msgSender())\"\n                        log1(_13, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 9:2427:2447  \"Paused(_msgSender())\" */ 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x91d14854 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_3 := abi_decode_address_8411()\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let dataSlot_5 := keccak256(0, 64)\n                        /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                        let dataSlot_6 := /** @src -1:-1:-1 */ 0\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(value1_3, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot_5)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        dataSlot_6 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                        let converted_1 := and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_6), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, iszero(iszero(converted_1)))\n                        return(memPos_7, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr_1 := mload(64)\n                        let ret_2 := 0\n                        let slotValue_1 := sload(4)\n                        let length_1 := 0\n                        length_1 := shr(1, slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, 1)\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(memPtr_1, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_1, 32), and(slotValue_1, not(255)))\n                            ret_2 := add(add(memPtr_1, shl(5, iszero(iszero(length_1)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, 4)\n                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let i_1 := 0\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, 32) }\n                            {\n                                mstore(add(add(memPtr_1, i_1), 32), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, 1)\n                            }\n                            ret_2 := add(add(memPtr_1, i_1), 32)\n                        }\n                        let newFreePtr_1 := add(memPtr_1, and(add(sub(ret_2, memPtr_1), 31), not(31)))\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr_1)\n                        return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr_1), newFreePtr_1))\n                    }\n                    case 0xa217fddf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, 0)\n                        return(memPos_8, 32)\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_4 := abi_decode_address()\n                        /// @src 4:3440:3445  \"value\"\n                        fun_transfer(/** @src 8:735:745  \"msg.sender\" */ caller(), /** @src 4:3440:3445  \"value\" */ value0_4, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ calldataload(36))\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, 1)\n                        return(memPos_9, 32)\n                    }\n                    case 0xd5391393 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, /** @src 15:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(memPos_10, 32)\n                    }\n                    case 0xd547741f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_6 := calldataload(4)\n                        let value1_4 := abi_decode_address_8411()\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 0:4717:4735  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value_6))\n                        /// @src 0:4747:4773  \"_revokeRole(role, account)\"\n                        pop(fun_revokeRole(value_6, value1_4))\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_5 := abi_decode_address()\n                        let value1_5 := abi_decode_address_8411()\n                        mstore(0, and(value0_5, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 4:3638:3649  \"_allowances\" */ 0x01)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let dataSlot_7 := keccak256(0, 64)\n                        /// @src 4:3638:3665  \"_allowances[owner][spender]\"\n                        let dataSlot_8 := /** @src -1:-1:-1 */ 0\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(value1_5, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 4:3638:3656  \"_allowances[owner]\" */ dataSlot_7)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        dataSlot_8 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                        let _14 := sload(/** @src 4:3638:3665  \"_allowances[owner][spender]\" */ dataSlot_8)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, _14)\n                        return(memPos_11, 32)\n                    }\n                    case 0xe63ab1e9 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_12 := mload(64)\n                        mstore(memPos_12, /** @src 15:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(memPos_12, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                let length := mload(value0)\n                mstore(add(headStart, 32), length)\n                mcopy(add(headStart, 64), add(value0, 32), length)\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_8411() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            /// @ast-id 128 @src 0:3810:3930  \"function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {...\"\n            function fun_getRoleAdmin(var_role) -> var\n            {\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:3901:3907  \"_roles\" */ 0x06)\n                /// @src 0:3894:3923  \"return _roles[role].adminRole\"\n                var := /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1))\n            }\n            /// @ast-id 1177 @src 4:10396:10872  \"function _spendAllowance(address owner, address spender, uint256 value) internal virtual {...\"\n            function fun_spendAllowance(var_owner, var_spender, var_value)\n            {\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _1 := and(var_owner, sub(shl(160, 1), 1))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 4:3638:3649  \"_allowances\" */ 0x01)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 4:3638:3665  \"_allowances[owner][spender]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 4:10522:10547  \"allowance(owner, spender)\" */ var_spender, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 4:3638:3656  \"_allowances[owner]\" */ dataSlot)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                let _2 := sload(/** @src 4:3638:3665  \"_allowances[owner][spender]\" */ dataSlot_1)\n                /// @src 4:10557:10866  \"if (currentAllowance < type(uint256).max) {...\"\n                if /** @src 4:10561:10597  \"currentAllowance < type(uint256).max\" */ lt(_2, /** @src 4:10580:10597  \"type(uint256).max\" */ not(0))\n                /// @src 4:10557:10866  \"if (currentAllowance < type(uint256).max) {...\"\n                {\n                    /// @src 4:10613:10743  \"if (currentAllowance < value) {...\"\n                    if /** @src 4:10617:10641  \"currentAllowance < value\" */ lt(_2, var_value)\n                    /// @src 4:10613:10743  \"if (currentAllowance < value) {...\"\n                    {\n                        /// @src 4:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 4:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ shl(225, 0x7dc7a0d9))\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src 4:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ 4, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(var_spender, sub(shl(160, 1), 1)))\n                        mstore(36, _2)\n                        mstore(68, var_value)\n                        /// @src 4:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 100)\n                    }\n                    /// @src 4:9790:9879  \"if (owner == address(0)) {...\"\n                    if /** @src 4:9794:9813  \"owner == address(0)\" */ iszero(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                    /// @src 4:9790:9879  \"if (owner == address(0)) {...\"\n                    {\n                        /// @src 4:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 4:9836:9868  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src 4:9836:9868  \"ERC20InvalidApprover(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                        /// @src 4:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                    }\n                    /// @src 4:9888:9978  \"if (spender == address(0)) {...\"\n                    if /** @src 4:9892:9913  \"spender == address(0)\" */ iszero(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 4:9892:9913  \"spender == address(0)\" */ var_spender, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    /// @src 4:9888:9978  \"if (spender == address(0)) {...\"\n                    {\n                        /// @src 4:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 4:9936:9967  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                        /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src 4:9936:9967  \"ERC20InvalidSpender(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                        /// @src 4:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                    }\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                    mstore(0x20, /** @src 4:3638:3649  \"_allowances\" */ 0x01)\n                    /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    let dataSlot_2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                    /// @src 4:9987:10014  \"_allowances[owner][spender]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 4:9987:10014  \"_allowances[owner][spender]\" */ var_spender, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 4:9987:10005  \"_allowances[owner]\" */ dataSlot_2)\n                    /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                    sstore(/** @src 4:9987:10014  \"_allowances[owner][spender]\" */ dataSlot_3, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(/** @src 4:10809:10833  \"currentAllowance - value\" */ _2, var_value))\n                }\n            }\n            /// @ast-id 908 @src 4:5374:5674  \"function _transfer(address from, address to, uint256 value) internal {...\"\n            function fun_transfer(var_from, var_to, var_value)\n            {\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _1 := and(/** @src 4:5457:5475  \"from == address(0)\" */ var_from, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                /// @src 4:5457:5475  \"from == address(0)\"\n                let _2 := iszero(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                /// @src 4:5453:5539  \"if (from == address(0)) {...\"\n                if /** @src 4:5457:5475  \"from == address(0)\" */ _2\n                /// @src 4:5453:5539  \"if (from == address(0)) {...\"\n                {\n                    /// @src 4:5498:5528  \"ERC20InvalidSender(address(0))\"\n                    mstore(/** @src 4:5473:5474  \"0\" */ 0x00, /** @src 4:5498:5528  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                    /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 4:5498:5528  \"ERC20InvalidSender(address(0))\" */ 4, /** @src 4:5473:5474  \"0\" */ 0x00)\n                    /// @src 4:5498:5528  \"ERC20InvalidSender(address(0))\"\n                    revert(/** @src 4:5473:5474  \"0\" */ 0x00, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                }\n                let _3 := and(/** @src 4:5552:5568  \"to == address(0)\" */ var_to, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                /// @src 4:5552:5568  \"to == address(0)\"\n                let _4 := iszero(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _3)\n                /// @src 4:5548:5634  \"if (to == address(0)) {...\"\n                if /** @src 4:5552:5568  \"to == address(0)\" */ _4\n                /// @src 4:5548:5634  \"if (to == address(0)) {...\"\n                {\n                    /// @src 4:5591:5623  \"ERC20InvalidReceiver(address(0))\"\n                    mstore(/** @src 4:5473:5474  \"0\" */ 0x00, /** @src 4:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                    /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 4:5591:5623  \"ERC20InvalidReceiver(address(0))\" */ 4, /** @src 4:5473:5474  \"0\" */ 0x00)\n                    /// @src 4:5591:5623  \"ERC20InvalidReceiver(address(0))\"\n                    revert(/** @src 4:5473:5474  \"0\" */ 0x00, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                }\n                /// @src 9:1315:1387  \"modifier whenNotPaused() {...\"\n                fun_requireNotPaused()\n                /// @src 4:6074:6614  \"if (from == address(0)) {...\"\n                _2 := /** @src 4:5473:5474  \"0\" */ 0x00\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src 4:5473:5474  \"0\" */ 0x00, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 4:5473:5474  \"0\" */ 0x00)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _5 := sload(keccak256(/** @src 4:5473:5474  \"0\" */ 0x00, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40))\n                /// @src 4:6317:6432  \"if (fromBalance < value) {...\"\n                if /** @src 4:6321:6340  \"fromBalance < value\" */ lt(_5, var_value)\n                /// @src 4:6317:6432  \"if (fromBalance < value) {...\"\n                {\n                    /// @src 4:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    mstore(/** @src 4:5473:5474  \"0\" */ 0x00, /** @src 4:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                    /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 4:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ 4, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                    mstore(36, _5)\n                    mstore(68, var_value)\n                    /// @src 4:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    revert(/** @src 4:5473:5474  \"0\" */ 0x00, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 100)\n                }\n                mstore(/** @src 4:5473:5474  \"0\" */ 0x00, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 4:5473:5474  \"0\" */ 0x00)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                sstore(keccak256(/** @src 4:5473:5474  \"0\" */ 0x00, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40), sub(/** @src 4:6570:6589  \"fromBalance - value\" */ _5, var_value))\n                /// @src 4:6624:7049  \"if (to == address(0)) {...\"\n                _4 := /** @src 4:5473:5474  \"0\" */ 0x00\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src 4:5473:5474  \"0\" */ 0x00, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _3)\n                mstore(0x20, /** @src 4:5473:5474  \"0\" */ 0x00)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(/** @src 4:5473:5474  \"0\" */ 0x00, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 4:7002:7024  \"_balances[to] += value\" */ dataSlot), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ var_value))\n                /// @src 4:7064:7089  \"Transfer(from, to, value)\"\n                let _6 := /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(0x40)\n                mstore(_6, var_value)\n                /// @src 4:7064:7089  \"Transfer(from, to, value)\"\n                log3(_6, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x20, /** @src 4:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, _3)\n            }\n            /// @ast-id 93 @src 0:3199:3302  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole_8414()\n            {\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 15:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 8:735:745  \"msg.sender\" */ caller(), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 8:735:745  \"msg.sender\" */ caller())\n                    /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(36, /** @src 15:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 68)\n                }\n            }\n            /// @ast-id 93 @src 0:3199:3302  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole(var_role)\n            {\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 8:735:745  \"msg.sender\" */ caller(), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 8:735:745  \"msg.sender\" */ caller())\n                    /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(36, var_role)\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 68)\n                }\n            }\n            /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole(var_role, var_account) -> var\n            {\n                /// @src 0:6256:6260  \"bool\"\n                var := /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n                case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:6466:6478  \"return false\"\n                    var := /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                    /// @src 0:6466:6478  \"return false\"\n                    leave\n                }\n                default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(0, var_role)\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                    /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                    /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                    sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                    /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 8:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6424:6435  \"return true\"\n                    var := /** @src 0:6347:6351  \"true\" */ 0x01\n                    /// @src 0:6424:6435  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 294 @src 0:6732:7049  \"function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_revokeRole(var_role, var_account) -> var\n            {\n                /// @src 0:6810:6814  \"bool\"\n                var := /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6830:6852  \"hasRole(role, account)\" */ var_account, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:6826:7043  \"if (hasRole(role, account)) {...\"\n                switch /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n                case /** @src 0:6826:7043  \"if (hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:7020:7032  \"return false\"\n                    var := /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                    /// @src 0:7020:7032  \"return false\"\n                    leave\n                }\n                default /// @src 0:6826:7043  \"if (hasRole(role, account)) {...\"\n                {\n                    /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(0, var_role)\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                    /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 0:6868:6897  \"_roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6868:6897  \"_roles[role].hasRole[account]\" */ var_account, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 0:6868:6880  \"_roles[role]\" */ dataSlot_2)\n                    /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                    sstore(/** @src 0:6868:6897  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:6868:6897  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)))\n                    /// @src 0:6924:6964  \"RoleRevoked(role, account, _msgSender())\"\n                    log4(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6924:6964  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6924:6964  \"RoleRevoked(role, account, _msgSender())\" */ var_account, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 8:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6978:6989  \"return true\"\n                    var := /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 1\n                    /// @src 0:6978:6989  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 1051 @src 4:7965:8171  \"function _burn(address account, uint256 value) internal {...\"\n            function fun_burn(var_account, var_value)\n            {\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _1 := and(/** @src 4:8035:8056  \"account == address(0)\" */ var_account, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                /// @src 4:8035:8056  \"account == address(0)\"\n                let _2 := iszero(/** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                /// @src 4:8031:8120  \"if (account == address(0)) {...\"\n                if /** @src 4:8035:8056  \"account == address(0)\" */ _2\n                /// @src 4:8031:8120  \"if (account == address(0)) {...\"\n                {\n                    /// @src 4:8079:8109  \"ERC20InvalidSender(address(0))\"\n                    mstore(/** @src 4:8054:8055  \"0\" */ 0x00, /** @src 4:5498:5528  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                    /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 4:8079:8109  \"ERC20InvalidSender(address(0))\" */ 4, /** @src 4:8054:8055  \"0\" */ 0x00)\n                    /// @src 4:8079:8109  \"ERC20InvalidSender(address(0))\"\n                    revert(/** @src 4:8054:8055  \"0\" */ 0x00, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                }\n                /// @src 9:1315:1387  \"modifier whenNotPaused() {...\"\n                fun_requireNotPaused()\n                /// @src 4:6074:6614  \"if (from == address(0)) {...\"\n                _2 := /** @src 4:8054:8055  \"0\" */ 0x00\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src 4:8054:8055  \"0\" */ 0x00, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 4:8054:8055  \"0\" */ 0x00)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _3 := sload(keccak256(/** @src 4:8054:8055  \"0\" */ 0x00, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40))\n                /// @src 4:6317:6432  \"if (fromBalance < value) {...\"\n                if /** @src 4:6321:6340  \"fromBalance < value\" */ lt(_3, var_value)\n                /// @src 4:6317:6432  \"if (fromBalance < value) {...\"\n                {\n                    /// @src 4:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    mstore(/** @src 4:8054:8055  \"0\" */ 0x00, /** @src 4:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                    /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 4:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ 4, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                    mstore(36, _3)\n                    mstore(68, var_value)\n                    /// @src 4:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    revert(/** @src 4:8054:8055  \"0\" */ 0x00, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 100)\n                }\n                mstore(/** @src 4:8054:8055  \"0\" */ 0x00, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 4:8054:8055  \"0\" */ 0x00)\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                sstore(keccak256(/** @src 4:8054:8055  \"0\" */ 0x00, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40), sub(/** @src 4:6570:6589  \"fromBalance - value\" */ _3, var_value))\n                /// @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                sstore(/** @src 4:6791:6812  \"_totalSupply -= value\" */ 0x02, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(sload(/** @src 4:6791:6812  \"_totalSupply -= value\" */ 0x02), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ var_value))\n                /// @src 4:7064:7089  \"Transfer(from, to, value)\"\n                let _4 := /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(0x40)\n                mstore(_4, var_value)\n                /// @src 4:7064:7089  \"Transfer(from, to, value)\"\n                log3(_4, /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x20, /** @src 4:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, /** @src 4:8054:8055  \"0\" */ 0x00)\n            }\n            /// @ast-id 1420 @src 9:1878:2006  \"function _requireNotPaused() internal view virtual {...\"\n            function fun_requireNotPaused()\n            {\n                /// @src 9:1939:2000  \"if (paused()) {...\"\n                if /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 9:1796:1803  \"_paused\" */ 0x05), /** @src 15:302:1244  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n                /// @src 9:1939:2000  \"if (paused()) {...\"\n                {\n                    /// @src 9:1974:1989  \"EnforcedPause()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 9:1974:1989  \"EnforcedPause()\" */ shl(224, 0xd93c0665))\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 9:1974:1989  \"EnforcedPause()\" */ 4)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220387e7f6c78879a5af4526529d1e0ba69908329968b12de9becb4a319c1fc2f7a64736f6c634300081a0033\"\n    }\n}\n",
          "hash": "bebb390725afa285a5160e09213b1aa6df84de582d108fe6e6c6222f9de64607",
          "factoryDependencies": {}
        }
      },
      "contracts/SupplyChainVerifier.sol": {
        "SupplyChainVerifier": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "productId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "manufacturer",
                  "type": "address"
                }
              ],
              "name": "ProductRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "productId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "verifier",
                  "type": "address"
                }
              ],
              "name": "ProductVerified",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "DISTRIBUTOR_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MANUFACTURER_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "RETAILER_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "addDistributor",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "addRetailer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "productId",
                  "type": "uint256"
                }
              ],
              "name": "getProduct",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "origin",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "manufacturingDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "manufacturer",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "isVerified",
                      "type": "bool"
                    },
                    {
                      "internalType": "string",
                      "name": "metadata",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct SupplyChainVerifier.Product",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getProductCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "products",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "origin",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "manufacturingDate",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "manufacturer",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isVerified",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "origin",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "name": "registerProduct",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "productId",
                  "type": "uint256"
                }
              ],
              "name": "verifyProduct",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"manufacturer\",\"type\":\"address\"}],\"name\":\"ProductRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"ProductVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DISTRIBUTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MANUFACTURER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RETAILER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addRetailer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"}],\"name\":\"getProduct\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"origin\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"manufacturingDate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"manufacturer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct SupplyChainVerifier.Product\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProductCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"products\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"origin\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"manufacturingDate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"manufacturer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"origin\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"registerProduct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"}],\"name\":\"verifyProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SupplyChainVerifier.sol\":\"SupplyChainVerifier\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/SupplyChainVerifier.sol\":{\"keccak256\":\"0xec73094aa05848fe1742caea7e45e7e6fd745e7677c8548f665389cea32d24f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0896493b695b5270121563143a5241de3941c07836337b3d17d15e7d124d602\",\"dweb:/ipfs/QmS4z6TunRFTpX9TLuSFPxwbXMQfvZwwzxEGErsSasy1ez\"]}},\"version\":1}",
            "solc_version": "0.8.26+commit.8a97fa7a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 440/66032 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 10314\n// Code size = 36313 bytes\n\n      : @0 (gas: 1)\n     0: jump @14 if a0 == a1\n      : @1 (gas: 9)\n     3: a3 = a1 << 0x20\n     6: a3 = a3 >> 0x20\n     9: a4 = a0 << 0x20\n    12: a4 = a4 >> 0x20\n    15: a4 = a4 + a2\n    18: a3 = a3 - a4\n    21: a4 = a2 << 0x1\n    24: a4 = -a4\n    26: jump @7 if a4 >=u a3\n      : @2 (gas: 1)\n    29: jump @11 if a0 >=u a1\n      : @3 (gas: 1)\n    32: jump @14 if a2 == 0\n      : @4 (gas: 3)\n    35: a2 = a2 + a0\n    38: a3 = a0\n    40: fallthrough\n      : @5 (gas: 6)\n    41: a4 = u8 [a1]\n    43: a1 = a1 + 0x1\n    46: a5 = a3 + 0x1\n    49: u8 [a3] = a4\n    51: a3 = a5\n    53: jump @5 if a5 != a2\n      : @6 (gas: 1)\n    56: jump @14\n      : @7 (gas: 1)\n    58: jump @14 if a2 == 0\n      : @8 (gas: 3)\n    61: a2 = a2 + a0\n    64: a3 = a0\n    66: fallthrough\n      : @9 (gas: 6)\n    67: a4 = u8 [a1]\n    69: a1 = a1 + 0x1\n    72: a5 = a3 + 0x1\n    75: u8 [a3] = a4\n    77: a3 = a5\n    79: jump @9 if a5 != a2\n      : @10 (gas: 1)\n    82: jump @14\n      : @11 (gas: 1)\n    84: jump @14 if a2 == 0\n      : @12 (gas: 2)\n    87: i32 a3 = a2 + 0xffffffffffffffff\n    90: fallthrough\n      : @13 (gas: 7)\n    91: a4 = a1 + a3\n    94: a4 = u8 [a4]\n    96: a2 = a2 + 0xffffffffffffffff\n    99: a5 = a0 + a3\n   102: u8 [a5] = a4\n   104: i32 a3 = a3 + 0xffffffffffffffff\n   107: jump @13 if a2 != 0\n      : @14 (gas: 1)\n   110: ret\n      : @15 (gas: 2)\n   112: a1 = i32 [0x201c0]\n   117: jump @50 if a1 == 0\n      : @16 (gas: 4)\n   121: a0 = 0x301f0\n   126: i32 a0 = a0 + 0\n   128: ecalli 9 // 'set_immutable_data'\n   130: jump @50\n      : @17 (gas: 8)\n   133: sp = sp + 0xfffffffffffffff0\n   136: u64 [sp + 0x8] = ra\n   139: u64 [sp] = s0\n   141: a2 = a1\n   143: s0 = a0\n   145: a1 = 0x20\n   148: a0 = a2\n   150: ra = 2, jump @30\n      : @18 [@dyn 1] (gas: 100)\n   155: a1 = u8 [a0 + 0x1]\n   158: a2 = u8 [a0]\n   160: a3 = u8 [a0 + 0x2]\n   163: a4 = u8 [a0 + 0x3]\n   166: a1 = a1 << 0x8\n   169: a1 = a1 | a2\n   172: a3 = a3 << 0x10\n   175: a4 = a4 << 0x18\n   178: a3 = a3 | a4\n   181: a1 = a1 | a3\n   184: a2 = u8 [a0 + 0x5]\n   187: a3 = u8 [a0 + 0x4]\n   190: a4 = u8 [a0 + 0x6]\n   193: a5 = u8 [a0 + 0x7]\n   196: a2 = a2 << 0x8\n   199: a2 = a2 | a3\n   202: a4 = a4 << 0x10\n   205: a5 = a5 << 0x18\n   208: a4 = a4 | a5\n   211: a2 = a2 | a4\n   214: a2 = a2 << 0x20\n   217: t0 = a2 | a1\n   220: a2 = u8 [a0 + 0x9]\n   223: a3 = u8 [a0 + 0x8]\n   226: a4 = u8 [a0 + 0xa]\n   229: a5 = u8 [a0 + 0xb]\n   232: a2 = a2 << 0x8\n   235: a2 = a2 | a3\n   238: a4 = a4 << 0x10\n   241: a5 = a5 << 0x18\n   244: a4 = a4 | a5\n   247: a2 = a2 | a4\n   250: a3 = u8 [a0 + 0xd]\n   253: a4 = u8 [a0 + 0xc]\n   256: a5 = u8 [a0 + 0xe]\n   259: a1 = u8 [a0 + 0xf]\n   262: a3 = a3 << 0x8\n   265: a3 = a3 | a4\n   268: a5 = a5 << 0x10\n   271: a1 = a1 << 0x18\n   274: a1 = a1 | a5\n   277: a1 = a1 | a3\n   280: a1 = a1 << 0x20\n   283: t1 = a1 | a2\n   286: a1 = u8 [a0 + 0x11]\n   289: a3 = u8 [a0 + 0x10]\n   292: a4 = u8 [a0 + 0x12]\n   295: a5 = u8 [a0 + 0x13]\n   298: a1 = a1 << 0x8\n   301: a1 = a1 | a3\n   304: a4 = a4 << 0x10\n   307: a5 = a5 << 0x18\n   310: a4 = a4 | a5\n   313: a1 = a1 | a4\n   316: a3 = u8 [a0 + 0x15]\n   319: a4 = u8 [a0 + 0x14]\n   322: a5 = u8 [a0 + 0x16]\n   325: a2 = u8 [a0 + 0x17]\n   328: a3 = a3 << 0x8\n   331: a3 = a3 | a4\n   334: a5 = a5 << 0x10\n   337: a2 = a2 << 0x18\n   340: a2 = a2 | a5\n   343: a2 = a2 | a3\n   346: a2 = a2 << 0x20\n   349: a3 = a2 | a1\n   352: a1 = u8 [a0 + 0x19]\n   355: a2 = u8 [a0 + 0x18]\n   358: a4 = u8 [a0 + 0x1a]\n   361: a5 = u8 [a0 + 0x1b]\n   364: a1 = a1 << 0x8\n   367: a1 = a1 | a2\n   370: a4 = a4 << 0x10\n   373: a5 = a5 << 0x18\n   376: a4 = a4 | a5\n   379: a1 = a1 | a4\n   382: a2 = u8 [a0 + 0x1d]\n   385: a4 = u8 [a0 + 0x1c]\n   388: a5 = u8 [a0 + 0x1e]\n   391: a0 = u8 [a0 + 0x1f]\n   394: a2 = a2 << 0x8\n   397: a2 = a2 | a4\n   400: a5 = a5 << 0x10\n   403: a0 = a0 << 0x18\n   406: a0 = a0 | a5\n   409: a0 = a0 | a2\n   412: a0 = a0 << 0x20\n   415: a0 = a0 | a1\n   418: a0 = reverse a0\n   420: a1 = reverse a3\n   422: a2 = reverse t1\n   424: a3 = reverse t0\n   426: u64 [s0 + 0x18] = a3\n   429: u64 [s0 + 0x10] = a2\n   432: u64 [s0 + 0x8] = a1\n   435: u64 [s0] = a0\n   437: ra = u64 [sp + 0x8]\n   440: s0 = u64 [sp]\n   442: sp = sp + 0x10\n   445: ret\n      : @19 (gas: 12)\n   447: sp = sp + 0xffffffffffffffd8\n   450: u64 [sp + 0x20] = ra\n   453: u64 [sp + 0x18] = s0\n   456: u64 [sp + 0x10] = s1\n   459: a2 = u64 [a1]\n   461: u64 [sp + 0x8] = a2\n   464: a2 = u64 [a1 + 0x8]\n   467: u64 [sp] = a2\n   469: s0 = u64 [a1 + 0x10]\n   472: s1 = u64 [a1 + 0x18]\n   475: a1 = 0x20\n   478: ra = 4, jump @30\n      : @20 [@dyn 2] (gas: 71)\n   483: a1 = reverse s1\n   485: a2 = reverse s0\n   487: a3 = u64 [sp]\n   489: a3 = reverse a3\n   491: a4 = u64 [sp + 0x8]\n   494: a4 = reverse a4\n   496: u8 [a0 + 0x18] = a4\n   499: u8 [a0 + 0x10] = a3\n   502: u8 [a0 + 0x8] = a2\n   505: u8 [a0] = a1\n   507: a5 = a4 >> 0x38\n   510: u8 [a0 + 0x1f] = a5\n   513: a5 = a4 >> 0x30\n   516: u8 [a0 + 0x1e] = a5\n   519: a5 = a4 >> 0x28\n   522: u8 [a0 + 0x1d] = a5\n   525: a5 = a4 >> 0x20\n   528: u8 [a0 + 0x1c] = a5\n   531: a5 = a4 >> 0x18\n   534: u8 [a0 + 0x1b] = a5\n   537: a5 = a4 >> 0x10\n   540: u8 [a0 + 0x1a] = a5\n   543: a4 = a4 >> 0x8\n   546: u8 [a0 + 0x19] = a4\n   549: a4 = a3 >> 0x38\n   552: u8 [a0 + 0x17] = a4\n   555: a4 = a3 >> 0x30\n   558: u8 [a0 + 0x16] = a4\n   561: a4 = a3 >> 0x28\n   564: u8 [a0 + 0x15] = a4\n   567: a4 = a3 >> 0x20\n   570: u8 [a0 + 0x14] = a4\n   573: a4 = a3 >> 0x18\n   576: u8 [a0 + 0x13] = a4\n   579: a4 = a3 >> 0x10\n   582: u8 [a0 + 0x12] = a4\n   585: a3 = a3 >> 0x8\n   588: u8 [a0 + 0x11] = a3\n   591: a3 = a2 >> 0x38\n   594: u8 [a0 + 0xf] = a3\n   597: a3 = a2 >> 0x30\n   600: u8 [a0 + 0xe] = a3\n   603: a3 = a2 >> 0x28\n   606: u8 [a0 + 0xd] = a3\n   609: a3 = a2 >> 0x20\n   612: u8 [a0 + 0xc] = a3\n   615: a3 = a2 >> 0x18\n   618: u8 [a0 + 0xb] = a3\n   621: a3 = a2 >> 0x10\n   624: u8 [a0 + 0xa] = a3\n   627: a2 = a2 >> 0x8\n   630: u8 [a0 + 0x9] = a2\n   633: a2 = a1 >> 0x38\n   636: u8 [a0 + 0x7] = a2\n   639: a2 = a1 >> 0x30\n   642: u8 [a0 + 0x6] = a2\n   645: a2 = a1 >> 0x28\n   648: u8 [a0 + 0x5] = a2\n   651: a2 = a1 >> 0x20\n   654: u8 [a0 + 0x4] = a2\n   657: a2 = a1 >> 0x18\n   660: u8 [a0 + 0x3] = a2\n   663: a2 = a1 >> 0x10\n   666: u8 [a0 + 0x2] = a2\n   669: a1 = a1 >> 0x8\n   672: u8 [a0 + 0x1] = a1\n   675: ra = u64 [sp + 0x20]\n   678: s0 = u64 [sp + 0x18]\n   681: s1 = u64 [sp + 0x10]\n   684: sp = sp + 0x28\n   687: ret\n      : @21 (gas: 43)\n   689: sp = sp + 0xffffffffffffffa0\n   692: u64 [sp + 0x58] = ra\n   695: u64 [sp + 0x50] = s0\n   698: u64 [sp + 0x48] = s1\n   701: s0 = sp + 0x60\n   704: sp = sp & 0xffffffffffffffe0\n   707: s1 = a0\n   709: a0 = u64 [a1 + 0x18]\n   712: a2 = u64 [a1 + 0x10]\n   715: a3 = u64 [a1 + 0x8]\n   718: a1 = u64 [a1]\n   720: a0 = reverse a0\n   722: a2 = reverse a2\n   724: a3 = reverse a3\n   726: a1 = reverse a1\n   728: u64 [sp + 0x18] = a1\n   731: u64 [sp + 0x10] = a3\n   734: u64 [sp + 0x8] = a2\n   737: u64 [sp] = a0\n   739: u64 [sp + 56] = 0\n   742: u64 [sp + 48] = 0\n   745: u64 [sp + 40] = 0\n   748: u64 [sp + 32] = 0\n   751: u32 [sp + 64] = 0x20\n   755: i32 a1 = sp + 0\n   757: i32 a3 = sp + 0x20\n   760: i32 a4 = sp + 0x40\n   763: a2 = 0xffffffffffffffff\n   766: a0 = 0\n   768: ecalli 5 // 'get_storage'\n   770: a0 = u64 [sp + 0x38]\n   773: a1 = u64 [sp + 0x30]\n   776: a2 = u64 [sp + 0x28]\n   779: a3 = u64 [sp + 0x20]\n   782: a0 = reverse a0\n   784: a1 = reverse a1\n   786: a2 = reverse a2\n   788: a3 = reverse a3\n   790: u64 [s1 + 0x18] = a3\n   793: u64 [s1 + 0x10] = a2\n   796: u64 [s1 + 0x8] = a1\n   799: u64 [s1] = a0\n   801: t0 = 6, jump @1340\n      : @22 [@dyn 3] (gas: 1)\n   807: ret\n      : @23 (gas: 40)\n   809: sp = sp + 0xffffffffffffffa0\n   812: u64 [sp + 0x58] = ra\n   815: u64 [sp + 0x50] = s0\n   818: s0 = sp + 0x60\n   821: sp = sp & 0xffffffffffffffe0\n   824: t0 = u64 [a0]\n   826: a3 = u64 [a0 + 0x8]\n   829: a4 = u64 [a0 + 0x10]\n   832: a0 = u64 [a0 + 0x18]\n   835: t1 = u64 [a1]\n   837: a2 = u64 [a1 + 0x8]\n   840: a5 = u64 [a1 + 0x10]\n   843: a1 = u64 [a1 + 0x18]\n   846: t2 = reverse a0\n   848: a4 = reverse a4\n   850: a3 = reverse a3\n   852: a0 = reverse t0\n   854: t0 = reverse a1\n   856: a5 = reverse a5\n   858: a2 = reverse a2\n   860: a1 = reverse t1\n   862: u64 [sp + 0x18] = a0\n   865: u64 [sp + 0x10] = a3\n   868: u64 [sp + 0x8] = a4\n   871: u64 [sp] = t2\n   873: u64 [sp + 0x38] = a1\n   876: u64 [sp + 0x30] = a2\n   879: u64 [sp + 0x28] = a5\n   882: u64 [sp + 0x20] = t0\n   885: i32 a1 = sp + 0\n   887: i32 a3 = sp + 0x20\n   890: a2 = 0xffffffffffffffff\n   893: a4 = 0x20\n   896: a0 = 0\n   898: ecalli 10 // 'set_storage'\n   900: sp = s0 + 0xffffffffffffffa0\n   903: ra = u64 [sp + 0x58]\n   906: s0 = u64 [sp + 0x50]\n   909: sp = sp + 0x60\n   912: ret\n      : @24 (gas: 16)\n   914: sp = sp + 0xffffffffffffffa0\n   917: u64 [sp + 0x58] = ra\n   920: u64 [sp + 0x50] = s0\n   923: u64 [sp + 0x48] = s1\n   926: s0 = sp + 0x60\n   929: sp = sp & 0xffffffffffffffe0\n   932: a3 = u64 [a2]\n   934: u64 [sp + 0x18] = a3\n   937: a3 = u64 [a2 + 0x8]\n   940: u64 [sp + 0x10] = a3\n   943: a3 = u64 [a2 + 0x10]\n   946: u64 [sp + 0x8] = a3\n   949: a2 = u64 [a2 + 0x18]\n   952: u64 [sp] = a2\n   954: s1 = a1\n   956: ra = 8, jump @30\n      : @25 [@dyn 4] (gas: 18)\n   961: a1 = u64 [sp]\n   963: a1 = reverse a1\n   965: a2 = u64 [sp + 0x8]\n   968: a2 = reverse a2\n   970: a3 = u64 [sp + 0x10]\n   973: a3 = reverse a3\n   975: a4 = u64 [sp + 0x18]\n   978: a4 = reverse a4\n   980: u64 [sp + 0x38] = a4\n   983: u64 [sp + 0x30] = a3\n   986: u64 [sp + 0x28] = a2\n   989: u64 [sp + 0x20] = a1\n   992: i32 a2 = a0 + 0\n   994: i32 a3 = s1 + 0\n   996: i32 a0 = sp + 0x20\n   999: a1 = 0x1\n  1002: ecalli 4 // 'deposit_event'\n  1004: t0 = 10, jump @1340\n      : @26 [@dyn 5] (gas: 1)\n  1010: ret\n      : @27 (gas: 41)\n  1012: sp = sp + 0xfffffffffffffee0\n  1016: u64 [sp + 0x118] = ra\n  1020: u64 [sp + 0x110] = s0\n  1024: u64 [sp + 0x108] = s1\n  1028: s0 = sp + 0x120\n  1032: sp = sp & 0xffffffffffffffe0\n  1035: s1 = u64 [a5]\n  1037: u64 [sp + 0x60] = s1\n  1040: s1 = u64 [a5 + 0x8]\n  1043: u64 [sp + 0x68] = s1\n  1046: s1 = u64 [a5 + 0x10]\n  1049: u64 [sp + 0x70] = s1\n  1052: a5 = u64 [a5 + 0x18]\n  1055: u64 [sp + 0x78] = a5\n  1058: a5 = u64 [a4]\n  1060: u64 [sp + 0x38] = a5\n  1063: a5 = u64 [a4 + 0x8]\n  1066: u64 [sp + 0x40] = a5\n  1069: a5 = u64 [a4 + 0x10]\n  1072: u64 [sp + 0x48] = a5\n  1075: a4 = u64 [a4 + 0x18]\n  1078: u64 [sp + 0x50] = a4\n  1081: t0 = 0xc\n  1084: a4 = u64 [a3]\n  1086: u64 [sp + 0x18] = a4\n  1089: a4 = u64 [a3 + 0x8]\n  1092: u64 [sp + 0x20] = a4\n  1095: a4 = u64 [a3 + 0x10]\n  1098: u64 [sp + 0x28] = a4\n  1101: a3 = u64 [a3 + 0x18]\n  1104: u64 [sp + 0x30] = a3\n  1107: s1 = u64 [a2]\n  1109: a3 = u64 [a2 + 0x8]\n  1112: u64 [sp] = a3\n  1114: a3 = u64 [a2 + 0x10]\n  1117: u64 [sp + 0x8] = a3\n  1120: a2 = u64 [a2 + 0x18]\n  1123: u64 [sp + 0x10] = a2\n  1126: u64 [sp + 88] = 0\n  1129: ra = 0xe\n  1132: jump @30\n      : @28 [@dyn 6] (gas: 2)\n  1135: u64 [sp + 0x58] = a1\n  1138: ra = 14, jump @30\n      : @29 [@dyn 7] (gas: 58)\n  1143: a1 = reverse s1\n  1145: u64 [sp + 0x98] = a1\n  1149: a1 = u64 [sp]\n  1151: a1 = reverse a1\n  1153: u64 [sp + 0x90] = a1\n  1157: a1 = u64 [sp + 0x8]\n  1160: a1 = reverse a1\n  1162: u64 [sp + 0x88] = a1\n  1166: a1 = u64 [sp + 0x10]\n  1169: a1 = reverse a1\n  1171: u64 [sp + 0x80] = a1\n  1175: a1 = u64 [sp + 0x18]\n  1178: a1 = reverse a1\n  1180: u64 [sp + 0xb8] = a1\n  1184: a1 = u64 [sp + 0x20]\n  1187: a1 = reverse a1\n  1189: u64 [sp + 0xb0] = a1\n  1193: a1 = u64 [sp + 0x28]\n  1196: a1 = reverse a1\n  1198: u64 [sp + 0xa8] = a1\n  1202: a1 = u64 [sp + 0x30]\n  1205: a1 = reverse a1\n  1207: u64 [sp + 0xa0] = a1\n  1211: a1 = u64 [sp + 0x38]\n  1214: a1 = reverse a1\n  1216: u64 [sp + 0xd8] = a1\n  1220: a1 = u64 [sp + 0x40]\n  1223: a1 = reverse a1\n  1225: u64 [sp + 0xd0] = a1\n  1229: a1 = u64 [sp + 0x48]\n  1232: a1 = reverse a1\n  1234: u64 [sp + 0xc8] = a1\n  1238: a1 = u64 [sp + 0x50]\n  1241: a1 = reverse a1\n  1243: u64 [sp + 0xc0] = a1\n  1247: a1 = u64 [sp + 0x60]\n  1250: a1 = reverse a1\n  1252: u64 [sp + 0xf8] = a1\n  1256: a1 = u64 [sp + 0x68]\n  1259: a1 = reverse a1\n  1261: u64 [sp + 0xf0] = a1\n  1265: a1 = u64 [sp + 0x70]\n  1268: a1 = reverse a1\n  1270: u64 [sp + 0xe8] = a1\n  1274: a1 = u64 [sp + 0x78]\n  1277: a1 = reverse a1\n  1279: u64 [sp + 0xe0] = a1\n  1283: i32 a2 = a0 + 0\n  1285: a3 = i32 [sp + 0x58]\n  1288: i32 a0 = sp + 0x80\n  1292: a1 = 0x4\n  1295: ecalli 4 // 'deposit_event'\n  1297: sp = s0 + 0xfffffffffffffee0\n  1301: ra = u64 [sp + 0x118]\n  1305: s0 = u64 [sp + 0x110]\n  1309: s1 = u64 [sp + 0x108]\n  1313: sp = sp + 0x120\n  1317: ret\n      : @30 (gas: 2)\n  1319: i32 a2 = a0 >> 0x10\n  1322: jump @35 if a2 != 0\n      : @31 (gas: 4)\n  1325: a1 = a1 + a0\n  1328: i32 a1 = a1 + 0x1f\n  1331: a1 = a1 & 0xffffffffffffffe0\n  1334: jump @35 if a1 >u 65536\n      : @32 (gas: 3)\n  1340: a2 = 0x201bc\n  1345: a3 = i32 [0x201bc]\n  1350: jump @34 if a3 >=u a1\n      : @33 (gas: 2)\n  1353: u32 [0x201bc] = a1\n  1358: fallthrough\n      : @34 (gas: 4)\n  1359: a1 = 0x201d0\n  1364: i32 a0 = a0 + 0\n  1366: a0 = a0 + a1\n  1369: ret\n      : @35 (gas: 1)\n  1371: trap\n      : @36 (gas: 6)\n  1372: sp = sp + 0xfffffffffffffff0\n  1375: u64 [sp + 0x8] = ra\n  1378: u64 [sp] = s0\n  1380: s0 = a0 & 0x1\n  1383: ecalli 2 // 'call_data_size'\n  1385: fallthrough\n      : @37 (gas: 2)\n  1386: u32 [0x201b8] = a0\n  1391: jump @39 if s0 == 0\n      : @38 (gas: 1)\n  1394: ra = 16, jump @40\n      : @39 [@dyn 8] (gas: 1)\n  1398: ra = 18, jump @52\n      : @40 [@dyn 9] (gas: 13)\n  1403: sp = sp + 0xffffffffffffff40\n  1407: u64 [sp + 0xb8] = ra\n  1411: u64 [sp + 0xb0] = s0\n  1415: u64 [sp + 0xa8] = s1\n  1419: s0 = sp + 0xc0\n  1423: sp = sp & 0xffffffffffffffe0\n  1426: u64 [sp + 120] = 0\n  1429: u64 [sp + 112] = 0\n  1432: u64 [sp + 96] = 0x80\n  1437: a0 = 0x40\n  1440: a1 = sp + 0x60\n  1443: u64 [sp + 104] = 0\n  1446: ra = 20, jump @19\n      : @41 [@dyn 10] (gas: 7)\n  1451: u64 [sp + 152] = 0\n  1455: u64 [sp + 144] = 0\n  1459: u64 [sp + 136] = 0\n  1463: u64 [sp + 128] = 0\n  1467: i32 a0 = sp + 0x80\n  1471: ecalli 11 // 'value_transferred'\n  1473: fallthrough\n      : @42 (gas: 8)\n  1474: a0 = u64 [sp + 0x90]\n  1478: a1 = u64 [sp + 0x98]\n  1482: a2 = u64 [sp + 0x88]\n  1486: a3 = u64 [sp + 0x80]\n  1490: a1 = a1 | a2\n  1493: a0 = a0 | a3\n  1496: a0 = a0 | a1\n  1499: jump @47 if a0 != 0\n      : @43 (gas: 25)\n  1503: s1 = 0x301d0\n  1508: i32 a0 = s1 + 0\n  1510: ecalli 3 // 'caller'\n  1512: a0 = u64 [0x301d8]\n  1517: a1 = i32 [0x301e0]\n  1522: a2 = u64 [0x301d0]\n  1527: a0 = reverse a0\n  1529: a3 = a0 << 0x20\n  1532: a1 = reverse a1\n  1534: a1 = a1 >> 0x20\n  1537: a3 = a3 | a1\n  1540: a0 = a0 >> 0x20\n  1543: a1 = reverse a2\n  1545: a2 = a1 << 0x20\n  1548: a0 = a0 | a2\n  1551: a1 = a1 >> 0x20\n  1554: u64 [sp + 56] = 0\n  1557: u64 [sp + 0x30] = a1\n  1560: u64 [sp + 0x28] = a0\n  1563: a0 = sp + 0x40\n  1566: a1 = sp + 0x20\n  1569: u64 [sp + 0x20] = a3\n  1572: ra = 0x16\n  1575: t0 = 0x39e\n  1579: jump @1339\n      : @44 [@dyn 11] (gas: 3)\n  1583: a0 = sp\n  1585: a1 = 0x40\n  1588: ra = 24, jump @17\n      : @45 [@dyn 12] (gas: 12)\n  1593: a0 = u64 [sp + 0x18]\n  1596: a1 = u64 [sp + 0x10]\n  1599: a2 = u64 [sp + 0x8]\n  1602: s1 = u64 [sp]\n  1604: a0 = a0 | a2\n  1607: a2 = s1 | a1\n  1610: a2 = a2 | a0\n  1613: a2 = a2 >> 0x20\n  1616: a0 = a0 | a1\n  1619: a0 = a0 << 0x20\n  1622: a0 = a0 | a2\n  1625: jump @48 if a0 == 0\n      : @46 (gas: 1)\n  1628: trap\n      : @47 (gas: 7)\n  1629: a1 = 0x201d0\n  1634: i32 a1 = a1 + 0\n  1636: a0 = 0x1\n  1639: a2 = 0\n  1641: ra = 0x1e\n  1644: ecalli 8 // 'seal_return'\n  1646: jump @52\n      : @48 (gas: 3)\n  1648: a0 = s1\n  1650: a1 = 0\n  1652: ra = 26, jump @30\n      : @49 [@dyn 13] (gas: 5)\n  1657: i32 a0 = a0 + 0\n  1659: a1 = 0\n  1661: a2 = 0\n  1663: ecalli 0 // 'call_data_copy'\n  1664: jump @15\n      : @50 (gas: 3)\n  1667: a0 = s1\n  1669: a1 = 0\n  1671: ra = 28, jump @30\n      : @51 [@dyn 14] (gas: 6)\n  1676: i32 a1 = a0 + 0\n  1678: a0 = 0\n  1680: a2 = 0\n  1682: ra = 0x1e\n  1685: ecalli 8 // 'seal_return'\n  1687: fallthrough\n      : @52 [@dyn 15] (gas: 16)\n  1688: sp = sp + 0xfffffffffffffe10\n  1692: u64 [sp + 0x1e8] = ra\n  1696: u64 [sp + 0x1e0] = s0\n  1700: u64 [sp + 0x1d8] = s1\n  1704: s0 = sp + 0x1f0\n  1708: sp = sp + 0xffffffffffffd890\n  1712: sp = sp & 0xffffffffffffffe0\n  1715: s1 = sp\n  1717: a2 = s1 + 0x2118\n  1721: u64 [a2 + 64] = 0\n  1724: u64 [a2 + 56] = 0\n  1727: u64 [a2 + 40] = 0x80\n  1732: a0 = 0x40\n  1735: a1 = s1 + 0x2140\n  1739: u64 [a2 + 48] = 0\n  1742: ra = 32, jump @19\n      : @53 [@dyn 16] (gas: 4)\n  1747: a0 = 0x201b8\n  1752: u64 [s1 + 0x198] = a0\n  1756: a0 = i32 [0x201b8]\n  1761: jump @55 if a0 >=u 4\n      : @54 (gas: 1)\n  1765: jump @835\n      : @55 (gas: 6)\n  1768: a0 = s1 + 0x2000\n  1772: i32 a0 = a0 + 0x160\n  1776: a1 = 0\n  1778: ra = 0x22\n  1781: ecalli 1 // 'call_data_load'\n  1783: fallthrough\n      : @56 [@dyn 17] (gas: 3)\n  1784: a2 = s1 + 0x2118\n  1788: a0 = i32 [a2 + 0x64]\n  1791: jump @58 if a0 != 2446411860\n      : @57 (gas: 1)\n  1798: jump @470\n      : @58 (gas: 1)\n  1801: jump @147 if a0 == 2521991344\n      : @59 (gas: 1)\n  1809: jump @61 if a0 != 2719481311\n      : @60 (gas: 1)\n  1816: jump @499\n      : @61 (gas: 1)\n  1819: jump @63 if a0 != 3118142900\n      : @62 (gas: 1)\n  1826: jump @266\n      : @63 (gas: 2)\n  1829: t1 = s1 + 0x2918\n  1833: jump @65 if a0 != 4038952908\n      : @64 (gas: 1)\n  1840: jump @461\n      : @65 (gas: 1)\n  1843: jump @67 if a0 != 555083711\n      : @66 (gas: 1)\n  1850: jump @453\n      : @67 (gas: 1)\n  1853: jump @136 if a0 == 613063843\n      : @68 (gas: 1)\n  1861: jump @169 if a0 == 872855320\n      : @69 (gas: 1)\n  1869: jump @158 if a0 == 1244958121\n      : @70 (gas: 1)\n  1877: jump @72 if a0 == 1380877410\n      : @71 (gas: 1)\n  1884: jump @399\n      : @72 (gas: 10)\n  1887: u64 [a2 + 1344] = 0\n  1891: u64 [a2 + 1336] = 0\n  1895: u64 [a2 + 1328] = 0\n  1899: u64 [a2 + 1320] = 0\n  1903: a0 = s1 + 0x2000\n  1907: i32 a0 = a0 + 0x640\n  1911: ra = 0x24\n  1914: ecalli 11 // 'value_transferred'\n  1916: t0 = 0x26\n  1919: jump @1351\n      : @73 [@dyn 18] (gas: 1)\n  1923: t0 = 38, jump @1351\n      : @74 [@dyn 19] (gas: 8)\n  1929: a0 = u64 [a4 + 0x38]\n  1932: a1 = u64 [a4 + 0x40]\n  1935: a2 = u64 [a4 + 0x30]\n  1938: a3 = u64 [a4 + 0x28]\n  1941: a1 = a1 | a2\n  1944: a0 = a0 | a3\n  1947: a0 = a0 | a1\n  1950: jump @76 if a0 == 0\n      : @75 (gas: 1)\n  1953: jump @737\n      : @76 (gas: 1)\n  1956: t0 = 40, jump @1349\n      : @77 [@dyn 20] (gas: 1)\n  1962: jump @79 if a1 <u a0\n      : @78 (gas: 1)\n  1965: jump @738\n      : @79 (gas: 27)\n  1968: a0 = s1 + 0x2000\n  1972: i32 a0 = a0 + 0x660\n  1976: a1 = 0x4\n  1979: ecalli 1 // 'call_data_load'\n  1981: a0 = s1 + 0x2118\n  1985: a2 = a0 + 0x500\n  1989: a1 = u64 [a2 + 0x60]\n  1992: a3 = s1 + 0x100\n  1996: u64 [a3 + 0x88] = a1\n  2000: a1 = u64 [a2 + 0x58]\n  2003: u64 [a3 + 0x80] = a1\n  2007: a1 = u64 [a2 + 0x50]\n  2010: u64 [a3 + 0x78] = a1\n  2013: a0 = u64 [a2 + 0x48]\n  2016: u64 [a3 + 0x70] = a0\n  2019: a0 = u64 [0x20000]\n  2024: a3 = s1 + 0x1118\n  2028: u64 [a3 + 0x100] = a0\n  2032: a0 = u64 [0x20008]\n  2037: a1 = u64 [0x20010]\n  2042: a2 = u64 [0x20018]\n  2047: u64 [a3 + 0xf8] = a0\n  2051: u64 [a3 + 0xf0] = a1\n  2055: a1 = s1 + 0x1200\n  2059: u64 [a3 + 0xe8] = a2\n  2063: a0 = 0\n  2065: ra = 42, jump @19\n      : @80 [@dyn 21] (gas: 9)\n  2070: a0 = s1 + 0x1118\n  2074: u64 [a0 + 224] = 0\n  2078: u64 [a0 + 216] = 0\n  2082: u64 [a0 + 208] = 0\n  2086: a2 = a0\n  2088: a0 = 0x20\n  2091: a1 = s1 + 0x11e0\n  2095: u64 [a2 + 200] = 0\n  2099: ra = 44, jump @19\n      : @81 [@dyn 22] (gas: 3)\n  2104: a1 = 0x201bc\n  2109: a0 = i32 [0x201bc]\n  2114: jump @83 if a0 >u 63\n      : @82 (gas: 2)\n  2118: u32 [0x201bc] = 0x40\n  2124: fallthrough\n      : @83 (gas: 15)\n  2125: a0 = sp + 0xffffffffffffffe0\n  2128: a2 = a0 & 0xffffffffffffffe0\n  2131: u64 [s1 + 0x168] = a2\n  2135: sp = a2\n  2137: a0 = 0x201d0\n  2142: i32 a0 = a0 + 0\n  2144: i32 a2 = a2 + 0\n  2146: u64 [s1 + 0x190] = a1\n  2150: a1 = 0x40\n  2153: u64 [s1 + 0x198] = a0\n  2157: ra = 0x2e\n  2160: ecalli 6 // 'hash_keccak_256'\n  2162: a3 = u64 [s1 + 0x168]\n  2166: t0 = 0x30\n  2169: jump @1296\n      : @84 [@dyn 23] (gas: 2)\n  2172: a3 = u64 [s1 + 0x168]\n  2176: t0 = 48, jump @1296\n      : @85 [@dyn 24] (gas: 8)\n  2181: a0 = 0x301d0\n  2186: u64 [s1 + 0x168] = a0\n  2190: i32 a0 = a0 + 0\n  2192: u64 [s1 + 0x138] = a0\n  2196: ra = 0x32\n  2199: ecalli 3 // 'caller'\n  2201: t0 = 0x34\n  2204: jump @1299\n      : @86 [@dyn 25] (gas: 1)\n  2207: t0 = 52, jump @1299\n      : @87 [@dyn 26] (gas: 7)\n  2212: u64 [a2 + 192] = 0\n  2216: u64 [a2 + 0xb8] = a1\n  2220: u64 [a2 + 0xb0] = a0\n  2224: a1 = s1 + 0x11c0\n  2228: u64 [a2 + 0xa8] = a3\n  2232: a0 = 0\n  2234: ra = 54, jump @19\n      : @88 [@dyn 27] (gas: 13)\n  2239: a0 = u64 [s1 + 0x140]\n  2243: a1 = s1 + 0x1118\n  2247: u64 [a1 + 0xa0] = a0\n  2251: a0 = u64 [s1 + 0x148]\n  2255: u64 [a1 + 0x98] = a0\n  2259: a0 = u64 [s1 + 0x150]\n  2263: u64 [a1 + 0x90] = a0\n  2267: a3 = a1\n  2269: a0 = 0x20\n  2272: a1 = s1 + 0x11a0\n  2276: a2 = u64 [s1 + 0x158]\n  2280: u64 [a3 + 0x88] = a2\n  2284: ra = 56, jump @19\n      : @89 [@dyn 28] (gas: 3)\n  2289: a1 = u64 [s1 + 0x190]\n  2293: a0 = i32 [a1]\n  2295: jump @91 if a0 >u 63\n      : @90 (gas: 2)\n  2299: u32 [a1 + 0] = 0x40\n  2302: fallthrough\n      : @91 (gas: 4)\n  2303: a0 = sp + 0xffffffffffffffe0\n  2306: a0 = a0 & 0xffffffffffffffe0\n  2309: u64 [s1 + 0x158] = a0\n  2313: t0 = 58, jump @1312\n      : @92 [@dyn 29] (gas: 4)\n  2319: ra = 0x3c\n  2322: ecalli 6 // 'hash_keccak_256'\n  2324: t0 = 0x3e\n  2327: jump @1305\n      : @93 [@dyn 30] (gas: 1)\n  2330: t0 = 62, jump @1305\n      : @94 [@dyn 31] (gas: 3)\n  2335: i32 a0 = a0 + 0x180\n  2339: a0 = a0 + s1\n  2342: ra = 64, jump @21\n      : @95 [@dyn 32] (gas: 3)\n  2347: a3 = s1 + 0x1118\n  2351: a0 = u8 [a3 + 0x68]\n  2354: jump @97 if a0 == 0\n      : @96 (gas: 1)\n  2357: jump @512\n      : @97 (gas: 11)\n  2360: a0 = u64 [0x20040]\n  2365: u64 [a3 + 0x60] = a0\n  2368: a0 = u64 [0x20048]\n  2373: a1 = u64 [0x20050]\n  2378: a2 = u64 [0x20058]\n  2383: u64 [a3 + 0x58] = a0\n  2386: u64 [a3 + 0x50] = a1\n  2389: a1 = s1 + 0x1160\n  2393: u64 [a3 + 0x48] = a2\n  2396: a0 = 0\n  2398: ra = 66, jump @19\n      : @98 [@dyn 33] (gas: 9)\n  2403: a0 = s1 + 0x1118\n  2407: u64 [a0 + 64] = 0\n  2410: u64 [a0 + 56] = 0\n  2413: u64 [a0 + 48] = 0\n  2416: a2 = a0\n  2418: a0 = 0x20\n  2421: a1 = s1 + 0x1140\n  2425: u64 [a2 + 40] = 0\n  2428: ra = 68, jump @19\n      : @99 [@dyn 34] (gas: 3)\n  2433: a1 = u64 [s1 + 0x190]\n  2437: a0 = i32 [a1]\n  2439: jump @101 if a0 >u 63\n      : @100 (gas: 2)\n  2443: u32 [a1 + 0] = 0x40\n  2446: fallthrough\n      : @101 (gas: 4)\n  2447: a0 = sp + 0xffffffffffffffe0\n  2450: a0 = a0 & 0xffffffffffffffe0\n  2453: u64 [s1 + 0x160] = a0\n  2457: t0 = 70, jump @1312\n      : @102 [@dyn 35] (gas: 5)\n  2463: ra = 0x48\n  2466: ecalli 6 // 'hash_keccak_256'\n  2468: a3 = u64 [s1 + 0x160]\n  2472: t0 = 0x4a\n  2475: jump @1296\n      : @103 [@dyn 36] (gas: 2)\n  2478: a3 = u64 [s1 + 0x160]\n  2482: t0 = 74, jump @1296\n      : @104 [@dyn 37] (gas: 5)\n  2487: a0 = u64 [s1 + 0x138]\n  2491: ra = 0x4c\n  2494: ecalli 3 // 'caller'\n  2496: t0 = 0x4e\n  2499: jump @1299\n      : @105 [@dyn 38] (gas: 1)\n  2502: t0 = 78, jump @1299\n      : @106 [@dyn 39] (gas: 7)\n  2507: u64 [a2 + 32] = 0\n  2510: u64 [a2 + 0x18] = a1\n  2513: u64 [a2 + 0x10] = a0\n  2516: a1 = s1 + 0x1120\n  2520: u64 [a2 + 0x8] = a3\n  2523: a0 = 0\n  2525: ra = 80, jump @19\n      : @107 [@dyn 40] (gas: 13)\n  2530: a0 = u64 [s1 + 0x140]\n  2534: a1 = s1 + 0x1118\n  2538: u64 [a1] = a0\n  2540: a0 = u64 [s1 + 0x148]\n  2544: u64 [a1 + 0xfffffffffffffff8] = a0\n  2547: a0 = u64 [s1 + 0x150]\n  2551: u64 [a1 + 0xfffffffffffffff0] = a0\n  2554: a3 = a1\n  2556: a0 = 0x20\n  2559: a1 = s1 + 0x1100\n  2563: a2 = u64 [s1 + 0x158]\n  2567: u64 [a3 + 0xffffffffffffffe8] = a2\n  2570: ra = 82, jump @19\n      : @108 [@dyn 41] (gas: 3)\n  2575: a1 = u64 [s1 + 0x190]\n  2579: a0 = i32 [a1]\n  2581: jump @110 if a0 >u 63\n      : @109 (gas: 2)\n  2585: u32 [a1 + 0] = 0x40\n  2588: fallthrough\n      : @110 (gas: 4)\n  2589: a0 = sp + 0xffffffffffffffe0\n  2592: a0 = a0 & 0xffffffffffffffe0\n  2595: u64 [s1 + 0x158] = a0\n  2599: t0 = 84, jump @1312\n      : @111 [@dyn 42] (gas: 4)\n  2604: ra = 0x56\n  2607: ecalli 6 // 'hash_keccak_256'\n  2609: t0 = 0x58\n  2612: jump @1305\n      : @112 [@dyn 43] (gas: 1)\n  2615: t0 = 88, jump @1305\n      : @113 [@dyn 44] (gas: 3)\n  2620: i32 a0 = a0 + 0xe0\n  2624: a0 = a0 + s1\n  2627: ra = 90, jump @21\n      : @114 [@dyn 45] (gas: 4)\n  2632: a0 = s1 + 0x7ff\n  2636: a0 = a0 + 0x119\n  2640: a0 = u8 [a0 + 0x7c8]\n  2644: jump @116 if a0 == 0\n      : @115 (gas: 1)\n  2647: jump @512\n      : @116 (gas: 4)\n  2650: a0 = s1 + 0x7ff\n  2654: a0 = a0 + 0x761\n  2658: a1 = 0x40\n  2661: ra = 92, jump @17\n      : @117 [@dyn 46] (gas: 15)\n  2666: a2 = s1 + 0x7ff\n  2670: a2 = a2 + 0x119\n  2674: t0 = u64 [a2 + 0x660]\n  2678: a1 = a2 + 0x600\n  2682: a5 = u64 [a1 + 0x58]\n  2685: a4 = u64 [a1 + 0x50]\n  2688: a0 = u64 [a1 + 0x48]\n  2691: a3 = a4 | t0\n  2694: a1 = a0 | a5\n  2697: a1 = a1 | a3\n  2700: a1 = a1 >> 0x20\n  2703: a3 = a3 | a5\n  2706: a3 = a3 << 0x20\n  2709: a1 = a1 | a3\n  2712: jump @119 if a1 == 0\n      : @118 (gas: 1)\n  2715: jump @534\n      : @119 (gas: 12)\n  2718: u64 [a2 + 1592] = 0\n  2722: u64 [a2 + 1584] = 0\n  2726: u64 [a2 + 1576] = 0\n  2730: a3 = 0x8c379a000000000\n  2740: a1 = s1 + 0x7ff\n  2744: a1 = a1 + 0x741\n  2748: u64 [a2 + 0x640] = a3\n  2752: u64 [s1 + 0x198] = a0\n  2756: u64 [s1 + 0x190] = a4\n  2760: u64 [s1 + 0x180] = t0\n  2764: u64 [s1 + 0x188] = a5\n  2768: ra = 94, jump @19\n      : @120 [@dyn 47] (gas: 8)\n  2773: a5 = s1 + 0x100\n  2777: a1 = u64 [a5 + 0x98]\n  2781: a0 = u64 [a5 + 0x88]\n  2785: a3 = u64 [a5 + 0x80]\n  2789: a3 = a3 | a0\n  2792: a4 = 0x100000000\n  2802: a0 = 0xfffffffc\n  2812: t0 = 96, jump @1341\n      : @121 [@dyn 48] (gas: 1)\n  2818: jump @123 if a0 != 0\n      : @122 (gas: 1)\n  2821: jump @534\n      : @123 (gas: 12)\n  2824: i32 a0 = a1 + 0x4\n  2827: a2 = s1 + 0x7ff\n  2831: a2 = a2 + 0x119\n  2835: u64 [a2 + 1568] = 0\n  2839: u64 [a2 + 1560] = 0\n  2843: u64 [a2 + 1544] = 0x20\n  2848: a1 = s1 + 0x7ff\n  2852: a1 = a1 + 0x721\n  2856: u64 [a2 + 1552] = 0\n  2860: u64 [s1 + 0x188] = a3\n  2864: u64 [s1 + 0x180] = a4\n  2868: ra = 98, jump @19\n      : @124 [@dyn 49] (gas: 5)\n  2873: a3 = s1 + 0x100\n  2877: a1 = u64 [a3 + 0x98]\n  2881: a0 = u64 [a3 + 0x80]\n  2885: a0 = a0 + 0xffffffffffffffdc\n  2888: t0 = 100, jump @1326\n      : @125 [@dyn 50] (gas: 1)\n  2893: jump @127 if a0 != 0\n      : @126 (gas: 1)\n  2896: jump @534\n      : @127 (gas: 10)\n  2899: i32 a0 = a1 + 0x24\n  2902: a2 = s1 + 0x7ff\n  2906: a2 = a2 + 0x119\n  2910: u64 [a2 + 1536] = 0\n  2914: u64 [a2 + 1528] = 0\n  2918: u64 [a2 + 1512] = 0x26\n  2923: a1 = s1 + 0x7ff\n  2927: a1 = a1 + 0x701\n  2931: u64 [a2 + 1520] = 0\n  2935: ra = 102, jump @19\n      : @128 [@dyn 51] (gas: 10)\n  2940: a0 = s1 + 0x100\n  2944: a3 = u64 [a0 + 0x88]\n  2948: a4 = u64 [a0 + 0x90]\n  2952: a1 = u64 [a0 + 0x98]\n  2956: a2 = 0x100000000\n  2966: a0 = 0xffffffbc\n  2976: a0 = a1 <u a0\n  2979: a0 = 0 if a4 != 0\n  2981: a0 = 0 if a3 != 0\n  2983: jump @130 if a0 != 0\n      : @129 (gas: 1)\n  2986: jump @534\n      : @130 (gas: 16)\n  2989: i32 a0 = a1 + 0x44\n  2992: a1 = u64 [0x20080]\n  2997: u64 [s1 + 0x180] = a2\n  3001: a5 = s1 + 0x7ff\n  3005: a5 = a5 + 0x119\n  3009: a4 = a5 + 0x500\n  3013: u64 [a4 + 0xe0] = a1\n  3017: a1 = u64 [0x20088]\n  3022: a2 = u64 [0x20090]\n  3027: a3 = u64 [0x20098]\n  3032: u64 [a4 + 0xd8] = a1\n  3036: u64 [a4 + 0xd0] = a2\n  3040: a1 = s1 + 0x7ff\n  3044: a1 = a1 + 0x6e1\n  3048: u64 [a4 + 0xc8] = a3\n  3052: ra = 104, jump @19\n      : @131 [@dyn 52] (gas: 10)\n  3057: a3 = s1 + 0x100\n  3061: a2 = u64 [a3 + 0x98]\n  3065: a0 = u64 [a3 + 0x80]\n  3069: a0 = a0 + 0xffffffffffffff9c\n  3072: a0 = a2 <u a0\n  3075: a1 = u64 [a3 + 0x90]\n  3079: a0 = 0 if a1 != 0\n  3081: a1 = u64 [a3 + 0x88]\n  3085: a0 = 0 if a1 != 0\n  3087: jump @133 if a0 != 0\n      : @132 (gas: 1)\n  3090: jump @534\n      : @133 (gas: 11)\n  3093: i32 a0 = a2 + 0x64\n  3096: a1 = u64 [0x200a0]\n  3101: a3 = s1 + 0x7ff\n  3105: a3 = a3 + 0x119\n  3109: u64 [a3 + 1464] = 0\n  3113: u64 [a3 + 1456] = 0\n  3117: u64 [a3 + 0x5c0] = a1\n  3121: a1 = s1 + 0x7ff\n  3125: a1 = a1 + 0x6c1\n  3129: u64 [a3 + 1448] = 0\n  3133: ra = 106, jump @19\n      : @134 [@dyn 53] (gas: 3)\n  3138: a1 = 0x84\n  3142: a0 = u64 [s1 + 0x198]\n  3146: ra = 108, jump @30\n      : @135 [@dyn 54] (gas: 5)\n  3151: i32 a1 = a0 + 0\n  3153: a0 = 0x1\n  3156: a2 = 0x84\n  3160: ecalli 8 // 'seal_return'\n  3162: fallthrough\n      : @136 (gas: 9)\n  3163: u64 [a2 + 224] = 0\n  3167: u64 [a2 + 216] = 0\n  3171: u64 [a2 + 208] = 0\n  3175: u64 [a2 + 200] = 0\n  3179: a0 = s1 + 0x2000\n  3183: i32 a0 = a0 + 0x1e0\n  3187: ra = 0x6e\n  3190: ecalli 11 // 'value_transferred'\n  3192: fallthrough\n      : @137 [@dyn 55] (gas: 9)\n  3193: a3 = s1 + 0x2118\n  3197: a0 = u64 [a3 + 0xd8]\n  3201: a1 = u64 [a3 + 0xe0]\n  3205: a2 = u64 [a3 + 0xd0]\n  3209: a3 = u64 [a3 + 0xc8]\n  3213: a1 = a1 | a2\n  3216: a0 = a0 | a3\n  3219: a0 = a0 | a1\n  3222: jump @139 if a0 == 0\n      : @138 (gas: 1)\n  3225: jump @739\n      : @139 (gas: 1)\n  3228: t0 = 112, jump @1349\n      : @140 [@dyn 56] (gas: 1)\n  3234: jump @142 if a1 <u a0\n      : @141 (gas: 1)\n  3237: jump @740\n      : @142 (gas: 16)\n  3240: a0 = s1 + 0x2000\n  3244: i32 a0 = a0 + 0x200\n  3248: a1 = 0x4\n  3251: ecalli 1 // 'call_data_load'\n  3253: a3 = s1 + 0x2118\n  3257: a2 = u64 [a3 + 0xe8]\n  3261: a0 = u64 [a3 + 0xf0]\n  3265: a1 = u64 [a3 + 0xf8]\n  3269: a3 = u64 [a3 + 0x100]\n  3273: u64 [s1 + 0x258] = a3\n  3277: u64 [s1 + 0x250] = a1\n  3281: u64 [s1 + 0x248] = a0\n  3285: a0 = s1 + 0x260\n  3289: a1 = s1 + 0x240\n  3293: u64 [s1 + 0x240] = a2\n  3297: ra = 114, jump @1023\n      : @143 [@dyn 57] (gas: 12)\n  3302: a0 = u64 [s1 + 0x278]\n  3306: a1 = s1 + 0x100\n  3310: u64 [a1 + 0x98] = a0\n  3314: a0 = u64 [s1 + 0x270]\n  3318: u64 [a1 + 0x90] = a0\n  3322: a0 = u64 [s1 + 0x268]\n  3326: u64 [a1 + 0x88] = a0\n  3330: a0 = u64 [s1 + 0x260]\n  3334: u64 [a1 + 0x80] = a0\n  3338: a0 = s1 + 0x220\n  3342: a1 = 0x40\n  3345: ra = 116, jump @17\n      : @144 [@dyn 58] (gas: 13)\n  3350: a4 = s1 + 0x200\n  3354: a0 = u64 [a4 + 0x38]\n  3357: a1 = u64 [a4 + 0x30]\n  3360: a2 = u64 [a4 + 0x28]\n  3363: a3 = u64 [a4 + 0x20]\n  3366: a0 = a0 | a2\n  3369: a2 = a3 | a1\n  3372: a2 = a2 | a0\n  3375: a2 = a2 >> 0x20\n  3378: a0 = a0 | a1\n  3381: a0 = a0 << 0x20\n  3384: a0 = a0 | a2\n  3387: jump @146 if a0 == 0\n      : @145 (gas: 1)\n  3390: jump @534\n      : @146 (gas: 15)\n  3393: a2 = s1 + 0x100\n  3397: a0 = u64 [a2 + 0x80]\n  3401: a4 = s1 + 0x200\n  3405: u64 [a4] = a0\n  3407: a0 = u64 [a2 + 0x88]\n  3411: u64 [a4 + 0x8] = a0\n  3414: a0 = u64 [a2 + 0x90]\n  3418: u64 [a4 + 0x10] = a0\n  3421: a1 = s1 + 0x200\n  3425: a0 = u64 [a2 + 0x98]\n  3429: u64 [a4 + 0x18] = a0\n  3432: a0 = a3\n  3434: u64 [s1 + 0x198] = a3\n  3438: ra = 0x1fe\n  3442: jump @19\n      : @147 (gas: 15)\n  3445: u64 [s1 + 0x178] = t0\n  3449: a0 = s1 + 0x100\n  3453: u64 [a0 + 0x80] = a5\n  3457: u64 [a0 + 0x88] = a4\n  3461: u64 [a0 + 0x90] = a3\n  3465: u64 [a2 + 1792] = 0\n  3469: u64 [a2 + 1784] = 0\n  3473: u64 [a2 + 1776] = 0\n  3477: u64 [a2 + 1768] = 0\n  3481: a0 = s1 + 0x3000\n  3485: i32 a0 = a0 + 0xfffffffffffff800\n  3489: ra = 0x76\n  3492: ecalli 11 // 'value_transferred'\n  3494: t0 = 0x78\n  3497: jump @1314\n      : @148 [@dyn 59] (gas: 1)\n  3500: t0 = 120, jump @1314\n      : @149 [@dyn 60] (gas: 8)\n  3505: a0 = u64 [a4 + 0xf8]\n  3509: a1 = u64 [a3 + 0x700]\n  3513: a2 = u64 [a4 + 0xf0]\n  3517: a3 = u64 [a4 + 0xe8]\n  3521: a1 = a1 | a2\n  3524: a0 = a0 | a3\n  3527: a0 = a0 | a1\n  3530: jump @151 if a0 == 0\n      : @150 (gas: 1)\n  3533: jump @741\n      : @151 (gas: 3)\n  3536: a0 = u64 [s1 + 0x198]\n  3540: a0 = i32 [a0]\n  3542: jump @153 if a0 >u 3\n      : @152 (gas: 1)\n  3546: jump @742\n      : @153 (gas: 3)\n  3549: a0 = s1 + 0x1880\n  3553: a1 = 0x40\n  3556: ra = 122, jump @17\n      : @154 [@dyn 61] (gas: 3)\n  3561: a3 = s1 + 0x1118\n  3565: a5 = a3 + 0x700\n  3569: t0 = 124, jump @1333\n      : @155 [@dyn 62] (gas: 1)\n  3574: jump @157 if a0 == 0\n      : @156 (gas: 1)\n  3577: jump @534\n      : @157 (gas: 14)\n  3580: a0 = u64 [0x20020]\n  3585: a1 = u64 [0x20028]\n  3590: a2 = u64 [0x20030]\n  3595: u64 [a3 + 0x760] = a0\n  3599: a0 = u64 [0x20038]\n  3604: a5 = a3 + 0x700\n  3608: u64 [a5 + 0x58] = a1\n  3611: u64 [a5 + 0x50] = a2\n  3614: a1 = s1 + 0x1860\n  3618: u64 [a5 + 0x48] = a0\n  3621: a0 = a4\n  3623: u64 [s1 + 0x198] = a4\n  3627: ra = 0x1fe\n  3631: jump @19\n      : @158 (gas: 8)\n  3634: u64 [a2 + 1280] = 0\n  3638: u64 [a2 + 1272] = 0\n  3642: u64 [a2 + 1264] = 0\n  3646: u64 [a2 + 1256] = 0\n  3650: a0 = s1 + 0x2000\n  3654: i32 a0 = a0 + 0x600\n  3658: ecalli 11 // 'value_transferred'\n  3660: fallthrough\n      : @159 (gas: 10)\n  3661: a3 = s1 + 0x2118\n  3665: a4 = a3 + 0x400\n  3669: a0 = u64 [a4 + 0xf8]\n  3673: a1 = u64 [a3 + 0x500]\n  3677: a2 = u64 [a4 + 0xf0]\n  3681: a3 = u64 [a4 + 0xe8]\n  3685: a1 = a1 | a2\n  3688: a0 = a0 | a3\n  3691: a0 = a0 | a1\n  3694: jump @161 if a0 == 0\n      : @160 (gas: 1)\n  3697: jump @743\n      : @161 (gas: 3)\n  3700: a0 = u64 [s1 + 0x198]\n  3704: a0 = i32 [a0]\n  3706: jump @163 if a0 >u 3\n      : @162 (gas: 1)\n  3710: jump @744\n      : @163 (gas: 9)\n  3713: a1 = s1 + 0x2118\n  3717: u64 [a1 + 1312] = 0\n  3721: u64 [a1 + 1304] = 0\n  3725: u64 [a1 + 1296] = 0\n  3729: u64 [a1 + 1288] = 0x2\n  3734: a0 = s1 + 0x7ff\n  3738: a0 = a0 + 0x6a1\n  3742: a1 = s1 + 0x2620\n  3746: ra = 126, jump @21\n      : @164 [@dyn 63] (gas: 16)\n  3751: a1 = s1 + 0x7ff\n  3755: a1 = a1 + 0x119\n  3759: a2 = a1 + 0x500\n  3763: a0 = u64 [a2 + 0xa0]\n  3767: a1 = s1 + 0x100\n  3771: u64 [a1 + 0x98] = a0\n  3775: a0 = u64 [a2 + 0x98]\n  3779: u64 [a1 + 0x90] = a0\n  3783: a0 = u64 [a2 + 0x90]\n  3787: u64 [a1 + 0x88] = a0\n  3791: a0 = u64 [a2 + 0x88]\n  3795: u64 [a1 + 0x80] = a0\n  3799: a0 = s1 + 0x7ff\n  3803: a0 = a0 + 0x681\n  3807: a1 = 0x40\n  3810: ra = 128, jump @17\n      : @165 [@dyn 64] (gas: 4)\n  3816: a3 = s1 + 0x7ff\n  3820: a3 = a3 + 0x119\n  3824: a5 = a3 + 0x500\n  3828: t0 = 130, jump @1333\n      : @166 [@dyn 65] (gas: 1)\n  3834: jump @168 if a0 == 0\n      : @167 (gas: 1)\n  3837: jump @534\n      : @168 (gas: 16)\n  3840: a2 = s1 + 0x100\n  3844: a0 = u64 [a2 + 0x80]\n  3848: a5 = a3 + 0x500\n  3852: u64 [a5 + 0x48] = a0\n  3855: a0 = u64 [a2 + 0x88]\n  3859: u64 [a5 + 0x50] = a0\n  3862: a0 = u64 [a2 + 0x90]\n  3866: u64 [a5 + 0x58] = a0\n  3869: a1 = s1 + 0x7ff\n  3873: a1 = a1 + 0x661\n  3877: a0 = u64 [a2 + 0x98]\n  3881: u64 [a5 + 0x60] = a0\n  3884: a0 = a4\n  3886: u64 [s1 + 0x198] = a4\n  3890: ra = 0x1fe\n  3894: jump @19\n      : @169 (gas: 13)\n  3897: u64 [s1 + 0x178] = t0\n  3901: a0 = s1 + 0x100\n  3905: u64 [a0 + 0x80] = a5\n  3909: u64 [a0 + 0x88] = a4\n  3913: u64 [a0 + 0x90] = a3\n  3917: u64 [a2 + 352] = 0\n  3921: u64 [a2 + 344] = 0\n  3925: u64 [a2 + 336] = 0\n  3929: u64 [a2 + 328] = 0\n  3933: a0 = s1 + 0x2000\n  3937: i32 a0 = a0 + 0x260\n  3941: ecalli 11 // 'value_transferred'\n  3943: fallthrough\n      : @170 (gas: 10)\n  3944: a3 = s1 + 0x2118\n  3948: a4 = a3 + 0x100\n  3952: a0 = u64 [a4 + 0x58]\n  3955: a1 = u64 [a4 + 0x60]\n  3958: a2 = u64 [a4 + 0x50]\n  3961: a3 = u64 [a4 + 0x48]\n  3964: a1 = a1 | a2\n  3967: a0 = a0 | a3\n  3970: a0 = a0 | a1\n  3973: jump @172 if a0 == 0\n      : @171 (gas: 1)\n  3976: jump @745\n      : @172 (gas: 3)\n  3979: a0 = u64 [s1 + 0x198]\n  3983: a0 = i32 [a0]\n  3985: jump @174 if a0 >u 99\n      : @173 (gas: 1)\n  3989: jump @746\n      : @174 (gas: 7)\n  3992: a0 = s1 + 0x2000\n  3996: i32 a0 = a0 + 0x280\n  4000: a1 = 0x4\n  4003: ra = 0x84\n  4007: ecalli 1 // 'call_data_load'\n  4009: t0 = 0x86\n  4013: jump @1353\n      : @175 [@dyn 66] (gas: 1)\n  4016: t0 = 134, jump @1353\n      : @176 [@dyn 67] (gas: 7)\n  4022: a0 = u64 [a3 + 0x80]\n  4026: a1 = u64 [a3 + 0x78]\n  4029: a2 = u64 [a3 + 0x70]\n  4032: a3 = a1 | a0\n  4035: a4 = a2 <u 0x1\n  4038: a4 = 0 if a3 != 0\n  4040: jump @178 if a4 != 0\n      : @177 (gas: 1)\n  4043: jump @747\n      : @178 (gas: 31)\n  4046: a3 = s1 + 0x2118\n  4050: a3 = u64 [a3 + 0x168]\n  4054: a4 = u64 [s1 + 0x198]\n  4058: t0 = u32 [a4]\n  4060: a5 = a3 + 0x4\n  4063: a3 = a5 <u a3\n  4066: a4 = a2 + a3\n  4069: a2 = a4 <u a2\n  4072: a2 = a3 if a3 == 0\n  4075: a2 = a2 + a1\n  4078: a1 = a2 <u a1\n  4081: a3 = a0 + a1\n  4084: a0 = s1 + 0x7ff\n  4088: a0 = a0 + 0x119\n  4092: u64 [a0 + 1120] = 0\n  4096: u64 [a0 + 1112] = 0\n  4100: u64 [a0 + 1104] = 0\n  4104: u64 [a0 + 0x448] = t0\n  4108: a1 = a0 + 0x400\n  4112: u64 [a1 + 0x68] = a5\n  4115: u64 [a1 + 0x70] = a4\n  4118: u64 [a1 + 0x78] = a2\n  4121: a4 = a0\n  4123: a0 = s1 + 0x7ff\n  4127: a0 = a0 + 0x5a1\n  4131: a1 = s1 + 0x7ff\n  4135: a1 = a1 + 0x581\n  4139: a2 = s1 + 0x7ff\n  4143: a2 = a2 + 0x561\n  4147: u64 [a4 + 0x480] = a3\n  4151: ra = 136, jump @952\n      : @179 [@dyn 68] (gas: 18)\n  4157: a1 = s1 + 0x7ff\n  4161: a1 = a1 + 0x119\n  4165: a2 = a1 + 0x400\n  4169: a0 = u64 [a2 + 0xa0]\n  4173: u64 [s1 + 0xb8] = a0\n  4177: a0 = u64 [a2 + 0x98]\n  4181: u64 [s1 + 0xc0] = a0\n  4185: a0 = u64 [a2 + 0x90]\n  4189: u64 [s1 + 0xc8] = a0\n  4193: a0 = u64 [a2 + 0x88]\n  4197: u64 [s1 + 0xd0] = a0\n  4201: a0 = s1 + 0x2000\n  4205: i32 a0 = a0 + 0x2a0\n  4209: a1 = 0x24\n  4212: ra = 0x8a\n  4216: ecalli 1 // 'call_data_load'\n  4218: t0 = 0x8c\n  4222: jump @1353\n      : @180 [@dyn 69] (gas: 1)\n  4225: t0 = 140, jump @1353\n      : @181 [@dyn 70] (gas: 7)\n  4231: a0 = u64 [a3 + 0xa0]\n  4235: a1 = u64 [a3 + 0x98]\n  4239: a2 = u64 [a3 + 0x90]\n  4243: a3 = a1 | a0\n  4246: a4 = a2 <u 0x1\n  4249: a4 = 0 if a3 != 0\n  4251: jump @183 if a4 != 0\n      : @182 (gas: 1)\n  4254: jump @748\n      : @183 (gas: 31)\n  4257: a3 = s1 + 0x2118\n  4261: a3 = u64 [a3 + 0x188]\n  4265: a4 = u64 [s1 + 0x198]\n  4269: t0 = u32 [a4]\n  4271: a5 = a3 + 0x4\n  4274: a3 = a5 <u a3\n  4277: a4 = a2 + a3\n  4280: a2 = a4 <u a2\n  4283: a2 = a3 if a3 == 0\n  4286: a2 = a2 + a1\n  4289: a1 = a2 <u a1\n  4292: a3 = a0 + a1\n  4295: a0 = s1 + 0x7ff\n  4299: a0 = a0 + 0x119\n  4303: u64 [a0 + 1024] = 0\n  4307: u64 [a0 + 1016] = 0\n  4311: u64 [a0 + 1008] = 0\n  4315: u64 [a0 + 0x3e8] = t0\n  4319: a1 = a0 + 0x400\n  4323: u64 [a1 + 0x8] = a5\n  4326: u64 [a1 + 0x10] = a4\n  4329: u64 [a1 + 0x18] = a2\n  4332: a4 = a0\n  4334: a0 = s1 + 0x7ff\n  4338: a0 = a0 + 0x541\n  4342: a1 = s1 + 0x7ff\n  4346: a1 = a1 + 0x521\n  4350: a2 = s1 + 0x7ff\n  4354: a2 = a2 + 0x501\n  4358: u64 [a4 + 0x420] = a3\n  4362: ra = 142, jump @952\n      : @184 [@dyn 71] (gas: 19)\n  4368: a1 = s1 + 0x7ff\n  4372: a1 = a1 + 0x119\n  4376: a2 = a1 + 0x400\n  4380: a0 = u64 [a2 + 0x40]\n  4383: a1 = s1 + 0x100\n  4387: u64 [a1 + 0x70] = a0\n  4390: a0 = u64 [a2 + 0x38]\n  4393: u64 [a1 + 0x68] = a0\n  4396: a0 = u64 [a2 + 0x30]\n  4399: u64 [a1 + 0x60] = a0\n  4402: a0 = u64 [a2 + 0x28]\n  4405: u64 [a1 + 0x58] = a0\n  4408: a0 = s1 + 0x2000\n  4412: i32 a0 = a0 + 0x2c0\n  4416: a1 = 0x44\n  4419: ra = 0x90\n  4423: ecalli 1 // 'call_data_load'\n  4425: t0 = 0x92\n  4429: jump @1353\n      : @185 [@dyn 72] (gas: 1)\n  4432: t0 = 146, jump @1353\n      : @186 [@dyn 73] (gas: 7)\n  4438: a0 = u64 [a3 + 0xc0]\n  4442: a1 = u64 [a3 + 0xb8]\n  4446: a2 = u64 [a3 + 0xb0]\n  4450: a3 = a1 | a0\n  4453: a4 = a2 <u 0x1\n  4456: a4 = 0 if a3 != 0\n  4458: jump @188 if a4 != 0\n      : @187 (gas: 1)\n  4461: jump @749\n      : @188 (gas: 31)\n  4464: a3 = s1 + 0x2118\n  4468: a3 = u64 [a3 + 0x1a8]\n  4472: a4 = u64 [s1 + 0x198]\n  4476: t0 = u32 [a4]\n  4478: a5 = a3 + 0x4\n  4481: a3 = a5 <u a3\n  4484: a4 = a2 + a3\n  4487: a2 = a4 <u a2\n  4490: a2 = a3 if a3 == 0\n  4493: a2 = a2 + a1\n  4496: a1 = a2 <u a1\n  4499: a3 = a0 + a1\n  4502: a0 = s1 + 0x7ff\n  4506: a0 = a0 + 0x119\n  4510: u64 [a0 + 928] = 0\n  4514: u64 [a0 + 920] = 0\n  4518: u64 [a0 + 912] = 0\n  4522: u64 [a0 + 0x388] = t0\n  4526: a1 = a0 + 0x300\n  4530: u64 [a1 + 0xa8] = a5\n  4534: u64 [a1 + 0xb0] = a4\n  4538: u64 [a1 + 0xb8] = a2\n  4542: a4 = a0\n  4544: a0 = s1 + 0x7ff\n  4548: a0 = a0 + 0x4e1\n  4552: a1 = s1 + 0x7ff\n  4556: a1 = a1 + 0x4c1\n  4560: a2 = s1 + 0x7ff\n  4564: a2 = a2 + 0x4a1\n  4568: u64 [a4 + 0x3c0] = a3\n  4572: ra = 148, jump @952\n      : @189 [@dyn 74] (gas: 28)\n  4578: a4 = s1 + 0x7ff\n  4582: a4 = a4 + 0x119\n  4586: a5 = a4 + 0x300\n  4590: a0 = u64 [a5 + 0xe0]\n  4594: a4 = s1 + 0x100\n  4598: u64 [a4 + 0x50] = a0\n  4601: a0 = u64 [a5 + 0xd8]\n  4605: u64 [a4 + 0x48] = a0\n  4608: a0 = u64 [a5 + 0xd0]\n  4612: u64 [a4 + 0x40] = a0\n  4615: a0 = u64 [a5 + 0xc8]\n  4619: u64 [a4 + 0x38] = a0\n  4622: a1 = u64 [0x20020]\n  4627: a2 = u64 [0x20028]\n  4632: a3 = u64 [0x20030]\n  4637: u64 [a4 + 0x28] = a1\n  4640: u64 [a5 + 0x80] = a1\n  4644: a0 = u64 [0x20038]\n  4649: u64 [a4 + 0x20] = a2\n  4652: u64 [a5 + 0x78] = a2\n  4655: u64 [a4 + 0x18] = a3\n  4658: u64 [a5 + 0x70] = a3\n  4661: a1 = s1 + 0x7ff\n  4665: a1 = a1 + 0x481\n  4669: u64 [a4 + 0x30] = a0\n  4672: u64 [a5 + 0x68] = a0\n  4675: a0 = 0\n  4677: ra = 150, jump @19\n      : @190 [@dyn 75] (gas: 11)\n  4683: a0 = s1 + 0x7ff\n  4687: a0 = a0 + 0x119\n  4691: u64 [a0 + 864] = 0\n  4695: u64 [a0 + 856] = 0\n  4699: u64 [a0 + 848] = 0\n  4703: a2 = a0\n  4705: a0 = 0x20\n  4708: a1 = s1 + 0x7ff\n  4712: a1 = a1 + 0x461\n  4716: u64 [a2 + 840] = 0\n  4720: ra = 152, jump @19\n      : @191 [@dyn 76] (gas: 3)\n  4726: a1 = 0x201bc\n  4731: a0 = i32 [0x201bc]\n  4736: jump @193 if a0 >u 63\n      : @192 (gas: 2)\n  4740: u32 [0x201bc] = 0x40\n  4746: fallthrough\n      : @193 (gas: 15)\n  4747: a0 = sp + 0xffffffffffffffe0\n  4750: a2 = a0 & 0xffffffffffffffe0\n  4753: u64 [s1 + 0x198] = a2\n  4757: sp = a2\n  4759: a0 = 0x201d0\n  4764: i32 a0 = a0 + 0\n  4766: u64 [s1 + 0x100] = a1\n  4770: i32 a2 = a2 + 0\n  4772: a1 = 0x40\n  4775: u64 [s1 + 0xf8] = a0\n  4779: ra = 0x9a\n  4783: ecalli 6 // 'hash_keccak_256'\n  4785: a3 = u64 [s1 + 0x198]\n  4789: t0 = 0x9c\n  4793: jump @1329\n      : @194 [@dyn 77] (gas: 2)\n  4796: a3 = u64 [s1 + 0x198]\n  4800: t0 = 156, jump @1329\n      : @195 [@dyn 78] (gas: 20)\n  4806: u64 [s1 + 0x190] = a0\n  4810: a0 = reverse a1\n  4812: u64 [s1 + 0x188] = a0\n  4816: a0 = reverse a2\n  4818: u64 [s1 + 0x180] = a0\n  4822: a0 = reverse a3\n  4824: u64 [s1 + 0x178] = a0\n  4828: a0 = sp + 0xffffffffffffffe0\n  4831: a0 = a0 & 0xffffffffffffffe0\n  4834: u64 [s1 + 0x198] = a0\n  4838: sp = a0\n  4840: a0 = 0x301d0\n  4845: u64 [s1 + 0x108] = a0\n  4849: i32 a0 = a0 + 0\n  4851: u64 [s1 + 0xb0] = a0\n  4855: ra = 0x9e\n  4859: ecalli 3 // 'caller'\n  4861: a2 = u64 [s1 + 0x108]\n  4865: t0 = 0xa0\n  4869: jump @1273\n      : @196 [@dyn 79] (gas: 2)\n  4872: a2 = u64 [s1 + 0x108]\n  4876: t0 = 160, jump @1273\n      : @197 [@dyn 80] (gas: 11)\n  4882: a2 = s1 + 0x7ff\n  4886: a2 = a2 + 0x119\n  4890: u64 [a2 + 832] = 0\n  4894: a4 = a2 + 0x300\n  4898: u64 [a4 + 0x38] = a1\n  4901: u64 [a4 + 0x30] = a0\n  4904: a1 = s1 + 0x7ff\n  4908: a1 = a1 + 0x441\n  4912: u64 [a4 + 0x28] = a3\n  4915: a0 = 0\n  4917: ra = 162, jump @19\n      : @198 [@dyn 81] (gas: 16)\n  4923: a0 = u64 [s1 + 0x178]\n  4927: a1 = s1 + 0x7ff\n  4931: a1 = a1 + 0x119\n  4935: a2 = a1 + 0x300\n  4939: u64 [a2 + 0x20] = a0\n  4942: a0 = u64 [s1 + 0x180]\n  4946: u64 [a2 + 0x18] = a0\n  4949: a0 = u64 [s1 + 0x188]\n  4953: u64 [a2 + 0x10] = a0\n  4956: a3 = a1\n  4958: a0 = 0x20\n  4961: a1 = s1 + 0x7ff\n  4965: a1 = a1 + 0x421\n  4969: a2 = u64 [s1 + 0x190]\n  4973: u64 [a3 + 0x308] = a2\n  4977: ra = 164, jump @19\n      : @199 [@dyn 82] (gas: 3)\n  4983: a1 = u64 [s1 + 0x100]\n  4987: a0 = i32 [a1]\n  4989: jump @201 if a0 >u 63\n      : @200 (gas: 2)\n  4993: u32 [a1 + 0] = 0x40\n  4996: fallthrough\n      : @201 (gas: 12)\n  4997: a0 = sp + 0xffffffffffffffe0\n  5000: a0 = a0 & 0xffffffffffffffe0\n  5003: u64 [s1 + 0x190] = a0\n  5007: sp = a0\n  5009: i32 a2 = a0 + 0\n  5011: a1 = 0x40\n  5014: a0 = u64 [s1 + 0xf8]\n  5018: ra = 0xa6\n  5022: ecalli 6 // 'hash_keccak_256'\n  5024: a3 = u64 [s1 + 0x190]\n  5028: t0 = 0xa8\n  5032: jump @1280\n      : @202 [@dyn 83] (gas: 2)\n  5035: a3 = u64 [s1 + 0x190]\n  5039: t0 = 168, jump @1280\n      : @203 [@dyn 84] (gas: 8)\n  5045: a1 = u64 [s1 + 0x198]\n  5049: u64 [a1 + 0x18] = a3\n  5052: u64 [a1 + 0x10] = a2\n  5055: u64 [a1 + 0x8] = a4\n  5058: u64 [a1] = a0\n  5060: a0 = s1 + 0x7ff\n  5064: a0 = a0 + 0x401\n  5068: ra = 170, jump @21\n      : @204 [@dyn 85] (gas: 4)\n  5074: a0 = s1 + 0x7ff\n  5078: a0 = a0 + 0x119\n  5082: a0 = u8 [a0 + 0x2e8]\n  5086: jump @206 if a0 != 0\n      : @205 (gas: 1)\n  5089: jump @750\n      : @206 (gas: 9)\n  5092: a0 = s1 + 0x2118\n  5096: u64 [a0 + 480] = 0\n  5100: u64 [a0 + 472] = 0\n  5104: u64 [a0 + 464] = 0\n  5108: u64 [a0 + 456] = 0x2\n  5113: a0 = s1 + 0x7ff\n  5117: a0 = a0 + 0x3e1\n  5121: a1 = s1 + 0x22e0\n  5125: ra = 172, jump @21\n      : @207 [@dyn 86] (gas: 30)\n  5131: a1 = s1 + 0x7ff\n  5135: a1 = a1 + 0x119\n  5139: a5 = a1 + 0x200\n  5143: a0 = u64 [a5 + 0xe0]\n  5147: a2 = u64 [a5 + 0xd8]\n  5151: a3 = u64 [a5 + 0xd0]\n  5155: a4 = u64 [a5 + 0xc8]\n  5159: a1 = sp + 0xffffffffffffffe0\n  5162: a1 = a1 & 0xffffffffffffffe0\n  5165: sp = a1\n  5167: a5 = a4 + 0x1\n  5170: a4 = a5 <u 0x1\n  5173: a4 = a4 + a3\n  5176: a3 = a5 | a4\n  5179: a3 = a3 <u 0x1\n  5182: a3 = a3 + a2\n  5185: a2 = a3 <u a2\n  5188: a0 = a0 + a2\n  5191: u64 [a1 + 0x10] = a3\n  5194: u64 [a1 + 0x8] = a4\n  5197: u64 [a1] = a5\n  5199: u64 [s1 + 0xe0] = a4\n  5203: a4 = a4 | a0\n  5206: u64 [s1 + 0xf0] = a5\n  5210: u64 [s1 + 0xd8] = a3\n  5214: a2 = a5 | a3\n  5217: a2 = a2 | a4\n  5220: u64 [s1 + 0xe8] = a0\n  5224: u64 [a1 + 0x18] = a0\n  5227: jump @209 if a2 != 0\n      : @208 (gas: 1)\n  5230: jump @758\n      : @209 (gas: 7)\n  5233: a0 = s1 + 0x2118\n  5237: u64 [a0 + 512] = 0\n  5241: u64 [a0 + 504] = 0\n  5245: u64 [a0 + 496] = 0\n  5249: u64 [a0 + 488] = 0x2\n  5254: a0 = s1 + 0x2300\n  5258: ra = 174, jump @23\n      : @210 [@dyn 87] (gas: 4)\n  5264: a0 = s1 + 0x7ff\n  5268: a0 = a0 + 0x3c1\n  5272: a1 = 0x40\n  5275: ra = 176, jump @17\n      : @211 [@dyn 88] (gas: 18)\n  5281: a1 = s1 + 0x7ff\n  5285: a1 = a1 + 0x119\n  5289: a5 = a1 + 0x200\n  5293: a0 = u64 [a5 + 0xc0]\n  5297: u64 [s1 + 0x188] = a0\n  5301: a2 = u64 [a5 + 0xb8]\n  5305: u64 [s1 + 0x180] = a2\n  5309: a3 = u64 [a5 + 0xb0]\n  5313: u64 [s1 + 0x190] = a3\n  5317: a4 = u64 [a5 + 0xa8]\n  5321: u64 [s1 + 0x198] = a4\n  5325: u64 [a5 + 0xa0] = a0\n  5329: u64 [a5 + 0x98] = a2\n  5333: u64 [a5 + 0x90] = a3\n  5337: a0 = s1 + 0x7ff\n  5341: a0 = a0 + 0x3a1\n  5345: u64 [a5 + 0x88] = a4\n  5349: ra = 178, jump @934\n      : @212 [@dyn 89] (gas: 13)\n  5355: a4 = s1 + 0x100\n  5359: a3 = u64 [a4 + 0x98]\n  5363: a0 = u64 [a4 + 0x88]\n  5367: a1 = u64 [a4 + 0x90]\n  5371: a0 = a0 | a1\n  5374: a2 = u64 [a4 + 0x80]\n  5378: a1 = a3 | a2\n  5381: a1 = a1 | a0\n  5384: a1 = a1 >> 0x20\n  5387: a0 = a0 | a2\n  5390: a0 = a0 << 0x20\n  5393: a0 = a0 | a1\n  5396: jump @214 if a0 == 0\n      : @213 (gas: 1)\n  5399: jump @534\n      : @214 (gas: 15)\n  5402: a0 = u64 [s1 + 0xf0]\n  5406: a2 = s1 + 0x7ff\n  5410: a2 = a2 + 0x119\n  5414: a4 = a2 + 0x200\n  5418: u64 [a4 + 0x68] = a0\n  5421: a0 = u64 [s1 + 0xe0]\n  5425: u64 [a4 + 0x70] = a0\n  5428: a0 = u64 [s1 + 0xd8]\n  5432: u64 [a4 + 0x78] = a0\n  5435: a1 = s1 + 0x7ff\n  5439: a1 = a1 + 0x381\n  5443: a0 = u64 [s1 + 0xe8]\n  5447: u64 [a4 + 0x80] = a0\n  5451: a0 = a3\n  5453: ra = 180, jump @19\n      : @215 [@dyn 90] (gas: 8)\n  5459: a5 = s1 + 0x100\n  5463: a1 = u64 [a5 + 0x98]\n  5467: a0 = u64 [a5 + 0x88]\n  5471: a3 = u64 [a5 + 0x80]\n  5475: a3 = a3 | a0\n  5478: a4 = 0x100000000\n  5488: a0 = 0xffffffe0\n  5498: t0 = 182, jump @1341\n      : @216 [@dyn 91] (gas: 1)\n  5504: jump @218 if a0 != 0\n      : @217 (gas: 1)\n  5507: jump @534\n      : @218 (gas: 19)\n  5510: u64 [s1 + 0x188] = a3\n  5514: i32 a3 = a1 + 0x20\n  5517: a0 = u64 [s1 + 0xd0]\n  5521: a2 = s1 + 0x7ff\n  5525: a2 = a2 + 0x119\n  5529: a5 = a2 + 0x200\n  5533: u64 [a5 + 0x48] = a0\n  5536: a0 = u64 [s1 + 0xc8]\n  5540: u64 [a5 + 0x50] = a0\n  5543: a0 = u64 [s1 + 0xc0]\n  5547: u64 [a5 + 0x58] = a0\n  5550: a1 = s1 + 0x7ff\n  5554: a1 = a1 + 0x361\n  5558: a0 = u64 [s1 + 0xb8]\n  5562: u64 [a5 + 0x60] = a0\n  5565: u64 [s1 + 0x178] = a3\n  5569: a0 = a3\n  5571: u64 [s1 + 0x180] = a4\n  5575: ra = 184, jump @19\n      : @219 [@dyn 92] (gas: 5)\n  5581: a3 = s1 + 0x100\n  5585: a1 = u64 [a3 + 0x98]\n  5589: a0 = u64 [a3 + 0x80]\n  5593: a0 = a0 + 0xffffffffffffffc0\n  5596: t0 = 186, jump @1326\n      : @220 [@dyn 93] (gas: 1)\n  5602: jump @222 if a0 != 0\n      : @221 (gas: 1)\n  5605: jump @534\n      : @222 (gas: 16)\n  5608: i32 a0 = a1 + 0x40\n  5611: a1 = u64 [s1 + 0x158]\n  5615: a3 = s1 + 0x7ff\n  5619: a3 = a3 + 0x119\n  5623: a4 = a3 + 0x200\n  5627: u64 [a4 + 0x28] = a1\n  5630: a1 = u64 [s1 + 0x160]\n  5634: u64 [a4 + 0x30] = a1\n  5637: a1 = u64 [s1 + 0x168]\n  5641: u64 [a4 + 0x38] = a1\n  5644: a1 = s1 + 0x7ff\n  5648: a1 = a1 + 0x341\n  5652: a2 = u64 [s1 + 0x170]\n  5656: u64 [a4 + 0x40] = a2\n  5659: u64 [s1 + 0xa8] = a0\n  5663: ra = 188, jump @19\n      : @223 [@dyn 94] (gas: 4)\n  5669: a0 = s1 + 0x2000\n  5673: i32 a0 = a0 + 0x320\n  5677: ecalli 7 // 'now'\n  5679: fallthrough\n      : @224 (gas: 10)\n  5680: a3 = s1 + 0x100\n  5684: a5 = u64 [a3 + 0x98]\n  5688: a2 = 0x100000000\n  5698: a0 = 0xffffffa0\n  5708: a0 = a5 <u a0\n  5711: a1 = u64 [a3 + 0x90]\n  5715: a0 = 0 if a1 != 0\n  5717: a1 = u64 [a3 + 0x88]\n  5721: a0 = 0 if a1 != 0\n  5723: jump @226 if a0 != 0\n      : @225 (gas: 1)\n  5726: jump @534\n      : @226 (gas: 19)\n  5729: a3 = s1 + 0x2118\n  5733: a0 = a3 + 0x200\n  5737: a4 = u64 [a0 + 0x8]\n  5740: a1 = u64 [a0 + 0x10]\n  5743: u64 [s1 + 0x180] = a2\n  5747: a2 = u64 [a0 + 0x18]\n  5750: a3 = u64 [a0 + 0x20]\n  5753: i32 a0 = a5 + 0x60\n  5756: a5 = s1 + 0x7ff\n  5760: a5 = a5 + 0x119\n  5764: u64 [a5 + 0x220] = a3\n  5768: a3 = a5 + 0x200\n  5772: u64 [a3 + 0x18] = a2\n  5775: u64 [a3 + 0x10] = a1\n  5778: a1 = s1 + 0x7ff\n  5782: a1 = a1 + 0x321\n  5786: u64 [a3 + 0x8] = a4\n  5789: u64 [s1 + 0xa0] = a0\n  5793: ra = 190, jump @19\n      : @227 [@dyn 95] (gas: 4)\n  5799: a0 = u64 [s1 + 0xb0]\n  5803: ra = 0xc0\n  5807: ecalli 3 // 'caller'\n  5809: fallthrough\n      : @228 [@dyn 96] (gas: 10)\n  5810: a2 = s1 + 0x100\n  5814: a4 = u64 [a2 + 0x98]\n  5818: a0 = u64 [a2 + 0x80]\n  5822: a0 = a0 + 0xffffffffffffff80\n  5825: a0 = a4 <u a0\n  5828: a1 = u64 [a2 + 0x90]\n  5832: a0 = 0 if a1 != 0\n  5834: a1 = u64 [a2 + 0x88]\n  5838: a0 = 0 if a1 != 0\n  5840: jump @230 if a0 != 0\n      : @229 (gas: 1)\n  5843: jump @534\n      : @230 (gas: 2)\n  5846: a2 = u64 [s1 + 0x108]\n  5850: t0 = 194, jump @1284\n      : @231 [@dyn 97] (gas: 12)\n  5856: i32 a0 = a4 + 0x80\n  5860: a4 = s1 + 0x7ff\n  5864: a4 = a4 + 0x119\n  5868: u64 [a4 + 512] = 0\n  5872: a5 = a4 + 0x100\n  5876: u64 [a5 + 0xf8] = a1\n  5880: u64 [a5 + 0xf0] = a2\n  5884: a1 = s1 + 0x7ff\n  5888: a1 = a1 + 0x301\n  5892: u64 [a5 + 0xe8] = a3\n  5896: u64 [s1 + 0x98] = a0\n  5900: ra = 196, jump @19\n      : @232 [@dyn 98] (gas: 6)\n  5906: a5 = s1 + 0x100\n  5910: a3 = u64 [a5 + 0x88]\n  5914: a1 = u64 [a5 + 0x98]\n  5918: a4 = 0x100000000\n  5928: a0 = 0xffffff60\n  5938: t0 = 198, jump @1341\n      : @233 [@dyn 99] (gas: 1)\n  5944: jump @235 if a0 != 0\n      : @234 (gas: 1)\n  5947: jump @534\n      : @235 (gas: 12)\n  5950: i32 a0 = a1 + 0xa0\n  5954: a2 = s1 + 0x7ff\n  5958: a2 = a2 + 0x119\n  5962: u64 [a2 + 480] = 0\n  5966: u64 [a2 + 472] = 0\n  5970: u64 [a2 + 464] = 0\n  5974: a1 = s1 + 0x7ff\n  5978: a1 = a1 + 0x2e1\n  5982: u64 [a2 + 456] = 0\n  5986: u64 [s1 + 0x68] = a0\n  5989: u64 [s1 + 0x180] = a4\n  5993: ra = 200, jump @19\n      : @236 [@dyn 100] (gas: 5)\n  5999: a3 = s1 + 0x100\n  6003: a1 = u64 [a3 + 0x98]\n  6007: a0 = u64 [a3 + 0x80]\n  6011: a0 = a0 + 0xffffffffffffff40\n  6015: t0 = 202, jump @1326\n      : @237 [@dyn 101] (gas: 1)\n  6021: jump @239 if a0 != 0\n      : @238 (gas: 1)\n  6024: jump @534\n      : @239 (gas: 16)\n  6027: i32 a0 = a1 + 0xc0\n  6031: a1 = u64 [s1 + 0x138]\n  6035: a3 = s1 + 0x7ff\n  6039: a3 = a3 + 0x119\n  6043: a4 = a3 + 0x100\n  6047: u64 [a4 + 0xa8] = a1\n  6051: a1 = u64 [s1 + 0x140]\n  6055: u64 [a4 + 0xb0] = a1\n  6059: a1 = u64 [s1 + 0x148]\n  6063: u64 [a4 + 0xb8] = a1\n  6067: a1 = s1 + 0x7ff\n  6071: a1 = a1 + 0x2c1\n  6075: a2 = u64 [s1 + 0x150]\n  6079: u64 [a4 + 0xc0] = a2\n  6083: u64 [s1 + 0x38] = a0\n  6086: ra = 204, jump @19\n      : @240 [@dyn 102] (gas: 15)\n  6092: a0 = u64 [s1 + 0xe8]\n  6096: a2 = s1 + 0x7ff\n  6100: a2 = a2 + 0x119\n  6104: a3 = a2 + 0x100\n  6108: u64 [a3 + 0xa0] = a0\n  6112: a0 = u64 [s1 + 0xd8]\n  6116: u64 [a3 + 0x98] = a0\n  6120: a0 = u64 [s1 + 0xe0]\n  6124: u64 [a3 + 0x90] = a0\n  6128: a1 = s1 + 0x7ff\n  6132: a1 = a1 + 0x2a1\n  6136: a0 = u64 [s1 + 0xf0]\n  6140: u64 [a3 + 0x88] = a0\n  6144: a0 = 0\n  6146: ra = 206, jump @19\n      : @241 [@dyn 103] (gas: 11)\n  6152: a1 = s1 + 0x7ff\n  6156: a1 = a1 + 0x119\n  6160: u64 [a1 + 384] = 0\n  6164: u64 [a1 + 376] = 0\n  6168: u64 [a1 + 360] = 0x1\n  6173: a2 = a1\n  6175: a0 = 0x20\n  6178: a1 = s1 + 0x7ff\n  6182: a1 = a1 + 0x281\n  6186: u64 [a2 + 368] = 0\n  6190: ra = 208, jump @19\n      : @242 [@dyn 104] (gas: 7)\n  6196: a0 = sp + 0xffffffffffffffe0\n  6199: a0 = a0 & 0xffffffffffffffe0\n  6202: u64 [s1 + 0x190] = a0\n  6206: sp = a0\n  6208: a2 = u64 [s1 + 0x100]\n  6212: a0 = i32 [a2]\n  6214: jump @244 if a0 >u 63\n      : @243 (gas: 2)\n  6218: u32 [a2 + 0] = 0x40\n  6221: fallthrough\n      : @244 (gas: 30)\n  6222: a0 = sp + 0xffffffffffffffe0\n  6225: a0 = a0 & 0xffffffffffffffe0\n  6228: u64 [s1 + 0x188] = a0\n  6232: sp = a0\n  6234: i32 a2 = a0 + 0\n  6236: a1 = 0x40\n  6239: a0 = u64 [s1 + 0xf8]\n  6243: ecalli 6 // 'hash_keccak_256'\n  6245: a3 = u64 [s1 + 0x188]\n  6249: a0 = u64 [a3 + 0x18]\n  6252: a1 = u64 [a3 + 0x10]\n  6255: a2 = u64 [a3 + 0x8]\n  6258: a3 = u64 [a3]\n  6260: a5 = reverse a0\n  6262: u64 [s1 + 0x78] = a5\n  6265: a4 = reverse a1\n  6267: u64 [s1 + 0x80] = a4\n  6271: a1 = reverse a2\n  6273: u64 [s1 + 0x90] = a1\n  6277: a0 = reverse a3\n  6279: u64 [s1 + 0x88] = a0\n  6283: a2 = u64 [s1 + 0x190]\n  6287: u64 [a2 + 0x18] = a0\n  6290: u64 [a2 + 0x10] = a1\n  6293: u64 [a2 + 0x8] = a4\n  6296: u64 [a2] = a5\n  6298: a0 = s1 + 0x7ff\n  6302: a0 = a0 + 0x261\n  6306: a1 = u64 [s1 + 0x198]\n  6310: ra = 210, jump @17\n      : @245 [@dyn 105] (gas: 16)\n  6316: a3 = s1 + 0x7ff\n  6320: a3 = a3 + 0x119\n  6324: a4 = a3 + 0x100\n  6328: a0 = u64 [a4 + 0x60]\n  6331: a1 = u64 [a4 + 0x58]\n  6334: a2 = u64 [a4 + 0x50]\n  6337: a3 = u64 [a4 + 0x48]\n  6340: a4 = s1 + 0x2118\n  6344: a5 = a4 + 0x200\n  6348: u64 [a5 + 0x40] = a0\n  6351: u64 [a5 + 0x38] = a1\n  6354: u64 [a5 + 0x30] = a2\n  6357: u64 [a5 + 0x28] = a3\n  6360: a1 = s1 + 0x2340\n  6364: a0 = u64 [s1 + 0x190]\n  6368: ra = 212, jump @23\n      : @246 [@dyn 106] (gas: 28)\n  6374: a0 = sp + 0xffffffffffffffe0\n  6377: a1 = a0 & 0xffffffffffffffe0\n  6380: sp = a1\n  6382: a2 = u64 [s1 + 0x78]\n  6385: a2 = a2 + 0x1\n  6388: a0 = a2 <u 0x1\n  6391: a3 = u64 [s1 + 0x80]\n  6395: a3 = a3 + a0\n  6398: a0 = a2 | a3\n  6401: a0 = a0 <u 0x1\n  6404: a5 = u64 [s1 + 0x90]\n  6408: a4 = a5 + a0\n  6411: a0 = a4 <u a5\n  6414: a5 = u64 [s1 + 0x88]\n  6418: a0 = a0 + a5\n  6421: u64 [s1 + 0x148] = a0\n  6425: u64 [a1 + 0x18] = a0\n  6428: u64 [s1 + 0x138] = a4\n  6432: u64 [a1 + 0x10] = a4\n  6435: u64 [s1 + 0x140] = a3\n  6439: u64 [a1 + 0x8] = a3\n  6442: u64 [s1 + 0x60] = a1\n  6445: u64 [s1 + 0x150] = a2\n  6449: u64 [a1] = a2\n  6451: a0 = s1 + 0x7ff\n  6455: a0 = a0 + 0x241\n  6459: a1 = u64 [s1 + 0x178]\n  6463: ra = 214, jump @17\n      : @247 [@dyn 107] (gas: 19)\n  6469: a0 = s1 + 0x7ff\n  6473: a0 = a0 + 0x119\n  6477: a5 = a0 + 0x100\n  6481: a3 = u64 [a5 + 0x40]\n  6484: a4 = u64 [a5 + 0x38]\n  6487: a2 = u64 [a5 + 0x30]\n  6490: a1 = u64 [a5 + 0x28]\n  6493: a5 = s1 + 0x100\n  6497: u64 [a5 + 0x30] = a2\n  6500: u64 [a5 + 0x28] = a3\n  6503: a0 = a2 | a3\n  6506: a2 = a1 | a4\n  6509: a2 = a2 | a0\n  6512: a2 = a2 >> 0x20\n  6515: u64 [a5 + 0x20] = a4\n  6518: a0 = a0 | a4\n  6521: a0 = a0 << 0x20\n  6524: a0 = a0 | a2\n  6527: jump @249 if a0 == 0\n      : @248 (gas: 1)\n  6530: jump @534\n      : @249 (gas: 4)\n  6533: a0 = s1 + 0x7ff\n  6537: a0 = a0 + 0x221\n  6541: u64 [s1 + 0x118] = a1\n  6545: ra = 216, jump @17\n      : @250 [@dyn 108] (gas: 19)\n  6551: a2 = s1 + 0x7ff\n  6555: a2 = a2 + 0x119\n  6559: a0 = a2 + 0x100\n  6563: a4 = u64 [a0 + 0x20]\n  6566: a1 = u64 [a0 + 0x18]\n  6569: a3 = u64 [a0 + 0x10]\n  6572: a0 = a4 >u 0\n  6574: a5 = a1 >u 0\n  6576: a5 = a0 if a4 != 0\n  6579: u64 [s1 + 0x110] = a3\n  6583: a0 = a3 >u 0\n  6585: u64 [s1 + 0x58] = a1\n  6588: u64 [s1 + 0x50] = a4\n  6591: a1 = a1 | a4\n  6594: u64 [s1 + 0x28] = a0\n  6597: u64 [s1 + 0x30] = a5\n  6600: u64 [s1 + 0x48] = a1\n  6603: a0 = a5 if a1 != 0\n  6606: jump @252 if a0 == 0\n      : @251 (gas: 1)\n  6609: jump @861\n      : @252 (gas: 6)\n  6612: a0 = u64 [a2 + 0x108]\n  6616: u64 [s1 + 0x70] = a0\n  6619: a0 = s1 + 0x7ff\n  6623: a0 = a0 + 0x201\n  6627: a1 = u64 [s1 + 0x60]\n  6630: ra = 218, jump @21\n      : @253 [@dyn 109] (gas: 15)\n  6636: a4 = s1 + 0x7ff\n  6640: a4 = a4 + 0x119\n  6644: a2 = u64 [a4 + 0xe8]\n  6648: a0 = u64 [a4 + 0xf0]\n  6652: a1 = u64 [a4 + 0xf8]\n  6656: a3 = u64 [a4 + 0x100]\n  6660: u64 [a4 + 0xc0] = a3\n  6664: u64 [a4 + 0xb8] = a1\n  6668: u64 [a4 + 0xb0] = a0\n  6672: a0 = s1 + 0x7ff\n  6676: a0 = a0 + 0x1e1\n  6680: a1 = s1 + 0x7ff\n  6684: a1 = a1 + 0x1c1\n  6688: u64 [a4 + 0xa8] = a2\n  6692: ra = 220, jump @978\n      : @254 [@dyn 110] (gas: 19)\n  6698: a0 = s1 + 0x7ff\n  6702: a0 = a0 + 0x119\n  6706: a3 = u64 [a0 + 0xe0]\n  6710: a4 = u64 [a0 + 0xd8]\n  6714: a5 = u64 [a0 + 0xd0]\n  6718: t0 = u64 [a0 + 0xc8]\n  6722: a0 = a3 >u 0\n  6724: a1 = a4 >u 0\n  6726: a1 = a0 if a3 != 0\n  6729: a0 = a5 >u 0\n  6731: a2 = t0 <u 0x20\n  6734: a2 = a2 ^ 0x1\n  6737: a2 = a0 if a5 != 0\n  6740: a0 = a4 | a3\n  6743: a2 = a1 if a0 != 0\n  6746: a0 = u64 [s1 + 0x70]\n  6749: a0 = a0 <u 0x20\n  6752: u64 [s1 + 0x40] = a0\n  6755: jump @256 if a2 != 0\n      : @255 (gas: 1)\n  6758: jump @535\n      : @256 (gas: 18)\n  6761: u64 [s1 + 0x170] = t0\n  6765: u64 [s1 + 0x178] = a5\n  6769: u64 [s1 + 0x190] = a4\n  6773: u64 [s1 + 0x180] = a3\n  6777: a0 = s1 + 0x7ff\n  6781: a0 = a0 + 0x119\n  6785: a1 = u64 [s1 + 0x150]\n  6789: u64 [a0 + 0x88] = a1\n  6793: a1 = u64 [s1 + 0x140]\n  6797: u64 [a0 + 0x90] = a1\n  6801: a1 = u64 [s1 + 0x138]\n  6805: u64 [a0 + 0x98] = a1\n  6809: a1 = s1 + 0x7ff\n  6813: a1 = a1 + 0x1a1\n  6817: a2 = u64 [s1 + 0x148]\n  6821: u64 [a0 + 0xa0] = a2\n  6825: a0 = 0\n  6827: ra = 222, jump @19\n      : @257 [@dyn 111] (gas: 3)\n  6833: a2 = u64 [s1 + 0x100]\n  6837: a0 = i32 [a2]\n  6839: jump @259 if a0 >u 31\n      : @258 (gas: 2)\n  6843: u32 [a2 + 0] = 0x20\n  6846: fallthrough\n      : @259 (gas: 12)\n  6847: a0 = sp + 0xffffffffffffffe0\n  6850: a0 = a0 & 0xffffffffffffffe0\n  6853: u64 [s1 + 0x188] = a0\n  6857: sp = a0\n  6859: i32 a2 = a0 + 0\n  6861: a1 = 0x20\n  6864: a0 = u64 [s1 + 0xf8]\n  6868: ra = 0xe0\n  6872: ecalli 6 // 'hash_keccak_256'\n  6874: a0 = u64 [s1 + 0x70]\n  6877: t0 = 0xe2\n  6881: jump @1335\n      : @260 [@dyn 112] (gas: 2)\n  6884: a0 = u64 [s1 + 0x70]\n  6887: t0 = 226, jump @1335\n      : @261 [@dyn 113] (gas: 102)\n  6893: a4 = u64 [s1 + 0x58]\n  6896: a3 = a3 + a4\n  6899: u64 [s1 + 0x168] = a3\n  6903: a3 = a3 << 0x3b\n  6906: a4 = a2 >> 0x5\n  6909: a4 = a4 | a3\n  6912: a0 = u64 [s1 + 0x188]\n  6916: t0 = u64 [a0 + 0x18]\n  6919: a2 = a2 << 0x3b\n  6922: a0 = u64 [a0 + 0x10]\n  6925: a1 = a1 >> 0x5\n  6928: a2 = a2 | a1\n  6931: t2 = reverse t0\n  6933: a0 = reverse a0\n  6935: a1 = u64 [s1 + 0x40]\n  6938: a1 = 0 if a5 != 0\n  6940: a3 = u64 [s1 + 0x48]\n  6943: a1 = 0 if a3 != 0\n  6945: a4 = 0 if a1 != 0\n  6947: a2 = 0 if a1 != 0\n  6949: t0 = t2 + a2\n  6952: a2 = t0 <u t2\n  6955: a5 = a0 + a2\n  6958: a4 = a4 + a5\n  6961: u64 [s1 + 0x198] = a4\n  6965: a5 = a4 ^ a0\n  6968: a3 = a4 <u a0\n  6971: a3 = a2 if a5 == 0\n  6974: u64 [s1 + 0x160] = a3\n  6978: a2 = u64 [s1 + 0x170]\n  6982: ra = a2 + 0x1f\n  6985: a4 = ra <u a2\n  6988: a3 = u64 [s1 + 0x178]\n  6992: a2 = a3 + a4\n  6995: a5 = a2 <u a3\n  6998: a5 = a4 if a4 == 0\n  7001: t1 = u64 [s1 + 0x190]\n  7005: t1 = t1 + a5\n  7008: a4 = t1 << 0x3b\n  7011: a3 = a2 >> 0x5\n  7014: a3 = a3 | a4\n  7017: a2 = a2 << 0x3b\n  7020: a4 = ra >> 0x5\n  7023: a2 = a2 | a4\n  7026: a2 = a2 + t2\n  7029: u64 [s1 + 0x178] = a2\n  7033: a4 = a2 <u t2\n  7036: t2 = t0\n  7038: a2 = a0 + a4\n  7041: a2 = a2 + a3\n  7044: a3 = a2 ^ a0\n  7047: u64 [s1 + 0x170] = a2\n  7051: a2 = a2 <u a0\n  7054: a2 = a4 if a3 == 0\n  7057: a4 = u64 [s1 + 0x168]\n  7061: a0 = u64 [s1 + 0x58]\n  7064: a0 = a4 <u a0\n  7067: a3 = u64 [s1 + 0x50]\n  7070: a0 = a0 + a3\n  7073: a3 = a4 >> 0x5\n  7076: a4 = a0 << 0x3b\n  7079: a3 = a3 | a4\n  7082: a4 = u64 [s1 + 0x188]\n  7086: t0 = u64 [a4]\n  7088: a4 = u64 [a4 + 0x8]\n  7091: a0 = a0 >> 0x5\n  7094: a3 = 0 if a1 != 0\n  7096: a0 = 0 if a1 != 0\n  7098: a1 = reverse a4\n  7100: a4 = reverse t0\n  7102: a0 = a0 + a4\n  7105: a3 = a3 + a1\n  7108: a5 = a3 <u a1\n  7111: a0 = a0 + a5\n  7114: ra = u64 [s1 + 0x160]\n  7118: ra = ra + a3\n  7121: a3 = ra <u a3\n  7124: t0 = a0 + a3\n  7127: a0 = u64 [s1 + 0x190]\n  7131: a0 = t1 <u a0\n  7134: a3 = u64 [s1 + 0x180]\n  7138: a0 = a0 + a3\n  7141: a3 = t1 >> 0x5\n  7144: a5 = a0 << 0x3b\n  7147: a3 = a3 | a5\n  7150: a0 = a0 >> 0x5\n  7153: a0 = a0 + a4\n  7156: a5 = s1 + 0x100\n  7160: a4 = u64 [a5 + 0x98]\n  7164: a3 = a3 + a1\n  7167: a1 = a3 <u a1\n  7170: a0 = a0 + a1\n  7173: a2 = a2 + a3\n  7176: u64 [a5 + 0x68] = a2\n  7179: a1 = a2 <u a3\n  7182: a0 = a0 + a1\n  7185: u64 [a5 + 0x60] = a0\n  7188: a0 = sp + 0xffffffffffffffe0\n  7191: t1 = a0 & 0xffffffffffffffe0\n  7194: sp = t1\n  7196: u64 [s1 + 0x158] = t1\n  7200: fallthrough\n      : @262 (gas: 20)\n  7201: a0 = u64 [s1 + 0x178]\n  7205: a0 = t2 <u a0\n  7208: a2 = u64 [s1 + 0x170]\n  7212: a1 = a4 ^ a2\n  7215: a2 = a4 <u a2\n  7218: a2 = a0 if a1 == 0\n  7221: a5 = u64 [s1 + 0x168]\n  7225: a0 = ra <u a5\n  7228: a3 = u64 [s1 + 0x160]\n  7232: a1 = t0 ^ a3\n  7235: a3 = t0 <u a3\n  7238: a3 = a0 if a1 == 0\n  7241: a0 = ra ^ a5\n  7244: a0 = a0 | a1\n  7247: a3 = a2 if a0 == 0\n  7250: u64 [t1] = t2\n  7252: u64 [t1 + 0x8] = a4\n  7255: u64 [t1 + 0x10] = ra\n  7258: u64 [t1 + 0x18] = t0\n  7261: jump @264 if a3 != 0\n      : @263 (gas: 1)\n  7264: jump @535\n      : @264 (gas: 12)\n  7267: a0 = s1 + 0x2118\n  7271: u64 [a0 + 608] = 0\n  7275: u64 [a0 + 600] = 0\n  7279: u64 [a0 + 592] = 0\n  7283: u64 [a0 + 584] = 0\n  7287: a1 = s1 + 0x2360\n  7291: a0 = t1\n  7293: u64 [s1 + 0x190] = t2\n  7297: u64 [s1 + 0x198] = a4\n  7301: u64 [s1 + 0x188] = t0\n  7305: u64 [s1 + 0x180] = ra\n  7309: ra = 228, jump @23\n      : @265 [@dyn 114] (gas: 15)\n  7315: t1 = u64 [s1 + 0x158]\n  7319: t0 = u64 [s1 + 0x188]\n  7323: a4 = u64 [s1 + 0x198]\n  7327: t2 = u64 [s1 + 0x190]\n  7331: t2 = t2 + 0x1\n  7334: a0 = t2 <u 0x1\n  7337: a4 = a4 + a0\n  7340: a0 = t2 | a4\n  7343: a0 = a0 <u 0x1\n  7346: a1 = u64 [s1 + 0x180]\n  7350: a0 = a0 + a1\n  7353: a1 = a0 <u a1\n  7356: t0 = t0 + a1\n  7359: ra = a0\n  7361: jump @262\n      : @266 (gas: 10)\n  7364: u64 [a2 + 1856] = 0\n  7368: u64 [a2 + 1848] = 0\n  7372: u64 [a2 + 1840] = 0\n  7376: u64 [a2 + 1832] = 0\n  7380: a0 = s1 + 0x3000\n  7384: i32 a0 = a0 + 0xfffffffffffff840\n  7388: ra = 0xe6\n  7392: ecalli 11 // 'value_transferred'\n  7394: t0 = 0xe8\n  7398: jump @1352\n      : @267 [@dyn 115] (gas: 1)\n  7401: t0 = 232, jump @1352\n      : @268 [@dyn 116] (gas: 8)\n  7407: a0 = u64 [a4 + 0x38]\n  7410: a1 = u64 [a4 + 0x40]\n  7413: a2 = u64 [a4 + 0x30]\n  7416: a3 = u64 [a4 + 0x28]\n  7419: a1 = a1 | a2\n  7422: a0 = a0 | a3\n  7425: a0 = a0 | a1\n  7428: jump @270 if a0 == 0\n      : @269 (gas: 1)\n  7431: jump @763\n      : @270 (gas: 1)\n  7434: t0 = 234, jump @1349\n      : @271 [@dyn 117] (gas: 1)\n  7440: jump @273 if a1 <u a0\n      : @272 (gas: 1)\n  7443: jump @764\n      : @273 (gas: 17)\n  7446: a0 = s1 + 0x3000\n  7450: i32 a0 = a0 + 0xfffffffffffff860\n  7454: a1 = 0x4\n  7457: ecalli 1 // 'call_data_load'\n  7459: a0 = s1 + 0x2118\n  7463: a2 = a0 + 0x700\n  7467: a1 = u64 [a2 + 0x60]\n  7470: u64 [s1 + 0x160] = a1\n  7474: a1 = u64 [a2 + 0x58]\n  7477: u64 [s1 + 0x168] = a1\n  7481: a1 = u64 [a2 + 0x50]\n  7484: u64 [s1 + 0x170] = a1\n  7488: a0 = u64 [a2 + 0x48]\n  7491: u64 [s1 + 0x178] = a0\n  7495: a0 = s1 + 0x2000\n  7499: a1 = 0x40\n  7502: ra = 236, jump @17\n      : @274 [@dyn 118] (gas: 16)\n  7508: a1 = s1 + 0x1918\n  7512: a0 = u64 [a1 + 0x700]\n  7516: u64 [s1 + 0x188] = a0\n  7520: a5 = a1 + 0x600\n  7524: a2 = u64 [a5 + 0xf8]\n  7528: u64 [s1 + 0x180] = a2\n  7532: a4 = u64 [a5 + 0xf0]\n  7536: u64 [s1 + 0x190] = a4\n  7540: a3 = u64 [a5 + 0xe8]\n  7544: u64 [s1 + 0x198] = a3\n  7548: u64 [a5 + 0xe0] = a0\n  7552: u64 [a5 + 0xd8] = a2\n  7556: u64 [a5 + 0xd0] = a4\n  7560: a0 = s1 + 0x1fe0\n  7564: u64 [a5 + 0xc8] = a3\n  7568: ra = 238, jump @934\n      : @275 [@dyn 119] (gas: 13)\n  7574: a3 = s1 + 0x100\n  7578: a0 = u64 [a3 + 0x88]\n  7582: a1 = u64 [a3 + 0x90]\n  7586: a0 = a0 | a1\n  7589: a2 = u64 [a3 + 0x80]\n  7593: a1 = u64 [a3 + 0x98]\n  7597: a1 = a1 | a2\n  7600: a1 = a1 | a0\n  7603: a1 = a1 >> 0x20\n  7606: a0 = a0 | a2\n  7609: a0 = a0 << 0x20\n  7612: a0 = a0 | a1\n  7615: jump @277 if a0 == 0\n      : @276 (gas: 1)\n  7618: jump @534\n      : @277 (gas: 8)\n  7621: a0 = s1 + 0x1918\n  7625: u64 [a0 + 1728] = 0\n  7629: u64 [a0 + 1720] = 0\n  7633: u64 [a0 + 1712] = 0\n  7637: a1 = s1 + 0x1fc0\n  7641: u64 [a0 + 1704] = 0\n  7645: a0 = u64 [s1 + 0x198]\n  7649: ra = 240, jump @19\n      : @278 [@dyn 120] (gas: 12)\n  7655: a4 = s1 + 0x100\n  7659: a0 = u64 [a4 + 0x88]\n  7663: a2 = u64 [a4 + 0x80]\n  7667: a2 = a2 | a0\n  7670: a3 = 0x100000000\n  7680: a0 = 0xffffffe0\n  7690: a1 = u64 [a4 + 0x98]\n  7694: a0 = a1 <u a0\n  7697: a1 = u64 [a4 + 0x90]\n  7701: a0 = 0 if a1 != 0\n  7703: a0 = 0 if a2 != 0\n  7705: jump @280 if a0 != 0\n      : @279 (gas: 1)\n  7708: jump @534\n      : @280 (gas: 13)\n  7711: a0 = u64 [s1 + 0x198]\n  7715: i32 a0 = a0 + 0x20\n  7718: a1 = s1 + 0x1918\n  7722: u64 [s1 + 0x188] = a2\n  7726: a2 = a1\n  7728: u64 [a1 + 1696] = 0\n  7732: u64 [a1 + 1688] = 0\n  7736: u64 [a1 + 1680] = 0\n  7740: a4 = 0x60\n  7743: a1 = s1 + 0x1fa0\n  7747: u64 [a2 + 0x688] = a4\n  7751: u64 [s1 + 0x180] = a3\n  7755: ra = 242, jump @19\n      : @281 [@dyn 121] (gas: 4)\n  7761: a2 = s1 + 0x100\n  7765: a0 = u64 [a2 + 0x80]\n  7769: a0 = a0 + 0xffffffffffffffc0\n  7772: t0 = 244, jump @1321\n      : @282 [@dyn 122] (gas: 1)\n  7778: jump @284 if a0 != 0\n      : @283 (gas: 1)\n  7781: jump @534\n      : @284 (gas: 9)\n  7784: a0 = u64 [s1 + 0x198]\n  7788: i32 a0 = a0 + 0x40\n  7791: a2 = s1 + 0x1918\n  7795: u64 [a2 + 1664] = 0\n  7799: u64 [a2 + 1656] = 0\n  7803: u64 [a2 + 1640] = 0x60\n  7808: a1 = s1 + 0x1f80\n  7812: u64 [a2 + 1648] = 0\n  7816: ra = 246, jump @19\n      : @285 [@dyn 123] (gas: 10)\n  7822: a2 = 0x100000000\n  7832: a0 = 0xffffffa0\n  7842: a3 = s1 + 0x100\n  7846: a1 = u64 [a3 + 0x98]\n  7850: a0 = a1 <u a0\n  7853: a1 = u64 [a3 + 0x90]\n  7857: a0 = 0 if a1 != 0\n  7859: a1 = u64 [a3 + 0x88]\n  7863: a0 = 0 if a1 != 0\n  7865: jump @287 if a0 != 0\n      : @286 (gas: 1)\n  7868: jump @534\n      : @287 (gas: 11)\n  7871: a0 = u64 [s1 + 0x198]\n  7875: i32 a0 = a0 + 0x60\n  7878: a1 = s1 + 0x1918\n  7882: u64 [s1 + 0x180] = a2\n  7886: a2 = a1\n  7888: u64 [a1 + 1632] = 0\n  7892: u64 [a1 + 1624] = 0\n  7896: u64 [a1 + 1616] = 0\n  7900: a1 = s1 + 0x1f60\n  7904: u64 [a2 + 1608] = 0\n  7908: ra = 248, jump @19\n      : @288 [@dyn 124] (gas: 4)\n  7914: a2 = s1 + 0x100\n  7918: a0 = u64 [a2 + 0x80]\n  7922: a0 = a0 + 0xffffffffffffff80\n  7925: t0 = 250, jump @1321\n      : @289 [@dyn 125] (gas: 1)\n  7931: jump @291 if a0 != 0\n      : @290 (gas: 1)\n  7934: jump @534\n      : @291 (gas: 9)\n  7937: a0 = u64 [s1 + 0x198]\n  7941: i32 a0 = a0 + 0x80\n  7945: a2 = s1 + 0x1918\n  7949: u64 [a2 + 1600] = 0\n  7953: u64 [a2 + 1592] = 0\n  7957: u64 [a2 + 1584] = 0\n  7961: a1 = s1 + 0x1f40\n  7965: u64 [a2 + 1576] = 0\n  7969: ra = 252, jump @19\n      : @292 [@dyn 126] (gas: 10)\n  7975: a4 = s1 + 0x100\n  7979: a2 = u64 [a4 + 0x88]\n  7983: a3 = 0x100000000\n  7993: a0 = 0xffffff60\n  8003: a1 = u64 [a4 + 0x98]\n  8007: a0 = a1 <u a0\n  8010: a1 = u64 [a4 + 0x90]\n  8014: a0 = 0 if a1 != 0\n  8016: a0 = 0 if a2 != 0\n  8018: jump @294 if a0 != 0\n      : @293 (gas: 1)\n  8021: jump @534\n      : @294 (gas: 10)\n  8024: a0 = u64 [s1 + 0x198]\n  8028: i32 a0 = a0 + 0xa0\n  8032: a2 = s1 + 0x1918\n  8036: u64 [a2 + 1568] = 0\n  8040: u64 [a2 + 1560] = 0\n  8044: u64 [a2 + 1552] = 0\n  8048: a1 = s1 + 0x1f20\n  8052: u64 [a2 + 1544] = 0\n  8056: u64 [s1 + 0x180] = a3\n  8060: ra = 254, jump @19\n      : @295 [@dyn 127] (gas: 4)\n  8066: a2 = s1 + 0x100\n  8070: a0 = u64 [a2 + 0x80]\n  8074: a0 = a0 + 0xffffffffffffff40\n  8078: t0 = 256, jump @1321\n      : @296 [@dyn 128] (gas: 1)\n  8084: jump @298 if a0 != 0\n      : @297 (gas: 1)\n  8087: jump @534\n      : @298 (gas: 9)\n  8090: a0 = u64 [s1 + 0x198]\n  8094: i32 a0 = a0 + 0xc0\n  8098: a2 = s1 + 0x1918\n  8102: u64 [a2 + 1536] = 0\n  8106: u64 [a2 + 1528] = 0\n  8110: u64 [a2 + 1512] = 0x60\n  8115: a1 = s1 + 0x1f00\n  8119: u64 [a2 + 1520] = 0\n  8123: ra = 258, jump @19\n      : @299 [@dyn 129] (gas: 14)\n  8129: a3 = s1 + 0x100\n  8133: a0 = u64 [a3 + 0x60]\n  8136: a2 = s1 + 0x1918\n  8140: a4 = a2 + 0x500\n  8144: u64 [a4 + 0xe0] = a0\n  8148: a0 = u64 [a3 + 0x68]\n  8151: u64 [a4 + 0xd8] = a0\n  8155: a0 = u64 [a3 + 0x70]\n  8158: u64 [a4 + 0xd0] = a0\n  8162: a1 = s1 + 0x1ee0\n  8166: a0 = u64 [a3 + 0x78]\n  8169: u64 [a4 + 0xc8] = a0\n  8173: a0 = 0\n  8175: ra = 260, jump @19\n      : @300 [@dyn 130] (gas: 9)\n  8181: a0 = s1 + 0x1918\n  8185: u64 [a0 + 1472] = 0\n  8189: u64 [a0 + 1464] = 0\n  8193: u64 [a0 + 1456] = 0\n  8197: a3 = a0\n  8199: a0 = 0x20\n  8202: a1 = s1 + 0x1ec0\n  8206: u64 [a3 + 1448] = 0x1\n  8211: ra = 262, jump @19\n      : @301 [@dyn 131] (gas: 3)\n  8217: a1 = 0x201bc\n  8222: a0 = i32 [0x201bc]\n  8227: jump @303 if a0 >u 63\n      : @302 (gas: 2)\n  8231: u32 [0x201bc] = 0x40\n  8237: fallthrough\n      : @303 (gas: 15)\n  8238: a0 = sp + 0xffffffffffffffe0\n  8241: a2 = a0 & 0xffffffffffffffe0\n  8244: u64 [s1 + 0x190] = a2\n  8248: sp = a2\n  8250: a0 = 0x201d0\n  8255: i32 a0 = a0 + 0\n  8257: i32 a2 = a2 + 0\n  8259: u64 [s1 + 0x198] = a1\n  8263: a1 = 0x40\n  8266: u64 [s1 + 0x188] = a0\n  8270: ra = 0x108\n  8274: ecalli 6 // 'hash_keccak_256'\n  8276: a3 = u64 [s1 + 0x190]\n  8280: t0 = 0x10a\n  8284: jump @1313\n      : @304 [@dyn 132] (gas: 2)\n  8287: a3 = u64 [s1 + 0x190]\n  8291: t0 = 266, jump @1313\n      : @305 [@dyn 133] (gas: 8)\n  8297: a5 = a4 + 0x700\n  8301: u64 [a5 + 0x80] = a3\n  8305: u64 [a5 + 0x78] = a2\n  8308: u64 [a5 + 0x70] = a1\n  8311: u64 [a5 + 0x68] = a0\n  8314: a0 = s1 + 0x1ea0\n  8318: a1 = s1 + 0x2880\n  8322: ra = 268, jump @21\n      : @306 [@dyn 134] (gas: 16)\n  8328: a4 = s1 + 0x1918\n  8332: a5 = a4 + 0x500\n  8336: a0 = u64 [a5 + 0x98]\n  8340: a1 = u64 [a5 + 0xa0]\n  8344: a2 = u64 [a5 + 0x90]\n  8348: a3 = u64 [a5 + 0x88]\n  8352: a1 = a1 | a2\n  8355: a0 = a0 | a3\n  8358: a0 = a0 | a1\n  8361: a0 = a0 >u 0\n  8363: u64 [a4 + 1408] = 0\n  8367: u64 [a4 + 1400] = 0\n  8371: u64 [a5 + 0x68] = a0\n  8374: a0 = s1 + 0x1e80\n  8378: u64 [a4 + 1392] = 0\n  8382: ra = 270, jump @1029\n      : @307 [@dyn 135] (gas: 13)\n  8388: a0 = u64 [s1 + 0x160]\n  8392: a2 = s1 + 0x1918\n  8396: a3 = a2 + 0x500\n  8400: u64 [a3 + 0x60] = a0\n  8403: a0 = u64 [s1 + 0x168]\n  8407: u64 [a3 + 0x58] = a0\n  8410: a0 = u64 [s1 + 0x170]\n  8414: u64 [a3 + 0x50] = a0\n  8417: a1 = s1 + 0x1e60\n  8421: a0 = u64 [s1 + 0x178]\n  8425: u64 [a3 + 0x48] = a0\n  8428: a0 = 0\n  8430: ra = 272, jump @19\n      : @308 [@dyn 136] (gas: 2)\n  8436: a1 = s1 + 0x1918\n  8440: t0 = 274, jump @1348\n      : @309 [@dyn 137] (gas: 3)\n  8446: a1 = s1 + 0x1e40\n  8450: u64 [a2 + 1328] = 0\n  8454: ra = 276, jump @19\n      : @310 [@dyn 138] (gas: 7)\n  8460: a1 = u64 [s1 + 0x198]\n  8464: a0 = sp + 0xffffffffffffffe0\n  8467: a0 = a0 & 0xffffffffffffffe0\n  8470: u64 [s1 + 0x190] = a0\n  8474: sp = a0\n  8476: a0 = i32 [a1]\n  8478: jump @312 if a0 >u 63\n      : @311 (gas: 3)\n  8482: u32 [a1 + 0] = 0x40\n  8485: t0 = 0x116\n  8489: jump @1345\n      : @312 (gas: 1)\n  8492: t0 = 278, jump @1345\n      : @313 [@dyn 139] (gas: 23)\n  8498: a0 = u64 [s1 + 0x188]\n  8502: ecalli 6 // 'hash_keccak_256'\n  8504: a3 = u64 [s1 + 0x198]\n  8508: a0 = u64 [a3 + 0x18]\n  8511: a1 = u64 [a3 + 0x10]\n  8514: a2 = u64 [a3 + 0x8]\n  8517: a3 = u64 [a3]\n  8519: a5 = reverse a0\n  8521: a4 = reverse a1\n  8523: a0 = reverse a2\n  8525: a1 = reverse a3\n  8527: u64 [s1 + 0x168] = a1\n  8531: a2 = u64 [s1 + 0x190]\n  8535: u64 [a2 + 0x18] = a1\n  8538: u64 [s1 + 0x170] = a0\n  8542: u64 [a2 + 0x10] = a0\n  8545: u64 [s1 + 0x160] = a4\n  8549: u64 [a2 + 0x8] = a4\n  8552: u64 [s1 + 0x158] = a5\n  8556: u64 [a2] = a5\n  8558: a0 = s1 + 0x1e20\n  8562: a1 = 0x40\n  8565: ra = 280, jump @17\n      : @314 [@dyn 140] (gas: 17)\n  8571: a1 = s1 + 0x1918\n  8575: a5 = a1 + 0x500\n  8579: a0 = u64 [a5 + 0x20]\n  8582: u64 [s1 + 0x180] = a0\n  8586: a2 = u64 [a5 + 0x18]\n  8589: u64 [s1 + 0x178] = a2\n  8593: a4 = u64 [a5 + 0x10]\n  8596: u64 [s1 + 0x188] = a4\n  8600: a3 = u64 [a5 + 0x8]\n  8603: u64 [s1 + 0x198] = a3\n  8607: u64 [a5] = a0\n  8609: a5 = a1 + 0x400\n  8613: u64 [a5 + 0xf8] = a2\n  8617: u64 [a5 + 0xf0] = a4\n  8621: a0 = s1 + 0x1e00\n  8625: u64 [a5 + 0xe8] = a3\n  8629: ra = 282, jump @934\n      : @315 [@dyn 141] (gas: 3)\n  8635: a0 = s1 + 0x1de0\n  8639: a1 = u64 [s1 + 0x190]\n  8643: ra = 284, jump @21\n      : @316 [@dyn 142] (gas: 13)\n  8649: a3 = s1 + 0x100\n  8653: a0 = u64 [a3 + 0x80]\n  8657: a1 = u64 [a3 + 0x88]\n  8661: a0 = a0 | a1\n  8664: a2 = u64 [a3 + 0x78]\n  8667: a1 = u64 [a3 + 0x98]\n  8671: a1 = a1 | a2\n  8674: a1 = a1 | a0\n  8677: a1 = a1 >> 0x20\n  8680: a0 = a0 | a2\n  8683: a0 = a0 << 0x20\n  8686: a0 = a0 | a1\n  8689: jump @318 if a0 == 0\n      : @317 (gas: 1)\n  8692: jump @534\n      : @318 (gas: 13)\n  8695: a4 = s1 + 0x1918\n  8699: a5 = a4 + 0x400\n  8703: a0 = u64 [a5 + 0xe0]\n  8707: a1 = u64 [a5 + 0xd8]\n  8711: a2 = u64 [a5 + 0xd0]\n  8715: a3 = u64 [a5 + 0xc8]\n  8719: u64 [a5 + 0xa8] = a3\n  8723: u64 [a5 + 0xb0] = a2\n  8727: u64 [a5 + 0xb8] = a1\n  8731: a1 = s1 + 0x1dc0\n  8735: u64 [a5 + 0xc0] = a0\n  8739: a0 = u64 [s1 + 0x198]\n  8743: ra = 286, jump @19\n      : @319 [@dyn 143] (gas: 23)\n  8749: a0 = u64 [s1 + 0x158]\n  8753: a0 = a0 + 0x1\n  8756: a1 = a0 <u 0x1\n  8759: a2 = u64 [s1 + 0x160]\n  8763: a1 = a1 + a2\n  8766: a2 = a0 | a1\n  8769: a2 = a2 <u 0x1\n  8772: a3 = u64 [s1 + 0x170]\n  8776: a2 = a2 + a3\n  8779: a3 = a2 <u a3\n  8782: a4 = u64 [s1 + 0x168]\n  8786: a3 = a3 + a4\n  8789: a4 = s1 + 0x1918\n  8793: a5 = a4 + 0x400\n  8797: u64 [a5 + 0x78] = a2\n  8800: u64 [a5 + 0x70] = a1\n  8803: u64 [a5 + 0x68] = a0\n  8806: a0 = s1 + 0x1da0\n  8810: a1 = s1 + 0x1d80\n  8814: u64 [a5 + 0x80] = a3\n  8818: ra = 0x120\n  8822: t0 = 0x412\n  8826: jump @1339\n      : @320 [@dyn 144] (gas: 13)\n  8829: a4 = s1 + 0x100\n  8833: a0 = u64 [a4 + 0x80]\n  8837: a2 = u64 [a4 + 0x78]\n  8840: a2 = a2 | a0\n  8843: a3 = 0x100000000\n  8853: a0 = 0xffffffe0\n  8863: a1 = u64 [a4 + 0x98]\n  8867: a0 = a1 <u a0\n  8870: a1 = u64 [a4 + 0x88]\n  8874: a0 = 0 if a1 != 0\n  8876: u64 [a4 + 0x90] = a2\n  8880: a0 = 0 if a2 != 0\n  8882: jump @322 if a0 != 0\n      : @321 (gas: 1)\n  8885: jump @534\n      : @322 (gas: 16)\n  8888: a4 = s1 + 0x1918\n  8892: t0 = u64 [a4 + 0x4a0]\n  8896: a5 = a4 + 0x400\n  8900: a1 = u64 [a5 + 0x98]\n  8904: a2 = u64 [a5 + 0x90]\n  8908: u64 [s1 + 0x180] = a3\n  8912: a3 = u64 [a5 + 0x88]\n  8916: a0 = u64 [s1 + 0x198]\n  8920: i32 a0 = a0 + 0x20\n  8923: u64 [a5 + 0x48] = a3\n  8926: u64 [a5 + 0x50] = a2\n  8929: u64 [a5 + 0x58] = a1\n  8932: a1 = s1 + 0x1d60\n  8936: u64 [a4 + 0x460] = t0\n  8940: u64 [s1 + 0x178] = a0\n  8944: ra = 290, jump @19\n      : @323 [@dyn 145] (gas: 3)\n  8950: a1 = u64 [s1 + 0x158]\n  8954: a0 = a1 + 0x2\n  8957: t0 = 292, jump @1303\n      : @324 [@dyn 146] (gas: 11)\n  8963: a5 = a1 + 0x400\n  8967: u64 [a5 + 0x18] = a3\n  8970: u64 [a5 + 0x10] = a2\n  8973: u64 [a5 + 0x8] = a0\n  8976: a2 = a1\n  8978: a0 = s1 + 0x1d40\n  8982: a1 = s1 + 0x1d20\n  8986: u64 [a2 + 0x420] = a4\n  8990: ra = 0x126\n  8994: t0 = 0x412\n  8998: jump @1339\n      : @325 [@dyn 147] (gas: 4)\n  9001: a2 = s1 + 0x100\n  9005: a0 = u64 [a2 + 0x80]\n  9009: a0 = a0 + 0xffffffffffffffc0\n  9012: t0 = 296, jump @1300\n      : @326 [@dyn 148] (gas: 1)\n  9018: jump @328 if a0 != 0\n      : @327 (gas: 1)\n  9021: jump @534\n      : @328 (gas: 16)\n  9024: a5 = s1 + 0x1918\n  9028: t0 = u64 [a5 + 0x440]\n  9032: a0 = a5 + 0x400\n  9036: a1 = u64 [a0 + 0x38]\n  9039: a2 = u64 [a0 + 0x30]\n  9042: a3 = u64 [a0 + 0x28]\n  9045: a0 = u64 [s1 + 0x198]\n  9049: i32 a0 = a0 + 0x40\n  9052: a4 = a5 + 0x300\n  9056: u64 [a4 + 0xe8] = a3\n  9060: u64 [a4 + 0xf0] = a2\n  9064: u64 [a4 + 0xf8] = a1\n  9068: a1 = s1 + 0x1d00\n  9072: u64 [a5 + 0x400] = t0\n  9076: u64 [s1 + 0x150] = a0\n  9080: ra = 298, jump @19\n      : @329 [@dyn 149] (gas: 3)\n  9086: a1 = u64 [s1 + 0x158]\n  9090: a0 = a1 + 0x3\n  9093: t0 = 300, jump @1301\n      : @330 [@dyn 150] (gas: 7)\n  9099: u64 [a5 + 0x90] = a2\n  9103: u64 [a5 + 0x88] = a0\n  9107: u64 [a5 + 0x98] = a3\n  9111: u64 [a5 + 0xa0] = a1\n  9115: a0 = s1 + 0x1ce0\n  9119: a1 = s1 + 0x28a0\n  9123: ra = 302, jump @21\n      : @331 [@dyn 151] (gas: 5)\n  9129: a0 = 0x100000000\n  9139: a2 = s1 + 0x100\n  9143: u64 [a2 + 0x80] = a0\n  9147: a0 = 0xffffffa0\n  9157: t0 = 304, jump @1300\n      : @332 [@dyn 152] (gas: 1)\n  9163: jump @334 if a0 != 0\n      : @333 (gas: 1)\n  9166: jump @534\n      : @334 (gas: 15)\n  9169: a5 = s1 + 0x1918\n  9173: t0 = u64 [a5 + 0x3e0]\n  9177: a4 = a5 + 0x300\n  9181: a1 = u64 [a4 + 0xd8]\n  9185: a2 = u64 [a4 + 0xd0]\n  9189: a3 = u64 [a4 + 0xc8]\n  9193: a0 = u64 [s1 + 0x198]\n  9197: i32 a0 = a0 + 0x60\n  9200: u64 [a4 + 0xa8] = a3\n  9204: u64 [a4 + 0xb0] = a2\n  9208: u64 [a4 + 0xb8] = a1\n  9212: a1 = s1 + 0x1cc0\n  9216: u64 [a5 + 0x3c0] = t0\n  9220: u64 [s1 + 0x148] = a0\n  9224: ra = 306, jump @19\n      : @335 [@dyn 153] (gas: 3)\n  9230: a1 = u64 [s1 + 0x158]\n  9234: a0 = a1 + 0x4\n  9237: t0 = 308, jump @1301\n      : @336 [@dyn 154] (gas: 7)\n  9243: u64 [a5 + 0xb0] = a2\n  9247: u64 [a5 + 0xa8] = a0\n  9251: u64 [a5 + 0xb8] = a3\n  9255: u64 [a5 + 0xc0] = a1\n  9259: a0 = s1 + 0x1ca0\n  9263: a1 = s1 + 0x28c0\n  9267: ra = 310, jump @21\n      : @337 [@dyn 155] (gas: 4)\n  9273: a2 = s1 + 0x100\n  9277: a0 = u64 [a2 + 0x80]\n  9281: a0 = a0 + 0xffffffffffffff80\n  9284: t0 = 312, jump @1300\n      : @338 [@dyn 156] (gas: 1)\n  9290: jump @340 if a0 != 0\n      : @339 (gas: 1)\n  9293: jump @534\n      : @340 (gas: 17)\n  9296: a3 = s1 + 0x1918\n  9300: a5 = a3 + 0x300\n  9304: a2 = u64 [a5 + 0x98]\n  9308: a4 = u64 [a5 + 0x90]\n  9312: a1 = u64 [a5 + 0x88]\n  9316: u64 [s1 + 0x140] = a2\n  9320: a2 = a2 << 0x20\n  9323: a2 = a2 >> 0x20\n  9326: a0 = u64 [s1 + 0x198]\n  9330: i32 a0 = a0 + 0x80\n  9334: u64 [a3 + 896] = 0\n  9338: u64 [a5 + 0x68] = a1\n  9341: u64 [a5 + 0x70] = a4\n  9344: a1 = s1 + 0x1c80\n  9348: u64 [a5 + 0x78] = a2\n  9351: u64 [s1 + 0x138] = a0\n  9355: ra = 314, jump @19\n      : @341 [@dyn 157] (gas: 5)\n  9361: a0 = 0x100000000\n  9371: a2 = s1 + 0x100\n  9375: u64 [a2 + 0x80] = a0\n  9379: a0 = 0xffffff60\n  9389: t0 = 316, jump @1300\n      : @342 [@dyn 158] (gas: 1)\n  9395: jump @344 if a0 != 0\n      : @343 (gas: 1)\n  9398: jump @534\n      : @344 (gas: 14)\n  9401: a0 = 0xff00000000\n  9411: a1 = u64 [s1 + 0x140]\n  9415: a0 = a0 & a1\n  9418: a2 = a0 >u 0\n  9420: a0 = u64 [s1 + 0x198]\n  9424: i32 a0 = a0 + 0xa0\n  9428: a3 = s1 + 0x1918\n  9432: u64 [a3 + 864] = 0\n  9436: u64 [a3 + 856] = 0\n  9440: u64 [a3 + 848] = 0\n  9444: a1 = s1 + 0x1c60\n  9448: u64 [a3 + 0x348] = a2\n  9452: u64 [s1 + 0x140] = a0\n  9456: ra = 318, jump @19\n      : @345 [@dyn 159] (gas: 3)\n  9462: a1 = u64 [s1 + 0x158]\n  9466: a0 = a1 + 0x5\n  9469: t0 = 320, jump @1303\n      : @346 [@dyn 160] (gas: 11)\n  9475: a5 = a1 + 0x300\n  9479: u64 [a5 + 0x18] = a3\n  9482: u64 [a5 + 0x10] = a2\n  9485: u64 [a5 + 0x8] = a0\n  9488: a2 = a1\n  9490: a0 = s1 + 0x1c40\n  9494: a1 = s1 + 0x1c20\n  9498: u64 [a2 + 0x320] = a4\n  9502: ra = 0x142\n  9506: t0 = 0x412\n  9510: jump @1339\n      : @347 [@dyn 161] (gas: 4)\n  9513: a2 = s1 + 0x100\n  9517: a0 = u64 [a2 + 0x80]\n  9521: a0 = a0 + 0xffffffffffffff40\n  9525: t0 = 324, jump @1300\n      : @348 [@dyn 162] (gas: 1)\n  9531: jump @350 if a0 != 0\n      : @349 (gas: 1)\n  9534: jump @534\n      : @350 (gas: 14)\n  9537: a5 = s1 + 0x1918\n  9541: a4 = u64 [a5 + 0x340]\n  9545: a1 = u64 [a5 + 0x338]\n  9549: a2 = u64 [a5 + 0x330]\n  9553: a3 = u64 [a5 + 0x328]\n  9557: a0 = u64 [s1 + 0x198]\n  9561: i32 a0 = a0 + 0xc0\n  9565: u64 [a5 + 0x2e8] = a3\n  9569: u64 [a5 + 0x2f0] = a2\n  9573: u64 [a5 + 0x2f8] = a1\n  9577: a1 = s1 + 0x1c00\n  9581: u64 [a5 + 0x300] = a4\n  9585: u64 [s1 + 0x168] = a0\n  9589: ra = 326, jump @19\n      : @351 [@dyn 163] (gas: 3)\n  9595: a0 = s1 + 0x1be0\n  9599: a1 = 0x40\n  9602: ra = 328, jump @17\n      : @352 [@dyn 164] (gas: 3)\n  9608: t0 = 0x14a\n  9612: a1 = s1 + 0x1918\n  9616: fallthrough\n      : @353 [@dyn 165] (gas: 18)\n  9617: a4 = a1 + 0x200\n  9621: a2 = u64 [a4 + 0xe0]\n  9625: a3 = u64 [a4 + 0xd8]\n  9629: a0 = u64 [a4 + 0xd0]\n  9633: a1 = u64 [a4 + 0xc8]\n  9637: a4 = s1 + 0x100\n  9641: u64 [a4 + 0x88] = a0\n  9645: u64 [a4 + 0x80] = a2\n  9649: a0 = a0 | a2\n  9652: u64 [a4 + 0x90] = a1\n  9656: a1 = a1 | a3\n  9659: a1 = a1 | a0\n  9662: a1 = a1 >> 0x20\n  9665: u64 [a4 + 0x70] = a3\n  9668: a0 = a0 | a3\n  9671: a0 = a0 << 0x20\n  9674: a0 = a0 | a1\n  9677: jump @355 if a0 == 0\n      : @354 (gas: 1)\n  9680: jump @534\n      : @355 (gas: 8)\n  9683: a2 = s1 + 0x1918\n  9687: u64 [a2 + 704] = 0\n  9691: u64 [a2 + 696] = 0\n  9695: u64 [a2 + 688] = 0\n  9699: a1 = s1 + 0x1bc0\n  9703: u64 [a2 + 680] = 0x20\n  9708: a0 = u64 [s1 + 0x190]\n  9712: ra = 332, jump @19\n      : @356 [@dyn 166] (gas: 3)\n  9718: a0 = s1 + 0x1ba0\n  9722: a1 = u64 [s1 + 0x198]\n  9726: ra = 334, jump @17\n      : @357 [@dyn 167] (gas: 14)\n  9732: a3 = s1 + 0x100\n  9736: a0 = u64 [a3 + 0x80]\n  9740: a1 = u64 [a3 + 0x70]\n  9743: a2 = a1 | a0\n  9746: a0 = 0x100000000\n  9756: u64 [a3 + 0x60] = a0\n  9759: a0 = 0xffffffe0\n  9769: a1 = u64 [a3 + 0x90]\n  9773: a0 = a1 <u a0\n  9776: a1 = u64 [a3 + 0x88]\n  9780: a0 = 0 if a1 != 0\n  9782: u64 [a3 + 0x98] = a2\n  9786: a0 = 0 if a2 != 0\n  9788: jump @359 if a0 != 0\n      : @358 (gas: 1)\n  9791: jump @534\n      : @359 (gas: 14)\n  9794: a5 = s1 + 0x1918\n  9798: t0 = u64 [a5 + 0x2a0]\n  9802: a2 = a5 + 0x200\n  9806: a1 = u64 [a2 + 0x98]\n  9810: a3 = u64 [a2 + 0x90]\n  9814: a4 = u64 [a2 + 0x88]\n  9818: a0 = u64 [s1 + 0x190]\n  9822: i32 a0 = a0 + 0x20\n  9825: u64 [a2 + 0x68] = a4\n  9828: u64 [a2 + 0x70] = a3\n  9831: u64 [a2 + 0x78] = a1\n  9834: a1 = s1 + 0x1b80\n  9838: u64 [a5 + 0x280] = t0\n  9842: ra = 336, jump @19\n      : @360 [@dyn 168] (gas: 3)\n  9848: a0 = s1 + 0x1b60\n  9852: a1 = u64 [s1 + 0x178]\n  9856: ra = 338, jump @17\n      : @361 [@dyn 169] (gas: 4)\n  9862: a2 = s1 + 0x100\n  9866: a0 = u64 [a2 + 0x60]\n  9869: a0 = a0 + 0xffffffffffffffc0\n  9872: t0 = 340, jump @1289\n      : @362 [@dyn 170] (gas: 1)\n  9878: jump @364 if a0 != 0\n      : @363 (gas: 1)\n  9881: jump @534\n      : @364 (gas: 18)\n  9884: a2 = s1 + 0x1918\n  9888: a3 = a2 + 0x200\n  9892: a0 = u64 [a3 + 0x60]\n  9895: u64 [s1 + 0x130] = a0\n  9899: a0 = u64 [a3 + 0x58]\n  9902: u64 [s1 + 0x158] = a0\n  9906: a0 = u64 [a3 + 0x50]\n  9909: u64 [s1 + 0x160] = a0\n  9913: a0 = u64 [a3 + 0x48]\n  9916: u64 [s1 + 0x178] = a0\n  9920: a0 = u64 [s1 + 0x190]\n  9924: i32 a0 = a0 + 0x40\n  9927: u64 [a2 + 576] = 0\n  9931: u64 [a2 + 568] = 0\n  9935: u64 [a3 + 40] = 0xe0\n  9940: a1 = s1 + 0x1b40\n  9944: u64 [a2 + 560] = 0\n  9948: ra = 342, jump @19\n      : @365 [@dyn 171] (gas: 31)\n  9954: a1 = u64 [s1 + 0x190]\n  9958: a0 = a1 + 0x100\n  9962: a1 = a0 <u a1\n  9965: a3 = u64 [s1 + 0x188]\n  9969: a2 = a3 + a1\n  9972: a3 = a2 <u a3\n  9975: a3 = a1 if a1 == 0\n  9978: a1 = u64 [s1 + 0x170]\n  9982: a3 = a3 + a1\n  9985: a1 = a3 <u a1\n  9988: a4 = u64 [s1 + 0x180]\n  9992: a4 = a4 + a1\n  9995: a1 = s1 + 0x1918\n  9999: a5 = a1 + 0x100\n 10003: u64 [a5 + 0xd0] = a2\n 10007: u64 [a5 + 0xc8] = a0\n 10011: a0 = u64 [s1 + 0x130]\n 10015: u64 [a1 + 0x200] = a0\n 10019: a0 = u64 [s1 + 0x158]\n 10023: u64 [a5 + 0xf8] = a0\n 10027: a0 = u64 [s1 + 0x160]\n 10031: u64 [a5 + 0xf0] = a0\n 10035: a0 = u64 [s1 + 0x178]\n 10039: u64 [a5 + 0xe8] = a0\n 10043: u64 [a5 + 0xd8] = a3\n 10047: a3 = a1\n 10049: a0 = s1 + 0x1b20\n 10053: a1 = s1 + 0x1b00\n 10057: a2 = s1 + 0x1ae0\n 10061: u64 [a3 + 0x1e0] = a4\n 10065: ra = 344, jump @1009\n      : @366 [@dyn 172] (gas: 3)\n 10071: t0 = 0x15a\n 10075: a1 = s1 + 0x1918\n 10079: fallthrough\n      : @367 [@dyn 173] (gas: 12)\n 10080: a2 = a1 + 0x200\n 10084: a0 = u64 [a2 + 0x20]\n 10087: u64 [s1 + 0x130] = a0\n 10091: a0 = u64 [a2 + 0x18]\n 10094: u64 [s1 + 0x158] = a0\n 10098: a0 = u64 [a2 + 0x10]\n 10101: u64 [s1 + 0x160] = a0\n 10105: a0 = u64 [a2 + 0x8]\n 10108: u64 [s1 + 0x178] = a0\n 10112: a0 = s1 + 0x1ac0\n 10116: a1 = u64 [s1 + 0x150]\n 10120: ra = 348, jump @17\n      : @368 [@dyn 174] (gas: 5)\n 10126: a0 = 0x100000000\n 10136: a2 = s1 + 0x100\n 10140: u64 [a2 + 0x50] = a0\n 10143: a0 = 0xffffffa0\n 10153: t0 = 350, jump @1289\n      : @369 [@dyn 175] (gas: 1)\n 10159: jump @371 if a0 != 0\n      : @370 (gas: 1)\n 10162: jump @534\n      : @371 (gas: 54)\n 10165: a1 = s1 + 0x1918\n 10169: a0 = u64 [a1 + 0x1c0]\n 10173: u64 [s1 + 0x120] = a0\n 10177: a0 = u64 [a1 + 0x1b8]\n 10181: u64 [s1 + 0x128] = a0\n 10185: a0 = u64 [s1 + 0x190]\n 10189: a1 = u64 [s1 + 0x178]\n 10193: a2 = a1 <u a0\n 10196: t2 = a0\n 10198: a3 = u64 [s1 + 0x188]\n 10202: a4 = u64 [s1 + 0x160]\n 10206: t0 = a4 ^ a3\n 10209: a0 = a4 <u a3\n 10212: a0 = a2 if t0 == 0\n 10215: t1 = u64 [s1 + 0x170]\n 10219: t0 = u64 [s1 + 0x158]\n 10223: ra = t0 - t1\n 10226: a3 = a4 - a3\n 10229: a4 = a3 - a2\n 10232: a3 = a1 - t2\n 10235: a2 = a3 + 0xffffffffffffffe0\n 10238: a5 = a2 <u a3\n 10241: a3 = a4 + a5\n 10244: a3 = a3 + 0xffffffffffffffff\n 10247: a1 = a3 ^ a4\n 10250: a4 = a3 <u a4\n 10253: a4 = a5 if a1 == 0\n 10256: t0 = t0 <u t1\n 10259: a5 = u64 [s1 + 0x180]\n 10263: a1 = u64 [s1 + 0x130]\n 10267: a5 = a1 - a5\n 10270: a5 = a5 - t0\n 10273: a1 = ra <u a0\n 10276: a5 = a5 - a1\n 10279: t0 = s1 + 0x1918\n 10283: a1 = u64 [t0 + 0x1b0]\n 10287: u64 [s1 + 0x110] = a1\n 10291: a0 = ra - a0\n 10294: a1 = a0 <u 0x1\n 10297: a5 = a5 - a1\n 10300: a1 = u64 [t0 + 0x1a8]\n 10304: u64 [s1 + 0x118] = a1\n 10308: a0 = a0 + 0xffffffffffffffff\n 10311: a4 = a4 + a0\n 10314: a0 = a4 <u a0\n 10317: a5 = a5 + a0\n 10320: i32 a0 = t2 + 0x60\n 10323: u64 [t0 + 0x188] = a2\n 10327: a2 = t0 + 0x100\n 10331: u64 [a2 + 0x90] = a3\n 10335: u64 [a2 + 0x98] = a4\n 10339: a1 = s1 + 0x1aa0\n 10343: u64 [a2 + 0xa0] = a5\n 10347: ra = 352, jump @19\n      : @372 [@dyn 176] (gas: 23)\n 10353: a0 = s1 + 0x1918\n 10357: a1 = u64 [s1 + 0x130]\n 10361: a2 = a0 + 0x100\n 10365: u64 [a2 + 0x40] = a1\n 10368: a1 = u64 [s1 + 0x158]\n 10372: u64 [a2 + 0x38] = a1\n 10375: a1 = u64 [s1 + 0x160]\n 10379: u64 [a2 + 0x30] = a1\n 10382: a1 = u64 [s1 + 0x178]\n 10386: u64 [a2 + 0x28] = a1\n 10389: a1 = u64 [s1 + 0x120]\n 10393: u64 [a2 + 0x60] = a1\n 10396: a1 = u64 [s1 + 0x128]\n 10400: u64 [a2 + 0x58] = a1\n 10403: a1 = u64 [s1 + 0x110]\n 10407: u64 [a2 + 0x50] = a1\n 10410: a4 = a0\n 10412: a0 = s1 + 0x1a80\n 10416: a1 = s1 + 0x1a60\n 10420: a2 = s1 + 0x1a40\n 10424: a3 = u64 [s1 + 0x118]\n 10428: u64 [a4 + 0x148] = a3\n 10432: ra = 354, jump @1009\n      : @373 [@dyn 177] (gas: 3)\n 10438: t0 = 0x164\n 10442: a1 = s1 + 0x1918\n 10446: fallthrough\n      : @374 [@dyn 178] (gas: 12)\n 10447: a2 = a1 + 0x100\n 10451: a0 = u64 [a2 + 0x80]\n 10455: u64 [s1 + 0x130] = a0\n 10459: a0 = u64 [a2 + 0x78]\n 10462: u64 [s1 + 0x158] = a0\n 10466: a0 = u64 [a2 + 0x70]\n 10469: u64 [s1 + 0x160] = a0\n 10473: a0 = u64 [a2 + 0x68]\n 10476: u64 [s1 + 0x178] = a0\n 10480: a0 = s1 + 0x1a20\n 10484: a1 = u64 [s1 + 0x148]\n 10488: ra = 358, jump @17\n      : @375 [@dyn 179] (gas: 4)\n 10494: a2 = s1 + 0x100\n 10498: a0 = u64 [a2 + 0x50]\n 10501: a0 = a0 + 0xffffffffffffff80\n 10504: t0 = 360, jump @1289\n      : @376 [@dyn 180] (gas: 1)\n 10510: jump @378 if a0 != 0\n      : @377 (gas: 1)\n 10513: jump @534\n      : @378 (gas: 14)\n 10516: a5 = s1 + 0x1918\n 10520: t0 = u64 [a5 + 0x120]\n 10524: a0 = a5 + 0x100\n 10528: a1 = u64 [a0 + 0x18]\n 10531: a3 = u64 [a0 + 0x10]\n 10534: a4 = u64 [a0 + 0x8]\n 10537: a0 = u64 [s1 + 0x190]\n 10541: i32 a0 = a0 + 0x80\n 10545: u64 [a5 + 0xe8] = a4\n 10549: u64 [a5 + 0xf0] = a3\n 10553: u64 [a5 + 0xf8] = a1\n 10557: a1 = s1 + 0x1a00\n 10561: u64 [a5 + 0x100] = t0\n 10565: ra = 362, jump @19\n      : @379 [@dyn 181] (gas: 3)\n 10571: a0 = s1 + 0x19e0\n 10575: a1 = u64 [s1 + 0x138]\n 10579: ra = 364, jump @17\n      : @380 [@dyn 182] (gas: 5)\n 10585: a0 = 0x100000000\n 10595: a2 = s1 + 0x100\n 10599: u64 [a2 + 0x50] = a0\n 10602: a0 = 0xffffff60\n 10612: t0 = 366, jump @1289\n      : @381 [@dyn 183] (gas: 1)\n 10618: jump @383 if a0 != 0\n      : @382 (gas: 1)\n 10621: jump @534\n      : @383 (gas: 16)\n 10624: a5 = s1 + 0x1918\n 10628: a1 = u64 [a5 + 0xd8]\n 10632: a2 = u64 [a5 + 0xd0]\n 10636: a3 = u64 [a5 + 0xc8]\n 10640: a4 = 0xffffffff\n 10650: a4 = a4 & a1\n 10653: a2 = a2 & 0xffffffffffffffff\n 10656: a3 = a3 & 0xffffffffffffffff\n 10659: a0 = u64 [s1 + 0x190]\n 10663: i32 a0 = a0 + 0xa0\n 10667: u64 [a5 + 192] = 0\n 10671: u64 [a5 + 0xa8] = a3\n 10675: u64 [a5 + 0xb0] = a2\n 10679: a1 = s1 + 0x19c0\n 10683: u64 [a5 + 0xb8] = a4\n 10687: ra = 368, jump @19\n      : @384 [@dyn 184] (gas: 3)\n 10693: a0 = s1 + 0x19a0\n 10697: a1 = u64 [s1 + 0x140]\n 10701: ra = 370, jump @17\n      : @385 [@dyn 185] (gas: 4)\n 10707: a2 = s1 + 0x100\n 10711: a0 = u64 [a2 + 0x50]\n 10714: a0 = a0 + 0xffffffffffffff40\n 10718: t0 = 372, jump @1289\n      : @386 [@dyn 186] (gas: 1)\n 10724: jump @388 if a0 != 0\n      : @387 (gas: 1)\n 10727: jump @534\n      : @388 (gas: 17)\n 10730: a4 = s1 + 0x1918\n 10734: a0 = u64 [a4 + 0xa0]\n 10738: a1 = u64 [a4 + 0x98]\n 10742: a2 = u64 [a4 + 0x88]\n 10746: a3 = u64 [a4 + 0x90]\n 10750: a1 = a1 | a2\n 10753: a0 = a0 | a3\n 10756: a0 = a0 | a1\n 10759: a1 = a0 >u 0\n 10761: a0 = u64 [s1 + 0x190]\n 10765: i32 a0 = a0 + 0xc0\n 10769: u64 [a4 + 128] = 0\n 10773: u64 [a4 + 120] = 0\n 10776: u64 [a4 + 0x68] = a1\n 10779: a1 = s1 + 0x1980\n 10783: u64 [a4 + 112] = 0\n 10786: ra = 374, jump @19\n      : @389 [@dyn 187] (gas: 3)\n 10792: a0 = s1 + 0x1960\n 10796: a1 = u64 [s1 + 0x168]\n 10800: ra = 376, jump @17\n      : @390 [@dyn 188] (gas: 3)\n 10806: a0 = 0xffffff20\n 10816: a2 = s1 + 0x100\n 10820: t0 = 378, jump @1289\n      : @391 [@dyn 189] (gas: 1)\n 10826: jump @393 if a0 != 0\n      : @392 (gas: 1)\n 10829: jump @534\n      : @393 (gas: 55)\n 10832: a1 = s1 + 0x1918\n 10836: a0 = u64 [a1 + 0x60]\n 10839: u64 [s1 + 0x168] = a0\n 10843: a0 = u64 [a1 + 0x58]\n 10846: u64 [s1 + 0x198] = a0\n 10850: a0 = u64 [s1 + 0x190]\n 10854: a1 = u64 [s1 + 0x178]\n 10858: a2 = a1 <u a0\n 10861: a5 = a1\n 10863: t2 = a0\n 10865: a3 = u64 [s1 + 0x188]\n 10869: a4 = u64 [s1 + 0x160]\n 10873: a1 = a4 ^ a3\n 10876: a0 = a4 <u a3\n 10879: a0 = a2 if a1 == 0\n 10882: t1 = u64 [s1 + 0x170]\n 10886: t0 = u64 [s1 + 0x158]\n 10890: ra = t0 - t1\n 10893: a3 = a4 - a3\n 10896: a4 = a3 - a2\n 10899: a3 = a5 - t2\n 10902: a2 = a3 + 0xffffffffffffffe0\n 10905: a5 = a2 <u a3\n 10908: a3 = a4 + a5\n 10911: a3 = a3 + 0xffffffffffffffff\n 10914: a1 = a3 ^ a4\n 10917: a4 = a3 <u a4\n 10920: a4 = a5 if a1 == 0\n 10923: t0 = t0 <u t1\n 10926: a5 = u64 [s1 + 0x180]\n 10930: a1 = u64 [s1 + 0x130]\n 10934: a5 = a1 - a5\n 10937: a5 = a5 - t0\n 10940: a1 = ra <u a0\n 10943: a5 = a5 - a1\n 10946: t0 = s1 + 0x1918\n 10950: a1 = u64 [t0 + 0x50]\n 10953: u64 [s1 + 0x148] = a1\n 10957: a0 = ra - a0\n 10960: a1 = a0 <u 0x1\n 10963: a5 = a5 - a1\n 10966: a1 = u64 [t0 + 0x48]\n 10969: u64 [s1 + 0x150] = a1\n 10973: a0 = a0 + 0xffffffffffffffff\n 10976: a4 = a4 + a0\n 10979: a0 = a4 <u a0\n 10982: a5 = a5 + a0\n 10985: i32 a0 = t2 + 0xe0\n 10989: u64 [t0 + 0x28] = a2\n 10992: a2 = t0\n 10994: u64 [a2 + 0x30] = a3\n 10997: u64 [a2 + 0x38] = a4\n 11000: a1 = s1 + 0x1940\n 11004: u64 [a2 + 0x40] = a5\n 11007: ra = 380, jump @19\n      : @394 [@dyn 190] (gas: 24)\n 11013: a0 = s1 + 0x1118\n 11017: a1 = u64 [s1 + 0x130]\n 11021: a2 = a0 + 0x700\n 11025: u64 [a2 + 0xe0] = a1\n 11029: a1 = u64 [s1 + 0x158]\n 11033: u64 [a2 + 0xd8] = a1\n 11037: a1 = u64 [s1 + 0x160]\n 11041: u64 [a2 + 0xd0] = a1\n 11045: a1 = u64 [s1 + 0x178]\n 11049: u64 [a2 + 0xc8] = a1\n 11053: a0 = s1 + 0x1918\n 11057: a1 = u64 [s1 + 0x168]\n 11061: u64 [a0] = a1\n 11063: a1 = u64 [s1 + 0x198]\n 11067: u64 [a0 + 0xfffffffffffffff8] = a1\n 11070: a1 = u64 [s1 + 0x148]\n 11074: u64 [a0 + 0xfffffffffffffff0] = a1\n 11077: a4 = a0\n 11079: a0 = s1 + 0x1920\n 11083: a1 = s1 + 0x1900\n 11087: a2 = s1 + 0x18e0\n 11091: a3 = u64 [s1 + 0x150]\n 11095: u64 [a4 + 0xffffffffffffffe8] = a3\n 11098: ra = 382, jump @1009\n      : @395 [@dyn 191] (gas: 2)\n 11104: a1 = s1 + 0x1918\n 11108: fallthrough\n      : @396 (gas: 32)\n 11109: a0 = u64 [a1 + 0x10]\n 11112: t0 = u64 [a1 + 0x20]\n 11115: t1 = u64 [a1 + 0x8]\n 11118: a3 = u64 [a1 + 0x18]\n 11121: a1 = u64 [s1 + 0x188]\n 11125: a4 = a0 ^ a1\n 11128: a5 = a0 <u a1\n 11131: ra = a1\n 11133: t2 = u64 [s1 + 0x190]\n 11137: a1 = t1 <u t2\n 11140: a5 = a1 if a4 == 0\n 11143: a2 = u64 [s1 + 0x170]\n 11147: a4 = a3 - a2\n 11150: a3 = a3 <u a2\n 11153: a2 = u64 [s1 + 0x180]\n 11157: a2 = t0 - a2\n 11160: a2 = a2 - a3\n 11163: a3 = a4 <u a5\n 11166: a2 = a2 - a3\n 11169: a4 = a4 - a5\n 11172: a0 = a0 - ra\n 11175: a0 = a0 - a1\n 11178: a1 = t1 - t2\n 11181: a0 = a0 | a2\n 11184: a2 = a1\n 11186: a1 = a1 | a4\n 11189: a1 = a1 | a0\n 11192: a0 = a0 | a4\n 11195: a1 = a1 >> 0x20\n 11198: a0 = a0 << 0x20\n 11201: a0 = a0 | a1\n 11204: jump @398 if a0 == 0\n      : @397 (gas: 1)\n 11207: jump @534\n      : @398 (gas: 5)\n 11210: a0 = u64 [s1 + 0x190]\n 11214: a1 = a2\n 11216: u64 [s1 + 0x198] = a2\n 11220: ra = 0x1c8\n 11224: jump @30\n      : @399 (gas: 1)\n 11227: jump @401 if a0 == 2060192544\n      : @400 (gas: 1)\n 11234: jump @765\n      : @401 (gas: 10)\n 11237: u64 [a2 + 1536] = 0\n 11241: u64 [a2 + 1528] = 0\n 11245: u64 [a2 + 1520] = 0\n 11249: u64 [a2 + 1512] = 0\n 11253: a0 = s1 + 0x2000\n 11257: i32 a0 = a0 + 0x700\n 11261: ra = 0x180\n 11265: ecalli 11 // 'value_transferred'\n 11267: t0 = 0x182\n 11271: jump @1351\n      : @402 [@dyn 192] (gas: 1)\n 11274: t0 = 386, jump @1351\n      : @403 [@dyn 193] (gas: 8)\n 11280: a0 = u64 [a4 + 0xf8]\n 11284: a1 = u64 [a3 + 0x600]\n 11288: a2 = u64 [a4 + 0xf0]\n 11292: a3 = u64 [a4 + 0xe8]\n 11296: a1 = a1 | a2\n 11299: a0 = a0 | a3\n 11302: a0 = a0 | a1\n 11305: jump @405 if a0 == 0\n      : @404 (gas: 1)\n 11308: jump @770\n      : @405 (gas: 1)\n 11311: t0 = 388, jump @1349\n      : @406 [@dyn 194] (gas: 1)\n 11317: jump @408 if a1 <u a0\n      : @407 (gas: 1)\n 11320: jump @771\n      : @408 (gas: 7)\n 11323: a0 = s1 + 0x2000\n 11327: i32 a0 = a0 + 0x720\n 11331: a1 = 0x4\n 11334: ra = 0x186\n 11338: ecalli 1 // 'call_data_load'\n 11340: t0 = 0x188\n 11344: jump @1314\n      : @409 [@dyn 195] (gas: 1)\n 11347: t0 = 392, jump @1314\n      : @410 [@dyn 196] (gas: 13)\n 11353: a0 = u64 [a4 + 0x8]\n 11356: a1 = u64 [a4 + 0x10]\n 11359: a2 = u64 [a4 + 0x18]\n 11362: a3 = u64 [a4 + 0x20]\n 11365: a4 = s1 + 0x1118\n 11369: a5 = a4 + 0x500\n 11373: u64 [a5 + 0x60] = a3\n 11376: u64 [a5 + 0x58] = a2\n 11379: u64 [a5 + 0x50] = a1\n 11382: a1 = s1 + 0x1660\n 11386: u64 [a5 + 0x48] = a0\n 11389: a0 = 0\n 11391: ra = 394, jump @19\n      : @411 [@dyn 197] (gas: 2)\n 11397: a1 = s1 + 0x1118\n 11401: t0 = 396, jump @1348\n      : @412 [@dyn 198] (gas: 3)\n 11407: a1 = s1 + 0x1640\n 11411: u64 [a2 + 1328] = 0\n 11415: ra = 398, jump @19\n      : @413 [@dyn 199] (gas: 6)\n 11421: a0 = sp + 0xffffffffffffffe0\n 11424: a0 = a0 & 0xffffffffffffffe0\n 11427: u64 [s1 + 0x178] = a0\n 11431: sp = a0\n 11433: a1 = i32 [0x201bc]\n 11438: jump @415 if a1 >u 63\n      : @414 (gas: 2)\n 11442: u32 [0x201bc] = 0x40\n 11448: fallthrough\n      : @415 (gas: 29)\n 11449: a0 = sp + 0xffffffffffffffe0\n 11452: a2 = a0 & 0xffffffffffffffe0\n 11455: u64 [s1 + 0x198] = a2\n 11459: sp = a2\n 11461: a0 = 0x201d0\n 11466: i32 a0 = a0 + 0\n 11468: i32 a2 = a2 + 0\n 11470: a1 = 0x40\n 11473: ecalli 6 // 'hash_keccak_256'\n 11475: a3 = u64 [s1 + 0x198]\n 11479: a0 = u64 [a3 + 0x18]\n 11482: a1 = u64 [a3 + 0x10]\n 11485: a2 = u64 [a3 + 0x8]\n 11488: a3 = u64 [a3]\n 11490: a5 = reverse a0\n 11492: u64 [s1 + 0x188] = a5\n 11496: a4 = reverse a1\n 11498: u64 [s1 + 0x190] = a4\n 11502: a2 = reverse a2\n 11504: u64 [s1 + 0x180] = a2\n 11508: a0 = reverse a3\n 11510: u64 [s1 + 0x198] = a0\n 11514: a1 = u64 [s1 + 0x178]\n 11518: u64 [a1 + 0x18] = a0\n 11521: u64 [a1 + 0x10] = a2\n 11524: u64 [a1 + 0x8] = a4\n 11527: u64 [a1] = a5\n 11529: a0 = s1 + 0x1620\n 11533: ra = 400, jump @21\n      : @416 [@dyn 200] (gas: 32)\n 11539: a4 = s1 + 0x1118\n 11543: a1 = a4 + 0x500\n 11547: a0 = u64 [a1 + 0x20]\n 11550: u64 [s1 + 0x178] = a0\n 11554: a0 = u64 [a1 + 0x18]\n 11557: u64 [s1 + 0x170] = a0\n 11561: a0 = u64 [a1 + 0x10]\n 11564: u64 [s1 + 0x168] = a0\n 11568: a0 = u64 [a1 + 0x8]\n 11571: u64 [s1 + 0x160] = a0\n 11575: a0 = u64 [s1 + 0x188]\n 11579: a0 = a0 + 0x1\n 11582: a1 = a0 <u 0x1\n 11585: a2 = u64 [s1 + 0x190]\n 11589: a1 = a1 + a2\n 11592: a2 = a0 | a1\n 11595: a2 = a2 <u 0x1\n 11598: a3 = u64 [s1 + 0x180]\n 11602: a2 = a2 + a3\n 11605: a3 = a2 <u a3\n 11608: a5 = u64 [s1 + 0x198]\n 11612: a3 = a3 + a5\n 11615: a5 = a4 + 0x400\n 11619: u64 [a5 + 0xd0] = a1\n 11623: u64 [a5 + 0xc8] = a0\n 11627: u64 [a5 + 0xd8] = a2\n 11631: a0 = s1 + 0x1600\n 11635: a1 = s1 + 0x15e0\n 11639: u64 [a5 + 0xe0] = a3\n 11643: ra = 0x192\n 11647: t0 = 0x412\n 11651: jump @1339\n      : @417 [@dyn 201] (gas: 12)\n 11654: a5 = s1 + 0x1118\n 11658: a0 = u64 [a5 + 0x500]\n 11662: u64 [s1 + 0x140] = a0\n 11666: a0 = u64 [a5 + 0x4f8]\n 11670: u64 [s1 + 0x148] = a0\n 11674: a0 = u64 [a5 + 0x4f0]\n 11678: u64 [s1 + 0x150] = a0\n 11682: a0 = u64 [a5 + 0x4e8]\n 11686: u64 [s1 + 0x158] = a0\n 11690: a0 = u64 [s1 + 0x188]\n 11694: a2 = a0 + 0x2\n 11697: t0 = 404, jump @1306\n      : @418 [@dyn 202] (gas: 9)\n 11703: u64 [a4 + 0xa0] = a0\n 11707: u64 [a4 + 0x98] = a3\n 11711: u64 [a4 + 0x90] = a1\n 11715: a0 = s1 + 0x15c0\n 11719: a1 = s1 + 0x15a0\n 11723: u64 [a4 + 0x88] = a2\n 11727: ra = 0x196\n 11731: t0 = 0x412\n 11735: jump @1339\n      : @419 [@dyn 203] (gas: 1)\n 11738: t0 = 408, jump @1347\n      : @420 [@dyn 204] (gas: 11)\n 11744: a0 = u64 [a2 + 0xc0]\n 11748: u64 [s1 + 0x120] = a0\n 11752: a0 = u64 [a2 + 0xb8]\n 11756: u64 [s1 + 0x128] = a0\n 11760: a0 = u64 [a2 + 0xb0]\n 11764: u64 [s1 + 0x130] = a0\n 11768: a0 = u64 [a2 + 0xa8]\n 11772: u64 [s1 + 0x138] = a0\n 11776: a1 = u64 [s1 + 0x188]\n 11780: a0 = a1 + 0x3\n 11783: t0 = 410, jump @1302\n      : @421 [@dyn 205] (gas: 7)\n 11789: u64 [a5 + 0x40] = a1\n 11792: u64 [a5 + 0x38] = a3\n 11795: u64 [a5 + 0x30] = a2\n 11798: u64 [a5 + 0x28] = a0\n 11801: a0 = s1 + 0x1580\n 11805: a1 = s1 + 0x2740\n 11809: ra = 412, jump @21\n      : @422 [@dyn 206] (gas: 1)\n 11815: t0 = 414, jump @1347\n      : @423 [@dyn 207] (gas: 11)\n 11821: a0 = u64 [a2 + 0x80]\n 11825: u64 [s1 + 0x118] = a0\n 11829: a0 = u64 [a2 + 0x78]\n 11832: u64 [s1 + 0x110] = a0\n 11836: a0 = u64 [a2 + 0x70]\n 11839: u64 [s1 + 0x108] = a0\n 11843: a0 = u64 [a2 + 0x68]\n 11846: u64 [s1 + 0x100] = a0\n 11850: a1 = u64 [s1 + 0x188]\n 11854: a0 = a1 + 0x4\n 11857: t0 = 416, jump @1302\n      : @424 [@dyn 208] (gas: 7)\n 11863: u64 [a5 + 0x60] = a1\n 11866: u64 [a5 + 0x58] = a3\n 11869: u64 [a5 + 0x50] = a2\n 11872: u64 [a5 + 0x48] = a0\n 11875: a0 = s1 + 0x1560\n 11879: a1 = s1 + 0x2760\n 11883: ra = 418, jump @21\n      : @425 [@dyn 209] (gas: 10)\n 11889: a5 = s1 + 0x1118\n 11893: a0 = u64 [a5 + 0x458]\n 11897: u64 [s1 + 0xf8] = a0\n 11901: a0 = u64 [a5 + 0x450]\n 11905: u64 [s1 + 0xf0] = a0\n 11909: a0 = u64 [a5 + 0x448]\n 11913: u64 [s1 + 0xe8] = a0\n 11917: a0 = u64 [s1 + 0x188]\n 11921: a2 = a0 + 0x5\n 11924: t0 = 420, jump @1306\n      : @426 [@dyn 210] (gas: 9)\n 11930: u64 [a4 + 0x20] = a0\n 11933: u64 [a4 + 0x18] = a3\n 11936: u64 [a4 + 0x10] = a1\n 11939: a0 = s1 + 0x1540\n 11943: a1 = s1 + 0x1520\n 11947: u64 [a4 + 0x8] = a2\n 11950: ra = 0x1a6\n 11954: t0 = 0x412\n 11958: jump @1339\n      : @427 [@dyn 211] (gas: 1)\n 11961: t0 = 424, jump @1347\n      : @428 [@dyn 212] (gas: 11)\n 11967: a0 = u64 [a2 + 0x40]\n 11970: u64 [s1 + 0xc8] = a0\n 11974: a0 = u64 [a2 + 0x38]\n 11977: u64 [s1 + 0xd0] = a0\n 11981: a0 = u64 [a2 + 0x30]\n 11984: u64 [s1 + 0xd8] = a0\n 11988: a0 = u64 [a2 + 0x28]\n 11991: u64 [s1 + 0xe0] = a0\n 11995: a0 = s1 + 0x1500\n 11999: a1 = 0x40\n 12002: ra = 426, jump @17\n      : @429 [@dyn 213] (gas: 15)\n 12008: a2 = s1 + 0x1118\n 12012: a4 = u64 [a2 + 0x400]\n 12016: a3 = a2 + 0x300\n 12020: a5 = u64 [a3 + 0xf8]\n 12024: a1 = u64 [a3 + 0xf0]\n 12028: a0 = u64 [a3 + 0xe8]\n 12032: u64 [s1 + 0x198] = a1\n 12036: a3 = a1 | a4\n 12039: a1 = a0 | a5\n 12042: a1 = a1 | a3\n 12045: a1 = a1 >> 0x20\n 12048: a3 = a3 | a5\n 12051: a3 = a3 << 0x20\n 12054: a1 = a1 | a3\n 12057: jump @534 if a1 != 0\n      : @430 (gas: 13)\n 12061: a1 = u64 [s1 + 0x160]\n 12065: u64 [a2 + 0x3c8] = a1\n 12069: a1 = u64 [s1 + 0x168]\n 12073: u64 [a2 + 0x3d0] = a1\n 12077: a1 = u64 [s1 + 0x170]\n 12081: u64 [a2 + 0x3d8] = a1\n 12085: a1 = s1 + 0x14e0\n 12089: a3 = u64 [s1 + 0x178]\n 12093: u64 [a2 + 0x3e0] = a3\n 12097: u64 [s1 + 0x190] = a0\n 12101: u64 [s1 + 0x188] = a4\n 12105: u64 [s1 + 0x180] = a5\n 12109: ra = 428, jump @19\n      : @431 [@dyn 214] (gas: 11)\n 12115: t0 = u64 [s1 + 0x180]\n 12119: a3 = u64 [s1 + 0x188]\n 12123: a1 = u64 [s1 + 0x190]\n 12127: a5 = t0 | a3\n 12130: a4 = 0x100000000\n 12140: a0 = 0xffffffe0\n 12150: a0 = a1 <u a0\n 12153: a2 = u64 [s1 + 0x198]\n 12157: a0 = 0 if a2 != 0\n 12159: a0 = 0 if a5 != 0\n 12161: jump @534 if a0 == 0\n      : @432 (gas: 10)\n 12165: i32 a0 = a1 + 0x20\n 12168: a2 = s1 + 0x1118\n 12172: u64 [a2 + 960] = 0\n 12176: u64 [a2 + 952] = 0\n 12180: u64 [a2 + 936] = 0xe0\n 12186: a1 = s1 + 0x14c0\n 12190: u64 [a2 + 944] = 0\n 12194: u64 [s1 + 0x178] = a5\n 12198: u64 [s1 + 0x170] = a4\n 12202: ra = 430, jump @19\n      : @433 [@dyn 215] (gas: 6)\n 12208: a0 = u64 [s1 + 0x190]\n 12212: a0 = a0 + 0xe0\n 12216: a1 = u64 [s1 + 0x190]\n 12220: a1 = a0 <u a1\n 12223: a3 = u64 [s1 + 0x198]\n 12227: t0 = 432, jump @1318\n      : @434 [@dyn 216] (gas: 19)\n 12233: a1 = s1 + 0x1118\n 12237: a5 = a1 + 0x300\n 12241: u64 [a5 + 0x50] = a2\n 12244: u64 [a5 + 0x48] = a0\n 12247: a0 = u64 [s1 + 0x140]\n 12251: u64 [a5 + 0x80] = a0\n 12255: a0 = u64 [s1 + 0x148]\n 12259: u64 [a5 + 0x78] = a0\n 12262: a0 = u64 [s1 + 0x150]\n 12266: u64 [a5 + 0x70] = a0\n 12269: a0 = u64 [s1 + 0x158]\n 12273: u64 [a5 + 0x68] = a0\n 12276: u64 [a5 + 0x58] = a3\n 12279: a3 = a1\n 12281: a0 = s1 + 0x14a0\n 12285: a1 = s1 + 0x1480\n 12289: a2 = s1 + 0x1460\n 12293: u64 [a3 + 0x360] = a4\n 12297: ra = 434, jump @1009\n      : @435 [@dyn 217] (gas: 5)\n 12303: a3 = s1 + 0x100\n 12307: a1 = u64 [a3 + 0x90]\n 12311: a0 = u64 [a3 + 0x70]\n 12314: a0 = a0 + 0xffffffffffffffc0\n 12317: t0 = 436, jump @1325\n      : @436 [@dyn 218] (gas: 1)\n 12323: jump @534 if a0 == 0\n      : @437 (gas: 39)\n 12327: a0 = s1 + 0x1118\n 12331: t1 = u64 [a0 + 0x388]\n 12335: a4 = u64 [a0 + 0x390]\n 12339: t2 = u64 [a0 + 0x3a0]\n 12343: u64 [s1 + 0x168] = t2\n 12347: ra = u64 [a0 + 0x398]\n 12351: t0 = t1 <u a1\n 12354: u64 [s1 + 0x158] = t1\n 12358: a3 = u64 [s1 + 0x198]\n 12362: a1 = a4 ^ a3\n 12365: a2 = a4 <u a3\n 12368: a0 = a4\n 12370: u64 [s1 + 0x160] = a4\n 12374: a5 = a3\n 12376: a2 = t0 if a1 == 0\n 12379: a3 = u64 [s1 + 0x180]\n 12383: u64 [s1 + 0x170] = ra\n 12387: a1 = ra - a3\n 12390: a3 = ra <u a3\n 12393: a4 = u64 [s1 + 0x188]\n 12397: a4 = t2 - a4\n 12400: a4 = a4 - a3\n 12403: a3 = a1 <u a2\n 12406: a4 = a4 - a3\n 12409: a1 = a1 - a2\n 12412: a2 = a0 - a5\n 12415: a2 = a2 - t0\n 12418: a0 = u64 [s1 + 0x190]\n 12422: a3 = t1 - a0\n 12425: a0 = u64 [s1 + 0x190]\n 12429: i32 a0 = a0 + 0x40\n 12432: a5 = s1 + 0x1118\n 12436: u64 [a5 + 0x328] = a3\n 12440: a3 = a5 + 0x300\n 12444: u64 [a3 + 0x30] = a2\n 12447: u64 [a3 + 0x38] = a1\n 12450: a1 = s1 + 0x1440\n 12454: u64 [a3 + 0x40] = a4\n 12457: ra = 438, jump @19\n      : @438 [@dyn 219] (gas: 23)\n 12463: a1 = s1 + 0x1118\n 12467: a0 = u64 [s1 + 0x168]\n 12471: a2 = a1 + 0x200\n 12475: u64 [a2 + 0xe0] = a0\n 12479: a0 = u64 [s1 + 0x170]\n 12483: u64 [a2 + 0xd8] = a0\n 12487: a0 = u64 [s1 + 0x160]\n 12491: u64 [a2 + 0xd0] = a0\n 12495: a0 = u64 [s1 + 0x158]\n 12499: u64 [a2 + 0xc8] = a0\n 12503: a0 = u64 [s1 + 0x120]\n 12507: u64 [a1 + 0x300] = a0\n 12511: a0 = u64 [s1 + 0x128]\n 12515: u64 [a2 + 0xf8] = a0\n 12519: a0 = u64 [s1 + 0x130]\n 12523: u64 [a2 + 0xf0] = a0\n 12527: a4 = a1\n 12529: a0 = s1 + 0x1420\n 12533: a1 = s1 + 0x1400\n 12537: a2 = s1 + 0x13e0\n 12541: a3 = u64 [s1 + 0x138]\n 12545: u64 [a4 + 0x2e8] = a3\n 12549: ra = 440, jump @1009\n      : @439 [@dyn 220] (gas: 10)\n 12555: a4 = s1 + 0x100\n 12559: a1 = u64 [a4 + 0x90]\n 12563: a3 = 0x100000000\n 12573: a0 = 0xffffffa0\n 12583: a0 = a1 <u a0\n 12586: a2 = u64 [a4 + 0x98]\n 12590: a0 = 0 if a2 != 0\n 12592: a2 = u64 [a4 + 0x78]\n 12595: a0 = 0 if a2 != 0\n 12597: jump @534 if a0 == 0\n      : @440 (gas: 23)\n 12601: a2 = s1 + 0x1118\n 12605: a4 = a2 + 0x300\n 12609: a0 = u64 [a4 + 0x20]\n 12612: u64 [s1 + 0x150] = a0\n 12616: a0 = u64 [a4 + 0x18]\n 12619: u64 [s1 + 0x158] = a0\n 12623: a0 = u64 [a4 + 0x10]\n 12626: u64 [s1 + 0x160] = a0\n 12630: a0 = u64 [a4 + 0x8]\n 12633: u64 [s1 + 0x168] = a0\n 12637: i32 a0 = a1 + 0x60\n 12640: a1 = u64 [s1 + 0x100]\n 12644: a4 = a2 + 0x200\n 12648: u64 [a4 + 0xa8] = a1\n 12652: a1 = u64 [s1 + 0x108]\n 12656: u64 [a4 + 0xb0] = a1\n 12660: a1 = u64 [s1 + 0x110]\n 12664: u64 [a4 + 0xb8] = a1\n 12668: a1 = s1 + 0x13c0\n 12672: u64 [s1 + 0x170] = a3\n 12676: a3 = u64 [s1 + 0x118]\n 12680: u64 [a4 + 0xc0] = a3\n 12684: ra = 442, jump @19\n      : @441 [@dyn 221] (gas: 5)\n 12690: a3 = s1 + 0x100\n 12694: a1 = u64 [a3 + 0x90]\n 12698: a0 = u64 [a3 + 0x70]\n 12701: a0 = a0 + 0xffffffffffffff80\n 12704: t0 = 444, jump @1325\n      : @442 [@dyn 222] (gas: 1)\n 12710: jump @534 if a0 == 0\n      : @443 (gas: 14)\n 12714: a0 = u64 [s1 + 0xf8]\n 12718: a0 = a0 << 0x20\n 12721: a2 = a0 >> 0x20\n 12724: i32 a0 = a1 + 0x80\n 12728: a3 = s1 + 0x1118\n 12732: u64 [a3 + 672] = 0\n 12736: a1 = u64 [s1 + 0xe8]\n 12740: a4 = a3 + 0x200\n 12744: u64 [a4 + 0x88] = a1\n 12748: a1 = u64 [s1 + 0xf0]\n 12752: u64 [a4 + 0x90] = a1\n 12756: a1 = s1 + 0x13a0\n 12760: u64 [a4 + 0x98] = a2\n 12764: ra = 446, jump @19\n      : @444 [@dyn 223] (gas: 10)\n 12770: a5 = s1 + 0x100\n 12774: a3 = u64 [a5 + 0x78]\n 12777: a2 = u64 [a5 + 0x90]\n 12781: a4 = 0x100000000\n 12791: a0 = 0xffffff60\n 12801: a0 = a2 <u a0\n 12804: a1 = u64 [a5 + 0x98]\n 12808: a0 = 0 if a1 != 0\n 12810: a0 = 0 if a3 != 0\n 12812: jump @534 if a0 == 0\n      : @445 (gas: 13)\n 12816: a0 = 0xff00000000\n 12826: a1 = u64 [s1 + 0xf8]\n 12830: a0 = a0 & a1\n 12833: a1 = a0 >u 0\n 12835: i32 a0 = a2 + 0xa0\n 12839: a2 = s1 + 0x1118\n 12843: u64 [a2 + 640] = 0\n 12847: u64 [a2 + 632] = 0\n 12851: u64 [a2 + 0x268] = a1\n 12855: a1 = s1 + 0x1380\n 12859: u64 [a2 + 624] = 0\n 12863: u64 [s1 + 0x170] = a4\n 12867: ra = 448, jump @19\n      : @446 [@dyn 224] (gas: 5)\n 12873: a3 = s1 + 0x100\n 12877: a1 = u64 [a3 + 0x90]\n 12881: a0 = u64 [a3 + 0x70]\n 12884: a0 = a0 + 0xffffffffffffff40\n 12888: t0 = 450, jump @1325\n      : @447 [@dyn 225] (gas: 1)\n 12894: jump @534 if a0 == 0\n      : @448 (gas: 35)\n 12898: a2 = u64 [s1 + 0x168]\n 12902: t1 = a2 <u a1\n 12905: t0 = a2\n 12907: a3 = u64 [s1 + 0x198]\n 12911: a4 = u64 [s1 + 0x160]\n 12915: a1 = a4 ^ a3\n 12918: a2 = a4 <u a3\n 12921: a0 = a4\n 12923: a5 = a3\n 12925: a2 = t1 if a1 == 0\n 12928: a3 = u64 [s1 + 0x180]\n 12932: a4 = u64 [s1 + 0x158]\n 12936: a1 = a4 - a3\n 12939: t2 = a4 <u a3\n 12942: a4 = u64 [s1 + 0x188]\n 12946: a3 = u64 [s1 + 0x150]\n 12950: a4 = a3 - a4\n 12953: a4 = a4 - t2\n 12956: a3 = a1 <u a2\n 12959: a4 = a4 - a3\n 12962: a1 = a1 - a2\n 12965: a2 = a0 - a5\n 12968: a2 = a2 - t1\n 12971: a0 = u64 [s1 + 0x190]\n 12975: a3 = t0 - a0\n 12978: a0 = u64 [s1 + 0x190]\n 12982: i32 a0 = a0 + 0xc0\n 12986: a5 = s1 + 0x1118\n 12990: u64 [a5 + 0x248] = a3\n 12994: a3 = a5 + 0x200\n 12998: u64 [a3 + 0x50] = a2\n 13001: u64 [a3 + 0x58] = a1\n 13004: a1 = s1 + 0x1360\n 13008: u64 [a3 + 0x60] = a4\n 13011: ra = 452, jump @19\n      : @449 [@dyn 226] (gas: 24)\n 13017: a1 = s1 + 0x1118\n 13021: a0 = u64 [s1 + 0x150]\n 13025: a2 = a1 + 0x200\n 13029: u64 [a2] = a0\n 13031: a0 = u64 [s1 + 0x158]\n 13035: a3 = a1 + 0x100\n 13039: u64 [a3 + 0xf8] = a0\n 13043: a0 = u64 [s1 + 0x160]\n 13047: u64 [a3 + 0xf0] = a0\n 13051: a0 = u64 [s1 + 0x168]\n 13055: u64 [a3 + 0xe8] = a0\n 13059: a0 = u64 [s1 + 0xc8]\n 13063: u64 [a2 + 0x20] = a0\n 13066: a0 = u64 [s1 + 0xd0]\n 13070: u64 [a2 + 0x18] = a0\n 13073: a0 = u64 [s1 + 0xd8]\n 13077: u64 [a2 + 0x10] = a0\n 13080: a4 = a1\n 13082: a0 = s1 + 0x1340\n 13086: a1 = s1 + 0x1320\n 13090: a2 = s1 + 0x1300\n 13094: a3 = u64 [s1 + 0xe0]\n 13098: u64 [a4 + 0x208] = a3\n 13102: ra = 454, jump @1009\n      : @450 [@dyn 227] (gas: 33)\n 13108: a0 = s1 + 0x1118\n 13112: a1 = u64 [a0 + 0x230]\n 13116: t0 = u64 [a0 + 0x240]\n 13120: t1 = u64 [a0 + 0x228]\n 13124: a3 = u64 [a0 + 0x238]\n 13128: a0 = u64 [s1 + 0x198]\n 13132: a4 = a1 ^ a0\n 13135: a5 = a1 <u a0\n 13138: ra = a0\n 13140: a0 = u64 [s1 + 0x190]\n 13144: t2 = t1 <u a0\n 13147: a5 = t2 if a4 == 0\n 13150: a0 = u64 [s1 + 0x180]\n 13154: a4 = a3 - a0\n 13157: a3 = a3 <u a0\n 13160: a0 = u64 [s1 + 0x188]\n 13164: a2 = t0 - a0\n 13167: a2 = a2 - a3\n 13170: a3 = a4 <u a5\n 13173: a2 = a2 - a3\n 13176: a0 = u64 [s1 + 0x190]\n 13180: a4 = a4 - a5\n 13183: a1 = a1 - ra\n 13186: a3 = a1 - t2\n 13189: a1 = t1 - a0\n 13192: a2 = a2 | a3\n 13195: a3 = a1 | a4\n 13198: a3 = a3 | a2\n 13201: a2 = a2 | a4\n 13204: a3 = a3 >> 0x20\n 13207: a2 = a2 << 0x20\n 13210: a2 = a2 | a3\n 13213: jump @534 if a2 != 0\n      : @451 (gas: 2)\n 13217: u64 [s1 + 0x198] = a1\n 13221: ra = 456, jump @30\n      : @452 [@dyn 228] (gas: 5)\n 13227: i32 a1 = a0 + 0\n 13229: a2 = i32 [s1 + 0x198]\n 13233: a0 = 0\n 13235: ecalli 8 // 'seal_return'\n 13237: jump @512\n      : @453 (gas: 8)\n 13240: u64 [a2 + 192] = 0\n 13244: u64 [a2 + 184] = 0\n 13248: u64 [a2 + 176] = 0\n 13252: u64 [a2 + 168] = 0\n 13256: a0 = s1 + 0x2000\n 13260: i32 a0 = a0 + 0x1c0\n 13264: ecalli 11 // 'value_transferred'\n 13266: fallthrough\n      : @454 (gas: 9)\n 13267: a3 = s1 + 0x2118\n 13271: a0 = u64 [a3 + 0xb8]\n 13275: a1 = u64 [a3 + 0xc0]\n 13279: a2 = u64 [a3 + 0xb0]\n 13283: a3 = u64 [a3 + 0xa8]\n 13287: a1 = a1 | a2\n 13290: a0 = a0 | a3\n 13293: a0 = a0 | a1\n 13296: jump @456 if a0 == 0\n      : @455 (gas: 1)\n 13299: jump @772\n      : @456 (gas: 3)\n 13302: a0 = u64 [s1 + 0x198]\n 13306: a0 = i32 [a0]\n 13308: jump @458 if a0 >u 3\n      : @457 (gas: 1)\n 13312: jump @773\n      : @458 (gas: 3)\n 13315: a0 = s1 + 0x1e0\n 13319: a1 = 0x40\n 13322: ra = 458, jump @17\n      : @459 [@dyn 229] (gas: 13)\n 13328: a4 = s1 + 0x100\n 13332: a3 = u64 [a4 + 0xf8]\n 13336: a1 = u64 [a4 + 0xf0]\n 13340: a2 = u64 [a4 + 0xe8]\n 13344: a0 = u64 [a4 + 0xe0]\n 13348: a3 = a3 | a2\n 13351: a2 = a0 | a1\n 13354: a2 = a2 | a3\n 13357: a2 = a2 >> 0x20\n 13360: a1 = a1 | a3\n 13363: a1 = a1 << 0x20\n 13366: a1 = a1 | a2\n 13369: jump @534 if a1 != 0\n      : @460 (gas: 13)\n 13373: a1 = u64 [0x20040]\n 13378: a4 = s1 + 0x100\n 13382: u64 [a4 + 0xd8] = a1\n 13386: a3 = u64 [0x20048]\n 13391: a1 = u64 [0x20050]\n 13396: a2 = u64 [0x20058]\n 13401: u64 [a4 + 0xd0] = a3\n 13405: u64 [a4 + 0xc8] = a1\n 13409: a1 = s1 + 0x1c0\n 13413: u64 [a4 + 0xc0] = a2\n 13417: u64 [s1 + 0x198] = a0\n 13421: ra = 0x1fe\n 13425: jump @19\n      : @461 (gas: 8)\n 13428: u64 [t1 + 32] = 0\n 13431: u64 [t1 + 24] = 0\n 13434: u64 [t1 + 16] = 0\n 13437: u64 [t1 + 8] = 0\n 13440: a0 = s1 + 0x3000\n 13444: i32 a0 = a0 + 0xfffffffffffff920\n 13448: ecalli 11 // 'value_transferred'\n 13450: fallthrough\n      : @462 (gas: 9)\n 13451: a3 = s1 + 0x2918\n 13455: a0 = u64 [a3 + 0x18]\n 13458: a1 = u64 [a3 + 0x20]\n 13461: a2 = u64 [a3 + 0x10]\n 13464: a3 = u64 [a3 + 0x8]\n 13467: a1 = a1 | a2\n 13470: a0 = a0 | a3\n 13473: a0 = a0 | a1\n 13476: jump @464 if a0 == 0\n      : @463 (gas: 1)\n 13479: jump @774\n      : @464 (gas: 3)\n 13482: a0 = u64 [s1 + 0x198]\n 13486: a0 = i32 [a0]\n 13488: jump @466 if a0 >u 3\n      : @465 (gas: 1)\n 13492: jump @775\n      : @466 (gas: 3)\n 13495: a0 = s1 + 0x2120\n 13499: a1 = 0x40\n 13502: ra = 460, jump @17\n      : @467 [@dyn 230] (gas: 6)\n 13508: a3 = s1 + 0x2118\n 13512: a4 = u64 [a3 + 0x20]\n 13515: a1 = u64 [a3 + 0x18]\n 13518: a2 = u64 [a3 + 0x10]\n 13521: a0 = u64 [a3 + 0x8]\n 13524: t0 = 462, jump @1327\n      : @468 [@dyn 231] (gas: 1)\n 13530: jump @534 if a1 != 0\n      : @469 (gas: 13)\n 13534: a1 = u64 [0x20000]\n 13539: u64 [a3] = a1\n 13541: a4 = u64 [0x20008]\n 13546: a1 = u64 [0x20010]\n 13551: a2 = u64 [0x20018]\n 13556: a5 = a3 + 0xffffffffffffff00\n 13560: u64 [a5 + 0xf8] = a4\n 13564: u64 [a5 + 0xf0] = a1\n 13568: a1 = s1 + 0x2100\n 13572: u64 [a5 + 0xe8] = a2\n 13576: u64 [s1 + 0x198] = a0\n 13580: ra = 0x1fe\n 13584: jump @19\n      : @470 (gas: 10)\n 13587: u64 [a2 + 1728] = 0\n 13591: u64 [a2 + 1720] = 0\n 13595: u64 [a2 + 1712] = 0\n 13599: u64 [a2 + 1704] = 0\n 13603: a0 = s1 + 0x2000\n 13607: i32 a0 = a0 + 0x7c0\n 13611: ra = 0x1d0\n 13615: ecalli 11 // 'value_transferred'\n 13617: t0 = 0x1d2\n 13621: jump @1314\n      : @471 [@dyn 232] (gas: 1)\n 13624: t0 = 466, jump @1314\n      : @472 [@dyn 233] (gas: 1)\n 13630: t0 = 468, jump @1342\n      : @473 [@dyn 234] (gas: 1)\n 13636: jump @475 if a0 == 0\n      : @474 (gas: 1)\n 13639: jump @776\n      : @475 (gas: 4)\n 13642: a0 = u64 [s1 + 0x198]\n 13646: a0 = i32 [a0]\n 13648: a1 = 0x43\n 13651: jump @477 if a1 <u a0\n      : @476 (gas: 1)\n 13654: jump @777\n      : @477 (gas: 4)\n 13657: a0 = s1 + 0x1840\n 13661: ra = 0x1d6\n 13665: t0 = 0x3d2\n 13669: jump @1355\n      : @478 [@dyn 235] (gas: 16)\n 13672: a1 = s1 + 0x1118\n 13676: a2 = a1 + 0x700\n 13680: a0 = u64 [a2 + 0x38]\n 13683: a1 = s1 + 0x100\n 13687: u64 [a1 + 0x88] = a0\n 13691: a0 = u64 [a2 + 0x30]\n 13694: u64 [a1 + 0x90] = a0\n 13698: a0 = u64 [a2 + 0x28]\n 13701: u64 [a1 + 0x98] = a0\n 13705: a0 = s1 + 0x2000\n 13709: i32 a0 = a0 + 0x7e0\n 13713: a1 = 0x4\n 13716: ra = 0x1d8\n 13720: ecalli 1 // 'call_data_load'\n 13722: t0 = 0x1da\n 13726: jump @1314\n      : @479 [@dyn 236] (gas: 1)\n 13729: t0 = 474, jump @1314\n      : @480 [@dyn 237] (gas: 13)\n 13735: a0 = u64 [a4 + 0xc8]\n 13739: a1 = u64 [a4 + 0xd0]\n 13743: a2 = u64 [a4 + 0xd8]\n 13747: a3 = u64 [a4 + 0xe0]\n 13751: a4 = s1 + 0x1118\n 13755: a5 = a4 + 0x700\n 13759: u64 [a5 + 0x20] = a3\n 13762: u64 [a5 + 0x18] = a2\n 13765: u64 [a5 + 0x10] = a1\n 13768: a1 = s1 + 0x1820\n 13772: u64 [a5 + 0x8] = a0\n 13775: a0 = 0\n 13777: ra = 476, jump @19\n      : @481 [@dyn 238] (gas: 9)\n 13783: a0 = s1 + 0x1118\n 13787: u64 [a0 + 1792] = 0\n 13791: u64 [a0 + 1784] = 0\n 13795: u64 [a0 + 1776] = 0\n 13799: a2 = a0\n 13801: a0 = 0x20\n 13804: a1 = s1 + 0x1800\n 13808: u64 [a2 + 1768] = 0\n 13812: ra = 478, jump @19\n      : @482 [@dyn 239] (gas: 3)\n 13818: a1 = 0x201bc\n 13823: a0 = i32 [0x201bc]\n 13828: jump @484 if a0 >u 63\n      : @483 (gas: 3)\n 13832: u32 [0x201bc] = 0x40\n 13838: t0 = 0x1e0\n 13842: jump @1343\n      : @484 (gas: 1)\n 13845: t0 = 480, jump @1343\n      : @485 [@dyn 240] (gas: 11)\n 13851: a0 = 0x201d0\n 13856: i32 a0 = a0 + 0\n 13858: i32 a2 = a2 + 0\n 13860: u64 [s1 + 0x180] = a1\n 13864: a1 = 0x40\n 13867: u64 [s1 + 0x178] = a0\n 13871: ra = 0x1e2\n 13875: ecalli 6 // 'hash_keccak_256'\n 13877: a3 = u64 [s1 + 0x170]\n 13881: t0 = 0x1e4\n 13885: jump @1329\n      : @486 [@dyn 241] (gas: 2)\n 13888: a3 = u64 [s1 + 0x170]\n 13892: t0 = 484, jump @1329\n      : @487 [@dyn 242] (gas: 25)\n 13898: u64 [s1 + 0x168] = a0\n 13902: a0 = reverse a1\n 13904: u64 [s1 + 0x160] = a0\n 13908: a0 = reverse a2\n 13910: u64 [s1 + 0x158] = a0\n 13914: a0 = reverse a3\n 13916: u64 [s1 + 0x150] = a0\n 13920: a0 = sp + 0xffffffffffffffe0\n 13923: a0 = a0 & 0xffffffffffffffe0\n 13926: u64 [s1 + 0x170] = a0\n 13930: sp = a0\n 13932: a0 = u64 [s1 + 0x188]\n 13936: a0 = a0 << 0x20\n 13939: a0 = a0 >> 0x20\n 13942: a2 = s1 + 0x1118\n 13946: u64 [a2 + 1760] = 0\n 13950: a3 = a2 + 0x600\n 13954: u64 [a3 + 0xd8] = a0\n 13958: a0 = u64 [s1 + 0x190]\n 13962: u64 [a3 + 0xd0] = a0\n 13966: a1 = s1 + 0x17e0\n 13970: a0 = u64 [s1 + 0x198]\n 13974: u64 [a3 + 0xc8] = a0\n 13978: a0 = 0\n 13980: ra = 486, jump @19\n      : @488 [@dyn 243] (gas: 14)\n 13986: a0 = u64 [s1 + 0x150]\n 13990: a1 = s1 + 0x1118\n 13994: a2 = a1 + 0x600\n 13998: u64 [a2 + 0xc0] = a0\n 14002: a0 = u64 [s1 + 0x158]\n 14006: u64 [a2 + 0xb8] = a0\n 14010: a0 = u64 [s1 + 0x160]\n 14014: u64 [a2 + 0xb0] = a0\n 14018: a3 = a1\n 14020: a0 = 0x20\n 14023: a1 = s1 + 0x17c0\n 14027: a2 = u64 [s1 + 0x168]\n 14031: u64 [a3 + 0x6a8] = a2\n 14035: ra = 488, jump @19\n      : @489 [@dyn 244] (gas: 3)\n 14041: a1 = u64 [s1 + 0x180]\n 14045: a0 = i32 [a1]\n 14047: jump @491 if a0 >u 63\n      : @490 (gas: 3)\n 14051: u32 [a1 + 0] = 0x40\n 14054: t0 = 0x1ea\n 14058: jump @1345\n      : @491 (gas: 1)\n 14061: t0 = 490, jump @1345\n      : @492 [@dyn 245] (gas: 6)\n 14067: a0 = u64 [s1 + 0x178]\n 14071: ra = 0x1ec\n 14075: ecalli 6 // 'hash_keccak_256'\n 14077: a3 = u64 [s1 + 0x198]\n 14081: t0 = 0x1ee\n 14085: jump @1280\n      : @493 [@dyn 246] (gas: 2)\n 14088: a3 = u64 [s1 + 0x198]\n 14092: t0 = 494, jump @1280\n      : @494 [@dyn 247] (gas: 7)\n 14098: a1 = u64 [s1 + 0x170]\n 14102: u64 [a1 + 0x18] = a3\n 14105: u64 [a1 + 0x10] = a2\n 14108: u64 [a1 + 0x8] = a4\n 14111: u64 [a1] = a0\n 14113: a0 = s1 + 0x17a0\n 14117: ra = 496, jump @21\n      : @495 [@dyn 248] (gas: 6)\n 14123: a0 = s1 + 0x1118\n 14127: a0 = u64 [a0 + 0x688]\n 14131: u64 [s1 + 0x198] = a0\n 14135: a0 = s1 + 0x1780\n 14139: a1 = 0x40\n 14142: ra = 498, jump @17\n      : @496 [@dyn 249] (gas: 7)\n 14148: a3 = s1 + 0x1118\n 14152: a5 = a3 + 0x600\n 14156: a4 = u64 [a5 + 0x80]\n 14160: a1 = u64 [a5 + 0x78]\n 14163: a2 = u64 [a5 + 0x70]\n 14166: a0 = u64 [a5 + 0x68]\n 14169: t0 = 500, jump @1327\n      : @497 [@dyn 250] (gas: 1)\n 14175: jump @534 if a1 != 0\n      : @498 (gas: 10)\n 14179: a1 = u8 [s1 + 0x198]\n 14183: a1 = a1 >u 0\n 14185: u64 [a3 + 1632] = 0\n 14189: u64 [a3 + 1624] = 0\n 14193: u64 [a3 + 0x648] = a1\n 14197: a1 = s1 + 0x1760\n 14201: u64 [a3 + 1616] = 0\n 14205: u64 [s1 + 0x198] = a0\n 14209: ra = 0x1fe\n 14213: jump @19\n      : @499 (gas: 10)\n 14216: u64 [a2 + 1824] = 0\n 14220: u64 [a2 + 1816] = 0\n 14224: u64 [a2 + 1808] = 0\n 14228: u64 [a2 + 1800] = 0\n 14232: a0 = s1 + 0x3000\n 14236: i32 a0 = a0 + 0xfffffffffffff820\n 14240: ra = 0x1f6\n 14244: ecalli 11 // 'value_transferred'\n 14246: t0 = 0x1f8\n 14250: jump @1352\n      : @500 [@dyn 251] (gas: 1)\n 14253: t0 = 504, jump @1352\n      : @501 [@dyn 252] (gas: 8)\n 14259: a0 = u64 [a4 + 0x18]\n 14262: a1 = u64 [a4 + 0x20]\n 14265: a2 = u64 [a4 + 0x10]\n 14268: a3 = u64 [a4 + 0x8]\n 14271: a1 = a1 | a2\n 14274: a0 = a0 | a3\n 14277: a0 = a0 | a1\n 14280: jump @503 if a0 == 0\n      : @502 (gas: 1)\n 14283: jump @778\n      : @503 (gas: 3)\n 14286: a0 = u64 [s1 + 0x198]\n 14290: a0 = i32 [a0]\n 14292: jump @505 if a0 >u 3\n      : @504 (gas: 1)\n 14296: jump @779\n      : @505 (gas: 3)\n 14299: a0 = s1 + 0x18c0\n 14303: a1 = 0x40\n 14306: ra = 506, jump @17\n      : @506 [@dyn 253] (gas: 7)\n 14312: a3 = s1 + 0x1118\n 14316: a5 = a3 + 0x700\n 14320: a4 = u64 [a5 + 0xc0]\n 14324: a1 = u64 [a5 + 0xb8]\n 14328: a2 = u64 [a5 + 0xb0]\n 14332: a0 = u64 [a5 + 0xa8]\n 14336: t0 = 508, jump @1327\n      : @507 [@dyn 254] (gas: 1)\n 14342: jump @534 if a1 != 0\n      : @508 (gas: 7)\n 14346: u64 [a3 + 1952] = 0\n 14350: u64 [a3 + 1944] = 0\n 14354: u64 [a3 + 1936] = 0\n 14358: a1 = s1 + 0x18a0\n 14362: u64 [a3 + 1928] = 0\n 14366: u64 [s1 + 0x198] = a0\n 14370: ra = 510, jump @19\n      : @509 [@dyn 255] (gas: 3)\n 14376: a1 = 0x20\n 14379: a0 = u64 [s1 + 0x198]\n 14383: ra = 512, jump @30\n      : @510 [@dyn 256] (gas: 5)\n 14389: i32 a1 = a0 + 0\n 14391: a2 = 0x20\n 14394: a0 = 0\n 14396: ecalli 8 // 'seal_return'\n 14398: jump @512\n      : @511 (gas: 4)\n 14400: a2 = 0x20\n 14403: a0 = 0\n 14405: ecalli 8 // 'seal_return'\n 14407: fallthrough\n      : @512 (gas: 14)\n 14408: a2 = s1 + 0x7ff\n 14412: a2 = a2 + 0x119\n 14416: a0 = u64 [s1 + 0x170]\n 14420: a3 = a2 + 0x700\n 14424: u64 [a3 + 0xa8] = a0\n 14428: a0 = u64 [s1 + 0x178]\n 14432: u64 [a3 + 0xb0] = a0\n 14436: a0 = u64 [s1 + 0x180]\n 14440: u64 [a3 + 0xb8] = a0\n 14444: a1 = s1 + 0x10c0\n 14448: a0 = u64 [s1 + 0x188]\n 14452: u64 [a3 + 0xc0] = a0\n 14456: a0 = 0\n 14458: ra = 514, jump @19\n      : @513 [@dyn 257] (gas: 10)\n 14464: a0 = s1 + 0x7ff\n 14468: a0 = a0 + 0x119\n 14472: u64 [a0 + 1952] = 0\n 14476: u64 [a0 + 1944] = 0\n 14480: u64 [a0 + 1936] = 0\n 14484: a3 = a0\n 14486: a0 = 0x20\n 14489: a1 = s1 + 0x10a0\n 14493: u64 [a3 + 1928] = 0x1\n 14498: ra = 516, jump @19\n      : @514 [@dyn 258] (gas: 3)\n 14504: a1 = u64 [s1 + 0x190]\n 14508: a0 = i32 [a1]\n 14510: jump @516 if a0 >u 63\n      : @515 (gas: 2)\n 14514: u32 [a1 + 0] = 0x40\n 14517: fallthrough\n      : @516 (gas: 4)\n 14518: a0 = sp + 0xffffffffffffffe0\n 14521: a0 = a0 & 0xffffffffffffffe0\n 14524: u64 [s1 + 0x160] = a0\n 14528: t0 = 518, jump @1312\n      : @517 [@dyn 259] (gas: 5)\n 14534: ra = 0x208\n 14538: ecalli 6 // 'hash_keccak_256'\n 14540: a3 = u64 [s1 + 0x160]\n 14544: t0 = 0x20a\n 14548: jump @1313\n      : @518 [@dyn 260] (gas: 2)\n 14551: a3 = u64 [s1 + 0x160]\n 14555: t0 = 522, jump @1313\n      : @519 [@dyn 261] (gas: 8)\n 14561: a5 = a4 + 0x500\n 14565: u64 [a5 + 0x80] = a3\n 14569: u64 [a5 + 0x78] = a2\n 14572: u64 [a5 + 0x70] = a1\n 14575: u64 [a5 + 0x68] = a0\n 14578: a0 = s1 + 0x1080\n 14582: a1 = s1 + 0x2680\n 14586: ra = 524, jump @21\n      : @520 [@dyn 262] (gas: 17)\n 14592: a4 = s1 + 0x7ff\n 14596: a4 = a4 + 0x119\n 14600: a5 = a4 + 0x700\n 14604: a0 = u64 [a5 + 0x78]\n 14607: a1 = u64 [a5 + 0x80]\n 14611: a2 = u64 [a5 + 0x70]\n 14614: a3 = u64 [a5 + 0x68]\n 14617: a1 = a1 | a2\n 14620: a0 = a0 | a3\n 14623: a0 = a0 | a1\n 14626: a0 = a0 >u 0\n 14628: u64 [a4 + 1888] = 0\n 14632: u64 [a4 + 1880] = 0\n 14636: u64 [a5 + 0x48] = a0\n 14639: a0 = s1 + 0x1060\n 14643: u64 [a4 + 1872] = 0\n 14647: ra = 526, jump @1029\n      : @521 [@dyn 263] (gas: 14)\n 14653: a0 = u64 [s1 + 0x188]\n 14657: a2 = s1 + 0x7ff\n 14661: a2 = a2 + 0x119\n 14665: a3 = a2 + 0x700\n 14669: u64 [a3 + 0x40] = a0\n 14672: a0 = u64 [s1 + 0x180]\n 14676: u64 [a3 + 0x38] = a0\n 14679: a0 = u64 [s1 + 0x178]\n 14683: u64 [a3 + 0x30] = a0\n 14686: a1 = s1 + 0x1040\n 14690: a0 = u64 [s1 + 0x170]\n 14694: u64 [a3 + 0x28] = a0\n 14697: a0 = 0\n 14699: ra = 528, jump @19\n      : @522 [@dyn 264] (gas: 10)\n 14705: a1 = s1 + 0x7ff\n 14709: a1 = a1 + 0x119\n 14713: u64 [a1 + 1824] = 0\n 14717: u64 [a1 + 1816] = 0\n 14721: u64 [a1 + 1800] = 0x1\n 14726: a2 = a1\n 14728: a0 = 0x20\n 14731: a1 = s1 + 0x1020\n 14735: u64 [a2 + 1808] = 0\n 14739: ra = 530, jump @19\n      : @523 [@dyn 265] (gas: 7)\n 14745: a1 = u64 [s1 + 0x190]\n 14749: a0 = sp + 0xffffffffffffffe0\n 14752: a0 = a0 & 0xffffffffffffffe0\n 14755: u64 [s1 + 0x160] = a0\n 14759: sp = a0\n 14761: a0 = i32 [a1]\n 14763: jump @525 if a0 >u 63\n      : @524 (gas: 2)\n 14767: u32 [a1 + 0] = 0x40\n 14770: fallthrough\n      : @525 (gas: 4)\n 14771: a0 = sp + 0xffffffffffffffe0\n 14774: a0 = a0 & 0xffffffffffffffe0\n 14777: u64 [s1 + 0x190] = a0\n 14781: t0 = 532, jump @1312\n      : @526 [@dyn 266] (gas: 25)\n 14787: ecalli 6 // 'hash_keccak_256'\n 14789: a3 = u64 [s1 + 0x190]\n 14793: a0 = u64 [a3]\n 14795: a1 = u64 [a3 + 0x8]\n 14798: a2 = u64 [a3 + 0x10]\n 14801: a3 = u64 [a3 + 0x18]\n 14804: a0 = reverse a0\n 14806: a1 = reverse a1\n 14808: a2 = reverse a2\n 14810: a3 = reverse a3\n 14812: a4 = a3 + 0x4\n 14815: a3 = a4 <u a3\n 14818: a5 = a2 + a3\n 14821: a2 = a5 <u a2\n 14824: a2 = a3 if a3 == 0\n 14827: a2 = a2 + a1\n 14830: a1 = a2 <u a1\n 14833: a0 = a0 + a1\n 14836: a1 = u64 [s1 + 0x160]\n 14840: u64 [a1] = a4\n 14842: u64 [a1 + 0x8] = a5\n 14845: u64 [a1 + 0x10] = a2\n 14848: u64 [a1 + 0x18] = a0\n 14851: a0 = s1 + 0x1000\n 14855: ra = 534, jump @21\n      : @527 [@dyn 267] (gas: 21)\n 14861: a3 = s1 + 0x7ff\n 14865: a3 = a3 + 0x119\n 14869: a4 = a3 + 0x600\n 14873: a0 = u64 [a4 + 0xe8]\n 14877: a1 = u64 [a4 + 0xf0]\n 14881: a2 = u64 [a4 + 0xf8]\n 14885: a3 = u64 [a3 + 0x700]\n 14889: a4 = 0xffffff00ffffffff\n 14899: a2 = a2 & a4\n 14902: a4 = 0x100000000\n 14912: u64 [s1 + 0x190] = a4\n 14916: a2 = a2 | a4\n 14919: a4 = s1 + 0x2118\n 14923: a5 = a4 + 0x500\n 14927: u64 [a5 + 0xa0] = a3\n 14931: u64 [a5 + 0x90] = a1\n 14935: u64 [a5 + 0x88] = a0\n 14939: u64 [a5 + 0x98] = a2\n 14943: a1 = s1 + 0x26a0\n 14947: a0 = u64 [s1 + 0x160]\n 14951: ra = 536, jump @23\n      : @528 [@dyn 268] (gas: 4)\n 14957: a0 = s1 + 0x7ff\n 14961: a0 = a0 + 0x7e1\n 14965: a1 = 0x40\n 14968: ra = 538, jump @17\n      : @529 [@dyn 269] (gas: 15)\n 14974: a2 = s1 + 0x7ff\n 14978: a2 = a2 + 0x119\n 14982: t0 = u64 [a2 + 0x6e0]\n 14986: a0 = a2 + 0x600\n 14990: a5 = u64 [a0 + 0xd8]\n 14994: a4 = u64 [a0 + 0xd0]\n 14998: a3 = u64 [a0 + 0xc8]\n 15002: a0 = a4 | t0\n 15005: a1 = a3 | a5\n 15008: a1 = a1 | a0\n 15011: a1 = a1 >> 0x20\n 15014: a0 = a0 | a5\n 15017: a0 = a0 << 0x20\n 15020: a0 = a0 | a1\n 15023: jump @534 if a0 != 0\n      : @530 (gas: 16)\n 15026: a0 = u64 [s1 + 0x170]\n 15030: u64 [a2 + 0x6a8] = a0\n 15034: a0 = u64 [s1 + 0x178]\n 15038: u64 [a2 + 0x6b0] = a0\n 15042: a0 = u64 [s1 + 0x180]\n 15046: u64 [a2 + 0x6b8] = a0\n 15050: a1 = s1 + 0x7ff\n 15054: a1 = a1 + 0x7c1\n 15058: a0 = u64 [s1 + 0x188]\n 15062: u64 [a2 + 0x6c0] = a0\n 15066: a0 = a3\n 15068: u64 [s1 + 0x160] = a3\n 15072: u64 [s1 + 0x188] = a4\n 15076: u64 [s1 + 0x180] = t0\n 15080: u64 [s1 + 0x178] = a5\n 15084: ra = 540, jump @19\n      : @531 [@dyn 270] (gas: 4)\n 15090: a0 = u64 [s1 + 0x138]\n 15094: ra = 0x21e\n 15098: ecalli 3 // 'caller'\n 15100: fallthrough\n      : @532 [@dyn 271] (gas: 12)\n 15101: a3 = s1 + 0x100\n 15105: a4 = u64 [a3 + 0x60]\n 15108: a0 = u64 [a3 + 0x80]\n 15112: a1 = u64 [a3 + 0x78]\n 15115: a0 = a0 | a1\n 15118: a1 = u64 [a3 + 0x90]\n 15122: a1 = a1 + 0xffffffffffffffe0\n 15125: a1 = a4 <u a1\n 15128: a2 = u64 [a3 + 0x88]\n 15132: a1 = 0 if a2 != 0\n 15134: a1 = 0 if a0 != 0\n 15136: jump @534 if a1 == 0\n      : @533 (gas: 1)\n 15139: jump @785\n      : @534 (gas: 1)\n 15142: trap\n      : @535 (gas: 23)\n 15143: a0 = u64 [s1 + 0x40]\n 15146: a0 = a0 ^ 0x1\n 15149: a4 = u64 [s1 + 0x110]\n 15153: a1 = u64 [s1 + 0x28]\n 15156: a0 = a1 if a4 != 0\n 15159: a1 = u64 [s1 + 0x30]\n 15162: a2 = u64 [s1 + 0x48]\n 15165: a0 = a1 if a2 != 0\n 15168: t1 = u64 [s1 + 0x50]\n 15171: t2 = a4 | t1\n 15174: a2 = u64 [s1 + 0x58]\n 15177: a1 = a2 >> 0x3f\n 15180: u64 [s1 + 0x48] = a1\n 15183: t1 = t1 << 0x1\n 15186: a5 = a4 >> 0x3f\n 15189: t0 = a2 << 0x1\n 15192: a1 = u64 [s1 + 0x70]\n 15195: ra = a1 >> 0x3f\n 15198: a4 = a4 << 0x1\n 15201: a3 = a1 << 0x1\n 15204: u64 [s1 + 0x50] = a3\n 15207: u64 [s1 + 0x40] = a5\n 15210: jump @549 if a0 == 0\n      : @536 (gas: 21)\n 15214: u64 [s1 + 0x10] = t2\n 15217: u64 [s1 + 0x18] = t0\n 15220: u64 [s1 + 0x20] = a4\n 15223: u64 [s1 + 0x28] = ra\n 15226: u64 [s1 + 0x30] = t1\n 15229: a1 = a1 & 0xffffffffffffffe0\n 15232: u64 [s1 + 0x110] = a1\n 15236: a0 = s1 + 0x7ff\n 15240: a0 = a0 + 0x119\n 15244: a1 = u64 [s1 + 0x150]\n 15248: u64 [a0 + 0x48] = a1\n 15251: a1 = u64 [s1 + 0x140]\n 15255: u64 [a0 + 0x50] = a1\n 15258: a1 = u64 [s1 + 0x138]\n 15262: u64 [a0 + 0x58] = a1\n 15265: a1 = s1 + 0x7ff\n 15269: a1 = a1 + 0x161\n 15273: a2 = u64 [s1 + 0x148]\n 15277: u64 [a0 + 0x60] = a2\n 15280: a0 = 0\n 15282: ra = 544, jump @19\n      : @537 [@dyn 272] (gas: 1)\n 15288: t0 = 546, jump @1319\n      : @538 [@dyn 273] (gas: 1)\n 15294: ra = 548, jump @30\n      : @539 [@dyn 274] (gas: 1)\n 15300: t0 = 550, jump @1308\n      : @540 [@dyn 275] (gas: 7)\n 15306: ecalli 6 // 'hash_keccak_256'\n 15308: u64 [s1 + 400] = 0x20\n 15313: a5 = 0\n 15315: u64 [s1 + 408] = 0\n 15319: u64 [s1 + 392] = 0\n 15323: u64 [s1 + 376] = 0\n 15327: t0 = 552, jump @1279\n      : @541 [@dyn 276] (gas: 9)\n 15333: t0 = a0\n 15335: a1 = u64 [s1 + 0x170]\n 15339: u64 [a1 + 0x18] = a0\n 15342: u64 [s1 + 0x150] = ra\n 15346: u64 [a1 + 0x10] = ra\n 15349: u64 [a1 + 0x8] = t2\n 15352: u64 [a1] = t1\n 15354: u64 [s1 + 0x168] = t0\n 15358: t0 = 554, jump @1304\n      : @542 [@dyn 277] (gas: 12)\n 15364: a0 = u64 [s1 + 0x190]\n 15368: a1 = a1 + a0\n 15371: a3 = u64 [s1 + 0x130]\n 15375: ra = a5 + a3\n 15378: a2 = u64 [s1 + 0x120]\n 15382: a0 = u64 [s1 + 0x198]\n 15386: a2 = a2 + a0\n 15389: a0 = u64 [s1 + 0x128]\n 15393: a3 = a5\n 15395: a5 = u64 [s1 + 0x188]\n 15399: a0 = a0 + a5\n 15402: jump @551 if a4 != 0\n      : @543 (gas: 14)\n 15406: a4 = u64 [s1 + 0x190]\n 15410: a4 = a1 <u a4\n 15413: ra = ra + a4\n 15416: t0 = ra ^ a3\n 15419: u64 [s1 + 0x138] = a3\n 15423: a5 = ra <u a3\n 15426: a5 = a4 if t0 == 0\n 15429: a5 = a5 + a2\n 15432: t0 = a5 <u a2\n 15435: a3 = u64 [s1 + 0x198]\n 15439: a2 = a2 <u a3\n 15442: a0 = a0 + a2\n 15445: a0 = a0 + t0\n 15448: t0 = 556, jump @1324\n      : @544 [@dyn 278] (gas: 1)\n 15454: jump @534 if a0 != 0\n      : @545 (gas: 2)\n 15458: a0 = s1 + 0x440\n 15462: ra = 558, jump @17\n      : @546 [@dyn 279] (gas: 14)\n 15468: a4 = s1 + 0x400\n 15472: a0 = u64 [a4 + 0x58]\n 15475: a1 = u64 [a4 + 0x50]\n 15478: a2 = u64 [a4 + 0x48]\n 15481: a3 = u64 [a4 + 0x40]\n 15484: a4 = s1 + 0x2118\n 15488: a5 = a4 + 0x200\n 15492: u64 [a5 + 0x80] = a0\n 15496: u64 [a5 + 0x78] = a1\n 15499: u64 [a5 + 0x70] = a2\n 15502: u64 [a5 + 0x68] = a3\n 15505: a1 = s1 + 0x2380\n 15509: a0 = u64 [s1 + 0x170]\n 15513: ra = 560, jump @23\n      : @547 [@dyn 280] (gas: 41)\n 15519: t1 = u64 [s1 + 0x148]\n 15523: t1 = t1 + 0x1\n 15526: a0 = t1 <u 0x1\n 15529: t2 = u64 [s1 + 0x140]\n 15533: t2 = t2 + a0\n 15536: a0 = t1 | t2\n 15539: a0 = a0 <u 0x1\n 15542: a1 = u64 [s1 + 0x150]\n 15546: ra = a1 + a0\n 15549: a1 = ra <u a1\n 15552: a0 = u64 [s1 + 0x168]\n 15556: a0 = a0 + a1\n 15559: a1 = u64 [s1 + 0x190]\n 15563: a2 = a1 + 0x20\n 15566: u64 [s1 + 0x168] = a2\n 15570: a3 = a2 <u a1\n 15573: a1 = u64 [s1 + 0x138]\n 15577: a2 = a1 + a3\n 15580: u64 [s1 + 0x148] = a2\n 15584: a4 = a2 <u a1\n 15587: a4 = a3 if a3 == 0\n 15590: a1 = u64 [s1 + 0x198]\n 15594: a3 = a1 + a4\n 15597: a4 = a3 <u a1\n 15600: a1 = u64 [s1 + 0x188]\n 15604: a1 = a1 + a4\n 15607: u64 [s1 + 0x188] = a1\n 15611: a1 = u64 [s1 + 0x178]\n 15615: a4 = a1 + 0x20\n 15618: a5 = a4 <u a1\n 15621: a2 = u64 [s1 + 0x158]\n 15625: a1 = a2 + a5\n 15628: a2 = a1 <u a2\n 15631: a2 = a5 if a5 == 0\n 15634: a5 = u64 [s1 + 0x160]\n 15638: a2 = a2 + a5\n 15641: a5 = a2 <u a5\n 15644: t0 = u64 [s1 + 0x180]\n 15648: t0 = t0 + a5\n 15651: u64 [s1 + 0x180] = t0\n 15655: t0 = 562, jump @1331\n      : @548 [@dyn 281] (gas: 11)\n 15661: t0 = a0\n 15663: u64 [a5 + 0x18] = a0\n 15666: u64 [s1 + 0x150] = ra\n 15670: a0 = u64 [s1 + 0x168]\n 15674: u64 [s1 + 0x190] = a0\n 15678: a5 = u64 [s1 + 0x148]\n 15682: u64 [s1 + 0x198] = a3\n 15686: a3 = a1\n 15688: u64 [s1 + 0x168] = t0\n 15692: t0 = 0x22a\n 15696: jump @1304\n      : @549 (gas: 4)\n 15699: a5 = u64 [s1 + 0x48]\n 15702: a0 = a1 | a2\n 15705: a0 = a0 | t2\n 15708: jump @564 if a0 != 0\n      : @550 (gas: 7)\n 15712: u64 [s1 + 384] = 0\n 15716: u64 [s1 + 376] = 0\n 15720: u64 [s1 + 392] = 0\n 15724: u64 [s1 + 400] = 0\n 15728: t2 = a5\n 15730: a0 = u64 [s1 + 0x40]\n 15733: jump @567\n      : @551 (gas: 8)\n 15736: a4 = u64 [s1 + 0x70]\n 15739: a5 = u64 [s1 + 0x110]\n 15743: a4 = a4 ^ a5\n 15746: a5 = u64 [s1 + 0x58]\n 15749: a4 = a4 | a5\n 15752: a5 = u64 [s1 + 0x10]\n 15755: a4 = a4 | a5\n 15758: jump @563 if a4 == 0\n      : @552 (gas: 14)\n 15762: t1 = a3\n 15764: a4 = u64 [s1 + 0x190]\n 15768: a4 = a1 <u a4\n 15771: a3 = ra + a4\n 15774: t0 = a3 ^ t1\n 15777: a5 = a3 <u t1\n 15780: a5 = a4 if t0 == 0\n 15783: a5 = a5 + a2\n 15786: t0 = a5 <u a2\n 15789: a4 = u64 [s1 + 0x198]\n 15793: a2 = a2 <u a4\n 15796: a0 = a0 + a2\n 15799: a0 = a0 + t0\n 15802: t0 = 564, jump @1316\n      : @553 [@dyn 282] (gas: 1)\n 15808: jump @534 if a0 != 0\n      : @554 (gas: 3)\n 15812: a0 = s1 + 0x7ff\n 15816: a0 = a0 + 0x141\n 15820: ra = 566, jump @17\n      : @555 [@dyn 283] (gas: 12)\n 15826: a0 = s1 + 0x7ff\n 15830: a0 = a0 + 0x119\n 15834: a1 = u64 [a0 + 0x40]\n 15837: u64 [s1 + 0x190] = a1\n 15841: a1 = u64 [a0 + 0x38]\n 15844: u64 [s1 + 0x188] = a1\n 15848: a1 = u64 [a0 + 0x30]\n 15851: u64 [s1 + 0x180] = a1\n 15855: a0 = u64 [a0 + 0x28]\n 15858: u64 [s1 + 0x178] = a0\n 15862: a0 = u64 [s1 + 0x70]\n 15865: t0 = 568, jump @1310\n      : @556 [@dyn 284] (gas: 1)\n 15871: ra = 570, jump @1361\n      : @557 [@dyn 285] (gas: 1)\n 15877: t0 = 572, jump @1328\n      : @558 [@dyn 286] (gas: 1)\n 15883: ra = 574, jump @1356\n      : @559 [@dyn 287] (gas: 1)\n 15889: t0 = 576, jump @1295\n      : @560 [@dyn 288] (gas: 1)\n 15895: ra = 578, jump @1356\n      : @561 [@dyn 289] (gas: 1)\n 15901: t0 = 580, jump @1272\n      : @562 [@dyn 290] (gas: 8)\n 15907: a5 = a4 + 0x200\n 15911: u64 [a5 + 0xa0] = a3\n 15915: u64 [a5 + 0x98] = a2\n 15919: u64 [a5 + 0x90] = a1\n 15923: u64 [a5 + 0x88] = a0\n 15927: a1 = s1 + 0x23a0\n 15931: a0 = u64 [s1 + 0x170]\n 15935: ra = 582, jump @23\n      : @563 [@dyn 291] (gas: 19)\n 15941: a0 = u64 [s1 + 0x48]\n 15944: a1 = u64 [s1 + 0x30]\n 15947: a0 = a0 | a1\n 15950: a1 = u64 [s1 + 0x40]\n 15953: a2 = u64 [s1 + 0x18]\n 15956: a1 = a1 | a2\n 15959: a2 = u64 [s1 + 0x28]\n 15962: a3 = u64 [s1 + 0x20]\n 15965: a2 = a2 | a3\n 15968: a3 = u64 [s1 + 0x50]\n 15971: a3 = a3 + 0x1\n 15974: a4 = s1 + 0x2118\n 15978: a5 = a4 + 0x200\n 15982: u64 [a5 + 0xa8] = a3\n 15986: u64 [a5 + 0xb0] = a2\n 15990: u64 [a5 + 0xb8] = a1\n 15994: u64 [a5 + 0xc0] = a0\n 15998: a0 = 0x23c0\n 16002: jump @574\n      : @564 (gas: 15)\n 16005: u64 [s1 + 0x18] = t0\n 16008: u64 [s1 + 0x20] = a4\n 16011: u64 [s1 + 0x28] = ra\n 16014: u64 [s1 + 0x30] = t1\n 16017: a4 = s1 + 0x100\n 16021: a0 = u64 [a4 + 0x28]\n 16024: a1 = u64 [a4 + 0x20]\n 16027: a0 = a0 | a1\n 16030: a1 = 0xffffffe0\n 16040: a2 = u64 [a4 + 0x18]\n 16043: a1 = a2 <u a1\n 16046: a3 = u64 [a4 + 0x30]\n 16049: a1 = 0 if a3 != 0\n 16051: a1 = 0 if a0 != 0\n 16053: jump @534 if a1 == 0\n      : @565 (gas: 4)\n 16057: i32 a1 = a2 + 0x20\n 16060: a0 = s1 + 0x7ff\n 16064: a0 = a0 + 0x181\n 16068: ra = 584, jump @17\n      : @566 [@dyn 292] (gas: 19)\n 16074: a0 = s1 + 0x7ff\n 16078: a0 = a0 + 0x119\n 16082: a1 = u64 [a0 + 0x80]\n 16086: a2 = s1 + 0x100\n 16090: u64 [a2 + 0x90] = a1\n 16094: a1 = u64 [a0 + 0x78]\n 16097: u64 [a2 + 0x88] = a1\n 16101: a1 = u64 [a0 + 0x70]\n 16104: u64 [a2 + 0x78] = a1\n 16107: a0 = u64 [a0 + 0x68]\n 16110: u64 [a2 + 0x80] = a0\n 16114: a1 = u64 [s1 + 0x70]\n 16117: t2 = u64 [s1 + 0x48]\n 16120: t1 = u64 [s1 + 0x30]\n 16123: ra = u64 [s1 + 0x28]\n 16126: a0 = u64 [s1 + 0x40]\n 16129: a4 = u64 [s1 + 0x20]\n 16132: t0 = u64 [s1 + 0x18]\n 16135: fallthrough\n      : @567 (gas: 12)\n 16136: a0 = t0 | a0\n 16139: u64 [s1 + 0x170] = a0\n 16143: a0 = t1 | t2\n 16146: u64 [s1 + 0x168] = a0\n 16150: a0 = a4 | ra\n 16153: u64 [s1 + 0x160] = a0\n 16157: a2 = a1 << 0x3\n 16160: u64 [s1 + 0x198] = a2\n 16164: i32 a2 = 0x80 - a2\n 16168: a0 = 0xffffffffffffffff\n 16171: a1 = 0xffffffffffffffff\n 16174: ra = 586, jump @1361\n      : @568 [@dyn 293] (gas: 7)\n 16180: u64 [s1 + 0x140] = a0\n 16184: u64 [s1 + 0x158] = a1\n 16188: a0 = u64 [s1 + 0x70]\n 16191: i32 a2 = a0 << 0x3\n 16194: a0 = 0xffffffffffffffff\n 16197: a1 = 0xffffffffffffffff\n 16200: ra = 588, jump @1356\n      : @569 [@dyn 294] (gas: 1)\n 16206: t0 = 590, jump @1317\n      : @570 [@dyn 295] (gas: 1)\n 16212: ra = 592, jump @1356\n      : @571 [@dyn 296] (gas: 1)\n 16218: t0 = 594, jump @1277\n      : @572 [@dyn 297] (gas: 4)\n 16224: a4 = u64 [s1 + 0x50]\n 16227: a0 = a0 | a4\n 16230: a5 = s1 + 0x100\n 16234: t0 = 596, jump @1315\n      : @573 [@dyn 298] (gas: 7)\n 16240: a5 = a4 + 0x200\n 16244: u64 [a5 + 0xd8] = a2\n 16248: u64 [a5 + 0xe0] = a3\n 16252: u64 [a5 + 0xd0] = a1\n 16256: u64 [a5 + 0xc8] = a0\n 16260: a0 = 0x23e0\n 16264: fallthrough\n      : @574 (gas: 3)\n 16265: a1 = s1 + a0\n 16268: a0 = u64 [s1 + 0x60]\n 16271: ra = 598, jump @23\n      : @575 [@dyn 299] (gas: 6)\n 16277: a0 = sp + 0xffffffffffffffe0\n 16280: a2 = a0 & 0xffffffffffffffe0\n 16283: sp = a2\n 16285: a0 = u64 [s1 + 0x78]\n 16288: a3 = a0 + 0x2\n 16291: t0 = 600, jump @1354\n      : @576 [@dyn 300] (gas: 17)\n 16297: a5 = a0 + a1\n 16300: a0 = a5 <u a0\n 16303: a1 = u64 [s1 + 0x88]\n 16307: a0 = a0 + a1\n 16310: u64 [s1 + 0x138] = a5\n 16314: u64 [a2 + 0x10] = a5\n 16317: u64 [s1 + 0x148] = a4\n 16321: u64 [a2 + 0x8] = a4\n 16324: u64 [s1 + 0x150] = a3\n 16328: u64 [a2] = a3\n 16330: u64 [s1 + 0x60] = a2\n 16333: u64 [s1 + 0x140] = a0\n 16337: u64 [a2 + 0x18] = a0\n 16340: a0 = s1 + 0x7ff\n 16344: a0 = a0 + 0x121\n 16348: a1 = u64 [s1 + 0xa8]\n 16352: ra = 602, jump @17\n      : @577 [@dyn 301] (gas: 18)\n 16358: a1 = s1 + 0x7ff\n 16362: a1 = a1 + 0x119\n 16366: a2 = u64 [a1 + 0x20]\n 16369: a3 = u64 [a1 + 0x18]\n 16372: a0 = u64 [a1 + 0x10]\n 16375: a1 = u64 [a1 + 0x8]\n 16378: a4 = s1 + 0x100\n 16382: u64 [a4 + 0x30] = a0\n 16385: u64 [a4 + 0x28] = a2\n 16388: a0 = a0 | a2\n 16391: a2 = a1 | a3\n 16394: a2 = a2 | a0\n 16397: a2 = a2 >> 0x20\n 16400: u64 [a4 + 0x20] = a3\n 16403: a0 = a0 | a3\n 16406: a0 = a0 << 0x20\n 16409: a0 = a0 | a2\n 16412: jump @534 if a0 != 0\n      : @578 (gas: 4)\n 16416: a0 = s1 + 0x7ff\n 16420: a0 = a0 + 0x101\n 16424: u64 [s1 + 0x118] = a1\n 16428: ra = 604, jump @17\n      : @579 [@dyn 302] (gas: 19)\n 16434: a0 = s1 + 0x7ff\n 16438: a0 = a0 + 0x119\n 16442: a3 = u64 [a0]\n 16444: a1 = u64 [a0 + 0xfffffffffffffff8]\n 16447: a0 = s1 + 0x1000\n 16451: a2 = u64 [a0 + 0xfffffffffffff908]\n 16455: a0 = a3 >u 0\n 16457: a4 = a1 >u 0\n 16459: a4 = a0 if a3 != 0\n 16462: u64 [s1 + 0x110] = a2\n 16466: a0 = a2 >u 0\n 16468: u64 [s1 + 0x70] = a1\n 16471: u64 [s1 + 0x58] = a3\n 16474: a1 = a1 | a3\n 16477: u64 [s1 + 0x30] = a0\n 16480: u64 [s1 + 0x40] = a4\n 16483: u64 [s1 + 0x50] = a1\n 16486: a0 = a4 if a1 != 0\n 16489: jump @581 if a0 == 0\n      : @580 (gas: 1)\n 16492: jump @880\n      : @581 (gas: 7)\n 16495: a0 = s1 + 0x1000\n 16499: a0 = u64 [a0 + 0xfffffffffffff900]\n 16503: u64 [s1 + 0xa8] = a0\n 16507: a0 = s1 + 0x7ff\n 16511: a0 = a0 + 0xe1\n 16515: a1 = u64 [s1 + 0x60]\n 16518: ra = 606, jump @21\n      : @582 [@dyn 303] (gas: 21)\n 16524: a0 = s1 + 0x1000\n 16528: a2 = u64 [a0 + 0xfffffffffffff8e0]\n 16532: a0 = s1 + 0x1000\n 16536: a0 = u64 [a0 + 0xfffffffffffff8e8]\n 16540: a1 = s1 + 0x1000\n 16544: a1 = u64 [a1 + 0xfffffffffffff8f0]\n 16548: a3 = s1 + 0x1000\n 16552: a3 = u64 [a3 + 0xfffffffffffff8f8]\n 16556: a4 = s1 + 0x1000\n 16560: u64 [a4 + 0xfffffffffffff8b8] = a3\n 16564: a3 = s1 + 0x1000\n 16568: u64 [a3 + 0xfffffffffffff8b0] = a1\n 16572: a1 = s1 + 0x1000\n 16576: u64 [a1 + 0xfffffffffffff8a8] = a0\n 16580: a0 = s1 + 0x7ff\n 16584: a0 = a0 + 0xc1\n 16588: a1 = s1 + 0x7ff\n 16592: a1 = a1 + 0xa1\n 16596: a3 = s1 + 0x1000\n 16600: u64 [a3 + 0xfffffffffffff8a0] = a2\n 16604: ra = 608, jump @978\n      : @583 [@dyn 304] (gas: 9)\n 16610: a0 = s1 + 0x1000\n 16614: a3 = u64 [a0 + 0xfffffffffffff8d8]\n 16618: a0 = s1 + 0x1000\n 16622: a4 = u64 [a0 + 0xfffffffffffff8d0]\n 16626: a0 = s1 + 0x1000\n 16630: a5 = u64 [a0 + 0xfffffffffffff8c8]\n 16634: a0 = s1 + 0x1000\n 16638: a2 = u64 [a0 + 0xfffffffffffff8c0]\n 16642: t0 = 610, jump @1290\n      : @584 [@dyn 305] (gas: 2)\n 16648: u64 [s1 + 0x48] = a0\n 16651: jump @598 if a2 == 0\n      : @585 (gas: 16)\n 16655: a0 = u64 [s1 + 0x150]\n 16659: a1 = s1 + 0x1000\n 16663: u64 [a1 + 0xfffffffffffff880] = a0\n 16667: a0 = u64 [s1 + 0x148]\n 16671: a1 = s1 + 0x1000\n 16675: u64 [a1 + 0xfffffffffffff888] = a0\n 16679: a0 = u64 [s1 + 0x138]\n 16683: a1 = s1 + 0x1000\n 16687: u64 [a1 + 0xfffffffffffff890] = a0\n 16691: a1 = s1 + 0x7ff\n 16695: a1 = a1 + 0x81\n 16699: a0 = u64 [s1 + 0x140]\n 16703: a2 = s1 + 0x1000\n 16707: u64 [a2 + 0xfffffffffffff898] = a0\n 16711: a0 = 0\n 16713: ra = 612, jump @19\n      : @586 [@dyn 306] (gas: 3)\n 16719: a0 = u64 [s1 + 0x100]\n 16723: a0 = i32 [a0]\n 16725: jump @588 if a0 >u 31\n      : @587 (gas: 4)\n 16729: a1 = u64 [s1 + 0x100]\n 16733: u32 [a1 + 0] = 0x20\n 16736: t0 = 0x266\n 16740: jump @1338\n      : @588 (gas: 1)\n 16743: t0 = 614, jump @1338\n      : @589 [@dyn 307] (gas: 5)\n 16749: ra = 0x268\n 16753: ecalli 6 // 'hash_keccak_256'\n 16755: a0 = u64 [s1 + 0xa8]\n 16759: t0 = 0x26a\n 16763: jump @1335\n      : @590 [@dyn 308] (gas: 2)\n 16766: a0 = u64 [s1 + 0xa8]\n 16770: t0 = 618, jump @1335\n      : @591 [@dyn 309] (gas: 2)\n 16776: a4 = u64 [s1 + 0x70]\n 16779: t0 = 620, jump @1307\n      : @592 [@dyn 310] (gas: 35)\n 16785: a1 = u64 [s1 + 0x48]\n 16788: a1 = 0 if a5 != 0\n 16790: a3 = u64 [s1 + 0x50]\n 16793: a1 = 0 if a3 != 0\n 16795: a4 = 0 if a1 != 0\n 16797: a0 = 0 if a1 != 0\n 16799: t0 = t2 + a0\n 16802: a0 = t0 <u t2\n 16805: a5 = a2 + a0\n 16808: a4 = a4 + a5\n 16811: u64 [s1 + 0x198] = a4\n 16815: a5 = a4 ^ a2\n 16818: a3 = a4 <u a2\n 16821: a3 = a0 if a5 == 0\n 16824: u64 [s1 + 0x28] = a3\n 16827: a0 = u64 [s1 + 0x178]\n 16831: ra = a0 + 0x1f\n 16834: a4 = ra <u a0\n 16837: a3 = u64 [s1 + 0x180]\n 16841: a0 = a3 + a4\n 16844: a5 = a0 <u a3\n 16847: a5 = a4 if a4 == 0\n 16850: t1 = u64 [s1 + 0x190]\n 16854: t1 = t1 + a5\n 16857: a4 = t1 << 0x3b\n 16860: a3 = a0 >> 0x5\n 16863: a3 = a3 | a4\n 16866: a0 = a0 << 0x3b\n 16869: a4 = ra >> 0x5\n 16872: a0 = a0 | a4\n 16875: a0 = a0 + t2\n 16878: u64 [s1 + 0x170] = a0\n 16882: a0 = a0 <u t2\n 16885: t2 = t0\n 16887: t0 = 622, jump @1322\n      : @593 [@dyn 311] (gas: 47)\n 16893: a0 = u64 [s1 + 0x70]\n 16896: a0 = a4 <u a0\n 16899: a3 = u64 [s1 + 0x58]\n 16902: a0 = a0 + a3\n 16905: a3 = a4 >> 0x5\n 16908: a4 = a0 << 0x3b\n 16911: a3 = a3 | a4\n 16914: a4 = u64 [s1 + 0x160]\n 16918: t0 = u64 [a4]\n 16920: a4 = u64 [a4 + 0x8]\n 16923: a0 = a0 >> 0x5\n 16926: a3 = 0 if a1 != 0\n 16928: a0 = 0 if a1 != 0\n 16930: a1 = reverse a4\n 16932: a4 = reverse t0\n 16934: a0 = a0 + a4\n 16937: a3 = a3 + a1\n 16940: a5 = a3 <u a1\n 16943: a0 = a0 + a5\n 16946: ra = u64 [s1 + 0x28]\n 16949: ra = ra + a3\n 16952: a3 = ra <u a3\n 16955: t0 = a0 + a3\n 16958: a0 = u64 [s1 + 0x190]\n 16962: a0 = t1 <u a0\n 16965: a3 = u64 [s1 + 0x188]\n 16969: a0 = a0 + a3\n 16972: a3 = t1 >> 0x5\n 16975: a5 = a0 << 0x3b\n 16978: a3 = a3 | a5\n 16981: a0 = a0 >> 0x5\n 16984: a0 = a0 + a4\n 16987: a5 = s1 + 0x100\n 16991: a4 = u64 [a5 + 0x98]\n 16995: a3 = a3 + a1\n 16998: a1 = a3 <u a1\n 17001: a0 = a0 + a1\n 17004: a2 = a2 + a3\n 17007: u64 [a5 + 0x60] = a2\n 17010: a1 = a2 <u a3\n 17013: a0 = a0 + a1\n 17016: u64 [a5 + 0x58] = a0\n 17019: a0 = sp + 0xffffffffffffffe0\n 17022: a0 = a0 & 0xffffffffffffffe0\n 17025: u64 [a5 + 0x90] = a0\n 17029: sp = a0\n 17031: fallthrough\n      : @594 (gas: 25)\n 17032: a0 = u64 [s1 + 0x170]\n 17036: a0 = t2 <u a0\n 17039: a2 = u64 [s1 + 0x168]\n 17043: a1 = a4 ^ a2\n 17046: a2 = a4 <u a2\n 17049: a2 = a0 if a1 == 0\n 17052: a5 = u64 [s1 + 0x160]\n 17056: a0 = ra <u a5\n 17059: a3 = u64 [s1 + 0x158]\n 17063: a1 = t0 ^ a3\n 17066: a3 = t0 <u a3\n 17069: a3 = a0 if a1 == 0\n 17072: a0 = ra ^ a5\n 17075: a0 = a0 | a1\n 17078: a3 = a2 if a0 == 0\n 17081: u64 [s1 + 0x188] = t2\n 17085: a0 = u64 [s1 + 0x190]\n 17089: u64 [a0] = t2\n 17091: u64 [s1 + 0x198] = a4\n 17095: u64 [a0 + 0x8] = a4\n 17098: u64 [s1 + 0x178] = ra\n 17102: u64 [a0 + 0x10] = ra\n 17105: u64 [s1 + 0x180] = t0\n 17109: u64 [a0 + 0x18] = t0\n 17112: jump @598 if a3 == 0\n      : @595 (gas: 8)\n 17115: a0 = s1 + 0x2118\n 17119: u64 [a0 + 768] = 0\n 17123: u64 [a0 + 760] = 0\n 17127: u64 [a0 + 752] = 0\n 17131: u64 [a0 + 744] = 0\n 17135: a1 = s1 + 0x2400\n 17139: a0 = u64 [s1 + 0x190]\n 17143: ra = 624, jump @23\n      : @596 [@dyn 312] (gas: 1)\n 17149: t0 = 626, jump @1311\n      : @597 [@dyn 313] (gas: 4)\n 17155: t0 = u64 [s1 + 0x180]\n 17159: t0 = t0 + a1\n 17162: ra = a0\n 17164: jump @594\n      : @598 (gas: 28)\n 17167: a0 = u64 [s1 + 0x48]\n 17170: a0 = a0 ^ 0x1\n 17173: a3 = u64 [s1 + 0x110]\n 17177: a1 = u64 [s1 + 0x30]\n 17180: a0 = a1 if a3 != 0\n 17183: a1 = u64 [s1 + 0x40]\n 17186: a2 = u64 [s1 + 0x50]\n 17189: a0 = a1 if a2 != 0\n 17192: a4 = u64 [s1 + 0x58]\n 17195: a1 = a3 | a4\n 17198: u64 [s1 + 0x50] = a1\n 17201: a1 = u64 [s1 + 0x70]\n 17204: a2 = a1 >> 0x3f\n 17207: u64 [s1 + 0x48] = a2\n 17210: a2 = a4 << 0x1\n 17213: u64 [s1 + 0x40] = a2\n 17216: a2 = a3 >> 0x3f\n 17219: u64 [s1 + 0x28] = a2\n 17222: a1 = a1 << 0x1\n 17225: u64 [s1 + 0x18] = a1\n 17228: a1 = u64 [s1 + 0xa8]\n 17232: a2 = a1 >> 0x3f\n 17235: u64 [s1 + 0x30] = a2\n 17238: a2 = a3 << 0x1\n 17241: u64 [s1 + 0x20] = a2\n 17244: a2 = a1 << 0x1\n 17247: u64 [s1 + 0x58] = a2\n 17250: jump @615 if a0 == 0\n      : @599 (gas: 18)\n 17254: a1 = a1 & 0xffffffffffffffe0\n 17257: u64 [s1 + 0x110] = a1\n 17261: a0 = u64 [s1 + 0x150]\n 17265: a1 = s1 + 0x1000\n 17269: u64 [a1 + 0xfffffffffffff840] = a0\n 17273: a0 = u64 [s1 + 0x148]\n 17277: a1 = s1 + 0x1000\n 17281: u64 [a1 + 0xfffffffffffff848] = a0\n 17285: a0 = u64 [s1 + 0x138]\n 17289: a1 = s1 + 0x1000\n 17293: u64 [a1 + 0xfffffffffffff850] = a0\n 17297: a1 = s1 + 0x7ff\n 17301: a1 = a1 + 0x41\n 17304: a0 = u64 [s1 + 0x140]\n 17308: a2 = s1 + 0x1000\n 17312: u64 [a2 + 0xfffffffffffff858] = a0\n 17316: a0 = 0\n 17318: ra = 628, jump @19\n      : @600 [@dyn 314] (gas: 1)\n 17324: t0 = 630, jump @1319\n      : @601 [@dyn 315] (gas: 1)\n 17330: ra = 632, jump @30\n      : @602 [@dyn 316] (gas: 1)\n 17336: t0 = 634, jump @1308\n      : @603 [@dyn 317] (gas: 4)\n 17342: ra = 0x27c\n 17346: ecalli 6 // 'hash_keccak_256'\n 17348: t0 = 0x27e\n 17352: jump @1336\n      : @604 [@dyn 318] (gas: 1)\n 17355: t0 = 638, jump @1336\n      : @605 [@dyn 319] (gas: 1)\n 17361: t0 = 640, jump @1279\n      : @606 [@dyn 320] (gas: 9)\n 17367: t0 = a0\n 17369: a1 = u64 [s1 + 0x170]\n 17373: u64 [a1 + 0x18] = a0\n 17376: u64 [s1 + 0x150] = ra\n 17380: u64 [a1 + 0x10] = ra\n 17383: u64 [a1 + 0x8] = t2\n 17386: u64 [a1] = t1\n 17388: u64 [s1 + 0x168] = t0\n 17392: t0 = 642, jump @1304\n      : @607 [@dyn 321] (gas: 12)\n 17398: a0 = u64 [s1 + 0x198]\n 17402: a1 = a1 + a0\n 17405: a3 = u64 [s1 + 0x130]\n 17409: ra = a5 + a3\n 17412: a2 = u64 [s1 + 0x120]\n 17416: a0 = u64 [s1 + 0x190]\n 17420: a2 = a2 + a0\n 17423: a0 = u64 [s1 + 0x128]\n 17427: a3 = a5\n 17429: a5 = u64 [s1 + 0x188]\n 17433: a0 = a0 + a5\n 17436: jump @617 if a4 != 0\n      : @608 (gas: 14)\n 17440: a4 = u64 [s1 + 0x198]\n 17444: a4 = a1 <u a4\n 17447: ra = ra + a4\n 17450: t0 = ra ^ a3\n 17453: u64 [s1 + 0x138] = a3\n 17457: a5 = ra <u a3\n 17460: a5 = a4 if t0 == 0\n 17463: a5 = a5 + a2\n 17466: t0 = a5 <u a2\n 17469: a3 = u64 [s1 + 0x190]\n 17473: a2 = a2 <u a3\n 17476: a0 = a0 + a2\n 17479: a0 = a0 + t0\n 17482: t0 = 644, jump @1324\n      : @609 [@dyn 322] (gas: 1)\n 17488: jump @534 if a0 != 0\n      : @610 (gas: 2)\n 17492: a0 = s1 + 0x4a0\n 17496: ra = 646, jump @17\n      : @611 [@dyn 323] (gas: 14)\n 17502: a4 = s1 + 0x400\n 17506: a0 = u64 [a4 + 0xb8]\n 17510: a1 = u64 [a4 + 0xb0]\n 17514: a2 = u64 [a4 + 0xa8]\n 17518: a3 = u64 [a4 + 0xa0]\n 17522: a4 = s1 + 0x2118\n 17526: a5 = a4 + 0x300\n 17530: u64 [a5 + 0x20] = a0\n 17533: u64 [a5 + 0x18] = a1\n 17536: u64 [a5 + 0x10] = a2\n 17539: u64 [a5 + 0x8] = a3\n 17542: a1 = s1 + 0x2420\n 17546: a0 = u64 [s1 + 0x170]\n 17550: ra = 648, jump @23\n      : @612 [@dyn 324] (gas: 1)\n 17556: t0 = 650, jump @1275\n      : @613 [@dyn 325] (gas: 4)\n 17562: t0 = u64 [s1 + 0x180]\n 17566: t0 = t0 + a5\n 17569: u64 [s1 + 0x180] = t0\n 17573: t0 = 652, jump @1331\n      : @614 [@dyn 326] (gas: 11)\n 17579: t0 = a0\n 17581: u64 [a5 + 0x18] = a0\n 17584: u64 [s1 + 0x150] = ra\n 17588: a0 = u64 [s1 + 0x168]\n 17592: u64 [s1 + 0x198] = a0\n 17596: a5 = u64 [s1 + 0x148]\n 17600: u64 [s1 + 0x190] = a3\n 17604: a3 = a1\n 17606: u64 [s1 + 0x168] = t0\n 17610: t0 = 0x282\n 17614: jump @1304\n      : @615 (gas: 5)\n 17617: a0 = u64 [s1 + 0x70]\n 17620: a0 = a0 | a1\n 17623: a1 = u64 [s1 + 0x50]\n 17626: a0 = a0 | a1\n 17629: jump @630 if a0 != 0\n      : @616 (gas: 5)\n 17633: u64 [s1 + 384] = 0\n 17637: u64 [s1 + 376] = 0\n 17641: u64 [s1 + 392] = 0\n 17645: u64 [s1 + 400] = 0\n 17649: jump @633\n      : @617 (gas: 10)\n 17652: t1 = u64 [s1 + 0x190]\n 17656: t0 = u64 [s1 + 0x198]\n 17660: a4 = u64 [s1 + 0xa8]\n 17664: a5 = u64 [s1 + 0x110]\n 17668: a4 = a4 ^ a5\n 17671: a5 = u64 [s1 + 0x70]\n 17674: a4 = a4 | a5\n 17677: a5 = u64 [s1 + 0x50]\n 17680: a4 = a4 | a5\n 17683: jump @629 if a4 == 0\n      : @618 (gas: 12)\n 17687: t2 = a3\n 17689: a4 = a1 <u t0\n 17692: a3 = ra + a4\n 17695: t0 = a3 ^ t2\n 17698: a5 = a3 <u t2\n 17701: a5 = a4 if t0 == 0\n 17704: a5 = a5 + a2\n 17707: a4 = a5 <u a2\n 17710: a2 = a2 <u t1\n 17713: a0 = a0 + a2\n 17716: a0 = a0 + a4\n 17719: t0 = 654, jump @1316\n      : @619 [@dyn 327] (gas: 1)\n 17725: jump @534 if a0 != 0\n      : @620 (gas: 3)\n 17729: a0 = s1 + 0x7ff\n 17733: a0 = a0 + 0x21\n 17736: ra = 656, jump @17\n      : @621 [@dyn 328] (gas: 14)\n 17742: a0 = s1 + 0x1000\n 17746: a0 = u64 [a0 + 0xfffffffffffff838]\n 17750: u64 [s1 + 0x190] = a0\n 17754: a0 = s1 + 0x1000\n 17758: a0 = u64 [a0 + 0xfffffffffffff830]\n 17762: u64 [s1 + 0x188] = a0\n 17766: a0 = s1 + 0x1000\n 17770: a0 = u64 [a0 + 0xfffffffffffff828]\n 17774: u64 [s1 + 0x180] = a0\n 17778: a0 = s1 + 0x1000\n 17782: a0 = u64 [a0 + 0xfffffffffffff820]\n 17786: u64 [s1 + 0x178] = a0\n 17790: a0 = u64 [s1 + 0xa8]\n 17794: t0 = 658, jump @1310\n      : @622 [@dyn 329] (gas: 1)\n 17800: ra = 660, jump @1361\n      : @623 [@dyn 330] (gas: 1)\n 17806: t0 = 662, jump @1328\n      : @624 [@dyn 331] (gas: 1)\n 17812: ra = 664, jump @1356\n      : @625 [@dyn 332] (gas: 1)\n 17818: t0 = 666, jump @1295\n      : @626 [@dyn 333] (gas: 1)\n 17824: ra = 668, jump @1356\n      : @627 [@dyn 334] (gas: 1)\n 17830: t0 = 670, jump @1272\n      : @628 [@dyn 335] (gas: 8)\n 17836: a5 = a4 + 0x300\n 17840: u64 [a5 + 0x40] = a3\n 17843: u64 [a5 + 0x38] = a2\n 17846: u64 [a5 + 0x30] = a1\n 17849: u64 [a5 + 0x28] = a0\n 17852: a1 = s1 + 0x2440\n 17856: a0 = u64 [s1 + 0x170]\n 17860: ra = 672, jump @23\n      : @629 [@dyn 336] (gas: 19)\n 17866: a0 = u64 [s1 + 0x48]\n 17869: a1 = u64 [s1 + 0x40]\n 17872: a0 = a0 | a1\n 17875: a1 = u64 [s1 + 0x28]\n 17878: a2 = u64 [s1 + 0x18]\n 17881: a1 = a1 | a2\n 17884: a2 = u64 [s1 + 0x30]\n 17887: a3 = u64 [s1 + 0x20]\n 17890: a2 = a2 | a3\n 17893: a3 = u64 [s1 + 0x58]\n 17896: a3 = a3 + 0x1\n 17899: a4 = s1 + 0x2118\n 17903: a5 = a4 + 0x300\n 17907: u64 [a5 + 0x48] = a3\n 17910: u64 [a5 + 0x50] = a2\n 17913: u64 [a5 + 0x58] = a1\n 17916: u64 [a5 + 0x60] = a0\n 17919: a0 = 0x2460\n 17923: jump @640\n      : @630 (gas: 11)\n 17926: a3 = s1 + 0x100\n 17930: a0 = u64 [a3 + 0x28]\n 17933: a1 = u64 [a3 + 0x20]\n 17936: a0 = a0 | a1\n 17939: a1 = 0xffffffe0\n 17949: a2 = u64 [a3 + 0x18]\n 17952: a1 = a2 <u a1\n 17955: a2 = u64 [a3 + 0x30]\n 17958: a1 = 0 if a2 != 0\n 17960: a1 = 0 if a0 != 0\n 17962: jump @534 if a1 == 0\n      : @631 (gas: 5)\n 17966: a0 = u64 [s1 + 0x118]\n 17970: i32 a1 = a0 + 0x20\n 17973: a0 = s1 + 0x7ff\n 17977: a0 = a0 + 0x61\n 17980: ra = 674, jump @17\n      : @632 [@dyn 337] (gas: 14)\n 17986: a0 = s1 + 0x1000\n 17990: a0 = u64 [a0 + 0xfffffffffffff878]\n 17994: a1 = s1 + 0x100\n 17998: u64 [a1 + 0x90] = a0\n 18002: a0 = s1 + 0x1000\n 18006: a0 = u64 [a0 + 0xfffffffffffff870]\n 18010: u64 [a1 + 0x88] = a0\n 18014: a0 = s1 + 0x1000\n 18018: a0 = u64 [a0 + 0xfffffffffffff868]\n 18022: u64 [a1 + 0x78] = a0\n 18025: a0 = s1 + 0x1000\n 18029: a0 = u64 [a0 + 0xfffffffffffff860]\n 18033: u64 [a1 + 0x80] = a0\n 18037: fallthrough\n      : @633 (gas: 19)\n 18038: a0 = u64 [s1 + 0x28]\n 18041: a1 = u64 [s1 + 0x18]\n 18044: a0 = a0 | a1\n 18047: u64 [s1 + 0x170] = a0\n 18051: a0 = u64 [s1 + 0x48]\n 18054: a1 = u64 [s1 + 0x40]\n 18057: a0 = a0 | a1\n 18060: u64 [s1 + 0x168] = a0\n 18064: a0 = u64 [s1 + 0x30]\n 18067: a1 = u64 [s1 + 0x20]\n 18070: a0 = a0 | a1\n 18073: u64 [s1 + 0x160] = a0\n 18077: a1 = u64 [s1 + 0xa8]\n 18081: a1 = a1 << 0x3\n 18084: u64 [s1 + 0x198] = a1\n 18088: i32 a2 = 0x80 - a1\n 18092: a0 = 0xffffffffffffffff\n 18095: a1 = 0xffffffffffffffff\n 18098: ra = 676, jump @1361\n      : @634 [@dyn 338] (gas: 7)\n 18104: u64 [s1 + 0x140] = a0\n 18108: u64 [s1 + 0x158] = a1\n 18112: a0 = u64 [s1 + 0xa8]\n 18116: i32 a2 = a0 << 0x3\n 18119: a0 = 0xffffffffffffffff\n 18122: a1 = 0xffffffffffffffff\n 18125: ra = 678, jump @1356\n      : @635 [@dyn 339] (gas: 1)\n 18131: t0 = 680, jump @1317\n      : @636 [@dyn 340] (gas: 1)\n 18137: ra = 682, jump @1356\n      : @637 [@dyn 341] (gas: 1)\n 18143: t0 = 684, jump @1277\n      : @638 [@dyn 342] (gas: 4)\n 18149: a4 = u64 [s1 + 0x58]\n 18152: a0 = a0 | a4\n 18155: a5 = s1 + 0x100\n 18159: t0 = 686, jump @1315\n      : @639 [@dyn 343] (gas: 7)\n 18165: a5 = a4 + 0x300\n 18169: u64 [a5 + 0x78] = a2\n 18172: u64 [a5 + 0x80] = a3\n 18176: u64 [a5 + 0x70] = a1\n 18179: u64 [a5 + 0x68] = a0\n 18182: a0 = 0x2480\n 18186: fallthrough\n      : @640 (gas: 3)\n 18187: a1 = s1 + a0\n 18190: a0 = u64 [s1 + 0x60]\n 18193: ra = 688, jump @23\n      : @641 [@dyn 344] (gas: 4)\n 18199: a0 = s1 + 0x7ff\n 18203: a0 = a0 + 0x1\n 18206: a1 = u64 [s1 + 0xa0]\n 18210: ra = 690, jump @17\n      : @642 [@dyn 345] (gas: 33)\n 18216: a0 = s1 + 0x1000\n 18220: t0 = u64 [a0 + 0xfffffffffffff800]\n 18224: a0 = s1 + 0x1000\n 18228: t1 = u64 [a0 + 0xfffffffffffff808]\n 18232: a0 = s1 + 0x1000\n 18236: t2 = u64 [a0 + 0xfffffffffffff810]\n 18240: a0 = u64 [s1 + 0x78]\n 18243: a3 = a0 + 0x3\n 18246: a4 = a3 <u a0\n 18249: a0 = u64 [s1 + 0x80]\n 18253: a5 = a0 + a4\n 18256: a0 = a5 <u a0\n 18259: a0 = a4 if a4 == 0\n 18262: a1 = s1 + 0x1000\n 18266: a4 = u64 [a1 + 0xfffffffffffff818]\n 18270: a2 = s1 + 0x2118\n 18274: u64 [a2 + 0x390] = a5\n 18278: a5 = a2 + 0x300\n 18282: u64 [a5 + 0x88] = a3\n 18286: a1 = u64 [s1 + 0x90]\n 18290: a0 = a0 + a1\n 18293: u64 [a5 + 0x98] = a0\n 18297: a0 = a0 <u a1\n 18300: a1 = u64 [s1 + 0x88]\n 18304: a0 = a0 + a1\n 18307: u64 [a5 + 0xa0] = a0\n 18311: u64 [a5 + 0xc0] = a4\n 18315: u64 [a2 + 0x3b8] = t2\n 18319: u64 [a2 + 0x3b0] = t1\n 18323: u64 [a2 + 0x3a8] = t0\n 18327: a0 = s1 + 0x24a0\n 18331: a1 = s1 + 0x24c0\n 18335: ra = 692, jump @23\n      : @643 [@dyn 346] (gas: 23)\n 18341: a0 = sp + 0xffffffffffffffe0\n 18344: a5 = a0 & 0xffffffffffffffe0\n 18347: sp = a5\n 18349: a1 = u64 [s1 + 0x78]\n 18352: a0 = a1 + 0x4\n 18355: a1 = a0 <u a1\n 18358: a3 = u64 [s1 + 0x80]\n 18362: a2 = a3 + a1\n 18365: a3 = a2 <u a3\n 18368: a3 = a1 if a1 == 0\n 18371: a1 = u64 [s1 + 0x90]\n 18375: a3 = a3 + a1\n 18378: a1 = a3 <u a1\n 18381: a4 = u64 [s1 + 0x88]\n 18385: a1 = a1 + a4\n 18388: u64 [s1 + 0x198] = a5\n 18392: u64 [a5 + 0x18] = a1\n 18395: u64 [a5 + 0x10] = a3\n 18398: u64 [a5 + 0x8] = a2\n 18401: u64 [a5] = a0\n 18403: a0 = s1 + 0x7e0\n 18407: a1 = u64 [s1 + 0x98]\n 18411: ra = 694, jump @17\n      : @644 [@dyn 347] (gas: 9)\n 18417: a0 = u64 [s1 + 0x7e0]\n 18421: u64 [s1 + 0x190] = a0\n 18425: a0 = u64 [s1 + 0x7e8]\n 18429: u64 [s1 + 0x188] = a0\n 18433: a0 = u32 [s1 + 0x7f0]\n 18437: u64 [s1 + 0x180] = a0\n 18441: a0 = s1 + 0x7c0\n 18445: a1 = u64 [s1 + 0x198]\n 18449: ra = 696, jump @21\n      : @645 [@dyn 348] (gas: 16)\n 18455: a0 = u32 [s1 + 0x7d4]\n 18459: a0 = a0 << 0x20\n 18462: a1 = u64 [s1 + 0x7d8]\n 18466: a2 = u64 [s1 + 0x180]\n 18470: a0 = a0 | a2\n 18473: a2 = s1 + 0x2118\n 18477: a3 = u64 [s1 + 0x188]\n 18481: a4 = a2 + 0x300\n 18485: u64 [a4 + 0xd0] = a3\n 18489: a3 = u64 [s1 + 0x190]\n 18493: u64 [a4 + 0xc8] = a3\n 18497: u64 [a4 + 0xe0] = a1\n 18501: u64 [a4 + 0xd8] = a0\n 18505: a1 = s1 + 0x24e0\n 18509: a0 = u64 [s1 + 0x198]\n 18513: ra = 698, jump @23\n      : @646 [@dyn 349] (gas: 3)\n 18519: a0 = s1 + 0x7a0\n 18523: a1 = u64 [s1 + 0x68]\n 18526: ra = 700, jump @17\n      : @647 [@dyn 350] (gas: 12)\n 18532: a0 = u64 [s1 + 0x7b8]\n 18536: a1 = u64 [s1 + 0x7a8]\n 18540: a2 = u64 [s1 + 0x7b0]\n 18544: a3 = u64 [s1 + 0x7a0]\n 18548: a0 = a0 | a1\n 18551: a2 = a2 | a3\n 18554: a0 = a0 | a2\n 18557: a0 = a0 >u 0\n 18559: u64 [s1 + 0x190] = a0\n 18563: a0 = s1 + 0x780\n 18567: a1 = u64 [s1 + 0x198]\n 18571: ra = 702, jump @21\n      : @648 [@dyn 351] (gas: 18)\n 18577: a0 = u64 [s1 + 0x780]\n 18581: a1 = u64 [s1 + 0x788]\n 18585: a2 = u64 [s1 + 0x798]\n 18589: a3 = u64 [s1 + 0x790]\n 18593: a4 = u64 [s1 + 0x190]\n 18597: a4 = a4 << 0x20\n 18600: a5 = 0xffffff00ffffffff\n 18610: a3 = a3 & a5\n 18613: a3 = a3 | a4\n 18616: a4 = s1 + 0x2118\n 18620: u64 [a4 + 0x400] = a2\n 18624: a2 = a4 + 0x300\n 18628: u64 [a2 + 0xf0] = a1\n 18632: u64 [a2 + 0xe8] = a0\n 18636: u64 [a2 + 0xf8] = a3\n 18640: a1 = s1 + 0x2500\n 18644: a0 = u64 [s1 + 0x198]\n 18648: ra = 704, jump @23\n      : @649 [@dyn 352] (gas: 6)\n 18654: a0 = sp + 0xffffffffffffffe0\n 18657: a2 = a0 & 0xffffffffffffffe0\n 18660: sp = a2\n 18662: a0 = u64 [s1 + 0x78]\n 18665: a3 = a0 + 0x5\n 18668: t0 = 706, jump @1354\n      : @650 [@dyn 353] (gas: 16)\n 18674: a1 = a1 + a0\n 18677: a0 = a1 <u a0\n 18680: a5 = u64 [s1 + 0x88]\n 18684: a0 = a0 + a5\n 18687: u64 [s1 + 0x140] = a0\n 18691: u64 [a2 + 0x18] = a0\n 18694: u64 [s1 + 0x138] = a1\n 18698: u64 [a2 + 0x10] = a1\n 18701: u64 [s1 + 0x148] = a4\n 18705: u64 [a2 + 0x8] = a4\n 18708: u64 [s1 + 0x98] = a2\n 18712: u64 [s1 + 0x150] = a3\n 18716: u64 [a2] = a3\n 18718: a0 = s1 + 0x760\n 18722: a1 = u64 [s1 + 0x38]\n 18725: ra = 708, jump @17\n      : @651 [@dyn 354] (gas: 18)\n 18731: a4 = s1 + 0x700\n 18735: a2 = u64 [a4 + 0x78]\n 18738: a3 = u64 [a4 + 0x70]\n 18741: a0 = u64 [a4 + 0x68]\n 18744: a1 = u64 [a4 + 0x60]\n 18747: a4 = s1 + 0x100\n 18751: u64 [a4 + 0x28] = a0\n 18754: u64 [a4 + 0x20] = a2\n 18757: a0 = a0 | a2\n 18760: u64 [a4 + 0x30] = a1\n 18763: a1 = a1 | a3\n 18766: a1 = a1 | a0\n 18769: a1 = a1 >> 0x20\n 18772: u64 [a4 + 0x18] = a3\n 18775: a0 = a0 | a3\n 18778: a0 = a0 << 0x20\n 18781: a0 = a0 | a1\n 18784: jump @653 if a0 == 0\n      : @652 (gas: 1)\n 18787: jump @534\n      : @653 (gas: 3)\n 18790: a0 = s1 + 0x740\n 18794: a1 = u64 [s1 + 0x130]\n 18798: ra = 710, jump @17\n      : @654 [@dyn 355] (gas: 17)\n 18804: a0 = s1 + 0x700\n 18808: a3 = u64 [a0 + 0x58]\n 18811: a2 = u64 [a0 + 0x50]\n 18814: a1 = u64 [a0 + 0x48]\n 18817: a0 = a3 >u 0\n 18819: a4 = a2 >u 0\n 18821: a4 = a0 if a3 != 0\n 18824: u64 [s1 + 0xa0] = a1\n 18828: a0 = a1 >u 0\n 18830: u64 [s1 + 0x90] = a2\n 18834: u64 [s1 + 0x88] = a3\n 18838: a2 = a2 | a3\n 18841: u64 [s1 + 0x70] = a0\n 18844: u64 [s1 + 0x78] = a4\n 18847: u64 [s1 + 0x110] = a2\n 18851: a0 = a4 if a2 != 0\n 18854: jump @656 if a0 == 0\n      : @655 (gas: 1)\n 18857: jump @882\n      : @656 (gas: 5)\n 18860: a0 = u64 [s1 + 0x740]\n 18864: u64 [s1 + 0xa8] = a0\n 18868: a0 = s1 + 0x720\n 18872: a1 = u64 [s1 + 0x98]\n 18876: ra = 712, jump @21\n      : @657 [@dyn 356] (gas: 12)\n 18882: a2 = u64 [s1 + 0x720]\n 18886: a0 = u64 [s1 + 0x728]\n 18890: a1 = u64 [s1 + 0x730]\n 18894: a3 = u64 [s1 + 0x738]\n 18898: a4 = s1 + 0x600\n 18902: u64 [a4 + 0xf8] = a3\n 18906: u64 [a4 + 0xf0] = a1\n 18910: u64 [a4 + 0xe8] = a0\n 18914: a0 = s1 + 0x700\n 18918: a1 = s1 + 0x6e0\n 18922: u64 [a4 + 0xe0] = a2\n 18926: ra = 714, jump @978\n      : @658 [@dyn 357] (gas: 6)\n 18932: a0 = s1 + 0x700\n 18936: a3 = u64 [a0 + 0x18]\n 18939: a4 = u64 [a0 + 0x10]\n 18942: a5 = u64 [a0 + 0x8]\n 18945: a2 = u64 [a0]\n 18947: t0 = 716, jump @1290\n      : @659 [@dyn 358] (gas: 2)\n 18953: u64 [s1 + 0x80] = a0\n 18957: jump @672 if a2 == 0\n      : @660 (gas: 12)\n 18961: a0 = u64 [s1 + 0x150]\n 18965: a2 = s1 + 0x600\n 18969: u64 [a2 + 0xc0] = a0\n 18973: a0 = u64 [s1 + 0x148]\n 18977: u64 [a2 + 0xc8] = a0\n 18981: a0 = u64 [s1 + 0x138]\n 18985: u64 [a2 + 0xd0] = a0\n 18989: a1 = s1 + 0x6c0\n 18993: a0 = u64 [s1 + 0x140]\n 18997: u64 [a2 + 0xd8] = a0\n 19001: a0 = 0\n 19003: ra = 718, jump @19\n      : @661 [@dyn 359] (gas: 3)\n 19009: a0 = u64 [s1 + 0x100]\n 19013: a0 = i32 [a0]\n 19015: jump @663 if a0 >u 31\n      : @662 (gas: 4)\n 19019: a1 = u64 [s1 + 0x100]\n 19023: u32 [a1 + 0] = 0x20\n 19026: t0 = 0x2d0\n 19030: jump @1338\n      : @663 (gas: 1)\n 19033: t0 = 720, jump @1338\n      : @664 [@dyn 360] (gas: 3)\n 19039: ra = 0x2d2\n 19043: ecalli 6 // 'hash_keccak_256'\n 19045: fallthrough\n      : @665 [@dyn 361] (gas: 9)\n 19046: a0 = u64 [s1 + 0xa8]\n 19050: a1 = a0 + 0x1f\n 19053: a0 = a1 <u a0\n 19056: a5 = u64 [s1 + 0xa0]\n 19060: a2 = a5 + a0\n 19063: a3 = a2 <u a5\n 19066: a3 = a0 if a0 == 0\n 19069: a4 = u64 [s1 + 0x90]\n 19073: t0 = 724, jump @1307\n      : @666 [@dyn 362] (gas: 35)\n 19079: a1 = u64 [s1 + 0x80]\n 19083: a1 = 0 if a5 != 0\n 19085: a3 = u64 [s1 + 0x110]\n 19089: a1 = 0 if a3 != 0\n 19091: a4 = 0 if a1 != 0\n 19093: a0 = 0 if a1 != 0\n 19095: t0 = t2 + a0\n 19098: a0 = t0 <u t2\n 19101: a5 = a2 + a0\n 19104: a4 = a4 + a5\n 19107: u64 [s1 + 0x198] = a4\n 19111: a5 = a4 ^ a2\n 19114: a3 = a4 <u a2\n 19117: a3 = a0 if a5 == 0\n 19120: u64 [s1 + 0x100] = a3\n 19124: a0 = u64 [s1 + 0x178]\n 19128: ra = a0 + 0x1f\n 19131: a4 = ra <u a0\n 19134: a3 = u64 [s1 + 0x180]\n 19138: a0 = a3 + a4\n 19141: a5 = a0 <u a3\n 19144: a5 = a4 if a4 == 0\n 19147: t1 = u64 [s1 + 0x190]\n 19151: t1 = t1 + a5\n 19154: a4 = t1 << 0x3b\n 19157: a3 = a0 >> 0x5\n 19160: a3 = a3 | a4\n 19163: a0 = a0 << 0x3b\n 19166: a4 = ra >> 0x5\n 19169: a0 = a0 | a4\n 19172: a0 = a0 + t2\n 19175: u64 [s1 + 0x170] = a0\n 19179: a0 = a0 <u t2\n 19182: t2 = t0\n 19184: t0 = 726, jump @1322\n      : @667 [@dyn 363] (gas: 47)\n 19190: a0 = u64 [s1 + 0x90]\n 19194: a0 = a4 <u a0\n 19197: a3 = u64 [s1 + 0x88]\n 19201: a0 = a0 + a3\n 19204: a3 = a4 >> 0x5\n 19207: a4 = a0 << 0x3b\n 19210: a3 = a3 | a4\n 19213: a4 = u64 [s1 + 0x160]\n 19217: t0 = u64 [a4]\n 19219: a4 = u64 [a4 + 0x8]\n 19222: a0 = a0 >> 0x5\n 19225: a3 = 0 if a1 != 0\n 19227: a0 = 0 if a1 != 0\n 19229: a1 = reverse a4\n 19231: a4 = reverse t0\n 19233: a0 = a0 + a4\n 19236: a3 = a3 + a1\n 19239: a5 = a3 <u a1\n 19242: a0 = a0 + a5\n 19245: ra = u64 [s1 + 0x100]\n 19249: ra = ra + a3\n 19252: a3 = ra <u a3\n 19255: t0 = a0 + a3\n 19258: a0 = u64 [s1 + 0x190]\n 19262: a0 = t1 <u a0\n 19265: a3 = u64 [s1 + 0x188]\n 19269: a0 = a0 + a3\n 19272: a3 = t1 >> 0x5\n 19275: a5 = a0 << 0x3b\n 19278: a3 = a3 | a5\n 19281: a0 = a0 >> 0x5\n 19284: a0 = a0 + a4\n 19287: a5 = s1 + 0x100\n 19291: a4 = u64 [a5 + 0x98]\n 19295: a3 = a3 + a1\n 19298: a1 = a3 <u a1\n 19301: a0 = a0 + a1\n 19304: a2 = a2 + a3\n 19307: u64 [a5 + 0x60] = a2\n 19310: a1 = a2 <u a3\n 19313: a0 = a0 + a1\n 19316: u64 [a5 + 0x58] = a0\n 19319: a0 = sp + 0xffffffffffffffe0\n 19322: a0 = a0 & 0xffffffffffffffe0\n 19325: u64 [a5 + 0x90] = a0\n 19329: sp = a0\n 19331: fallthrough\n      : @668 (gas: 25)\n 19332: a0 = u64 [s1 + 0x170]\n 19336: a0 = t2 <u a0\n 19339: a2 = u64 [s1 + 0x168]\n 19343: a1 = a4 ^ a2\n 19346: a2 = a4 <u a2\n 19349: a2 = a0 if a1 == 0\n 19352: a5 = u64 [s1 + 0x160]\n 19356: a0 = ra <u a5\n 19359: a3 = u64 [s1 + 0x158]\n 19363: a1 = t0 ^ a3\n 19366: a3 = t0 <u a3\n 19369: a3 = a0 if a1 == 0\n 19372: a0 = ra ^ a5\n 19375: a0 = a0 | a1\n 19378: a3 = a2 if a0 == 0\n 19381: u64 [s1 + 0x188] = t2\n 19385: a0 = u64 [s1 + 0x190]\n 19389: u64 [a0] = t2\n 19391: u64 [s1 + 0x198] = a4\n 19395: u64 [a0 + 0x8] = a4\n 19398: u64 [s1 + 0x178] = ra\n 19402: u64 [a0 + 0x10] = ra\n 19405: u64 [s1 + 0x180] = t0\n 19409: u64 [a0 + 0x18] = t0\n 19412: jump @672 if a3 == 0\n      : @669 (gas: 8)\n 19415: a0 = s1 + 0x2118\n 19419: u64 [a0 + 1056] = 0\n 19423: u64 [a0 + 1048] = 0\n 19427: u64 [a0 + 1040] = 0\n 19431: u64 [a0 + 1032] = 0\n 19435: a1 = s1 + 0x2520\n 19439: a0 = u64 [s1 + 0x190]\n 19443: ra = 728, jump @23\n      : @670 [@dyn 364] (gas: 1)\n 19449: t0 = 730, jump @1311\n      : @671 [@dyn 365] (gas: 4)\n 19455: t0 = u64 [s1 + 0x180]\n 19459: t0 = t0 + a1\n 19462: ra = a0\n 19464: jump @668\n      : @672 (gas: 9)\n 19467: a0 = u64 [s1 + 0x80]\n 19471: a0 = a0 ^ 0x1\n 19474: a1 = u64 [s1 + 0xa0]\n 19478: a2 = u64 [s1 + 0x70]\n 19481: a0 = a2 if a1 != 0\n 19484: a1 = u64 [s1 + 0x78]\n 19487: a2 = u64 [s1 + 0x110]\n 19491: a0 = a1 if a2 != 0\n 19494: jump @690 if a0 == 0\n      : @673 (gas: 15)\n 19498: a0 = u64 [s1 + 0xa8]\n 19502: a0 = a0 & 0xffffffffffffffe0\n 19505: u64 [s1 + 0x110] = a0\n 19509: a0 = u64 [s1 + 0x150]\n 19513: a2 = s1 + 0x600\n 19517: u64 [a2 + 0x80] = a0\n 19521: a0 = u64 [s1 + 0x148]\n 19525: u64 [a2 + 0x88] = a0\n 19529: a0 = u64 [s1 + 0x138]\n 19533: u64 [a2 + 0x90] = a0\n 19537: a1 = s1 + 0x680\n 19541: a0 = u64 [s1 + 0x140]\n 19545: u64 [a2 + 0x98] = a0\n 19549: a0 = 0\n 19551: ra = 732, jump @19\n      : @674 [@dyn 366] (gas: 1)\n 19557: t0 = 734, jump @1319\n      : @675 [@dyn 367] (gas: 1)\n 19563: ra = 736, jump @30\n      : @676 [@dyn 368] (gas: 1)\n 19569: t0 = 738, jump @1308\n      : @677 [@dyn 369] (gas: 4)\n 19575: ra = 0x2e4\n 19579: ecalli 6 // 'hash_keccak_256'\n 19581: t0 = 0x2e6\n 19585: jump @1336\n      : @678 [@dyn 370] (gas: 1)\n 19588: t0 = 742, jump @1336\n      : @679 [@dyn 371] (gas: 1)\n 19594: t0 = 744, jump @1279\n      : @680 [@dyn 372] (gas: 8)\n 19600: t0 = a0\n 19602: a1 = u64 [s1 + 0x170]\n 19606: u64 [a1 + 0x18] = a0\n 19609: u64 [s1 + 0x150] = ra\n 19613: u64 [a1 + 0x10] = ra\n 19616: u64 [a1 + 0x8] = t2\n 19619: u64 [a1] = t1\n 19621: fallthrough\n      : @681 (gas: 24)\n 19622: u64 [s1 + 0x168] = t0\n 19626: a0 = u64 [s1 + 0x110]\n 19630: u64 [s1 + 0x178] = a4\n 19634: a0 = a4 <u a0\n 19637: a4 = a0 ^ 0x1\n 19640: u64 [s1 + 0x158] = a3\n 19644: a4 = 0x1 if a3 != 0\n 19647: u64 [s1 + 0x160] = a2\n 19651: a0 = u64 [s1 + 0x180]\n 19655: a0 = a0 | a2\n 19658: a4 = 0x1 if a0 != 0\n 19661: a1 = u64 [s1 + 0x130]\n 19665: a0 = u64 [s1 + 0x198]\n 19669: a1 = a1 + a0\n 19672: a3 = u64 [s1 + 0x128]\n 19676: a3 = a3 + a5\n 19679: a2 = u64 [s1 + 0x118]\n 19683: a0 = u64 [s1 + 0x190]\n 19687: a2 = a2 + a0\n 19690: a0 = u64 [s1 + 0x120]\n 19694: ra = a5\n 19696: a5 = u64 [s1 + 0x188]\n 19700: a0 = a0 + a5\n 19703: jump @692 if a4 != 0\n      : @682 (gas: 14)\n 19707: a4 = u64 [s1 + 0x198]\n 19711: a4 = a1 <u a4\n 19714: a3 = a3 + a4\n 19717: t0 = a3 ^ ra\n 19720: u64 [s1 + 0x138] = ra\n 19724: a5 = a3 <u ra\n 19727: a5 = a4 if t0 == 0\n 19730: a5 = a5 + a2\n 19733: t0 = a5 <u a2\n 19736: a4 = u64 [s1 + 0x190]\n 19740: a2 = a2 <u a4\n 19743: a0 = a0 + a2\n 19746: a0 = a0 + t0\n 19749: t0 = 746, jump @1316\n      : @683 [@dyn 373] (gas: 3)\n 19755: u64 [s1 + 0x148] = t1\n 19759: u64 [s1 + 0x140] = t2\n 19763: jump @685 if a0 == 0\n      : @684 (gas: 1)\n 19766: jump @534\n      : @685 (gas: 2)\n 19769: a0 = s1 + 0x500\n 19773: ra = 748, jump @17\n      : @686 [@dyn 374] (gas: 14)\n 19779: a4 = s1 + 0x500\n 19783: a0 = u64 [a4 + 0x18]\n 19786: a1 = u64 [a4 + 0x10]\n 19789: a2 = u64 [a4 + 0x8]\n 19792: a3 = u64 [a4]\n 19794: a4 = s1 + 0x2118\n 19798: a5 = a4 + 0x400\n 19802: u64 [a5 + 0x40] = a0\n 19805: u64 [a5 + 0x38] = a1\n 19808: u64 [a5 + 0x30] = a2\n 19811: u64 [a5 + 0x28] = a3\n 19814: a1 = s1 + 0x2540\n 19818: a0 = u64 [s1 + 0x170]\n 19822: ra = 750, jump @23\n      : @687 [@dyn 375] (gas: 1)\n 19828: t0 = 752, jump @1275\n      : @688 [@dyn 376] (gas: 4)\n 19834: t0 = u64 [s1 + 0x180]\n 19838: t0 = t0 + a5\n 19841: u64 [s1 + 0x180] = t0\n 19845: t0 = 754, jump @1331\n      : @689 [@dyn 377] (gas: 9)\n 19851: t0 = a0\n 19853: u64 [a5 + 0x18] = a0\n 19856: u64 [s1 + 0x150] = ra\n 19860: a0 = u64 [s1 + 0x168]\n 19864: u64 [s1 + 0x198] = a0\n 19868: a5 = u64 [s1 + 0x148]\n 19872: u64 [s1 + 0x190] = a3\n 19876: a3 = a1\n 19878: jump @681\n      : @690 (gas: 8)\n 19881: a0 = u64 [s1 + 0xa8]\n 19885: a1 = u64 [s1 + 0x90]\n 19889: a0 = a0 | a1\n 19892: a1 = u64 [s1 + 0xa0]\n 19896: a2 = u64 [s1 + 0x88]\n 19900: a1 = a1 | a2\n 19903: a0 = a0 | a1\n 19906: jump @706 if a0 != 0\n      : @691 (gas: 5)\n 19910: u64 [s1 + 384] = 0\n 19914: u64 [s1 + 376] = 0\n 19918: u64 [s1 + 392] = 0\n 19922: u64 [s1 + 400] = 0\n 19926: jump @710\n      : @692 (gas: 12)\n 19929: t2 = u64 [s1 + 0x190]\n 19933: t1 = u64 [s1 + 0x198]\n 19937: a4 = u64 [s1 + 0xa8]\n 19941: a5 = u64 [s1 + 0x110]\n 19945: a4 = a4 ^ a5\n 19948: a5 = u64 [s1 + 0x90]\n 19952: t0 = a4 | a5\n 19955: a5 = u64 [s1 + 0xa0]\n 19959: a4 = u64 [s1 + 0x88]\n 19963: a5 = a5 | a4\n 19966: a4 = t0 | a5\n 19969: jump @705 if a4 == 0\n      : @693 (gas: 11)\n 19973: a4 = a1 <u t1\n 19976: a3 = a3 + a4\n 19979: t0 = a3 ^ ra\n 19982: a5 = a3 <u ra\n 19985: a5 = a4 if t0 == 0\n 19988: a5 = a5 + a2\n 19991: a4 = a5 <u a2\n 19994: a2 = a2 <u t2\n 19997: a0 = a0 + a2\n 20000: a0 = a0 + a4\n 20003: t0 = 756, jump @1316\n      : @694 [@dyn 378] (gas: 1)\n 20009: jump @696 if a0 == 0\n      : @695 (gas: 1)\n 20012: jump @534\n      : @696 (gas: 2)\n 20015: a0 = s1 + 0x660\n 20019: ra = 758, jump @17\n      : @697 [@dyn 379] (gas: 11)\n 20025: a1 = s1 + 0x600\n 20029: a0 = u64 [a1 + 0x78]\n 20032: u64 [s1 + 0x190] = a0\n 20036: a0 = u64 [a1 + 0x70]\n 20039: u64 [s1 + 0x188] = a0\n 20043: a0 = u64 [a1 + 0x68]\n 20046: u64 [s1 + 0x180] = a0\n 20050: a0 = u64 [a1 + 0x60]\n 20053: u64 [s1 + 0x178] = a0\n 20057: a0 = u64 [s1 + 0xa8]\n 20061: t0 = 760, jump @1310\n      : @698 [@dyn 380] (gas: 1)\n 20067: ra = 762, jump @1361\n      : @699 [@dyn 381] (gas: 1)\n 20073: t0 = 764, jump @1328\n      : @700 [@dyn 382] (gas: 1)\n 20079: ra = 766, jump @1356\n      : @701 [@dyn 383] (gas: 1)\n 20085: t0 = 768, jump @1295\n      : @702 [@dyn 384] (gas: 1)\n 20091: ra = 770, jump @1356\n      : @703 [@dyn 385] (gas: 1)\n 20097: t0 = 772, jump @1272\n      : @704 [@dyn 386] (gas: 8)\n 20103: a5 = a4 + 0x400\n 20107: u64 [a5 + 0x60] = a3\n 20110: u64 [a5 + 0x58] = a2\n 20113: u64 [a5 + 0x50] = a1\n 20116: u64 [a5 + 0x48] = a0\n 20119: a1 = s1 + 0x2560\n 20123: a0 = u64 [s1 + 0x170]\n 20127: ra = 774, jump @23\n      : @705 [@dyn 387] (gas: 23)\n 20133: a2 = u64 [s1 + 0x90]\n 20137: a0 = a2 >> 0x3f\n 20140: a1 = u64 [s1 + 0x88]\n 20144: a1 = a1 << 0x1\n 20147: a0 = a0 | a1\n 20150: a3 = u64 [s1 + 0xa0]\n 20154: a1 = a3 >> 0x3f\n 20157: a2 = a2 << 0x1\n 20160: a1 = a1 | a2\n 20163: a4 = u64 [s1 + 0xa8]\n 20167: a2 = a4 >> 0x3f\n 20170: a3 = a3 << 0x1\n 20173: a2 = a2 | a3\n 20176: a3 = a4 << 0x1\n 20179: a3 = a3 + 0x1\n 20182: a4 = s1 + 0x2118\n 20186: a5 = a4 + 0x400\n 20190: u64 [a5 + 0x68] = a3\n 20193: u64 [a5 + 0x70] = a2\n 20196: u64 [a5 + 0x78] = a1\n 20199: u64 [a5 + 0x80] = a0\n 20203: a0 = 0x2580\n 20207: jump @715\n      : @706 (gas: 11)\n 20210: a3 = s1 + 0x100\n 20214: a0 = u64 [a3 + 0x20]\n 20217: a1 = u64 [a3 + 0x18]\n 20220: a0 = a0 | a1\n 20223: a1 = 0xffffffe0\n 20233: a2 = u64 [a3 + 0x30]\n 20236: a1 = a2 <u a1\n 20239: a2 = u64 [a3 + 0x28]\n 20242: a1 = 0 if a2 != 0\n 20244: a1 = 0 if a0 != 0\n 20246: jump @708 if a1 != 0\n      : @707 (gas: 1)\n 20249: jump @534\n      : @708 (gas: 4)\n 20252: a0 = u64 [s1 + 0x130]\n 20256: i32 a1 = a0 + 0x20\n 20259: a0 = s1 + 0x6a0\n 20263: ra = 776, jump @17\n      : @709 [@dyn 388] (gas: 11)\n 20269: a1 = s1 + 0x600\n 20273: a0 = u64 [a1 + 0xb8]\n 20277: a2 = s1 + 0x100\n 20281: u64 [a2 + 0x90] = a0\n 20285: a0 = u64 [a1 + 0xb0]\n 20289: u64 [a2 + 0x88] = a0\n 20293: a0 = u64 [a1 + 0xa8]\n 20297: u64 [a2 + 0x78] = a0\n 20300: a0 = u64 [a1 + 0xa0]\n 20304: u64 [a2 + 0x80] = a0\n 20308: fallthrough\n      : @710 (gas: 24)\n 20309: a2 = u64 [s1 + 0xa0]\n 20313: a0 = a2 >> 0x3f\n 20316: a3 = u64 [s1 + 0x90]\n 20320: a1 = a3 << 0x1\n 20323: a0 = a0 | a1\n 20326: u64 [s1 + 0x170] = a0\n 20330: a0 = a3 >> 0x3f\n 20333: a1 = u64 [s1 + 0x88]\n 20337: a1 = a1 << 0x1\n 20340: a0 = a0 | a1\n 20343: u64 [s1 + 0x168] = a0\n 20347: a3 = u64 [s1 + 0xa8]\n 20351: a0 = a3 >> 0x3f\n 20354: a1 = a2 << 0x1\n 20357: a0 = a0 | a1\n 20360: u64 [s1 + 0x160] = a0\n 20364: a0 = a3 << 0x1\n 20367: u64 [s1 + 0x158] = a0\n 20371: a1 = a3 << 0x3\n 20374: u64 [s1 + 0x198] = a1\n 20378: i32 a2 = 0x80 - a1\n 20382: a0 = 0xffffffffffffffff\n 20385: a1 = 0xffffffffffffffff\n 20388: ra = 778, jump @1361\n      : @711 [@dyn 389] (gas: 7)\n 20394: u64 [s1 + 0x138] = a0\n 20398: u64 [s1 + 0x150] = a1\n 20402: a0 = u64 [s1 + 0xa8]\n 20406: i32 a2 = a0 << 0x3\n 20409: a0 = 0xffffffffffffffff\n 20412: a1 = 0xffffffffffffffff\n 20415: ra = 780, jump @1356\n      : @712 [@dyn 390] (gas: 10)\n 20421: u64 [s1 + 0x148] = a0\n 20425: u64 [s1 + 0x140] = a1\n 20429: a1 = u64 [s1 + 0x138]\n 20433: a0 = a0 | a1\n 20436: u64 [s1 + 0x138] = a0\n 20440: a0 = u64 [s1 + 0x198]\n 20444: i32 a2 = a0 + 0xffffffffffffff80\n 20447: a0 = 0xffffffffffffffff\n 20450: a1 = 0xffffffffffffffff\n 20453: ra = 782, jump @1356\n      : @713 [@dyn 391] (gas: 25)\n 20459: a4 = u64 [s1 + 0x198]\n 20463: a2 = a4 <u 0x80\n 20467: a3 = u64 [s1 + 0x138]\n 20471: a0 = a3 if a2 != 0\n 20474: a5 = u64 [s1 + 0x140]\n 20478: a3 = u64 [s1 + 0x150]\n 20482: a3 = a3 | a5\n 20485: a3 = a1 if a2 == 0\n 20488: a0 = 0xffffffffffffffff if a4 == 0\n 20491: a3 = 0xffffffffffffffff if a4 == 0\n 20494: a5 = 0 if a2 == 0\n 20496: a4 = u64 [s1 + 0x148]\n 20500: a4 = 0 if a2 == 0\n 20502: a1 = u64 [s1 + 0x178]\n 20506: a1 = a1 & ~a3\n 20509: a2 = u64 [s1 + 0x180]\n 20513: a0 = a2 & ~a0\n 20516: a2 = u64 [s1 + 0x188]\n 20520: a2 = a2 & ~a4\n 20523: a3 = u64 [s1 + 0x190]\n 20527: a3 = a3 & ~a5\n 20530: a5 = s1 + 0x100\n 20534: a4 = u64 [a5 + 0x58]\n 20537: a0 = a0 | a4\n 20540: t0 = 784, jump @1315\n      : @714 [@dyn 392] (gas: 7)\n 20546: a5 = a4 + 0x400\n 20550: u64 [a5 + 0x98] = a2\n 20554: u64 [a5 + 0xa0] = a3\n 20558: u64 [a5 + 0x90] = a1\n 20562: u64 [a5 + 0x88] = a0\n 20566: a0 = 0x25a0\n 20570: fallthrough\n      : @715 (gas: 3)\n 20571: a1 = s1 + a0\n 20574: a0 = u64 [s1 + 0x98]\n 20578: ra = 786, jump @23\n      : @716 [@dyn 393] (gas: 3)\n 20584: a0 = s1 + 0x640\n 20588: a1 = 0x40\n 20591: ra = 788, jump @17\n      : @717 [@dyn 394] (gas: 18)\n 20597: a4 = s1 + 0x600\n 20601: a2 = u64 [a4 + 0x58]\n 20604: a3 = u64 [a4 + 0x50]\n 20607: a0 = u64 [a4 + 0x48]\n 20610: a1 = u64 [a4 + 0x40]\n 20613: a4 = s1 + 0x100\n 20617: u64 [a4 + 0x90] = a0\n 20621: u64 [a4 + 0x88] = a2\n 20625: a0 = a0 | a2\n 20628: u64 [a4 + 0x98] = a1\n 20632: a1 = a1 | a3\n 20635: a1 = a1 | a0\n 20638: a1 = a1 >> 0x20\n 20641: u64 [a4 + 0x80] = a3\n 20645: a0 = a0 | a3\n 20648: a0 = a0 << 0x20\n 20651: a0 = a0 | a1\n 20654: jump @719 if a0 == 0\n      : @718 (gas: 1)\n 20657: jump @534\n      : @719 (gas: 12)\n 20660: a0 = u64 [s1 + 0xf0]\n 20664: a2 = s1 + 0x600\n 20668: u64 [a2 + 0x20] = a0\n 20671: a0 = u64 [s1 + 0xe0]\n 20675: u64 [a2 + 0x28] = a0\n 20678: a0 = u64 [s1 + 0xd8]\n 20682: u64 [a2 + 0x30] = a0\n 20685: a1 = s1 + 0x620\n 20689: a0 = u64 [s1 + 0xe8]\n 20693: u64 [a2 + 0x38] = a0\n 20696: a0 = u64 [s1 + 0x198]\n 20700: ra = 790, jump @19\n      : @720 [@dyn 395] (gas: 14)\n 20706: a3 = s1 + 0x100\n 20710: a0 = u64 [a3 + 0x88]\n 20714: a1 = u64 [a3 + 0x80]\n 20718: a2 = a1 | a0\n 20721: a0 = 0x100000000\n 20731: u64 [a3 + 0x70] = a0\n 20734: a0 = 0xffffffe0\n 20744: a1 = u64 [a3 + 0x98]\n 20748: a0 = a1 <u a0\n 20751: a1 = u64 [a3 + 0x90]\n 20755: a0 = 0 if a1 != 0\n 20757: u64 [a3 + 0x78] = a2\n 20760: a0 = 0 if a2 != 0\n 20762: jump @722 if a0 != 0\n      : @721 (gas: 1)\n 20765: jump @534\n      : @722 (gas: 8)\n 20768: a0 = u64 [s1 + 0x198]\n 20772: i32 a0 = a0 + 0x20\n 20775: u64 [s1 + 1560] = 0\n 20779: u64 [s1 + 1552] = 0\n 20783: u64 [s1 + 1536] = 0x60\n 20788: a1 = s1 + 0x600\n 20792: u64 [s1 + 1544] = 0\n 20796: ra = 792, jump @19\n      : @723 [@dyn 396] (gas: 5)\n 20802: a1 = u64 [s1 + 0x198]\n 20806: a0 = a1 + 0x60\n 20809: a1 = a0 <u a1\n 20812: a3 = u64 [s1 + 0x190]\n 20816: t0 = 794, jump @1318\n      : @724 [@dyn 397] (gas: 16)\n 20822: u64 [s1 + 0x5a8] = a2\n 20826: u64 [s1 + 0x5a0] = a0\n 20830: a0 = u64 [s1 + 0xb8]\n 20834: u64 [s1 + 0x5d8] = a0\n 20838: a0 = u64 [s1 + 0xc0]\n 20842: u64 [s1 + 0x5d0] = a0\n 20846: a0 = u64 [s1 + 0xc8]\n 20850: u64 [s1 + 0x5c8] = a0\n 20854: a0 = u64 [s1 + 0xd0]\n 20858: u64 [s1 + 0x5c0] = a0\n 20862: u64 [s1 + 0x5b0] = a3\n 20866: a0 = s1 + 0x5e0\n 20870: a1 = s1 + 0x5c0\n 20874: a2 = s1 + 0x5a0\n 20878: u64 [s1 + 0x5b8] = a4\n 20882: ra = 796, jump @1009\n      : @725 [@dyn 398] (gas: 13)\n 20888: a1 = s1 + 0x500\n 20892: a0 = u64 [a1 + 0xf8]\n 20896: u64 [s1 + 0x158] = a0\n 20900: a0 = u64 [a1 + 0xf0]\n 20904: u64 [s1 + 0x150] = a0\n 20908: a0 = u64 [a1 + 0xe8]\n 20912: u64 [s1 + 0x160] = a0\n 20916: a0 = u64 [a1 + 0xe0]\n 20920: u64 [s1 + 0x168] = a0\n 20924: a0 = u64 [s1 + 0xb0]\n 20928: ra = 0x31e\n 20932: ecalli 3 // 'caller'\n 20934: fallthrough\n      : @726 [@dyn 399] (gas: 10)\n 20935: a2 = s1 + 0x100\n 20939: a0 = u64 [a2 + 0x70]\n 20942: a0 = a0 + 0xffffffffffffffc0\n 20945: a1 = u64 [a2 + 0x98]\n 20949: a0 = a1 <u a0\n 20952: a1 = u64 [a2 + 0x90]\n 20956: a0 = 0 if a1 != 0\n 20958: a1 = u64 [a2 + 0x78]\n 20961: a0 = 0 if a1 != 0\n 20963: jump @728 if a0 != 0\n      : @727 (gas: 1)\n 20966: jump @534\n      : @728 (gas: 2)\n 20969: a2 = u64 [s1 + 0x108]\n 20973: t0 = 800, jump @1284\n      : @729 [@dyn 400] (gas: 9)\n 20979: a0 = u64 [s1 + 0x198]\n 20983: i32 a0 = a0 + 0x40\n 20986: u64 [s1 + 1432] = 0\n 20990: a4 = s1 + 0x500\n 20994: u64 [a4 + 0x90] = a1\n 20998: u64 [a4 + 0x88] = a2\n 21002: a1 = s1 + 0x580\n 21006: u64 [a4 + 0x80] = a3\n 21010: ra = 802, jump @19\n      : @730 [@dyn 401] (gas: 30)\n 21016: t0 = u64 [s1 + 0x168]\n 21020: ra = u64 [s1 + 0x198]\n 21024: t1 = t0 <u ra\n 21027: a5 = u64 [s1 + 0x190]\n 21031: a1 = u64 [s1 + 0x160]\n 21035: a3 = a1 ^ a5\n 21038: a2 = a1 <u a5\n 21041: a2 = t1 if a3 == 0\n 21044: a3 = u64 [s1 + 0x180]\n 21048: a4 = u64 [s1 + 0x150]\n 21052: a0 = a4 - a3\n 21055: t2 = a4 <u a3\n 21058: a4 = u64 [s1 + 0x188]\n 21062: a3 = u64 [s1 + 0x158]\n 21066: a4 = a3 - a4\n 21069: a4 = a4 - t2\n 21072: a3 = a0 <u a2\n 21075: a4 = a4 - a3\n 21078: a2 = a0 - a2\n 21081: a1 = a1 - a5\n 21084: a0 = a1 - t1\n 21087: a1 = t0 - ra\n 21090: a0 = a0 | a4\n 21093: a3 = a1 | a2\n 21096: a3 = a3 | a0\n 21099: a0 = a0 | a2\n 21102: a3 = a3 >> 0x20\n 21105: a0 = a0 << 0x20\n 21108: a0 = a0 | a3\n 21111: jump @732 if a0 == 0\n      : @731 (gas: 1)\n 21114: jump @534\n      : @732 (gas: 11)\n 21117: a0 = u64 [0x200a8]\n 21122: u64 [s1 + 0x578] = a0\n 21126: a0 = u64 [0x200b0]\n 21131: a2 = u64 [0x200b8]\n 21136: a3 = u64 [0x200c0]\n 21141: u64 [s1 + 0x570] = a0\n 21145: u64 [s1 + 0x568] = a2\n 21149: a2 = s1 + 0x560\n 21153: u64 [s1 + 0x560] = a3\n 21157: a0 = u64 [s1 + 0x198]\n 21161: ra = 804, jump @24\n      : @733 [@dyn 402] (gas: 3)\n 21167: a0 = s1 + 0x540\n 21171: a1 = 0x40\n 21174: ra = 806, jump @17\n      : @734 [@dyn 403] (gas: 13)\n 21180: a3 = s1 + 0x500\n 21184: a0 = u64 [a3 + 0x58]\n 21187: a1 = u64 [a3 + 0x50]\n 21190: a2 = u64 [a3 + 0x48]\n 21193: a4 = u64 [a3 + 0x40]\n 21196: a0 = a0 | a2\n 21199: a2 = a4 | a1\n 21202: a2 = a2 | a0\n 21205: a2 = a2 >> 0x20\n 21208: a0 = a0 | a1\n 21211: a0 = a0 << 0x20\n 21214: a0 = a0 | a2\n 21217: jump @736 if a0 == 0\n      : @735 (gas: 1)\n 21220: jump @534\n      : @736 (gas: 15)\n 21223: a3 = a4\n 21225: a0 = u64 [s1 + 0xf0]\n 21229: a2 = s1 + 0x500\n 21233: u64 [a2 + 0x20] = a0\n 21236: a0 = u64 [s1 + 0xe0]\n 21240: u64 [a2 + 0x28] = a0\n 21243: a0 = u64 [s1 + 0xd8]\n 21247: u64 [a2 + 0x30] = a0\n 21250: a1 = s1 + 0x520\n 21254: a0 = u64 [s1 + 0xe8]\n 21258: u64 [a2 + 0x38] = a0\n 21261: a0 = a3\n 21263: u64 [s1 + 0x198] = a3\n 21267: ra = 0x1fe\n 21271: jump @19\n      : @737 (gas: 6)\n 21274: a1 = 0x201d0\n 21279: i32 a1 = a1 + 0\n 21281: a0 = 0x1\n 21284: a2 = 0\n 21286: ecalli 8 // 'seal_return'\n 21288: jump @837\n      : @738 (gas: 6)\n 21291: a1 = 0x201d0\n 21296: i32 a1 = a1 + 0\n 21298: a0 = 0x1\n 21301: a2 = 0\n 21303: ecalli 8 // 'seal_return'\n 21305: jump @837\n      : @739 (gas: 6)\n 21308: a1 = 0x201d0\n 21313: i32 a1 = a1 + 0\n 21315: a0 = 0x1\n 21318: a2 = 0\n 21320: ecalli 8 // 'seal_return'\n 21322: jump @837\n      : @740 (gas: 6)\n 21325: a1 = 0x201d0\n 21330: i32 a1 = a1 + 0\n 21332: a0 = 0x1\n 21335: a2 = 0\n 21337: ecalli 8 // 'seal_return'\n 21339: jump @837\n      : @741 (gas: 6)\n 21342: a1 = 0x201d0\n 21347: i32 a1 = a1 + 0\n 21349: a0 = 0x1\n 21352: a2 = 0\n 21354: ecalli 8 // 'seal_return'\n 21356: jump @837\n      : @742 (gas: 6)\n 21359: a1 = 0x201d0\n 21364: i32 a1 = a1 + 0\n 21366: a0 = 0x1\n 21369: a2 = 0\n 21371: ecalli 8 // 'seal_return'\n 21373: jump @837\n      : @743 (gas: 6)\n 21376: a1 = 0x201d0\n 21381: i32 a1 = a1 + 0\n 21383: a0 = 0x1\n 21386: a2 = 0\n 21388: ecalli 8 // 'seal_return'\n 21390: jump @837\n      : @744 (gas: 6)\n 21393: a1 = 0x201d0\n 21398: i32 a1 = a1 + 0\n 21400: a0 = 0x1\n 21403: a2 = 0\n 21405: ecalli 8 // 'seal_return'\n 21407: jump @837\n      : @745 (gas: 6)\n 21410: a1 = 0x201d0\n 21415: i32 a1 = a1 + 0\n 21417: a0 = 0x1\n 21420: a2 = 0\n 21422: ecalli 8 // 'seal_return'\n 21424: jump @837\n      : @746 (gas: 6)\n 21427: a1 = 0x201d0\n 21432: i32 a1 = a1 + 0\n 21434: a0 = 0x1\n 21437: a2 = 0\n 21439: ecalli 8 // 'seal_return'\n 21441: jump @837\n      : @747 (gas: 6)\n 21444: a1 = 0x201d0\n 21449: i32 a1 = a1 + 0\n 21451: a0 = 0x1\n 21454: a2 = 0\n 21456: ecalli 8 // 'seal_return'\n 21458: jump @837\n      : @748 (gas: 6)\n 21461: a1 = 0x201d0\n 21466: i32 a1 = a1 + 0\n 21468: a0 = 0x1\n 21471: a2 = 0\n 21473: ecalli 8 // 'seal_return'\n 21475: jump @837\n      : @749 (gas: 6)\n 21478: a1 = 0x201d0\n 21483: i32 a1 = a1 + 0\n 21485: a0 = 0x1\n 21488: a2 = 0\n 21490: ecalli 8 // 'seal_return'\n 21492: jump @837\n      : @750 (gas: 8)\n 21495: u64 [s1 + 944] = 0\n 21499: u64 [s1 + 936] = 0\n 21503: u64 [s1 + 928] = 0\n 21507: a0 = 0xe2517d3f00000000\n 21517: a1 = s1 + 0x3a0\n 21521: u64 [s1 + 0x3b8] = a0\n 21525: a0 = 0\n 21527: ra = 808, jump @19\n      : @751 [@dyn 404] (gas: 6)\n 21533: a0 = u64 [s1 + 0xb0]\n 21537: ra = 0x32a\n 21541: ecalli 3 // 'caller'\n 21543: a2 = u64 [s1 + 0x108]\n 21547: t0 = 0x32c\n 21551: jump @1273\n      : @752 [@dyn 405] (gas: 2)\n 21554: a2 = u64 [s1 + 0x108]\n 21558: t0 = 812, jump @1273\n      : @753 [@dyn 406] (gas: 7)\n 21564: u64 [s1 + 920] = 0\n 21568: u64 [s1 + 0x390] = a1\n 21572: u64 [s1 + 0x388] = a0\n 21576: a0 = 0x4\n 21579: a1 = s1 + 0x380\n 21583: u64 [s1 + 0x380] = a3\n 21587: ra = 814, jump @19\n      : @754 [@dyn 407] (gas: 12)\n 21593: a0 = u64 [s1 + 0x128]\n 21597: a3 = s1 + 0x300\n 21601: u64 [a3 + 0x78] = a0\n 21604: a0 = u64 [s1 + 0x120]\n 21608: u64 [a3 + 0x70] = a0\n 21611: a0 = u64 [s1 + 0x118]\n 21615: u64 [a3 + 0x68] = a0\n 21618: a0 = 0x24\n 21621: a1 = s1 + 0x360\n 21625: a2 = u64 [s1 + 0x130]\n 21629: u64 [a3 + 0x60] = a2\n 21632: ra = 816, jump @19\n      : @755 [@dyn 408] (gas: 3)\n 21638: a0 = u64 [s1 + 0x100]\n 21642: a0 = i32 [a0]\n 21644: jump @757 if a0 >u 95\n      : @756 (gas: 7)\n 21648: a1 = u64 [s1 + 0x100]\n 21652: u32 [a1 + 0] = 0x60\n 21655: a0 = 0x1\n 21658: a2 = 0x44\n 21661: a1 = u64 [s1 + 0xf8]\n 21665: ecalli 8 // 'seal_return'\n 21667: jump @763\n      : @757 (gas: 5)\n 21670: a0 = 0x1\n 21673: a2 = 0x44\n 21676: a1 = u64 [s1 + 0xf8]\n 21680: ecalli 8 // 'seal_return'\n 21682: jump @763\n      : @758 (gas: 8)\n 21684: u64 [s1 + 1008] = 0\n 21688: u64 [s1 + 1000] = 0\n 21692: u64 [s1 + 992] = 0\n 21696: a0 = 0x4e487b7100000000\n 21706: a1 = s1 + 0x3e0\n 21710: u64 [s1 + 0x3f8] = a0\n 21714: a0 = 0\n 21716: ra = 818, jump @19\n      : @759 [@dyn 409] (gas: 7)\n 21722: u64 [s1 + 984] = 0\n 21726: u64 [s1 + 976] = 0\n 21730: u64 [s1 + 960] = 0x11\n 21735: a0 = 0x4\n 21738: a1 = s1 + 0x3c0\n 21742: u64 [s1 + 968] = 0\n 21746: ra = 820, jump @19\n      : @760 [@dyn 410] (gas: 3)\n 21752: a0 = u64 [s1 + 0x100]\n 21756: a0 = i32 [a0]\n 21758: jump @762 if a0 >u 63\n      : @761 (gas: 7)\n 21762: a1 = u64 [s1 + 0x100]\n 21766: u32 [a1 + 0] = 0x40\n 21769: a0 = 0x1\n 21772: a2 = 0x24\n 21775: a1 = u64 [s1 + 0xf8]\n 21779: ecalli 8 // 'seal_return'\n 21781: jump @763\n      : @762 (gas: 5)\n 21783: a0 = 0x1\n 21786: a2 = 0x24\n 21789: a1 = u64 [s1 + 0xf8]\n 21793: ecalli 8 // 'seal_return'\n 21795: fallthrough\n      : @763 (gas: 6)\n 21796: a1 = 0x201d0\n 21801: i32 a1 = a1 + 0\n 21803: a0 = 0x1\n 21806: a2 = 0\n 21808: ecalli 8 // 'seal_return'\n 21810: jump @837\n      : @764 (gas: 6)\n 21813: a1 = 0x201d0\n 21818: i32 a1 = a1 + 0\n 21820: a0 = 0x1\n 21823: a2 = 0\n 21825: ecalli 8 // 'seal_return'\n 21827: jump @837\n      : @765 (gas: 1)\n 21830: jump @780 if a0 != 2395272453\n      : @766 (gas: 11)\n 21838: a0 = s1 + 0x2118\n 21842: u64 [a0 + 1664] = 0\n 21846: u64 [a0 + 1656] = 0\n 21850: u64 [a0 + 1648] = 0\n 21854: u64 [a0 + 1640] = 0\n 21858: a0 = s1 + 0x2000\n 21862: i32 a0 = a0 + 0x780\n 21866: ra = 0x336\n 21870: ecalli 11 // 'value_transferred'\n 21872: t0 = 0x338\n 21876: jump @1314\n      : @767 [@dyn 411] (gas: 1)\n 21879: t0 = 824, jump @1314\n      : @768 [@dyn 412] (gas: 8)\n 21885: a0 = u64 [a4 + 0x78]\n 21888: a1 = u64 [a4 + 0x80]\n 21892: a2 = u64 [a4 + 0x70]\n 21895: a3 = u64 [a4 + 0x68]\n 21898: a1 = a1 | a2\n 21901: a0 = a0 | a3\n 21904: a0 = a0 | a1\n 21907: jump @793 if a0 == 0\n      : @769 (gas: 6)\n 21911: a1 = 0x201d0\n 21916: i32 a1 = a1 + 0\n 21918: a0 = 0x1\n 21921: a2 = 0\n 21923: ecalli 8 // 'seal_return'\n 21925: jump @837\n      : @770 (gas: 6)\n 21928: a1 = 0x201d0\n 21933: i32 a1 = a1 + 0\n 21935: a0 = 0x1\n 21938: a2 = 0\n 21940: ecalli 8 // 'seal_return'\n 21942: jump @837\n      : @771 (gas: 6)\n 21945: a1 = 0x201d0\n 21950: i32 a1 = a1 + 0\n 21952: a0 = 0x1\n 21955: a2 = 0\n 21957: ecalli 8 // 'seal_return'\n 21959: jump @837\n      : @772 (gas: 6)\n 21962: a1 = 0x201d0\n 21967: i32 a1 = a1 + 0\n 21969: a0 = 0x1\n 21972: a2 = 0\n 21974: ecalli 8 // 'seal_return'\n 21976: jump @837\n      : @773 (gas: 6)\n 21979: a1 = 0x201d0\n 21984: i32 a1 = a1 + 0\n 21986: a0 = 0x1\n 21989: a2 = 0\n 21991: ecalli 8 // 'seal_return'\n 21993: jump @837\n      : @774 (gas: 6)\n 21996: a1 = 0x201d0\n 22001: i32 a1 = a1 + 0\n 22003: a0 = 0x1\n 22006: a2 = 0\n 22008: ecalli 8 // 'seal_return'\n 22010: jump @837\n      : @775 (gas: 6)\n 22013: a1 = 0x201d0\n 22018: i32 a1 = a1 + 0\n 22020: a0 = 0x1\n 22023: a2 = 0\n 22025: ecalli 8 // 'seal_return'\n 22027: jump @837\n      : @776 (gas: 6)\n 22030: a1 = 0x201d0\n 22035: i32 a1 = a1 + 0\n 22037: a0 = 0x1\n 22040: a2 = 0\n 22042: ecalli 8 // 'seal_return'\n 22044: jump @837\n      : @777 (gas: 6)\n 22047: a1 = 0x201d0\n 22052: i32 a1 = a1 + 0\n 22054: a0 = 0x1\n 22057: a2 = 0\n 22059: ecalli 8 // 'seal_return'\n 22061: jump @837\n      : @778 (gas: 6)\n 22064: a1 = 0x201d0\n 22069: i32 a1 = a1 + 0\n 22071: a0 = 0x1\n 22074: a2 = 0\n 22076: ecalli 8 // 'seal_return'\n 22078: jump @837\n      : @779 (gas: 6)\n 22081: a1 = 0x201d0\n 22086: i32 a1 = a1 + 0\n 22088: a0 = 0x1\n 22091: a2 = 0\n 22093: ecalli 8 // 'seal_return'\n 22095: jump @837\n      : @780 (gas: 1)\n 22098: jump @789 if a0 != 3578229791\n      : @781 (gas: 11)\n 22106: a0 = s1 + 0x2118\n 22110: u64 [a0 + 2016] = 0\n 22114: u64 [a0 + 2008] = 0\n 22118: u64 [a0 + 2000] = 0\n 22122: u64 [a0 + 1992] = 0\n 22126: a0 = s1 + 0x3000\n 22130: i32 a0 = a0 + 0xfffffffffffff8e0\n 22134: ra = 0x33a\n 22138: ecalli 11 // 'value_transferred'\n 22140: t0 = 0x33c\n 22144: jump @1352\n      : @782 [@dyn 413] (gas: 1)\n 22147: t0 = 828, jump @1352\n      : @783 [@dyn 414] (gas: 8)\n 22153: a0 = u64 [a4 + 0xd8]\n 22157: a1 = u64 [a4 + 0xe0]\n 22161: a2 = u64 [a4 + 0xd0]\n 22165: a3 = u64 [a4 + 0xc8]\n 22169: a1 = a1 | a2\n 22172: a0 = a0 | a3\n 22175: a0 = a0 | a1\n 22178: jump @800 if a0 == 0\n      : @784 (gas: 6)\n 22182: a1 = 0x201d0\n 22187: i32 a1 = a1 + 0\n 22189: a0 = 0x1\n 22192: a2 = 0\n 22194: ecalli 8 // 'seal_return'\n 22196: jump @837\n      : @785 (gas: 2)\n 22199: a2 = u64 [s1 + 0x168]\n 22203: t0 = 830, jump @1284\n      : @786 [@dyn 415] (gas: 11)\n 22209: i32 a0 = a4 + 0x20\n 22212: a5 = s1 + 0x7ff\n 22216: a5 = a5 + 0x119\n 22220: u64 [a5 + 1696] = 0\n 22224: a4 = a5 + 0x600\n 22228: u64 [a4 + 0x98] = a1\n 22232: u64 [a4 + 0x90] = a2\n 22236: a1 = s1 + 0x7ff\n 22240: a1 = a1 + 0x7a1\n 22244: u64 [a4 + 0x88] = a3\n 22248: ra = 832, jump @19\n      : @787 [@dyn 416] (gas: 17)\n 22254: a0 = u64 [0x20060]\n 22259: a1 = u64 [0x20068]\n 22264: a2 = s1 + 0x7ff\n 22268: a2 = a2 + 0x119\n 22272: a4 = a2 + 0x600\n 22276: u64 [a4 + 0x80] = a0\n 22280: a0 = u64 [0x20070]\n 22285: u64 [a4 + 0x78] = a1\n 22288: a3 = u64 [0x20078]\n 22293: u64 [a4 + 0x70] = a0\n 22296: a0 = a2\n 22298: a1 = 0x40\n 22301: a2 = s1 + 0x7ff\n 22305: a2 = a2 + 0x781\n 22309: u64 [a0 + 0x668] = a3\n 22313: a0 = u64 [s1 + 0x160]\n 22317: ra = 834, jump @24\n      : @788 [@dyn 417] (gas: 5)\n 22323: a0 = 0\n 22325: a1 = u64 [s1 + 0x198]\n 22329: a2 = 0\n 22331: ecalli 8 // 'seal_return'\n 22333: jump @837\n      : @789 (gas: 1)\n 22336: jump @796 if a0 != 33540519\n      : @790 (gas: 10)\n 22343: a0 = s1 + 0x2118\n 22347: u64 [a0 + 128] = 0\n 22351: u64 [a0 + 120] = 0\n 22354: u64 [a0 + 112] = 0\n 22357: u64 [a0 + 104] = 0\n 22360: a0 = s1 + 0x2000\n 22364: i32 a0 = a0 + 0x180\n 22368: ra = 0x344\n 22372: ecalli 11 // 'value_transferred'\n 22374: fallthrough\n      : @791 [@dyn 418] (gas: 9)\n 22375: a3 = s1 + 0x2118\n 22379: a0 = u64 [a3 + 0x78]\n 22382: a1 = u64 [a3 + 0x80]\n 22386: a2 = u64 [a3 + 0x70]\n 22389: a3 = u64 [a3 + 0x68]\n 22392: a1 = a1 | a2\n 22395: a0 = a0 | a3\n 22398: a0 = a0 | a1\n 22401: jump @820 if a0 == 0\n      : @792 (gas: 6)\n 22405: a1 = 0x201d0\n 22410: i32 a1 = a1 + 0\n 22412: a0 = 0x1\n 22415: a2 = 0\n 22417: ecalli 8 // 'seal_return'\n 22419: jump @837\n      : @793 (gas: 1)\n 22422: t0 = 838, jump @1349\n      : @794 [@dyn 419] (gas: 1)\n 22428: jump @802 if a1 <u a0\n      : @795 (gas: 6)\n 22432: a1 = 0x201d0\n 22437: i32 a1 = a1 + 0\n 22439: a0 = 0x1\n 22442: a2 = 0\n 22444: ecalli 8 // 'seal_return'\n 22446: jump @837\n      : @796 (gas: 1)\n 22449: jump @815 if a0 != 791671133\n      : @797 (gas: 9)\n 22457: a0 = s1 + 0x2118\n 22461: u64 [a0 + 288] = 0\n 22465: u64 [a0 + 280] = 0\n 22469: u64 [a0 + 272] = 0\n 22473: u64 [a0 + 264] = 0\n 22477: a0 = s1 + 0x2000\n 22481: i32 a0 = a0 + 0x220\n 22485: ecalli 11 // 'value_transferred'\n 22487: fallthrough\n      : @798 (gas: 10)\n 22488: a3 = s1 + 0x2118\n 22492: a4 = a3 + 0x100\n 22496: a0 = u64 [a4 + 0x18]\n 22499: a1 = u64 [a4 + 0x20]\n 22502: a2 = u64 [a4 + 0x10]\n 22505: a3 = u64 [a4 + 0x8]\n 22508: a1 = a1 | a2\n 22511: a0 = a0 | a3\n 22514: a0 = a0 | a1\n 22517: jump @837 if a0 == 0\n      : @799 (gas: 6)\n 22521: a1 = 0x201d0\n 22526: i32 a1 = a1 + 0\n 22528: a0 = 0x1\n 22531: a2 = 0\n 22533: ecalli 8 // 'seal_return'\n 22535: jump @837\n      : @800 (gas: 3)\n 22538: a0 = u64 [s1 + 0x198]\n 22542: a0 = i32 [a0]\n 22544: jump @823 if a0 >u 67\n      : @801 (gas: 6)\n 22549: a1 = 0x201d0\n 22554: i32 a1 = a1 + 0\n 22556: a0 = 0x1\n 22559: a2 = 0\n 22561: ecalli 8 // 'seal_return'\n 22563: jump @837\n      : @802 (gas: 4)\n 22566: a0 = s1 + 0x1740\n 22570: ra = 0x348\n 22574: t0 = 0x3dc\n 22578: jump @1355\n      : @803 [@dyn 420] (gas: 12)\n 22581: a1 = s1 + 0x1118\n 22585: a2 = a1 + 0x600\n 22589: a0 = u64 [a2 + 0x40]\n 22592: a1 = s1 + 0x100\n 22596: u64 [a1 + 0x80] = a0\n 22600: a0 = u64 [a2 + 0x38]\n 22603: u64 [a1 + 0x88] = a0\n 22607: a0 = u64 [a2 + 0x30]\n 22610: u64 [a1 + 0x90] = a0\n 22614: a0 = u64 [a2 + 0x28]\n 22617: u64 [a1 + 0x98] = a0\n 22621: ra = 842, jump @1043\n      : @804 [@dyn 421] (gas: 13)\n 22627: a0 = u64 [0x20040]\n 22632: a3 = s1 + 0x1118\n 22636: a4 = a3 + 0x600\n 22640: u64 [a4 + 0x20] = a0\n 22643: a0 = u64 [0x20048]\n 22648: a1 = u64 [0x20050]\n 22653: a2 = u64 [0x20058]\n 22658: u64 [a4 + 0x18] = a0\n 22661: u64 [a4 + 0x10] = a1\n 22664: a1 = s1 + 0x1720\n 22668: u64 [a4 + 0x8] = a2\n 22671: a0 = 0\n 22673: ra = 844, jump @19\n      : @805 [@dyn 422] (gas: 9)\n 22679: a0 = s1 + 0x1118\n 22683: u64 [a0 + 1536] = 0\n 22687: u64 [a0 + 1528] = 0\n 22691: u64 [a0 + 1520] = 0\n 22695: a2 = a0\n 22697: a0 = 0x20\n 22700: a1 = s1 + 0x1700\n 22704: u64 [a2 + 1512] = 0\n 22708: ra = 846, jump @19\n      : @806 [@dyn 423] (gas: 2)\n 22714: a1 = i32 [0x201bc]\n 22719: jump @808 if a1 >u 63\n      : @807 (gas: 4)\n 22723: a1 = 0x40\n 22726: u32 [0x201bc] = a1\n 22731: t0 = 0x350\n 22735: jump @1343\n      : @808 (gas: 1)\n 22738: t0 = 848, jump @1343\n      : @809 [@dyn 424] (gas: 9)\n 22744: a0 = 0x201d0\n 22749: i32 a0 = a0 + 0\n 22751: u64 [s1 + 0x178] = a0\n 22755: i32 a2 = a2 + 0\n 22757: a1 = 0x40\n 22760: ra = 0x352\n 22764: ecalli 6 // 'hash_keccak_256'\n 22766: t0 = 0x354\n 22770: jump @1287\n      : @810 [@dyn 425] (gas: 1)\n 22773: t0 = 852, jump @1287\n      : @811 [@dyn 426] (gas: 8)\n 22779: a5 = a1 + 0x600\n 22783: u64 [a5 + 0x88] = a3\n 22787: u64 [a5 + 0x90] = a2\n 22791: u64 [a5 + 0x98] = a4\n 22795: u64 [a5 + 0xa0] = a0\n 22799: a0 = s1 + 0x16e0\n 22803: a1 = s1 + 0x27a0\n 22807: ra = 854, jump @21\n      : @812 [@dyn 427] (gas: 12)\n 22813: a4 = s1 + 0x1118\n 22817: a5 = a4 + 0x500\n 22821: a1 = u64 [a5 + 0xc8]\n 22825: a0 = u64 [a5 + 0xd0]\n 22829: a2 = u64 [a5 + 0xd8]\n 22833: a3 = u64 [a5 + 0xe0]\n 22837: u64 [a5 + 0xc0] = a3\n 22841: u64 [a5 + 0xb8] = a2\n 22845: u64 [a5 + 0xb0] = a0\n 22849: a0 = s1 + 0x16c0\n 22853: u64 [a5 + 0xa8] = a1\n 22857: ra = 856, jump @1069\n      : @813 [@dyn 428] (gas: 17)\n 22863: a4 = s1 + 0x100\n 22867: a0 = u64 [a4 + 0x80]\n 22871: a1 = s1 + 0x1118\n 22875: a2 = a1 + 0x500\n 22879: u64 [a2 + 0x80] = a0\n 22883: a0 = u64 [a4 + 0x88]\n 22887: u64 [a2 + 0x78] = a0\n 22890: a0 = u64 [a4 + 0x90]\n 22894: u64 [a2 + 0x70] = a0\n 22897: a3 = a1\n 22899: a0 = s1 + 0x16a0\n 22903: a1 = s1 + 0x1680\n 22907: a2 = u64 [a4 + 0x98]\n 22911: u64 [a3 + 0x568] = a2\n 22915: ra = 0x35a\n 22919: t0 = 0x4d4\n 22923: jump @1309\n      : @814 [@dyn 429] (gas: 5)\n 22926: a0 = 0\n 22928: a1 = u64 [s1 + 0x178]\n 22932: a2 = 0\n 22934: ecalli 8 // 'seal_return'\n 22936: jump @837\n      : @815 (gas: 1)\n 22939: jump @829 if a0 != 911641278\n      : @816 (gas: 10)\n 22947: a0 = s1 + 0x2118\n 22951: u64 [a0 + 1216] = 0\n 22955: u64 [a0 + 1208] = 0\n 22959: u64 [a0 + 1200] = 0\n 22963: u64 [a0 + 1192] = 0\n 22967: a0 = s1 + 0x2000\n 22971: i32 a0 = a0 + 0x5c0\n 22975: ra = 0x35c\n 22979: ecalli 11 // 'value_transferred'\n 22981: fallthrough\n      : @817 [@dyn 430] (gas: 3)\n 22982: a3 = s1 + 0x2118\n 22986: a4 = a3 + 0x400\n 22990: t0 = 862, jump @1342\n      : @818 [@dyn 431] (gas: 1)\n 22996: jump @842 if a0 == 0\n      : @819 (gas: 6)\n 23000: a1 = 0x201d0\n 23005: i32 a1 = a1 + 0\n 23007: a0 = 0x1\n 23010: a2 = 0\n 23012: ecalli 8 // 'seal_return'\n 23014: jump @837\n      : @820 (gas: 1)\n 23017: t0 = 864, jump @1349\n      : @821 [@dyn 432] (gas: 1)\n 23023: jump @839 if a1 <u a0\n      : @822 (gas: 6)\n 23027: a1 = 0x201d0\n 23032: i32 a1 = a1 + 0\n 23034: a0 = 0x1\n 23037: a2 = 0\n 23039: ecalli 8 // 'seal_return'\n 23041: jump @837\n      : @823 (gas: 19)\n 23044: a0 = s1 + 0x3000\n 23048: i32 a0 = a0 + 0xfffffffffffff900\n 23052: a1 = 0x4\n 23055: ecalli 1 // 'call_data_load'\n 23057: a0 = s1 + 0x2118\n 23061: a2 = a0 + 0x700\n 23065: a1 = u64 [a2 + 0xe8]\n 23069: u64 [s1 + 0x198] = a1\n 23073: a1 = u64 [a2 + 0xf0]\n 23077: u64 [s1 + 0x190] = a1\n 23081: a0 = u64 [a2 + 0xf8]\n 23085: u64 [s1 + 0x188] = a0\n 23089: a0 = s1 + 0x2918\n 23093: a0 = u64 [a0]\n 23095: u64 [s1 + 0x180] = a0\n 23099: a0 = s1 + 0x20e0\n 23103: ra = 0x362\n 23107: t0 = 0x3d2\n 23111: jump @1355\n      : @824 [@dyn 433] (gas: 3)\n 23114: t0 = 0x364\n 23118: a1 = s1 + 0x1918\n 23122: fallthrough\n      : @825 [@dyn 434] (gas: 21)\n 23123: a2 = a1 + 0x700\n 23127: a0 = u64 [a2 + 0xc8]\n 23131: u64 [s1 + 0x178] = a0\n 23135: a0 = u64 [a2 + 0xd0]\n 23139: u64 [s1 + 0x170] = a0\n 23143: a0 = u64 [a2 + 0xd8]\n 23147: u64 [s1 + 0x168] = a0\n 23151: a0 = u64 [a2 + 0xe0]\n 23155: u64 [s1 + 0x160] = a0\n 23159: a0 = u64 [s1 + 0x180]\n 23163: u64 [a2 + 0xa0] = a0\n 23167: a0 = u64 [s1 + 0x188]\n 23171: u64 [a2 + 0x98] = a0\n 23175: a0 = u64 [s1 + 0x190]\n 23179: u64 [a2 + 0x90] = a0\n 23183: a3 = a1\n 23185: a0 = s1 + 0x20c0\n 23189: a1 = s1 + 0x20a0\n 23193: a2 = u64 [s1 + 0x198]\n 23197: u64 [a3 + 0x788] = a2\n 23201: ra = 870, jump @1023\n      : @826 [@dyn 435] (gas: 12)\n 23207: a4 = s1 + 0x1918\n 23211: a5 = a4 + 0x700\n 23215: a1 = u64 [a5 + 0xa8]\n 23219: a0 = u64 [a5 + 0xb0]\n 23223: a2 = u64 [a5 + 0xb8]\n 23227: a3 = u64 [a5 + 0xc0]\n 23231: u64 [a5 + 0x80] = a3\n 23235: u64 [a5 + 0x78] = a2\n 23238: u64 [a5 + 0x70] = a0\n 23241: a0 = s1 + 0x2080\n 23245: u64 [a5 + 0x68] = a1\n 23248: ra = 872, jump @1069\n      : @827 [@dyn 436] (gas: 26)\n 23254: a0 = s1 + 0x1918\n 23258: a5 = s1 + 0x100\n 23262: a1 = u64 [a5 + 0x60]\n 23265: a2 = a0 + 0x700\n 23269: u64 [a2 + 0x20] = a1\n 23272: a1 = u64 [a5 + 0x68]\n 23275: u64 [a2 + 0x18] = a1\n 23278: a1 = u64 [a5 + 0x70]\n 23281: u64 [a2 + 0x10] = a1\n 23284: a1 = u64 [a5 + 0x78]\n 23287: u64 [a2 + 0x8] = a1\n 23290: a1 = u64 [a5 + 0x80]\n 23294: u64 [a2 + 0x40] = a1\n 23297: a1 = u64 [a5 + 0x88]\n 23301: u64 [a2 + 0x38] = a1\n 23304: a1 = u64 [a5 + 0x90]\n 23308: u64 [a2 + 0x30] = a1\n 23311: a4 = a0\n 23313: a0 = s1 + 0x2060\n 23317: a1 = s1 + 0x2040\n 23321: a2 = s1 + 0x2020\n 23325: a3 = u64 [a5 + 0x98]\n 23329: u64 [a4 + 0x728] = a3\n 23333: ra = 0x36a\n 23337: t0 = 0x55e\n 23341: jump @1330\n      : @828 [@dyn 437] (gas: 6)\n 23344: a1 = 0x201d0\n 23349: i32 a1 = a1 + 0\n 23351: a0 = 0\n 23353: a2 = 0\n 23355: ecalli 8 // 'seal_return'\n 23357: jump @837\n      : @829 (gas: 2)\n 23359: a2 = s1 + 0x2118\n 23363: jump @835 if a0 != 1917903396\n      : @830 (gas: 10)\n 23370: u64 [a2 + 1472] = 0\n 23374: u64 [a2 + 1464] = 0\n 23378: u64 [a2 + 1456] = 0\n 23382: u64 [a2 + 1448] = 0\n 23386: a0 = s1 + 0x2000\n 23390: i32 a0 = a0 + 0x6c0\n 23394: ra = 0x36c\n 23398: ecalli 11 // 'value_transferred'\n 23400: t0 = 0x36e\n 23404: jump @1351\n      : @831 [@dyn 438] (gas: 1)\n 23407: t0 = 878, jump @1351\n      : @832 [@dyn 439] (gas: 1)\n 23413: t0 = 880, jump @1342\n      : @833 [@dyn 440] (gas: 1)\n 23419: jump @853 if a0 == 0\n      : @834 (gas: 6)\n 23423: a1 = 0x201d0\n 23428: i32 a1 = a1 + 0\n 23430: a0 = 0x1\n 23433: a2 = 0\n 23435: ecalli 8 // 'seal_return'\n 23437: jump @837\n      : @835 (gas: 6)\n 23439: a1 = 0x201d0\n 23444: i32 a1 = a1 + 0\n 23446: a0 = 0x1\n 23449: a2 = 0\n 23451: ecalli 8 // 'seal_return'\n 23453: jump @837\n      : @836 (gas: 5)\n 23455: i32 a1 = a1 + 0\n 23457: a0 = 0x1\n 23460: a2 = 0\n 23462: ecalli 8 // 'seal_return'\n 23464: fallthrough\n      : @837 (gas: 3)\n 23465: a0 = u64 [s1 + 0x198]\n 23469: a0 = i32 [a0]\n 23471: jump @844 if a0 >u 67\n      : @838 (gas: 2)\n 23475: a1 = 0x201d0\n 23480: jump @836\n      : @839 (gas: 5)\n 23482: a0 = s1 + 0x2000\n 23486: i32 a0 = a0 + 0x1a0\n 23490: a1 = 0x4\n 23493: ecalli 1 // 'call_data_load'\n 23495: fallthrough\n      : @840 (gas: 11)\n 23496: a1 = s1 + 0x2118\n 23500: a0 = u64 [a1 + 0xa0]\n 23504: a2 = u64 [a1 + 0x98]\n 23508: a3 = u64 [a1 + 0x88]\n 23512: a1 = u64 [a1 + 0x90]\n 23516: a4 = a0 << 0x20\n 23519: a4 = a4 >> 0x20\n 23522: a2 = a2 | a3\n 23525: a4 = a4 | a1\n 23528: a4 = a4 | a2\n 23531: jump @849 if a4 == 0\n      : @841 (gas: 2)\n 23535: a1 = 0x201d0\n 23540: jump @836\n      : @842 (gas: 4)\n 23542: a0 = u64 [s1 + 0x198]\n 23546: a0 = i32 [a0]\n 23548: a1 = 0x43\n 23551: jump @856 if a1 <u a0\n      : @843 (gas: 2)\n 23555: a1 = 0x201d0\n 23560: jump @836\n      : @844 (gas: 18)\n 23562: a0 = s1 + 0x2000\n 23566: i32 a0 = a0 + 0x240\n 23570: a1 = 0x4\n 23573: ecalli 1 // 'call_data_load'\n 23575: a0 = s1 + 0x2118\n 23579: a2 = a0 + 0x100\n 23583: a1 = u64 [a2 + 0x28]\n 23586: u64 [s1 + 0x198] = a1\n 23590: a1 = u64 [a2 + 0x30]\n 23593: u64 [s1 + 0x190] = a1\n 23597: a1 = u64 [a2 + 0x38]\n 23600: u64 [s1 + 0x188] = a1\n 23604: a0 = u64 [a2 + 0x40]\n 23607: u64 [s1 + 0x180] = a0\n 23611: a0 = s1 + 0x340\n 23615: ra = 0x372\n 23619: t0 = 0x3d2\n 23623: jump @1355\n      : @845 [@dyn 441] (gas: 19)\n 23626: a0 = u64 [s1 + 0x340]\n 23630: u64 [s1 + 0x178] = a0\n 23634: a0 = u64 [s1 + 0x348]\n 23638: u64 [s1 + 0x170] = a0\n 23642: a0 = u64 [s1 + 0x350]\n 23646: u64 [s1 + 0x168] = a0\n 23650: a0 = u64 [s1 + 0x358]\n 23654: u64 [s1 + 0x160] = a0\n 23658: a0 = u64 [s1 + 0x180]\n 23662: u64 [s1 + 0x318] = a0\n 23666: a0 = u64 [s1 + 0x188]\n 23670: u64 [s1 + 0x310] = a0\n 23674: a0 = u64 [s1 + 0x190]\n 23678: u64 [s1 + 0x308] = a0\n 23682: a0 = s1 + 0x320\n 23686: a1 = s1 + 0x300\n 23690: a2 = u64 [s1 + 0x198]\n 23694: u64 [s1 + 0x300] = a2\n 23698: ra = 884, jump @1023\n      : @846 [@dyn 442] (gas: 11)\n 23704: a4 = s1 + 0x300\n 23708: a1 = u64 [a4 + 0x20]\n 23711: a0 = u64 [a4 + 0x28]\n 23714: a2 = u64 [a4 + 0x30]\n 23717: a3 = u64 [a4 + 0x38]\n 23720: u64 [s1 + 0x2f8] = a3\n 23724: u64 [s1 + 0x2f0] = a2\n 23728: u64 [s1 + 0x2e8] = a0\n 23732: a0 = s1 + 0x2e0\n 23736: u64 [s1 + 0x2e0] = a1\n 23740: ra = 886, jump @1069\n      : @847 [@dyn 443] (gas: 24)\n 23746: a4 = s1 + 0x100\n 23750: a0 = u64 [a4 + 0x60]\n 23753: a5 = s1 + 0x200\n 23757: u64 [a5 + 0x98] = a0\n 23761: a0 = u64 [a4 + 0x68]\n 23764: u64 [a5 + 0x90] = a0\n 23768: a0 = u64 [a4 + 0x70]\n 23771: u64 [a5 + 0x88] = a0\n 23775: a0 = u64 [a4 + 0x78]\n 23778: u64 [a5 + 0x80] = a0\n 23782: a0 = u64 [a4 + 0x80]\n 23786: u64 [a5 + 0xb8] = a0\n 23790: a0 = u64 [a4 + 0x88]\n 23794: u64 [a5 + 0xb0] = a0\n 23798: a0 = u64 [a4 + 0x90]\n 23802: u64 [a5 + 0xa8] = a0\n 23806: a0 = s1 + 0x2c0\n 23810: a1 = s1 + 0x2a0\n 23814: a2 = s1 + 0x280\n 23818: a3 = u64 [a4 + 0x98]\n 23822: u64 [a5 + 0xa0] = a3\n 23826: ra = 0x378\n 23830: t0 = 0x51a\n 23834: jump @1330\n      : @848 [@dyn 444] (gas: 6)\n 23837: a1 = 0x201d0\n 23842: i32 a1 = a1 + 0\n 23844: a0 = 0\n 23846: a2 = 0\n 23848: ecalli 8 // 'seal_return'\n 23850: jump @837\n      : @849 (gas: 18)\n 23853: a3 = 0x7965db0b00000000\n 23863: a3 = a3 ^ a0\n 23866: a3 = a3 | a1\n 23869: a3 = a3 | a2\n 23872: a3 = a3 <u 0x1\n 23875: a4 = 0x1ffc9a700000000\n 23885: a0 = a0 ^ a4\n 23888: a0 = a0 | a1\n 23891: a0 = a0 | a2\n 23894: a0 = a0 <u 0x1\n 23897: a0 = a0 | a3\n 23900: u64 [s1 + 440] = 0\n 23904: u64 [s1 + 432] = 0\n 23908: u64 [s1 + 0x1a0] = a0\n 23912: a0 = 0x80\n 23916: a1 = s1 + 0x1a0\n 23920: u64 [s1 + 424] = 0\n 23924: ra = 890, jump @19\n      : @850 [@dyn 445] (gas: 2)\n 23930: a1 = i32 [0x201bc]\n 23935: jump @852 if a1 >u 159\n      : @851 (gas: 4)\n 23940: u32 [0x201bc] = 0xa0\n 23947: a0 = 0x201d0\n 23952: i32 a1 = a0 + 0x80\n 23956: jump @511\n      : @852 (gas: 3)\n 23959: a0 = 0x201d0\n 23964: i32 a1 = a0 + 0x80\n 23968: jump @511\n      : @853 (gas: 1)\n 23971: t0 = 892, jump @1349\n      : @854 [@dyn 446] (gas: 1)\n 23977: jump @863 if a1 <u a0\n      : @855 (gas: 2)\n 23981: a1 = 0x201d0\n 23986: jump @836\n      : @856 (gas: 5)\n 23989: a0 = s1 + 0x7ff\n 23993: a0 = a0 + 0x641\n 23997: ra = 0x37e\n 24001: t0 = 0x3d2\n 24005: jump @1355\n      : @857 [@dyn 447] (gas: 16)\n 24008: a0 = s1 + 0x7ff\n 24012: a0 = a0 + 0x119\n 24016: a2 = a0 + 0x500\n 24020: a1 = u64 [a2 + 0x40]\n 24023: u64 [s1 + 0x178] = a1\n 24027: a1 = u64 [a2 + 0x38]\n 24030: u64 [s1 + 0x188] = a1\n 24034: a1 = u64 [a2 + 0x30]\n 24037: u64 [s1 + 0x190] = a1\n 24041: a0 = u64 [a2 + 0x28]\n 24044: u64 [s1 + 0x198] = a0\n 24048: a0 = 0x301d0\n 24053: u64 [s1 + 0x180] = a0\n 24057: i32 a0 = a0 + 0\n 24059: ecalli 3 // 'caller'\n 24061: fallthrough\n      : @858 (gas: 26)\n 24062: a5 = s1 + 0x100\n 24066: a2 = u64 [a5 + 0x80]\n 24070: a0 = u64 [a2 + 0x8]\n 24073: a1 = u64 [a2]\n 24075: a2 = i32 [a2 + 0x10]\n 24078: a0 = reverse a0\n 24080: a3 = a0 >> 0x20\n 24083: a1 = reverse a1\n 24085: a4 = a1 << 0x20\n 24088: a3 = a3 | a4\n 24091: a0 = a0 << 0x20\n 24094: a2 = reverse a2\n 24096: a2 = a2 >> 0x20\n 24099: a0 = a0 | a2\n 24102: a1 = a1 >> 0x20\n 24105: a2 = u64 [a5 + 0x88]\n 24109: a2 = a2 << 0x20\n 24112: a2 = a2 >> 0x20\n 24115: a1 = a1 ^ a2\n 24118: a2 = u64 [a5 + 0x98]\n 24122: a0 = a0 ^ a2\n 24125: a0 = a0 | a1\n 24128: a1 = u64 [a5 + 0x90]\n 24132: a1 = a1 ^ a3\n 24135: a0 = a0 | a1\n 24138: jump @876 if a0 != 0\n      : @859 (gas: 34)\n 24142: a0 = s1 + 0x2000\n 24146: i32 a0 = a0 + 0x5e0\n 24150: a1 = 0x4\n 24153: ecalli 1 // 'call_data_load'\n 24155: a2 = s1 + 0x2118\n 24159: a4 = a2 + 0x400\n 24163: a3 = u64 [a4 + 0xc8]\n 24167: a0 = u64 [a4 + 0xd0]\n 24171: a1 = u64 [a4 + 0xd8]\n 24175: a2 = u64 [a4 + 0xe0]\n 24179: a4 = s1 + 0x7ff\n 24183: a4 = a4 + 0x119\n 24187: a5 = u64 [s1 + 0x178]\n 24191: u64 [a4 + 0x4c0] = a5\n 24195: a5 = u64 [s1 + 0x188]\n 24199: u64 [a4 + 0x4b8] = a5\n 24203: a5 = u64 [s1 + 0x190]\n 24207: u64 [a4 + 0x4b0] = a5\n 24211: a5 = u64 [s1 + 0x198]\n 24215: u64 [a4 + 0x4a8] = a5\n 24219: a5 = a4 + 0x400\n 24223: u64 [a5 + 0xe0] = a2\n 24227: u64 [a5 + 0xd8] = a1\n 24231: u64 [a5 + 0xd0] = a0\n 24235: a0 = s1 + 0x7ff\n 24239: a0 = a0 + 0x601\n 24243: a1 = s1 + 0x7ff\n 24247: a1 = a1 + 0x5e1\n 24251: a2 = s1 + 0x7ff\n 24255: a2 = a2 + 0x5c1\n 24259: u64 [a5 + 0xc8] = a3\n 24263: ra = 0x380\n 24267: t0 = 0x55e\n 24271: jump @1330\n      : @860 [@dyn 448] (gas: 6)\n 24274: a1 = 0x201d0\n 24279: i32 a1 = a1 + 0\n 24281: a0 = 0\n 24283: a2 = 0\n 24285: ecalli 8 // 'seal_return'\n 24287: jump @837\n      : @861 (gas: 8)\n 24290: u64 [s1 + 1072] = 0\n 24294: u64 [s1 + 1064] = 0\n 24298: u64 [s1 + 1056] = 0\n 24302: a0 = 0x4e487b7100000000\n 24312: a1 = s1 + 0x420\n 24316: u64 [s1 + 0x438] = a0\n 24320: a0 = 0\n 24322: ra = 898, jump @19\n      : @862 [@dyn 449] (gas: 8)\n 24328: u64 [s1 + 1048] = 0\n 24332: u64 [s1 + 1040] = 0\n 24336: u64 [s1 + 1024] = 0x41\n 24341: a0 = 0x4\n 24344: a1 = s1 + 0x400\n 24348: u64 [s1 + 1032] = 0\n 24352: ra = 0x334\n 24356: jump @19\n      : @863 (gas: 4)\n 24359: a0 = s1 + 0x12e0\n 24363: ra = 0x384\n 24367: t0 = 0x3dc\n 24371: jump @1355\n      : @864 [@dyn 450] (gas: 12)\n 24374: a1 = s1 + 0x1118\n 24378: a2 = a1 + 0x100\n 24382: a0 = u64 [a2 + 0xe0]\n 24386: a1 = s1 + 0x100\n 24390: u64 [a1 + 0x80] = a0\n 24394: a0 = u64 [a2 + 0xd8]\n 24398: u64 [a1 + 0x88] = a0\n 24402: a0 = u64 [a2 + 0xd0]\n 24406: u64 [a1 + 0x90] = a0\n 24410: a0 = u64 [a2 + 0xc8]\n 24414: u64 [a1 + 0x98] = a0\n 24418: ra = 902, jump @1043\n      : @865 [@dyn 451] (gas: 13)\n 24424: a0 = u64 [0x20000]\n 24429: a3 = s1 + 0x1118\n 24433: a4 = a3 + 0x100\n 24437: u64 [a4 + 0xc0] = a0\n 24441: a0 = u64 [0x20008]\n 24446: a1 = u64 [0x20010]\n 24451: a2 = u64 [0x20018]\n 24456: u64 [a4 + 0xb8] = a0\n 24460: u64 [a4 + 0xb0] = a1\n 24464: a1 = s1 + 0x12c0\n 24468: u64 [a4 + 0xa8] = a2\n 24472: a0 = 0\n 24474: ra = 904, jump @19\n      : @866 [@dyn 452] (gas: 9)\n 24480: a0 = s1 + 0x1118\n 24484: u64 [a0 + 416] = 0\n 24488: u64 [a0 + 408] = 0\n 24492: u64 [a0 + 400] = 0\n 24496: a2 = a0\n 24498: a0 = 0x20\n 24501: a1 = s1 + 0x12a0\n 24505: u64 [a2 + 392] = 0\n 24509: ra = 906, jump @19\n      : @867 [@dyn 453] (gas: 2)\n 24515: a1 = i32 [0x201bc]\n 24520: jump @869 if a1 >u 63\n      : @868 (gas: 4)\n 24524: a1 = 0x40\n 24527: u32 [0x201bc] = a1\n 24532: t0 = 0x38c\n 24536: jump @1343\n      : @869 (gas: 1)\n 24539: t0 = 908, jump @1343\n      : @870 [@dyn 454] (gas: 9)\n 24545: a0 = 0x201d0\n 24550: i32 a0 = a0 + 0\n 24552: u64 [s1 + 0x178] = a0\n 24556: i32 a2 = a2 + 0\n 24558: a1 = 0x40\n 24561: ra = 0x38e\n 24565: ecalli 6 // 'hash_keccak_256'\n 24567: t0 = 0x390\n 24571: jump @1287\n      : @871 [@dyn 455] (gas: 1)\n 24574: t0 = 912, jump @1287\n      : @872 [@dyn 456] (gas: 8)\n 24580: a5 = a1 + 0x500\n 24584: u64 [a5 + 0xc8] = a3\n 24588: u64 [a5 + 0xd0] = a2\n 24592: u64 [a5 + 0xd8] = a4\n 24596: u64 [a5 + 0xe0] = a0\n 24600: a0 = s1 + 0x1280\n 24604: a1 = s1 + 0x26e0\n 24608: ra = 914, jump @21\n      : @873 [@dyn 457] (gas: 12)\n 24614: a4 = s1 + 0x1118\n 24618: a5 = a4 + 0x100\n 24622: a1 = u64 [a5 + 0x68]\n 24625: a0 = u64 [a5 + 0x70]\n 24628: a2 = u64 [a5 + 0x78]\n 24631: a3 = u64 [a5 + 0x80]\n 24635: u64 [a5 + 0x60] = a3\n 24638: u64 [a5 + 0x58] = a2\n 24641: u64 [a5 + 0x50] = a0\n 24644: a0 = s1 + 0x1260\n 24648: u64 [a5 + 0x48] = a1\n 24651: ra = 916, jump @1069\n      : @874 [@dyn 458] (gas: 17)\n 24657: a4 = s1 + 0x100\n 24661: a0 = u64 [a4 + 0x80]\n 24665: a1 = s1 + 0x1118\n 24669: a2 = a1 + 0x100\n 24673: u64 [a2 + 0x20] = a0\n 24676: a0 = u64 [a4 + 0x88]\n 24680: u64 [a2 + 0x18] = a0\n 24683: a0 = u64 [a4 + 0x90]\n 24687: u64 [a2 + 0x10] = a0\n 24690: a3 = a1\n 24692: a0 = s1 + 0x1240\n 24696: a1 = s1 + 0x1220\n 24700: a2 = u64 [a4 + 0x98]\n 24704: u64 [a3 + 0x108] = a2\n 24708: ra = 0x396\n 24712: t0 = 0x48e\n 24716: jump @1309\n      : @875 [@dyn 459] (gas: 1)\n 24719: jump @814\n      : @876 (gas: 11)\n 24722: a2 = s1 + 0x7ff\n 24726: a2 = a2 + 0x119\n 24730: u64 [a2 + 1304] = 0\n 24734: u64 [a2 + 1296] = 0\n 24738: a0 = 0x6697b23200000000\n 24748: u64 [a2 + 0x520] = a0\n 24752: a1 = s1 + 0x7ff\n 24756: a1 = a1 + 0x621\n 24760: u64 [a2 + 1288] = 0\n 24764: a0 = 0\n 24766: ra = 920, jump @19\n      : @877 [@dyn 460] (gas: 2)\n 24772: a1 = i32 [0x201bc]\n 24777: jump @879 if a1 >u 31\n      : @878 (gas: 2)\n 24781: u32 [0x201bc] = 0x20\n 24787: fallthrough\n      : @879 (gas: 6)\n 24788: a1 = 0x201d0\n 24793: i32 a1 = a1 + 0\n 24795: a0 = 0x1\n 24798: a2 = 0x4\n 24801: ecalli 8 // 'seal_return'\n 24803: fallthrough\n      : @880 (gas: 8)\n 24804: u64 [s1 + 1168] = 0\n 24808: u64 [s1 + 1160] = 0\n 24812: u64 [s1 + 1152] = 0\n 24816: a0 = 0x4e487b7100000000\n 24826: a1 = s1 + 0x480\n 24830: u64 [s1 + 0x498] = a0\n 24834: a0 = 0\n 24836: ra = 922, jump @19\n      : @881 [@dyn 461] (gas: 8)\n 24842: u64 [s1 + 1144] = 0\n 24846: u64 [s1 + 1136] = 0\n 24850: u64 [s1 + 1120] = 0x41\n 24855: a0 = 0x4\n 24858: a1 = s1 + 0x460\n 24862: u64 [s1 + 1128] = 0\n 24866: ra = 0x334\n 24870: jump @19\n      : @882 (gas: 8)\n 24873: u64 [s1 + 1264] = 0\n 24877: u64 [s1 + 1256] = 0\n 24881: u64 [s1 + 1248] = 0\n 24885: a0 = 0x4e487b7100000000\n 24895: a1 = s1 + 0x4e0\n 24899: u64 [s1 + 0x4f8] = a0\n 24903: a0 = 0\n 24905: ra = 924, jump @19\n      : @883 [@dyn 462] (gas: 8)\n 24911: u64 [s1 + 1240] = 0\n 24915: u64 [s1 + 1232] = 0\n 24919: u64 [s1 + 1216] = 0x41\n 24924: a0 = 0x4\n 24927: a1 = s1 + 0x4c0\n 24931: u64 [s1 + 1224] = 0\n 24935: ra = 0x334\n 24939: jump @19\n      : @884 [@dyn 463] (gas: 14)\n 24942: a2 = u64 [a1 + 0x10]\n 24945: u64 [s1 + 0x30] = a2\n 24948: a2 = u64 [a1 + 0x8]\n 24951: u64 [s1 + 0x50] = a2\n 24954: a1 = u64 [a1]\n 24956: u64 [s1 + 0x58] = a1\n 24959: u64 [s1 + 0x38] = a0\n 24962: u64 [s1 + 536] = 0\n 24966: u64 [s1 + 528] = 0\n 24970: u64 [s1 + 520] = 0\n 24974: a1 = s1 + 0x200\n 24978: u64 [s1 + 512] = 0\n 24982: a0 = 0\n 24984: ra = 928, jump @19\n      : @885 [@dyn 464] (gas: 7)\n 24990: u64 [s1 + 504] = 0\n 24994: u64 [s1 + 496] = 0\n 24998: u64 [s1 + 488] = 0\n 25002: a0 = 0x20\n 25005: a1 = s1 + 0x1e0\n 25009: u64 [s1 + 480] = 0\n 25013: ra = 930, jump @19\n      : @886 [@dyn 465] (gas: 3)\n 25019: a1 = 0x201bc\n 25024: a0 = i32 [0x201bc]\n 25029: jump @888 if a0 >u 63\n      : @887 (gas: 2)\n 25033: u32 [0x201bc] = 0x40\n 25039: fallthrough\n      : @888 (gas: 14)\n 25040: a0 = sp + 0xffffffffffffffe0\n 25043: a2 = a0 & 0xffffffffffffffe0\n 25046: u64 [s1 + 0x28] = a2\n 25049: sp = a2\n 25051: a0 = 0x201d0\n 25056: i32 a0 = a0 + 0\n 25058: i32 a2 = a2 + 0\n 25060: u64 [s1 + 0x48] = a1\n 25063: a1 = 0x40\n 25066: u64 [s1 + 0x40] = a0\n 25069: ra = 0x3a4\n 25073: ecalli 6 // 'hash_keccak_256'\n 25075: t0 = 0x3a6\n 25079: jump @1278\n      : @889 [@dyn 466] (gas: 1)\n 25082: t0 = 934, jump @1278\n      : @890 [@dyn 467] (gas: 13)\n 25088: a0 = u64 [s1 + 0x30]\n 25091: a0 = a0 << 0x20\n 25094: a0 = a0 >> 0x20\n 25097: u64 [s1 + 472] = 0\n 25101: u64 [s1] = a0\n 25103: u64 [s1 + 0x1d0] = a0\n 25107: a0 = u64 [s1 + 0x50]\n 25110: u64 [s1 + 0x1c8] = a0\n 25114: a1 = s1 + 0x1c0\n 25118: a0 = u64 [s1 + 0x58]\n 25121: u64 [s1 + 0x1c0] = a0\n 25125: a0 = 0\n 25127: ra = 936, jump @19\n      : @891 [@dyn 468] (gas: 12)\n 25133: a0 = u64 [s1 + 0x8]\n 25136: a3 = s1 + 0x100\n 25140: u64 [a3 + 0xb8] = a0\n 25144: a0 = u64 [s1 + 0x10]\n 25147: u64 [a3 + 0xb0] = a0\n 25151: a0 = u64 [s1 + 0x18]\n 25154: u64 [a3 + 0xa8] = a0\n 25158: a0 = 0x20\n 25161: a1 = s1 + 0x1a0\n 25165: a2 = u64 [s1 + 0x20]\n 25168: u64 [a3 + 0xa0] = a2\n 25172: ra = 938, jump @19\n      : @892 [@dyn 469] (gas: 3)\n 25178: a1 = u64 [s1 + 0x48]\n 25181: a0 = i32 [a1]\n 25183: jump @894 if a0 >u 63\n      : @893 (gas: 3)\n 25187: u32 [a1 + 0] = 0x40\n 25190: t0 = 0x3ac\n 25194: jump @1346\n      : @894 (gas: 1)\n 25197: t0 = 940, jump @1346\n      : @895 [@dyn 470] (gas: 5)\n 25203: ra = 0x3ae\n 25207: ecalli 6 // 'hash_keccak_256'\n 25209: a3 = u64 [s1 + 0x30]\n 25212: t0 = 0x3b0\n 25216: jump @1288\n      : @896 [@dyn 471] (gas: 2)\n 25219: a3 = u64 [s1 + 0x30]\n 25222: t0 = 944, jump @1288\n      : @897 [@dyn 472] (gas: 2)\n 25228: a0 = s1 + 0x180\n 25232: ra = 946, jump @21\n      : @898 [@dyn 473] (gas: 2)\n 25238: a0 = u8 [s1 + 0x180]\n 25242: jump @900 if a0 == 0\n      : @899 (gas: 2)\n 25245: a1 = 0\n 25247: jump @920\n      : @900 (gas: 6)\n 25250: u64 [s1 + 376] = 0\n 25254: u64 [s1 + 368] = 0\n 25258: u64 [s1 + 360] = 0\n 25262: a1 = s1 + 0x160\n 25266: u64 [s1 + 352] = 0\n 25270: ra = 948, jump @19\n      : @901 [@dyn 474] (gas: 1)\n 25276: t0 = 950, jump @1334\n      : @902 [@dyn 475] (gas: 1)\n 25282: ra = 952, jump @19\n      : @903 [@dyn 476] (gas: 3)\n 25288: a1 = u64 [s1 + 0x48]\n 25291: a0 = i32 [a1]\n 25293: jump @905 if a0 >u 63\n      : @904 (gas: 3)\n 25297: u32 [a1 + 0] = 0x40\n 25300: t0 = 0x3ba\n 25304: jump @1346\n      : @905 (gas: 1)\n 25307: t0 = 954, jump @1346\n      : @906 [@dyn 477] (gas: 5)\n 25313: ra = 0x3bc\n 25317: ecalli 6 // 'hash_keccak_256'\n 25319: a3 = u64 [s1 + 0x30]\n 25322: t0 = 0x3be\n 25326: jump @1329\n      : @907 [@dyn 478] (gas: 2)\n 25329: a3 = u64 [s1 + 0x30]\n 25332: t0 = 958, jump @1329\n      : @908 [@dyn 479] (gas: 21)\n 25338: u64 [s1 + 0x28] = a0\n 25341: a0 = reverse a1\n 25343: u64 [s1 + 0x20] = a0\n 25346: a0 = reverse a2\n 25348: u64 [s1 + 0x18] = a0\n 25351: a0 = reverse a3\n 25353: u64 [s1 + 0x10] = a0\n 25356: a0 = sp + 0xffffffffffffffe0\n 25359: a0 = a0 & 0xffffffffffffffe0\n 25362: u64 [s1 + 0x30] = a0\n 25365: sp = a0\n 25367: u64 [s1 + 312] = 0\n 25371: a0 = u64 [s1]\n 25373: u64 [s1 + 0x130] = a0\n 25377: a0 = u64 [s1 + 0x50]\n 25380: u64 [s1 + 0x128] = a0\n 25384: a1 = s1 + 0x120\n 25388: a0 = u64 [s1 + 0x58]\n 25391: u64 [s1 + 0x120] = a0\n 25395: a0 = 0\n 25397: ra = 960, jump @19\n      : @909 [@dyn 480] (gas: 12)\n 25403: a0 = u64 [s1 + 0x10]\n 25406: a3 = s1 + 0x100\n 25410: u64 [a3 + 0x18] = a0\n 25413: a0 = u64 [s1 + 0x18]\n 25416: u64 [a3 + 0x10] = a0\n 25419: a0 = u64 [s1 + 0x20]\n 25422: u64 [a3 + 0x8] = a0\n 25425: a0 = 0x20\n 25428: a1 = s1 + 0x100\n 25432: a2 = u64 [s1 + 0x28]\n 25435: u64 [a3] = a2\n 25437: ra = 962, jump @19\n      : @910 [@dyn 481] (gas: 3)\n 25443: a1 = u64 [s1 + 0x48]\n 25446: a0 = i32 [a1]\n 25448: jump @912 if a0 >u 63\n      : @911 (gas: 2)\n 25452: u32 [a1 + 0] = 0x40\n 25455: fallthrough\n      : @912 (gas: 12)\n 25456: a0 = sp + 0xffffffffffffffe0\n 25459: a0 = a0 & 0xffffffffffffffe0\n 25462: u64 [s1 + 0x48] = a0\n 25465: sp = a0\n 25467: i32 a2 = a0 + 0\n 25469: a1 = 0x40\n 25472: a0 = u64 [s1 + 0x40]\n 25475: ra = 0x3c4\n 25479: ecalli 6 // 'hash_keccak_256'\n 25481: a3 = u64 [s1 + 0x48]\n 25484: t0 = 0x3c6\n 25488: jump @1280\n      : @913 [@dyn 482] (gas: 2)\n 25491: a3 = u64 [s1 + 0x48]\n 25494: t0 = 966, jump @1280\n      : @914 [@dyn 483] (gas: 7)\n 25500: a1 = u64 [s1 + 0x30]\n 25503: u64 [a1 + 0x18] = a3\n 25506: u64 [a1 + 0x10] = a2\n 25509: u64 [a1 + 0x8] = a4\n 25512: u64 [a1] = a0\n 25514: a0 = s1 + 0xe0\n 25518: ra = 968, jump @21\n      : @915 [@dyn 484] (gas: 14)\n 25524: a0 = u64 [s1 + 0xe0]\n 25528: a1 = u64 [s1 + 0xe8]\n 25532: a2 = u64 [s1 + 0xf8]\n 25536: a3 = u64 [s1 + 0xf0]\n 25540: a0 = a0 & 0xffffffffffffff00\n 25544: a0 = a0 | 0x1\n 25547: a4 = s1 + 0x200\n 25551: u64 [a4 + 0x38] = a2\n 25554: u64 [a4 + 0x30] = a3\n 25557: u64 [a4 + 0x28] = a1\n 25560: u64 [a4 + 0x20] = a0\n 25563: a1 = s1 + 0x220\n 25567: a0 = u64 [s1 + 0x30]\n 25570: ra = 970, jump @23\n      : @916 [@dyn 485] (gas: 8)\n 25576: a0 = 0x301d0\n 25581: u64 [s1 + 0x48] = a0\n 25584: i32 a0 = a0 + 0\n 25586: ra = 0x3cc\n 25590: ecalli 3 // 'caller'\n 25592: a2 = u64 [s1 + 0x48]\n 25595: t0 = 0x3ce\n 25599: jump @1291\n      : @917 [@dyn 486] (gas: 2)\n 25602: a2 = u64 [s1 + 0x48]\n 25605: t0 = 974, jump @1291\n      : @918 [@dyn 487] (gas: 36)\n 25611: t0 = a1 | a0\n 25614: a3 = a3 >> 0x20\n 25617: a2 = reverse a2\n 25619: a1 = a2 << 0x20\n 25622: a1 = a1 | a3\n 25625: a2 = a2 >> 0x20\n 25628: u64 [s1 + 120] = 0\n 25631: u64 [s1 + 152] = 0\n 25635: a0 = u64 [s1]\n 25637: u64 [s1 + 0x90] = a0\n 25641: a0 = u64 [s1 + 0x50]\n 25644: u64 [s1 + 0x88] = a0\n 25648: a0 = u64 [s1 + 0x58]\n 25651: u64 [s1 + 0x80] = a0\n 25655: u64 [s1 + 184] = 0\n 25659: u64 [s1 + 176] = 0\n 25663: u64 [s1 + 168] = 0\n 25667: u64 [s1 + 160] = 0\n 25671: a3 = u64 [0x200c8]\n 25676: a4 = u64 [0x200d0]\n 25681: a5 = u64 [0x200d8]\n 25686: a0 = u64 [0x200e0]\n 25691: u64 [s1 + 0xd8] = a3\n 25695: u64 [s1 + 0xd0] = a4\n 25699: u64 [s1 + 0xc8] = a5\n 25703: u64 [s1 + 0xc0] = a0\n 25707: u64 [s1 + 0x70] = a2\n 25710: u64 [s1 + 0x68] = a1\n 25713: a2 = s1 + 0xc0\n 25717: a3 = s1 + 0xa0\n 25721: a4 = s1 + 0x80\n 25725: a5 = s1 + 0x60\n 25728: u64 [s1 + 0x60] = t0\n 25731: a0 = 0\n 25733: a1 = 0\n 25735: ra = 976, jump @27\n      : @919 [@dyn 488] (gas: 2)\n 25741: a1 = 0x1\n 25744: fallthrough\n      : @920 (gas: 12)\n 25745: a2 = u64 [s1 + 0x38]\n 25748: u64 [a2] = a1\n 25750: u64 [a2 + 8] = 0\n 25753: u64 [a2 + 16] = 0\n 25756: u64 [a2 + 24] = 0\n 25759: sp = s0 + 0xfffffffffffffda0\n 25763: a0 = sp + 0x200\n 25767: ra = u64 [a0 + 0x58]\n 25770: s0 = u64 [a0 + 0x50]\n 25773: s1 = u64 [a0 + 0x48]\n 25776: sp = sp + 0x260\n 25780: ret\n      : @921 [@dyn 489] (gas: 5)\n 25782: a1 = 0x24\n 25785: ra = 0x3d4\n 25789: ecalli 1 // 'call_data_load'\n 25791: t0 = 0x3d6\n 25795: jump @1320\n      : @922 [@dyn 490] (gas: 1)\n 25798: t0 = 982, jump @1320\n      : @923 [@dyn 491] (gas: 1)\n 25804: jump @926 if a3 == 0\n      : @924 (gas: 1)\n 25807: t0 = 984, jump @1332\n      : @925 [@dyn 492] (gas: 1)\n 25813: ret\n      : @926 (gas: 8)\n 25815: a1 = 0x201d0\n 25820: i32 a1 = a1 + 0\n 25822: a0 = 0x1\n 25825: a2 = 0\n 25827: ra = 0x3da\n 25831: ecalli 8 // 'seal_return'\n 25833: t0 = 0x3dc\n 25837: jump @1355\n      : @927 [@dyn 493] (gas: 1)\n 25840: t0 = 988, jump @1355\n      : @928 [@dyn 494] (gas: 5)\n 25846: a1 = 0x4\n 25849: ra = 0x3de\n 25853: ecalli 1 // 'call_data_load'\n 25855: t0 = 0x3e0\n 25859: jump @1320\n      : @929 [@dyn 495] (gas: 1)\n 25862: t0 = 992, jump @1320\n      : @930 [@dyn 496] (gas: 1)\n 25868: jump @933 if a3 == 0\n      : @931 (gas: 1)\n 25871: t0 = 994, jump @1332\n      : @932 [@dyn 497] (gas: 1)\n 25877: ret\n      : @933 (gas: 7)\n 25879: a1 = 0x201d0\n 25884: i32 a1 = a1 + 0\n 25886: a0 = 0x1\n 25889: a2 = 0\n 25891: ra = 0x3e4\n 25895: ecalli 8 // 'seal_return'\n 25897: fallthrough\n      : @934 [@dyn 498] (gas: 19)\n 25898: sp = sp + 0xffffffffffffff90\n 25901: u64 [sp + 0x68] = ra\n 25904: u64 [sp + 0x60] = s0\n 25907: s0 = sp + 0x70\n 25910: sp = sp & 0xfffffffffffffff0\n 25913: a3 = u64 [a0 + 0x18]\n 25916: a2 = u64 [a0 + 0x10]\n 25919: t1 = u64 [a0]\n 25921: a0 = u64 [a0 + 0x8]\n 25924: a4 = a3 >u 0\n 25926: a5 = a2 >u 0\n 25928: a5 = a4 if a3 != 0\n 25931: t0 = a0 >u 0\n 25933: a4 = t1 <u 0xffffffffffffff20\n 25937: a4 = a4 ^ 0x1\n 25940: a4 = t0 if a0 != 0\n 25943: a1 = a2 | a3\n 25946: a4 = a5 if a1 != 0\n 25949: jump @937 if a4 != 0\n      : @935 (gas: 15)\n 25952: a1 = t1 + 0xe0\n 25956: a4 = a1 <u t1\n 25959: a5 = a0 + a4\n 25962: a0 = a5 <u a0\n 25965: a0 = a4 if a4 == 0\n 25968: a0 = a0 + a2\n 25971: a2 = a0 <u a2\n 25974: a2 = a2 + a3\n 25977: u64 [sp + 0x40] = a1\n 25980: u64 [sp + 0x48] = a5\n 25983: u64 [sp + 0x50] = a0\n 25986: a0 = 0x40\n 25989: a1 = sp + a0\n 25992: u64 [sp + 0x58] = a2\n 25995: ra = 998, jump @19\n      : @936 [@dyn 499] (gas: 5)\n 26001: sp = s0 + 0xffffffffffffff90\n 26004: ra = u64 [sp + 0x68]\n 26007: s0 = u64 [sp + 0x60]\n 26010: sp = sp + 0x70\n 26013: ret\n      : @937 (gas: 1)\n 26015: t0 = 1000, jump @1337\n      : @938 [@dyn 500] (gas: 1)\n 26021: ra = 1002, jump @19\n      : @939 [@dyn 501] (gas: 7)\n 26027: u64 [sp + 24] = 0\n 26030: u64 [sp + 16] = 0\n 26033: u64 [sp + 0] = 0x41\n 26036: a0 = 0x4\n 26039: a1 = sp\n 26041: u64 [sp + 8] = 0\n 26044: ra = 1004, jump @19\n      : @940 [@dyn 502] (gas: 2)\n 26050: a1 = i32 [0x201bc]\n 26055: jump @942 if a1 >u 63\n      : @941 (gas: 2)\n 26059: u32 [0x201bc] = 0x40\n 26065: fallthrough\n      : @942 (gas: 7)\n 26066: a1 = 0x201d0\n 26071: i32 a1 = a1 + 0\n 26073: a0 = 0x1\n 26076: a2 = 0x24\n 26079: ra = 0x3ee\n 26083: ecalli 8 // 'seal_return'\n 26085: fallthrough\n      : @943 [@dyn 503] (gas: 46)\n 26086: sp = sp + 0xffffffffffffff70\n 26090: u64 [sp + 0x88] = ra\n 26094: u64 [sp + 0x80] = s0\n 26098: u64 [sp + 0x78] = s1\n 26101: s0 = sp + 0x90\n 26105: sp = sp & 0xfffffffffffffff0\n 26108: t0 = a0\n 26110: a2 = u64 [a1]\n 26112: t2 = u64 [a0 + 0x8]\n 26115: a5 = u64 [a1 + 0x8]\n 26118: t1 = u64 [a0]\n 26120: a3 = a2 + 0x1f\n 26123: ra = a3 <u a2\n 26126: a2 = a5 + ra\n 26129: a3 = a3 & 0xffffffffffffffe0\n 26132: u64 [sp + 0x8] = t1\n 26135: t1 = t1 + a3\n 26138: a4 = t1 <u a3\n 26141: a3 = a2 + t2\n 26144: a3 = a3 + a4\n 26147: s1 = a3 ^ a2\n 26150: a0 = a3 <u a2\n 26153: a0 = a4 if s1 == 0\n 26156: a4 = u64 [t0 + 0x18]\n 26159: a5 = a2 <u a5\n 26162: s1 = u64 [a1 + 0x10]\n 26165: t0 = u64 [t0 + 0x10]\n 26168: a1 = u64 [a1 + 0x18]\n 26171: a5 = ra if ra == 0\n 26174: a5 = a5 + s1\n 26177: s1 = a5 <u s1\n 26180: a2 = a5 + t0\n 26183: a0 = a0 + a2\n 26186: a5 = a2 <u a5\n 26189: a2 = a0 <u a2\n 26192: a1 = a1 + a4\n 26195: a1 = a1 + s1\n 26198: a1 = a1 + a5\n 26201: a5 = a1 + a2\n 26204: a1 = a5 >u 0\n 26206: a2 = a0 >u 0\n 26208: a2 = a1 if a5 != 0\n 26211: a1 = a0 | a5\n 26214: s1 = a3 >u 0\n 26216: s1 = a2 if a1 != 0\n 26219: jump @947 if s1 != 0\n      : @944 (gas: 13)\n 26222: a1 = u64 [sp + 0x8]\n 26225: a1 = t1 <u a1\n 26228: a2 = a3 ^ t2\n 26231: s1 = a3 <u t2\n 26234: s1 = a1 if a2 == 0\n 26237: a1 = a0 <u t0\n 26240: a2 = a5 ^ a4\n 26243: a4 = a5 <u a4\n 26246: a4 = a1 if a2 == 0\n 26249: a1 = a0 ^ t0\n 26252: a1 = a1 | a2\n 26255: a4 = s1 if a1 == 0\n 26258: jump @947 if a4 != 0\n      : @945 (gas: 7)\n 26261: u64 [sp + 0x50] = t1\n 26264: u64 [sp + 0x58] = a3\n 26267: u64 [sp + 0x60] = a0\n 26270: a0 = 0x40\n 26273: a1 = sp + 0x50\n 26276: u64 [sp + 0x68] = a5\n 26279: ra = 1008, jump @19\n      : @946 [@dyn 504] (gas: 6)\n 26285: sp = s0 + 0xffffffffffffff70\n 26289: ra = u64 [sp + 0x88]\n 26293: s0 = u64 [sp + 0x80]\n 26297: s1 = u64 [sp + 0x78]\n 26300: sp = sp + 0x90\n 26304: ret\n      : @947 (gas: 8)\n 26306: u64 [sp + 64] = 0\n 26309: u64 [sp + 56] = 0\n 26312: u64 [sp + 48] = 0\n 26315: a0 = 0x4e487b7100000000\n 26325: a1 = sp + 0x30\n 26328: u64 [sp + 0x48] = a0\n 26331: a0 = 0\n 26333: ra = 1010, jump @19\n      : @948 [@dyn 505] (gas: 7)\n 26339: u64 [sp + 40] = 0\n 26342: u64 [sp + 32] = 0\n 26345: u64 [sp + 16] = 0x41\n 26349: a0 = 0x4\n 26352: a1 = sp + 0x10\n 26355: u64 [sp + 24] = 0\n 26358: ra = 1012, jump @19\n      : @949 [@dyn 506] (gas: 2)\n 26364: a1 = i32 [0x201bc]\n 26369: jump @951 if a1 >u 63\n      : @950 (gas: 2)\n 26373: u32 [0x201bc] = 0x40\n 26379: fallthrough\n      : @951 (gas: 7)\n 26380: a1 = 0x201d0\n 26385: i32 a1 = a1 + 0\n 26387: a0 = 0x1\n 26390: a2 = 0x24\n 26393: ra = 0x3f6\n 26397: ecalli 8 // 'seal_return'\n 26399: fallthrough\n      : @952 [@dyn 507] (gas: 37)\n 26400: sp = sp + 0xfffffffffffffe40\n 26404: u64 [sp + 0x1b8] = ra\n 26408: u64 [sp + 0x1b0] = s0\n 26412: u64 [sp + 0x1a8] = s1\n 26416: s0 = sp + 0x1c0\n 26420: sp = sp & 0xffffffffffffffe0\n 26423: ra = u64 [a1]\n 26425: a4 = u64 [a2 + 0x8]\n 26428: t2 = u64 [a1 + 0x8]\n 26431: s1 = u64 [a2]\n 26433: a3 = ra + 0x1f\n 26436: t0 = a3 <u ra\n 26439: a5 = t2 + t0\n 26442: u64 [sp + 0x30] = s1\n 26445: t1 = a3 <u s1\n 26448: a3 = a5 ^ a4\n 26451: u64 [sp + 0x40] = a4\n 26454: a4 = a5 <u a4\n 26457: a4 = t1 if a3 == 0\n 26460: s1 = u64 [a1 + 0x10]\n 26463: a3 = a5 <u t2\n 26466: a3 = t0 if t0 == 0\n 26469: a5 = u64 [a2 + 0x18]\n 26472: t0 = u64 [a1 + 0x18]\n 26475: t1 = u64 [a2 + 0x10]\n 26478: a3 = a3 + s1\n 26481: a1 = a3 <u s1\n 26484: a1 = a1 + t0\n 26487: a2 = a1 ^ a5\n 26490: u64 [sp + 0x20] = a5\n 26493: a1 = a1 <s a5\n 26496: a5 = a3 <u t1\n 26499: a1 = a5 if a2 == 0\n 26502: a3 = a3 ^ t1\n 26505: a2 = a2 | a3\n 26508: a4 = a1 if a2 != 0\n 26511: jump @970 if a4 == 0\n      : @953 (gas: 13)\n 26515: u64 [sp + 0x18] = a0\n 26518: u64 [sp + 0x28] = t1\n 26521: a0 = ra | s1\n 26524: u64 [sp + 0x50] = t2\n 26527: u64 [sp + 0x38] = t0\n 26530: a1 = t2 | t0\n 26533: a0 = a0 | a1\n 26536: a0 = a0 >> 0x20\n 26539: u64 [sp + 0x48] = s1\n 26542: a1 = a1 | s1\n 26545: a1 = a1 << 0x20\n 26548: a0 = a0 | a1\n 26551: jump @969 if a0 != 0\n      : @954 (gas: 6)\n 26555: u64 [sp + 0x60] = ra\n 26558: i32 a1 = ra + 0\n 26560: i32 a0 = sp + 0x180\n 26564: u64 [sp + 0x10] = a1\n 26567: ecalli 1 // 'call_data_load'\n 26569: fallthrough\n      : @955 (gas: 13)\n 26570: a2 = u64 [sp + 0x198]\n 26574: a3 = u64 [sp + 0x190]\n 26578: a4 = u64 [sp + 0x188]\n 26582: a0 = a2 >u 0\n 26584: a1 = a3 >u 0\n 26586: a1 = a0 if a2 != 0\n 26589: u64 [sp + 0x90] = a2\n 26593: u64 [sp + 0x88] = a3\n 26597: a0 = a3 | a2\n 26600: u64 [sp + 0x98] = a4\n 26604: a2 = a4 >u 0\n 26606: a2 = a1 if a0 != 0\n 26609: jump @971 if a2 != 0\n      : @956 (gas: 4)\n 26613: s1 = u64 [sp + 0x180]\n 26617: a0 = sp + 0x160\n 26621: a1 = 0x40\n 26624: ra = 1016, jump @17\n      : @957 [@dyn 508] (gas: 31)\n 26630: t0 = u64 [sp + 0x178]\n 26634: a5 = u64 [sp + 0x170]\n 26638: u64 [sp + 0x78] = a5\n 26641: t1 = u64 [sp + 0x168]\n 26645: u64 [sp + 0x80] = t1\n 26649: t2 = u64 [sp + 0x160]\n 26653: u64 [sp + 0x70] = t2\n 26656: a0 = s1 + 0x1f\n 26659: u64 [sp + 0x58] = s1\n 26662: a1 = a0 <u s1\n 26665: a2 = u64 [sp + 0x98]\n 26669: a1 = a1 + a2\n 26672: a1 = a1 & 0x1\n 26675: a0 = a0 & 0xffffffffffffffe0\n 26678: a2 = a0 + 0x20\n 26681: a0 = a2 <u a0\n 26684: a3 = a1 + a0\n 26687: a4 = a3 <u a1\n 26690: a4 = a0 if a0 == 0\n 26693: u64 [sp + 312] = 0\n 26697: u64 [sp + 0x120] = a2\n 26701: s1 = t0\n 26703: u64 [sp + 0x158] = t0\n 26707: u64 [sp + 0x150] = a5\n 26711: u64 [sp + 0x148] = t1\n 26715: u64 [sp + 0x140] = t2\n 26719: u64 [sp + 0x128] = a3\n 26723: a0 = sp + 0x140\n 26727: a1 = sp + 0x120\n 26731: u64 [sp + 0x130] = a4\n 26735: ra = 1018, jump @943\n      : @958 [@dyn 509] (gas: 12)\n 26741: a2 = u64 [sp + 0x70]\n 26744: u64 [sp + 0x68] = s1\n 26747: a1 = u64 [sp + 0x80]\n 26751: a0 = a1 | s1\n 26754: a3 = u64 [sp + 0x78]\n 26757: a1 = a2 | a3\n 26760: a1 = a1 | a0\n 26763: a1 = a1 >> 0x20\n 26766: a0 = a0 | a3\n 26769: a0 = a0 << 0x20\n 26772: a0 = a0 | a1\n 26775: jump @969 if a0 != 0\n      : @959 (gas: 11)\n 26779: s1 = u64 [sp + 0x58]\n 26782: u64 [sp + 0x100] = s1\n 26786: a0 = u64 [sp + 0x98]\n 26790: u64 [sp + 0x108] = a0\n 26794: a0 = u64 [sp + 0x88]\n 26798: u64 [sp + 0x110] = a0\n 26802: a1 = sp + 0x100\n 26806: a0 = u64 [sp + 0x90]\n 26810: u64 [sp + 0x118] = a0\n 26814: a0 = a2\n 26816: ra = 1020, jump @19\n      : @960 [@dyn 510] (gas: 46)\n 26822: a0 = u64 [sp + 0x60]\n 26825: a3 = a0 + s1\n 26828: a2 = a3 <u a0\n 26831: t2 = u64 [sp + 0x50]\n 26834: a0 = u64 [sp + 0x98]\n 26838: a0 = a0 + t2\n 26841: a0 = a0 + a2\n 26844: a4 = a0 ^ t2\n 26847: a1 = a0 <u t2\n 26850: a1 = a2 if a4 == 0\n 26853: ra = u64 [sp + 0x48]\n 26856: a2 = u64 [sp + 0x88]\n 26860: a2 = a2 + ra\n 26863: a5 = a3 + 0x20\n 26866: t0 = a5 <u a3\n 26869: a4 = a0 + t0\n 26872: a3 = u64 [sp + 0x30]\n 26875: a5 = a3 <u a5\n 26878: a3 = u64 [sp + 0x40]\n 26881: s1 = a4 ^ a3\n 26884: a3 = a3 <u a4\n 26887: a5 = a3 if s1 != 0\n 26890: a3 = a2 <u ra\n 26893: t1 = u64 [sp + 0x38]\n 26896: s1 = u64 [sp + 0x90]\n 26900: s1 = s1 + t1\n 26903: a3 = a3 + s1\n 26906: a1 = a1 + a2\n 26909: a2 = a1 <u a2\n 26912: a2 = a2 + a3\n 26915: a0 = a4 <u a0\n 26918: a0 = t0 if t0 == 0\n 26921: a0 = a0 + a1\n 26924: a1 = a0 <u a1\n 26927: a1 = a1 + a2\n 26930: a3 = u64 [sp + 0x20]\n 26933: a2 = a1 ^ a3\n 26936: a1 = a3 <u a1\n 26939: a4 = u64 [sp + 0x28]\n 26942: a3 = a4 <u a0\n 26945: a1 = a3 if a2 == 0\n 26948: a0 = a0 ^ a4\n 26951: a0 = a0 | a2\n 26954: a5 = a1 if a0 != 0\n 26957: a3 = u64 [sp + 0x98]\n 26961: jump @976 if a5 != 0\n      : @961 (gas: 7)\n 26965: a0 = ra | t1\n 26968: a1 = 0xffffffe0\n 26978: a2 = u64 [sp + 0x60]\n 26981: a1 = a2 <u a1\n 26984: a1 = 0 if t2 != 0\n 26986: a1 = 0 if a0 != 0\n 26988: jump @969 if a1 == 0\n      : @962 (gas: 15)\n 26992: a2 = u64 [sp + 0x88]\n 26996: a5 = u64 [sp + 0x58]\n 26999: a0 = a5 | a2\n 27002: a1 = u64 [sp + 0x90]\n 27006: a1 = a1 | a3\n 27009: a0 = a0 | a1\n 27012: a0 = a0 >> 0x20\n 27015: a1 = a1 | a2\n 27018: a1 = a1 << 0x20\n 27021: a0 = a0 | a1\n 27024: s1 = u64 [sp + 0x70]\n 27027: a2 = u64 [sp + 0x80]\n 27031: a3 = u64 [sp + 0x78]\n 27034: a4 = u64 [sp + 0x68]\n 27037: jump @969 if a0 != 0\n      : @963 (gas: 7)\n 27041: a0 = a3 | a4\n 27044: a1 = 0xffffffe0\n 27054: u64 [sp + 0x60] = a1\n 27057: a1 = s1 <u a1\n 27060: a1 = 0 if a2 != 0\n 27062: a1 = 0 if a0 != 0\n 27064: jump @969 if a1 == 0\n      : @964 (gas: 7)\n 27068: a0 = u64 [sp + 0x10]\n 27071: i32 a0 = a0 + 0x20\n 27074: u64 [sp + 0x50] = a0\n 27077: i32 a0 = s1 + 0x20\n 27080: a1 = a5\n 27082: s1 = a5\n 27084: ra = 1022, jump @30\n      : @965 [@dyn 511] (gas: 5)\n 27090: i32 a0 = a0 + 0\n 27092: i32 a1 = s1 + 0\n 27094: a2 = u64 [sp + 0x50]\n 27097: ecalli 0 // 'call_data_copy'\n 27098: fallthrough\n      : @966 (gas: 27)\n 27099: t0 = u64 [sp + 0x70]\n 27102: a0 = t0 + s1\n 27105: a1 = a0 <u t0\n 27108: a2 = u64 [sp + 0x98]\n 27112: a4 = u64 [sp + 0x80]\n 27116: a2 = a2 + a4\n 27119: a2 = a2 + a1\n 27122: a3 = a2 ^ a4\n 27125: a4 = a2 <u a4\n 27128: a4 = a1 if a3 == 0\n 27131: a1 = u64 [sp + 0x88]\n 27135: a3 = u64 [sp + 0x78]\n 27138: a1 = a1 + a3\n 27141: a3 = a1 <u a3\n 27144: a5 = u64 [sp + 0x90]\n 27148: s1 = u64 [sp + 0x68]\n 27151: a5 = a5 + s1\n 27154: a3 = a3 + a5\n 27157: a4 = a4 + a1\n 27160: a1 = a4 <u a1\n 27163: a1 = a1 + a3\n 27166: a1 = a1 | a4\n 27169: a3 = u64 [sp + 0x60]\n 27172: a3 = a0 <u a3\n 27175: a3 = 0 if a2 != 0\n 27177: a3 = 0 if a1 != 0\n 27179: jump @969 if a3 == 0\n      : @967 (gas: 8)\n 27182: s1 = t0\n 27184: i32 a0 = a0 + 0x20\n 27187: u64 [sp + 248] = 0\n 27191: u64 [sp + 240] = 0\n 27195: u64 [sp + 232] = 0\n 27199: a1 = sp + 0xe0\n 27203: u64 [sp + 224] = 0\n 27207: ra = 1024, jump @19\n      : @968 [@dyn 512] (gas: 14)\n 27213: a0 = u64 [sp + 0x18]\n 27216: a1 = u64 [sp + 0x68]\n 27219: u64 [a0 + 0x18] = a1\n 27222: a1 = u64 [sp + 0x78]\n 27225: u64 [a0 + 0x10] = a1\n 27228: a1 = u64 [sp + 0x80]\n 27232: u64 [a0 + 0x8] = a1\n 27235: u64 [a0] = s1\n 27237: sp = s0 + 0xfffffffffffffe40\n 27241: ra = u64 [sp + 0x1b8]\n 27245: s0 = u64 [sp + 0x1b0]\n 27249: s1 = u64 [sp + 0x1a8]\n 27253: sp = sp + 0x1c0\n 27257: ret\n      : @969 (gas: 1)\n 27259: trap\n      : @970 (gas: 2)\n 27260: a1 = 0x201d0\n 27265: jump @977\n      : @971 (gas: 8)\n 27267: u64 [sp + 208] = 0\n 27271: u64 [sp + 200] = 0\n 27275: u64 [sp + 192] = 0\n 27279: a0 = 0x4e487b7100000000\n 27289: a1 = sp + 0xc0\n 27293: u64 [sp + 0xd8] = a0\n 27297: a0 = 0\n 27299: ra = 1026, jump @19\n      : @972 [@dyn 513] (gas: 7)\n 27305: u64 [sp + 184] = 0\n 27309: u64 [sp + 176] = 0\n 27313: u64 [sp + 160] = 0x41\n 27318: a0 = 0x4\n 27321: a1 = sp + 0xa0\n 27325: u64 [sp + 168] = 0\n 27329: ra = 1028, jump @19\n      : @973 [@dyn 514] (gas: 2)\n 27335: a1 = i32 [0x201bc]\n 27340: jump @975 if a1 >u 63\n      : @974 (gas: 2)\n 27344: u32 [0x201bc] = 0x40\n 27350: fallthrough\n      : @975 (gas: 7)\n 27351: a1 = 0x201d0\n 27356: i32 a1 = a1 + 0\n 27358: a0 = 0x1\n 27361: a2 = 0x24\n 27364: ecalli 8 // 'seal_return'\n 27366: a1 = 0x201d0\n 27371: jump @977\n      : @976 (gas: 2)\n 27373: a1 = 0x201d0\n 27378: fallthrough\n      : @977 (gas: 6)\n 27379: i32 a1 = a1 + 0\n 27381: a0 = 0x1\n 27384: a2 = 0\n 27386: ra = 0x406\n 27390: ecalli 8 // 'seal_return'\n 27392: fallthrough\n      : @978 [@dyn 515] (gas: 33)\n 27393: sp = sp + 0xffffffffffffffa0\n 27396: u64 [sp + 0x58] = ra\n 27399: u64 [sp + 0x50] = s0\n 27402: u64 [sp + 0x48] = s1\n 27405: s0 = sp + 0x60\n 27408: sp = sp & 0xfffffffffffffff0\n 27411: a2 = u64 [a1 + 0x10]\n 27414: a5 = u64 [a1 + 0x8]\n 27417: a4 = u64 [a1]\n 27419: a1 = u64 [a1 + 0x18]\n 27422: t0 = a2 << 0x3f\n 27425: a3 = a5 >> 0x1\n 27428: t0 = a3 | t0\n 27431: a3 = a1 << 0x3f\n 27434: a2 = a2 >> 0x1\n 27437: a3 = a3 | a2\n 27440: a5 = a5 << 0x3f\n 27443: a2 = a4 >> 0x1\n 27446: a5 = a5 | a2\n 27449: t1 = a1 >> 0x1\n 27452: a4 = a4 & 0x1\n 27455: a1 = -a4\n 27457: s1 = a4 <u 0x1\n 27460: a2 = a5 & 0x7f\n 27463: t2 = a1 & a3\n 27466: a3 = a1 & t0\n 27469: a2 = a5 if a4 != 0\n 27472: a4 = a1 & t1\n 27475: a1 = a2 <u 0x20\n 27478: a1 = 0 if a3 != 0\n 27480: a5 = t2 | a4\n 27483: a1 = 0 if a5 != 0\n 27485: jump @981 if s1 != a1\n      : @979 (gas: 5)\n 27488: u64 [a0] = a2\n 27490: u64 [a0 + 0x8] = a3\n 27493: u64 [a0 + 0x10] = t2\n 27496: u64 [a0 + 0x18] = a4\n 27499: t0 = 1032, jump @1340\n      : @980 [@dyn 516] (gas: 1)\n 27505: ret\n      : @981 (gas: 1)\n 27507: t0 = 1034, jump @1337\n      : @982 [@dyn 517] (gas: 1)\n 27513: ra = 1036, jump @19\n      : @983 [@dyn 518] (gas: 7)\n 27519: u64 [sp + 24] = 0\n 27522: u64 [sp + 16] = 0\n 27525: u64 [sp + 0] = 0x22\n 27528: a0 = 0x4\n 27531: a1 = sp\n 27533: u64 [sp + 8] = 0\n 27536: ra = 1038, jump @19\n      : @984 [@dyn 519] (gas: 2)\n 27542: a1 = i32 [0x201bc]\n 27547: jump @986 if a1 >u 63\n      : @985 (gas: 2)\n 27551: u32 [0x201bc] = 0x40\n 27557: fallthrough\n      : @986 (gas: 8)\n 27558: a1 = 0x201d0\n 27563: i32 a1 = a1 + 0\n 27565: a0 = 0x1\n 27568: a2 = 0x24\n 27571: ra = 0x410\n 27575: ecalli 8 // 'seal_return'\n 27577: t0 = 0x412\n 27581: jump @1339\n      : @987 [@dyn 520] (gas: 1)\n 27584: t0 = 1042, jump @1339\n      : @988 [@dyn 521] (gas: 16)\n 27590: u64 [s1 + 0x10] = a0\n 27593: a0 = u64 [a1 + 0x18]\n 27596: a2 = u64 [a1 + 0x10]\n 27599: a3 = u64 [a1 + 0x8]\n 27602: a1 = u64 [a1]\n 27604: u64 [s1 + 0xb0] = a0\n 27608: u64 [s1 + 0x238] = a0\n 27612: u64 [s1 + 0xa8] = a2\n 27616: u64 [s1 + 0x230] = a2\n 27620: u64 [s1 + 0xa0] = a3\n 27624: u64 [s1 + 0x228] = a3\n 27628: u64 [s1 + 0x98] = a1\n 27632: u64 [s1 + 0x220] = a1\n 27636: a0 = s1 + 0x200\n 27640: a1 = 0x40\n 27643: ra = 1044, jump @17\n      : @989 [@dyn 522] (gas: 12)\n 27649: a1 = s1 + 0x200\n 27653: a0 = u64 [a1 + 0x18]\n 27656: u64 [s1 + 0x18] = a0\n 27659: a0 = u64 [a1 + 0x10]\n 27662: u64 [s1 + 0x20] = a0\n 27665: a0 = u64 [a1 + 0x8]\n 27668: u64 [s1 + 0x28] = a0\n 27671: a0 = u64 [a1]\n 27673: u64 [s1 + 0x30] = a0\n 27676: a0 = s1 + 0x1e0\n 27680: a1 = s1 + 0x220\n 27684: ra = 1046, jump @21\n      : @990 [@dyn 523] (gas: 16)\n 27690: a4 = s1 + 0x100\n 27694: a0 = u64 [a4 + 0xf8]\n 27698: a1 = u64 [a4 + 0xf0]\n 27702: a2 = u64 [a4 + 0xe8]\n 27706: a3 = u64 [a4 + 0xe0]\n 27710: u64 [s1 + 0x90] = a0\n 27714: u64 [a4 + 0xb8] = a0\n 27718: u64 [s1 + 0x88] = a1\n 27722: u64 [a4 + 0xb0] = a1\n 27726: u64 [s1 + 0x80] = a2\n 27730: u64 [a4 + 0xa8] = a2\n 27734: a0 = s1 + 0x1c0\n 27738: a1 = s1 + 0x1a0\n 27742: u64 [s1 + 0xb8] = a3\n 27746: u64 [a4 + 0xa0] = a3\n 27750: ra = 1048, jump @978\n      : @991 [@dyn 524] (gas: 12)\n 27756: a0 = u64 [s1 + 0x30]\n 27759: a1 = u64 [s1 + 0x18]\n 27762: a2 = u64 [s1 + 0x28]\n 27765: a2 = a2 | a1\n 27768: a3 = u64 [s1 + 0x20]\n 27771: a1 = a0 | a3\n 27774: a1 = a1 | a2\n 27777: a1 = a1 >> 0x20\n 27780: a2 = a2 | a3\n 27783: a2 = a2 << 0x20\n 27786: a1 = a1 | a2\n 27789: jump @1008 if a1 != 0\n      : @992 (gas: 15)\n 27793: a5 = s1 + 0x100\n 27797: a2 = u64 [a5 + 0xd8]\n 27801: a3 = u64 [a5 + 0xd0]\n 27805: a1 = u64 [a5 + 0xc8]\n 27809: a4 = u64 [a5 + 0xc0]\n 27813: u64 [s1 + 0x60] = a4\n 27816: u64 [a5 + 0x80] = a4\n 27820: u64 [s1 + 0x70] = a1\n 27823: u64 [a5 + 0x88] = a1\n 27827: u64 [s1 + 0x68] = a3\n 27830: u64 [a5 + 0x90] = a3\n 27834: a1 = s1 + 0x180\n 27838: u64 [s1 + 0x78] = a2\n 27841: u64 [a5 + 0x98] = a2\n 27845: ra = 1050, jump @19\n      : @993 [@dyn 525] (gas: 3)\n 27851: a3 = u64 [s1 + 0xb8]\n 27855: a0 = a3 & 0x1\n 27858: jump @999 if a0 != 0\n      : @994 (gas: 10)\n 27862: a0 = u64 [s1 + 0x20]\n 27865: a1 = u64 [s1 + 0x18]\n 27868: a0 = a0 | a1\n 27871: a1 = 0xffffffe0\n 27881: a4 = u64 [s1 + 0x30]\n 27884: a1 = a4 <u a1\n 27887: a2 = u64 [s1 + 0x28]\n 27890: a1 = 0 if a2 != 0\n 27892: a1 = 0 if a0 != 0\n 27894: jump @1008 if a1 == 0\n      : @995 (gas: 12)\n 27898: a1 = a3 & 0xffffffffffffff00\n 27902: i32 a0 = a4 + 0x20\n 27905: a3 = u64 [s1 + 0x80]\n 27909: a2 = s1 + 0x100\n 27913: u64 [a2 + 0x8] = a3\n 27916: u64 [a2] = a1\n 27918: a1 = u64 [s1 + 0x88]\n 27922: u64 [a2 + 0x10] = a1\n 27925: a1 = s1 + 0x100\n 27929: a3 = u64 [s1 + 0x90]\n 27933: u64 [a2 + 0x18] = a3\n 27936: ra = 1052, jump @19\n      : @996 [@dyn 526] (gas: 14)\n 27942: t2 = 0\n 27944: t1 = 0\n 27946: t0 = 0\n 27948: a0 = u64 [s1 + 0x68]\n 27951: a1 = u64 [s1 + 0x60]\n 27954: a0 = a0 | a1\n 27957: a1 = u64 [s1 + 0x78]\n 27960: a2 = u64 [s1 + 0x70]\n 27963: a1 = a1 | a2\n 27966: a0 = a0 | a1\n 27969: a0 = a0 >u 0\n 27971: a0 = a0 << 0x5\n 27974: u64 [s1 + 0xb8] = a0\n 27978: fallthrough\n      : @997 (gas: 24)\n 27979: a1 = u64 [s1 + 0xb8]\n 27983: a0 = a1 + 0x20\n 27986: a1 = a0 <u a1\n 27989: a2 = t2 + a1\n 27992: a3 = a2 <u t2\n 27995: a3 = a1 if a1 == 0\n 27998: a3 = a3 + t1\n 28001: a1 = a3 <u t1\n 28004: a4 = t0 + a1\n 28007: a1 = u64 [s1 + 0x30]\n 28010: u64 [s1 + 0xe0] = a1\n 28014: u64 [s1 + 0xc0] = a0\n 28018: a0 = u64 [s1 + 0x28]\n 28021: u64 [s1 + 0xe8] = a0\n 28025: a0 = u64 [s1 + 0x20]\n 28028: u64 [s1 + 0xf0] = a0\n 28032: u64 [s1 + 0xc8] = a2\n 28036: a0 = u64 [s1 + 0x18]\n 28039: u64 [s1 + 0xf8] = a0\n 28043: u64 [s1 + 0xd0] = a3\n 28047: a0 = s1 + 0xe0\n 28051: a1 = s1 + 0xc0\n 28055: u64 [s1 + 0xd8] = a4\n 28059: ra = 1054, jump @943\n      : @998 [@dyn 527] (gas: 16)\n 28065: a0 = u64 [s1 + 0x10]\n 28068: a1 = u64 [s1 + 0x18]\n 28071: u64 [a0 + 0x18] = a1\n 28074: a1 = u64 [s1 + 0x20]\n 28077: u64 [a0 + 0x10] = a1\n 28080: a1 = u64 [s1 + 0x28]\n 28083: u64 [a0 + 0x8] = a1\n 28086: a1 = u64 [s1 + 0x30]\n 28089: u64 [a0] = a1\n 28091: sp = s0 + 0xfffffffffffffda0\n 28095: a0 = sp + 0x200\n 28099: ra = u64 [a0 + 0x58]\n 28102: s0 = u64 [a0 + 0x50]\n 28105: s1 = u64 [a0 + 0x48]\n 28108: sp = sp + 0x260\n 28112: ret\n      : @999 (gas: 12)\n 28114: a0 = u64 [s1 + 0x98]\n 28118: a2 = s1 + 0x100\n 28122: u64 [a2 + 0x60] = a0\n 28125: a0 = u64 [s1 + 0xa0]\n 28129: u64 [a2 + 0x68] = a0\n 28132: a0 = u64 [s1 + 0xa8]\n 28136: u64 [a2 + 0x70] = a0\n 28139: a1 = s1 + 0x160\n 28143: a0 = u64 [s1 + 0xb0]\n 28147: u64 [a2 + 0x78] = a0\n 28150: a0 = 0\n 28152: ra = 1056, jump @19\n      : @1000 [@dyn 528] (gas: 6)\n 28158: a0 = sp + 0xffffffffffffffe0\n 28161: a0 = a0 & 0xffffffffffffffe0\n 28164: u64 [s1 + 0x58] = a0\n 28167: sp = a0\n 28169: a1 = i32 [0x201bc]\n 28174: jump @1002 if a1 >u 31\n      : @1001 (gas: 2)\n 28178: u32 [0x201bc] = 0x20\n 28184: fallthrough\n      : @1002 (gas: 49)\n 28185: a0 = sp + 0xffffffffffffffe0\n 28188: a2 = a0 & 0xffffffffffffffe0\n 28191: u64 [s1 + 0xb0] = a2\n 28195: sp = a2\n 28197: a0 = 0x201d0\n 28202: i32 a0 = a0 + 0\n 28204: i32 a2 = a2 + 0\n 28206: a1 = 0x20\n 28209: ecalli 6 // 'hash_keccak_256'\n 28211: u64 [s1 + 184] = 0\n 28215: t2 = 0\n 28217: t1 = 0\n 28219: t0 = 0\n 28221: a5 = u64 [s1 + 0xb0]\n 28225: a0 = u64 [a5 + 0x18]\n 28228: a1 = u64 [s1 + 0x30]\n 28231: a2 = a1 + 0x20\n 28234: u64 [s1 + 0x50] = a2\n 28237: a1 = a2 <u a1\n 28240: a2 = u64 [s1 + 0x28]\n 28243: a3 = a2 + a1\n 28246: u64 [s1 + 0x48] = a3\n 28249: a4 = a3 <u a2\n 28252: a4 = a1 if a1 == 0\n 28255: a1 = u64 [a5 + 0x10]\n 28258: a2 = u64 [a5 + 0x8]\n 28261: a3 = u64 [a5]\n 28263: a0 = reverse a0\n 28265: a1 = reverse a1\n 28267: ra = reverse a2\n 28269: a2 = reverse a3\n 28271: a5 = u64 [s1 + 0x58]\n 28274: a3 = a2\n 28276: u64 [a5 + 0x18] = a2\n 28279: a2 = ra\n 28281: u64 [s1 + 0x80] = a2\n 28285: u64 [a5 + 0x10] = a2\n 28288: u64 [s1 + 0x90] = a1\n 28292: u64 [a5 + 0x8] = a1\n 28295: a2 = a0\n 28297: u64 [a5] = a0\n 28299: a0 = u64 [s1 + 0x20]\n 28302: a4 = a4 + a0\n 28305: u64 [s1 + 0x40] = a4\n 28308: a0 = a4 <u a0\n 28311: a1 = u64 [s1 + 0x18]\n 28314: a0 = a0 + a1\n 28317: u64 [s1 + 0x38] = a0\n 28320: fallthrough\n      : @1003 (gas: 19)\n 28321: u64 [s1 + 0x88] = a3\n 28325: u64 [s1 + 0x98] = a2\n 28329: a0 = u64 [s1 + 0x60]\n 28332: a1 = u64 [s1 + 0xb8]\n 28336: a0 = a1 <u a0\n 28339: a2 = u64 [s1 + 0x70]\n 28342: a1 = t2 ^ a2\n 28345: a2 = t2 <u a2\n 28348: a2 = a0 if a1 == 0\n 28351: a4 = u64 [s1 + 0x68]\n 28354: a0 = t1 <u a4\n 28357: a3 = u64 [s1 + 0x78]\n 28360: a1 = t0 ^ a3\n 28363: a3 = t0 <u a3\n 28366: a3 = a0 if a1 == 0\n 28369: a0 = t1 ^ a4\n 28372: a0 = a0 | a1\n 28375: a3 = a2 if a0 == 0\n 28378: jump @997 if a3 == 0\n      : @1004 (gas: 6)\n 28382: a0 = s1 + 0x140\n 28386: a1 = a5\n 28388: u64 [s1 + 0xb0] = t0\n 28392: u64 [s1 + 0xa8] = t1\n 28396: u64 [s1 + 0xa0] = t2\n 28400: ra = 1058, jump @21\n      : @1005 [@dyn 529] (gas: 30)\n 28406: a1 = u64 [s1 + 0x50]\n 28409: a0 = u64 [s1 + 0xb8]\n 28413: a0 = a0 + a1\n 28416: a1 = a0 <u a1\n 28419: a4 = u64 [s1 + 0x48]\n 28422: a2 = u64 [s1 + 0xa0]\n 28426: a2 = a2 + a4\n 28429: a2 = a2 + a1\n 28432: a3 = a2 ^ a4\n 28435: a4 = a2 <u a4\n 28438: a4 = a1 if a3 == 0\n 28441: a3 = u64 [s1 + 0x40]\n 28444: a1 = u64 [s1 + 0xa8]\n 28448: a1 = a1 + a3\n 28451: t0 = a1 <u a3\n 28454: a5 = u64 [s1 + 0x38]\n 28457: a3 = u64 [s1 + 0xb0]\n 28461: a5 = a5 + a3\n 28464: a3 = a5 + t0\n 28467: a4 = a4 + a1\n 28470: a1 = a4 <u a1\n 28473: a1 = a1 + a3\n 28476: a1 = a1 | a2\n 28479: a2 = a0 | a4\n 28482: a2 = a2 | a1\n 28485: a1 = a1 | a4\n 28488: a2 = a2 >> 0x20\n 28491: a1 = a1 << 0x20\n 28494: a1 = a1 | a2\n 28497: jump @1008 if a1 != 0\n      : @1006 (gas: 11)\n 28501: a5 = s1 + 0x100\n 28505: a2 = u64 [a5 + 0x58]\n 28508: a1 = u64 [a5 + 0x50]\n 28511: a3 = u64 [a5 + 0x48]\n 28514: a4 = u64 [a5 + 0x40]\n 28517: u64 [a5 + 0x20] = a4\n 28520: u64 [a5 + 0x28] = a3\n 28523: u64 [a5 + 0x30] = a1\n 28526: a1 = s1 + 0x120\n 28530: u64 [a5 + 0x38] = a2\n 28533: ra = 1060, jump @19\n      : @1007 [@dyn 530] (gas: 38)\n 28539: a3 = u64 [s1 + 0x98]\n 28543: a3 = a3 + 0x1\n 28546: a0 = a3 <u 0x1\n 28549: t2 = u64 [s1 + 0x90]\n 28553: t2 = t2 + a0\n 28556: a0 = a3 | t2\n 28559: a0 = a0 <u 0x1\n 28562: a1 = u64 [s1 + 0x80]\n 28566: t1 = a1 + a0\n 28569: a1 = t1 <u a1\n 28572: a0 = u64 [s1 + 0x88]\n 28576: a0 = a0 + a1\n 28579: a1 = u64 [s1 + 0xb8]\n 28583: ra = a1 + 0x20\n 28586: a2 = ra <u a1\n 28589: a4 = u64 [s1 + 0xa0]\n 28593: a1 = a4 + a2\n 28596: a4 = a1 <u a4\n 28599: a4 = a2 if a2 == 0\n 28602: a2 = u64 [s1 + 0xa8]\n 28606: a4 = a4 + a2\n 28609: a2 = a4 <u a2\n 28612: t0 = u64 [s1 + 0xb0]\n 28616: t0 = t0 + a2\n 28619: a2 = t2\n 28621: u64 [s1 + 0x90] = a2\n 28625: a5 = u64 [s1 + 0x58]\n 28628: u64 [a5 + 0x8] = a2\n 28631: a2 = a3\n 28633: u64 [a5] = a3\n 28635: u64 [a5 + 0x10] = t1\n 28638: a3 = a0\n 28640: u64 [a5 + 0x18] = a0\n 28643: u64 [s1 + 0x80] = t1\n 28647: u64 [s1 + 0xb8] = ra\n 28651: t2 = a1\n 28653: t1 = a4\n 28655: jump @1003\n      : @1008 (gas: 1)\n 28658: trap\n      : @1009 (gas: 21)\n 28659: sp = sp + 0xffffffffffffff10\n 28663: u64 [sp + 0xe8] = ra\n 28667: u64 [sp + 0xe0] = s0\n 28671: u64 [sp + 0xd8] = s1\n 28675: s0 = sp + 0xf0\n 28679: sp = sp & 0xfffffffffffffff0\n 28682: a5 = u64 [a1 + 0x10]\n 28685: a4 = u64 [a1 + 0x18]\n 28688: a3 = u64 [a1 + 0x8]\n 28691: a1 = u64 [a1]\n 28693: u64 [sp + 0x28] = a3\n 28696: u64 [sp + 0x18] = a4\n 28699: a4 = a4 | a3\n 28702: a3 = a1 | a5\n 28705: a3 = a3 | a4\n 28708: a3 = a3 >> 0x20\n 28711: u64 [sp + 0x20] = a5\n 28714: a4 = a4 | a5\n 28717: a4 = a4 << 0x20\n 28720: a3 = a3 | a4\n 28723: jump @1022 if a3 != 0\n      : @1010 (gas: 11)\n 28727: u64 [sp + 0x8] = a0\n 28730: a0 = u64 [a2 + 0x18]\n 28733: u64 [sp + 0x68] = a0\n 28736: s1 = u64 [a2 + 0x10]\n 28739: a0 = u64 [a2 + 0x8]\n 28742: u64 [sp + 0x60] = a0\n 28745: a0 = u64 [a2]\n 28747: u64 [sp + 0x58] = a0\n 28750: a0 = sp + 0xb0\n 28754: u64 [sp + 0x10] = a1\n 28757: ra = 1062, jump @17\n      : @1011 [@dyn 531] (gas: 12)\n 28763: a0 = u64 [sp + 0x58]\n 28766: a2 = a0 | s1\n 28769: a1 = u64 [sp + 0x68]\n 28772: a3 = u64 [sp + 0x60]\n 28775: a1 = a1 | a3\n 28778: a2 = a2 | a1\n 28781: a2 = a2 >> 0x20\n 28784: u64 [sp + 0x50] = s1\n 28787: a1 = a1 | s1\n 28790: a1 = a1 << 0x20\n 28793: a1 = a1 | a2\n 28796: jump @1022 if a1 != 0\n      : @1012 (gas: 15)\n 28800: a2 = u64 [sp + 0xc8]\n 28804: a3 = u64 [sp + 0xc0]\n 28808: a4 = u64 [sp + 0xb8]\n 28812: a1 = u64 [sp + 0xb0]\n 28816: u64 [sp + 0x30] = a1\n 28819: u64 [sp + 0x90] = a1\n 28823: u64 [sp + 0x38] = a4\n 28826: u64 [sp + 0x98] = a4\n 28830: u64 [sp + 0x40] = a3\n 28833: u64 [sp + 0xa0] = a3\n 28837: a1 = sp + 0x90\n 28841: u64 [sp + 0x48] = a2\n 28844: u64 [sp + 0xa8] = a2\n 28848: s1 = a0\n 28850: ra = 1064, jump @19\n      : @1013 [@dyn 532] (gas: 9)\n 28856: a0 = u64 [sp + 0x68]\n 28859: a1 = u64 [sp + 0x50]\n 28862: a1 = a1 | a0\n 28865: a0 = 0xffffffe0\n 28875: a2 = s1 <u a0\n 28878: a3 = u64 [sp + 0x60]\n 28881: a2 = 0 if a3 != 0\n 28883: a2 = 0 if a1 != 0\n 28885: jump @1022 if a2 == 0\n      : @1014 (gas: 9)\n 28889: a1 = u64 [sp + 0x20]\n 28892: a2 = u64 [sp + 0x18]\n 28895: a1 = a1 | a2\n 28898: a2 = u64 [sp + 0x10]\n 28901: a0 = a2 <u a0\n 28904: a3 = u64 [sp + 0x28]\n 28907: a0 = 0 if a3 != 0\n 28909: a0 = 0 if a1 != 0\n 28911: jump @1022 if a0 == 0\n      : @1015 (gas: 13)\n 28915: a5 = s1\n 28917: s1 = u64 [sp + 0x30]\n 28920: a3 = u64 [sp + 0x40]\n 28923: a0 = s1 | a3\n 28926: a1 = u64 [sp + 0x48]\n 28929: a4 = u64 [sp + 0x38]\n 28932: a1 = a1 | a4\n 28935: a0 = a0 | a1\n 28938: a0 = a0 >> 0x20\n 28941: a1 = a1 | a3\n 28944: a1 = a1 << 0x20\n 28947: a0 = a0 | a1\n 28950: jump @1022 if a0 != 0\n      : @1016 (gas: 5)\n 28954: i32 a0 = a5 + 0x20\n 28957: i32 a1 = a2 + 0x20\n 28960: u64 [sp + 0x28] = a1\n 28963: a1 = s1\n 28965: ra = 1066, jump @30\n      : @1017 [@dyn 533] (gas: 4)\n 28971: u64 [sp + 0x20] = a0\n 28974: a0 = u64 [sp + 0x28]\n 28977: a1 = s1\n 28979: ra = 1068, jump @30\n      : @1018 [@dyn 534] (gas: 4)\n 28985: a1 = a0\n 28987: a0 = u64 [sp + 0x20]\n 28990: a2 = s1\n 28992: ra = 1070, jump @0\n      : @1019 [@dyn 535] (gas: 27)\n 28998: a0 = u64 [sp + 0x58]\n 29001: a0 = a0 + s1\n 29004: a1 = a0 <u s1\n 29007: a2 = u64 [sp + 0x60]\n 29010: a4 = u64 [sp + 0x38]\n 29013: a2 = a2 + a4\n 29016: a2 = a2 + a1\n 29019: a3 = a2 ^ a4\n 29022: a4 = a2 <u a4\n 29025: a4 = a1 if a3 == 0\n 29028: a1 = u64 [sp + 0x50]\n 29031: a3 = u64 [sp + 0x40]\n 29034: a1 = a1 + a3\n 29037: a3 = a1 <u a3\n 29040: a5 = u64 [sp + 0x68]\n 29043: s1 = u64 [sp + 0x48]\n 29046: a5 = a5 + s1\n 29049: a3 = a3 + a5\n 29052: a4 = a4 + a1\n 29055: a1 = a4 <u a1\n 29058: a1 = a1 + a3\n 29061: a1 = a1 | a4\n 29064: a3 = 0xffffffe0\n 29074: a3 = a0 <u a3\n 29077: a3 = 0 if a2 != 0\n 29079: a3 = 0 if a1 != 0\n 29081: jump @1022 if a3 == 0\n      : @1020 (gas: 7)\n 29085: i32 a0 = a0 + 0x20\n 29088: u64 [sp + 136] = 0\n 29092: u64 [sp + 128] = 0\n 29096: u64 [sp + 120] = 0\n 29099: a1 = sp + 0x70\n 29102: u64 [sp + 112] = 0\n 29105: ra = 1072, jump @19\n      : @1021 [@dyn 536] (gas: 35)\n 29111: s1 = u64 [sp + 0x30]\n 29114: s1 = s1 + 0x1f\n 29117: a0 = 0x1ffffffe0\n 29127: a0 = a0 & s1\n 29130: a1 = u64 [sp + 0x58]\n 29133: a0 = a0 + a1\n 29136: a1 = a0 <u a1\n 29139: a3 = u64 [sp + 0x60]\n 29142: a2 = a3 + a1\n 29145: a3 = a2 <u a3\n 29148: a3 = a1 if a1 == 0\n 29151: a1 = u64 [sp + 0x50]\n 29154: a3 = a3 + a1\n 29157: a1 = a3 <u a1\n 29160: a4 = u64 [sp + 0x68]\n 29163: a1 = a1 + a4\n 29166: a4 = a0 + 0x20\n 29169: a0 = a4 <u a0\n 29172: a5 = a2 + a0\n 29175: a2 = a5 <u a2\n 29178: a2 = a0 if a0 == 0\n 29181: a2 = a2 + a3\n 29184: a0 = a2 <u a3\n 29187: a0 = a0 + a1\n 29190: a1 = u64 [sp + 0x8]\n 29193: u64 [a1] = a4\n 29195: u64 [a1 + 0x8] = a5\n 29198: u64 [a1 + 0x10] = a2\n 29201: u64 [a1 + 0x18] = a0\n 29204: sp = s0 + 0xffffffffffffff10\n 29208: ra = u64 [sp + 0xe8]\n 29212: s0 = u64 [sp + 0xe0]\n 29216: s1 = u64 [sp + 0xd8]\n 29220: sp = sp + 0xf0\n 29224: ret\n      : @1022 (gas: 1)\n 29226: trap\n      : @1023 (gas: 19)\n 29227: sp = sp + 0xffffffffffffff40\n 29231: u64 [sp + 0xb8] = ra\n 29235: u64 [sp + 0xb0] = s0\n 29239: u64 [sp + 0xa8] = s1\n 29243: s0 = sp + 0xc0\n 29247: sp = sp & 0xffffffffffffffe0\n 29250: s1 = sp\n 29252: a2 = u64 [a1]\n 29254: a3 = u64 [a1 + 0x8]\n 29257: a4 = u64 [a1 + 0x10]\n 29260: a1 = u64 [a1 + 0x18]\n 29263: u64 [s1 + 0x18] = a0\n 29266: u64 [s1 + 0x78] = a1\n 29269: u64 [s1 + 0x70] = a4\n 29272: u64 [s1 + 0x68] = a3\n 29275: a1 = s1 + 0x60\n 29278: u64 [s1 + 0x60] = a2\n 29281: a0 = 0\n 29283: ra = 1074, jump @19\n      : @1024 [@dyn 537] (gas: 7)\n 29289: u64 [s1 + 88] = 0\n 29292: u64 [s1 + 80] = 0\n 29295: u64 [s1 + 72] = 0\n 29298: a0 = 0x20\n 29301: a1 = s1 + 0x40\n 29304: u64 [s1 + 64] = 0\n 29307: ra = 1076, jump @19\n      : @1025 [@dyn 538] (gas: 2)\n 29313: a1 = i32 [0x201bc]\n 29318: jump @1027 if a1 >u 63\n      : @1026 (gas: 2)\n 29322: u32 [0x201bc] = 0x40\n 29328: fallthrough\n      : @1027 (gas: 33)\n 29329: a0 = sp + 0xffffffffffffffe0\n 29332: a2 = a0 & 0xffffffffffffffe0\n 29335: u64 [s1 + 0x10] = a2\n 29338: sp = a2\n 29340: a0 = 0x201d0\n 29345: i32 a0 = a0 + 0\n 29347: i32 a2 = a2 + 0\n 29349: a1 = 0x40\n 29352: ecalli 6 // 'hash_keccak_256'\n 29354: a3 = u64 [s1 + 0x10]\n 29357: a0 = u64 [a3]\n 29359: a1 = u64 [a3 + 0x8]\n 29362: a2 = u64 [a3 + 0x10]\n 29365: a3 = u64 [a3 + 0x18]\n 29368: a0 = reverse a0\n 29370: a1 = reverse a1\n 29372: a2 = reverse a2\n 29374: a3 = reverse a3\n 29376: a3 = a3 + 0x1\n 29379: a4 = a3 <u 0x1\n 29382: a2 = a2 + a4\n 29385: a4 = a3 | a2\n 29388: a4 = a4 <u 0x1\n 29391: a4 = a4 + a1\n 29394: a1 = a4 <u a1\n 29397: a0 = a0 + a1\n 29400: u64 [s1 + 0x80] = a3\n 29404: u64 [s1 + 0x88] = a2\n 29408: u64 [s1 + 0x90] = a4\n 29412: u64 [s1 + 0x98] = a0\n 29416: a0 = s1 + 0x20\n 29419: a1 = s1 + 0x80\n 29423: ra = 1078, jump @21\n      : @1028 [@dyn 539] (gas: 15)\n 29429: a0 = u64 [s1 + 0x30]\n 29432: a1 = u64 [s1 + 0x38]\n 29435: a2 = u64 [s1 + 0x20]\n 29438: a3 = u64 [s1 + 0x28]\n 29441: a4 = u64 [s1 + 0x18]\n 29444: u64 [a4 + 0x10] = a0\n 29447: u64 [a4 + 0x18] = a1\n 29450: u64 [a4] = a2\n 29452: u64 [a4 + 0x8] = a3\n 29455: sp = s0 + 0xffffffffffffff40\n 29459: ra = u64 [sp + 0xb8]\n 29463: s0 = u64 [sp + 0xb0]\n 29467: s1 = u64 [sp + 0xa8]\n 29471: sp = sp + 0xc0\n 29475: ret\n      : @1029 (gas: 14)\n 29477: sp = sp + 0xffffffffffffff20\n 29481: u64 [sp + 0xd8] = ra\n 29485: u64 [sp + 0xd0] = s0\n 29489: u64 [sp + 0xc8] = s1\n 29493: s0 = sp + 0xe0\n 29497: sp = sp & 0xfffffffffffffff0\n 29500: a1 = u64 [a0 + 0x10]\n 29503: a2 = u64 [a0 + 0x18]\n 29506: a3 = u64 [a0 + 0x8]\n 29509: a0 = u64 [a0]\n 29511: a2 = a2 | a3\n 29514: a0 = a0 | a1\n 29517: a0 = a0 | a2\n 29520: jump @1031 if a0 == 0\n      : @1030 (gas: 6)\n 29523: sp = s0 + 0xffffffffffffff20\n 29527: ra = u64 [sp + 0xd8]\n 29531: s0 = u64 [sp + 0xd0]\n 29535: s1 = u64 [sp + 0xc8]\n 29539: sp = sp + 0xe0\n 29543: ret\n      : @1031 (gas: 3)\n 29545: a0 = sp + 0xa0\n 29549: a1 = 0x40\n 29552: ra = 1080, jump @17\n      : @1032 [@dyn 540] (gas: 15)\n 29558: a2 = u64 [sp + 0xb8]\n 29562: s1 = u64 [sp + 0xb0]\n 29566: a0 = u64 [sp + 0xa8]\n 29570: a1 = u64 [sp + 0xa0]\n 29574: u64 [sp + 0x10] = a0\n 29577: u64 [sp + 0x8] = a2\n 29580: a0 = a0 | a2\n 29583: u64 [sp + 0x18] = a1\n 29586: a1 = a1 | s1\n 29589: a1 = a1 | a0\n 29592: a1 = a1 >> 0x20\n 29595: a0 = a0 | s1\n 29598: a0 = a0 << 0x20\n 29601: a0 = a0 | a1\n 29604: jump @1039 if a0 != 0\n      : @1033 (gas: 8)\n 29608: u64 [sp + 144] = 0\n 29612: u64 [sp + 136] = 0\n 29616: u64 [sp + 128] = 0\n 29620: a0 = 0x8c379a000000000\n 29630: a1 = sp + 0x80\n 29634: u64 [sp + 0x98] = a0\n 29638: a0 = u64 [sp + 0x18]\n 29641: ra = 1082, jump @19\n      : @1034 [@dyn 541] (gas: 11)\n 29647: a2 = u64 [sp + 0x8]\n 29650: a2 = a2 | s1\n 29653: s1 = 0x100000000\n 29663: a0 = 0xfffffffc\n 29673: a1 = u64 [sp + 0x18]\n 29676: a0 = a1 <u a0\n 29679: a1 = u64 [sp + 0x10]\n 29682: a0 = 0 if a1 != 0\n 29684: u64 [sp + 0x8] = a2\n 29687: a0 = 0 if a2 != 0\n 29689: jump @1039 if a0 == 0\n      : @1035 (gas: 8)\n 29692: a0 = u64 [sp + 0x18]\n 29695: i32 a0 = a0 + 0x4\n 29698: u64 [sp + 120] = 0\n 29701: u64 [sp + 112] = 0\n 29704: u64 [sp + 96] = 0x20\n 29708: a1 = sp + 0x60\n 29711: u64 [sp + 104] = 0\n 29714: ra = 1084, jump @19\n      : @1036 [@dyn 542] (gas: 8)\n 29720: a0 = s1 + 0xffffffffffffffdc\n 29723: a1 = u64 [sp + 0x18]\n 29726: a0 = a1 <u a0\n 29729: a1 = u64 [sp + 0x10]\n 29732: a0 = 0 if a1 != 0\n 29734: a1 = u64 [sp + 0x8]\n 29737: a0 = 0 if a1 != 0\n 29739: jump @1039 if a0 == 0\n      : @1037 (gas: 8)\n 29742: s1 = u64 [sp + 0x18]\n 29745: i32 a0 = s1 + 0x24\n 29748: u64 [sp + 88] = 0\n 29751: u64 [sp + 80] = 0\n 29754: u64 [sp + 64] = 0x16\n 29758: a1 = sp + 0x40\n 29761: u64 [sp + 72] = 0\n 29764: ra = 1086, jump @19\n      : @1038 [@dyn 543] (gas: 7)\n 29770: a0 = 0xffffffbc\n 29780: a0 = s1 <u a0\n 29783: a1 = u64 [sp + 0x10]\n 29786: a0 = 0 if a1 != 0\n 29788: a1 = u64 [sp + 0x8]\n 29791: a0 = 0 if a1 != 0\n 29793: jump @1040 if a0 != 0\n      : @1039 (gas: 1)\n 29796: trap\n      : @1040 (gas: 11)\n 29797: s1 = u64 [sp + 0x18]\n 29800: i32 a0 = s1 + 0x44\n 29803: a1 = u64 [0x200e8]\n 29808: a2 = u64 [0x200f0]\n 29813: u64 [sp + 0x38] = a1\n 29816: u64 [sp + 0x30] = a2\n 29819: a1 = 0x2065786973740000\n 29829: u64 [sp + 0x28] = a1\n 29832: a1 = sp + 0x20\n 29835: u64 [sp + 32] = 0\n 29838: ra = 1088, jump @19\n      : @1041 [@dyn 544] (gas: 3)\n 29844: a1 = 0x64\n 29847: a0 = s1\n 29849: ra = 1090, jump @30\n      : @1042 [@dyn 545] (gas: 6)\n 29855: i32 a1 = a0 + 0\n 29857: a0 = 0x1\n 29860: a2 = 0x64\n 29863: ra = 0x444\n 29867: ecalli 8 // 'seal_return'\n 29869: fallthrough\n      : @1043 [@dyn 546] (gas: 14)\n 29870: sp = sp + 0xfffffffffffffe80\n 29874: u64 [sp + 0x178] = ra\n 29878: u64 [sp + 0x170] = s0\n 29882: u64 [sp + 0x168] = s1\n 29886: s0 = sp + 0x180\n 29890: sp = sp & 0xffffffffffffffe0\n 29893: s1 = sp\n 29895: u64 [s1 + 344] = 0\n 29899: u64 [s1 + 336] = 0\n 29903: u64 [s1 + 328] = 0\n 29907: a1 = s1 + 0x140\n 29911: u64 [s1 + 320] = 0\n 29915: a0 = 0\n 29917: ra = 1094, jump @19\n      : @1044 [@dyn 547] (gas: 7)\n 29923: u64 [s1 + 312] = 0\n 29927: u64 [s1 + 304] = 0\n 29931: u64 [s1 + 296] = 0\n 29935: a0 = 0x20\n 29938: a1 = s1 + 0x120\n 29942: u64 [s1 + 288] = 0\n 29946: ra = 1096, jump @19\n      : @1045 [@dyn 548] (gas: 3)\n 29952: a1 = 0x201bc\n 29957: a0 = i32 [0x201bc]\n 29962: jump @1047 if a0 >u 63\n      : @1046 (gas: 3)\n 29966: u32 [0x201bc] = 0x40\n 29972: t0 = 0x44a\n 29976: jump @1344\n      : @1047 (gas: 1)\n 29979: t0 = 1098, jump @1344\n      : @1048 [@dyn 549] (gas: 11)\n 29985: a0 = 0x201d0\n 29990: i32 a0 = a0 + 0\n 29992: i32 a2 = a2 + 0\n 29994: u64 [s1 + 0x58] = a1\n 29997: a1 = 0x40\n 30000: u64 [s1 + 0x50] = a0\n 30003: ra = 0x44c\n 30007: ecalli 6 // 'hash_keccak_256'\n 30009: a3 = u64 [s1 + 0x48]\n 30012: t0 = 0x44e\n 30016: jump @1329\n      : @1049 [@dyn 550] (gas: 2)\n 30019: a3 = u64 [s1 + 0x48]\n 30022: t0 = 1102, jump @1329\n      : @1050 [@dyn 551] (gas: 20)\n 30028: u64 [s1 + 0x38] = a0\n 30031: a0 = reverse a1\n 30033: u64 [s1 + 0x30] = a0\n 30036: a0 = reverse a2\n 30038: u64 [s1 + 0x28] = a0\n 30041: a0 = reverse a3\n 30043: u64 [s1 + 0x20] = a0\n 30046: a0 = sp + 0xffffffffffffffe0\n 30049: a0 = a0 & 0xffffffffffffffe0\n 30052: u64 [s1 + 0x40] = a0\n 30055: sp = a0\n 30057: a0 = 0x301d0\n 30062: u64 [s1 + 0x48] = a0\n 30065: i32 a0 = a0 + 0\n 30067: u64 [s1 + 0x18] = a0\n 30070: ra = 0x450\n 30074: ecalli 3 // 'caller'\n 30076: a2 = u64 [s1 + 0x48]\n 30079: t0 = 0x452\n 30083: jump @1273\n      : @1051 [@dyn 552] (gas: 2)\n 30086: a2 = u64 [s1 + 0x48]\n 30089: t0 = 1106, jump @1273\n      : @1052 [@dyn 553] (gas: 8)\n 30095: u64 [s1 + 280] = 0\n 30099: a2 = s1 + 0x100\n 30103: u64 [a2 + 0x10] = a1\n 30106: u64 [a2 + 0x8] = a0\n 30109: a1 = s1 + 0x100\n 30113: u64 [a2] = a3\n 30115: a0 = 0\n 30117: ra = 1108, jump @19\n      : @1053 [@dyn 554] (gas: 11)\n 30123: a0 = u64 [s1 + 0x20]\n 30126: u64 [s1 + 0xf8] = a0\n 30130: a0 = u64 [s1 + 0x28]\n 30133: u64 [s1 + 0xf0] = a0\n 30137: a0 = u64 [s1 + 0x30]\n 30140: u64 [s1 + 0xe8] = a0\n 30144: a0 = 0x20\n 30147: a1 = s1 + 0xe0\n 30151: a2 = u64 [s1 + 0x38]\n 30154: u64 [s1 + 0xe0] = a2\n 30158: ra = 1110, jump @19\n      : @1054 [@dyn 555] (gas: 3)\n 30164: a1 = u64 [s1 + 0x58]\n 30167: a0 = i32 [a1]\n 30169: jump @1056 if a0 >u 63\n      : @1055 (gas: 2)\n 30173: u32 [a1 + 0] = 0x40\n 30176: fallthrough\n      : @1056 (gas: 12)\n 30177: a0 = sp + 0xffffffffffffffe0\n 30180: a0 = a0 & 0xffffffffffffffe0\n 30183: u64 [s1 + 0x38] = a0\n 30186: sp = a0\n 30188: i32 a2 = a0 + 0\n 30190: a1 = 0x40\n 30193: a0 = u64 [s1 + 0x50]\n 30196: ra = 0x458\n 30200: ecalli 6 // 'hash_keccak_256'\n 30202: a3 = u64 [s1 + 0x38]\n 30205: t0 = 0x45a\n 30209: jump @1280\n      : @1057 [@dyn 556] (gas: 2)\n 30212: a3 = u64 [s1 + 0x38]\n 30215: t0 = 1114, jump @1280\n      : @1058 [@dyn 557] (gas: 7)\n 30221: a1 = u64 [s1 + 0x40]\n 30224: u64 [a1 + 0x18] = a3\n 30227: u64 [a1 + 0x10] = a2\n 30230: u64 [a1 + 0x8] = a4\n 30233: u64 [a1] = a0\n 30235: a0 = s1 + 0xc0\n 30239: ra = 1116, jump @21\n      : @1059 [@dyn 558] (gas: 2)\n 30245: a0 = u8 [s1 + 0xc0]\n 30249: jump @1061 if a0 == 0\n      : @1060 (gas: 6)\n 30252: sp = s0 + 0xfffffffffffffe80\n 30256: ra = u64 [sp + 0x178]\n 30260: s0 = u64 [sp + 0x170]\n 30264: s1 = u64 [sp + 0x168]\n 30268: sp = sp + 0x180\n 30272: ret\n      : @1061 (gas: 8)\n 30274: u64 [s1 + 176] = 0\n 30278: u64 [s1 + 168] = 0\n 30282: u64 [s1 + 160] = 0\n 30286: a0 = 0xe2517d3f00000000\n 30296: a1 = s1 + 0xa0\n 30300: u64 [s1 + 0xb8] = a0\n 30304: a0 = 0\n 30306: ra = 1118, jump @19\n      : @1062 [@dyn 559] (gas: 6)\n 30312: a0 = u64 [s1 + 0x18]\n 30315: ra = 0x460\n 30319: ecalli 3 // 'caller'\n 30321: a2 = u64 [s1 + 0x48]\n 30324: t0 = 0x462\n 30328: jump @1273\n      : @1063 [@dyn 560] (gas: 2)\n 30331: a2 = u64 [s1 + 0x48]\n 30334: t0 = 1122, jump @1273\n      : @1064 [@dyn 561] (gas: 7)\n 30340: u64 [s1 + 152] = 0\n 30344: u64 [s1 + 0x90] = a1\n 30348: u64 [s1 + 0x88] = a0\n 30352: a0 = 0x4\n 30355: a1 = s1 + 0x80\n 30359: u64 [s1 + 0x80] = a3\n 30363: ra = 1124, jump @19\n      : @1065 [@dyn 562] (gas: 7)\n 30369: u64 [s1 + 120] = 0\n 30372: u64 [s1 + 112] = 0\n 30375: u64 [s1 + 104] = 0\n 30378: a0 = 0x24\n 30381: a1 = s1 + 0x60\n 30384: u64 [s1 + 96] = 0\n 30387: ra = 1126, jump @19\n      : @1066 [@dyn 563] (gas: 3)\n 30393: a0 = u64 [s1 + 0x58]\n 30396: a0 = i32 [a0]\n 30398: jump @1068 if a0 >u 95\n      : @1067 (gas: 3)\n 30402: a1 = u64 [s1 + 0x58]\n 30405: u32 [a1 + 0] = 0x60\n 30408: fallthrough\n      : @1068 (gas: 6)\n 30409: a0 = 0x1\n 30412: a2 = 0x44\n 30415: a1 = u64 [s1 + 0x50]\n 30418: ra = 0x468\n 30422: ecalli 8 // 'seal_return'\n 30424: fallthrough\n      : @1069 [@dyn 564] (gas: 23)\n 30425: sp = sp + 0xfffffffffffffe60\n 30429: u64 [sp + 0x198] = ra\n 30433: u64 [sp + 0x190] = s0\n 30437: u64 [sp + 0x188] = s1\n 30441: s0 = sp + 0x1a0\n 30445: sp = sp & 0xffffffffffffffe0\n 30448: s1 = sp\n 30450: a2 = u64 [a0]\n 30452: a1 = u64 [a0 + 0x8]\n 30455: a3 = u64 [a0 + 0x10]\n 30458: a0 = u64 [a0 + 0x18]\n 30461: u64 [s1 + 0x20] = a0\n 30464: a4 = s1 + 0x100\n 30468: u64 [a4 + 0x78] = a0\n 30471: u64 [s1 + 0x28] = a3\n 30474: u64 [a4 + 0x70] = a3\n 30477: u64 [s1 + 0x30] = a1\n 30480: u64 [a4 + 0x68] = a1\n 30483: a1 = s1 + 0x160\n 30487: u64 [s1 + 0x38] = a2\n 30490: u64 [a4 + 0x60] = a2\n 30493: a0 = 0\n 30495: ra = 1130, jump @19\n      : @1070 [@dyn 565] (gas: 1)\n 30501: t0 = 1132, jump @1334\n      : @1071 [@dyn 566] (gas: 1)\n 30507: ra = 1134, jump @19\n      : @1072 [@dyn 567] (gas: 3)\n 30513: a1 = 0x201bc\n 30518: a0 = i32 [0x201bc]\n 30523: jump @1074 if a0 >u 63\n      : @1073 (gas: 2)\n 30527: u32 [0x201bc] = 0x40\n 30533: fallthrough\n      : @1074 (gas: 15)\n 30534: a0 = sp + 0xffffffffffffffe0\n 30537: a2 = a0 & 0xffffffffffffffe0\n 30540: u64 [s1 + 0x68] = a2\n 30543: sp = a2\n 30545: a0 = 0x201d0\n 30550: i32 a0 = a0 + 0\n 30552: i32 a2 = a2 + 0\n 30554: u64 [s1 + 0x78] = a1\n 30557: a1 = 0x40\n 30560: u64 [s1 + 0x70] = a0\n 30563: ra = 0x470\n 30567: ecalli 6 // 'hash_keccak_256'\n 30569: a3 = u64 [s1 + 0x68]\n 30572: t0 = 0x472\n 30576: jump @1329\n      : @1075 [@dyn 568] (gas: 2)\n 30579: a3 = u64 [s1 + 0x68]\n 30582: t0 = 1138, jump @1329\n      : @1076 [@dyn 569] (gas: 20)\n 30588: u64 [s1 + 0x58] = a0\n 30591: a0 = reverse a1\n 30593: u64 [s1 + 0x50] = a0\n 30596: a0 = reverse a2\n 30598: u64 [s1 + 0x48] = a0\n 30601: a0 = reverse a3\n 30603: u64 [s1 + 0x40] = a0\n 30606: a0 = sp + 0xffffffffffffffe0\n 30609: a0 = a0 & 0xffffffffffffffe0\n 30612: u64 [s1 + 0x60] = a0\n 30615: sp = a0\n 30617: a0 = 0x301d0\n 30622: u64 [s1 + 0x68] = a0\n 30625: i32 a0 = a0 + 0\n 30627: u64 [s1 + 0x18] = a0\n 30630: ra = 0x474\n 30634: ecalli 3 // 'caller'\n 30636: a2 = u64 [s1 + 0x68]\n 30639: t0 = 0x476\n 30643: jump @1273\n      : @1077 [@dyn 570] (gas: 2)\n 30646: a2 = u64 [s1 + 0x68]\n 30649: t0 = 1142, jump @1273\n      : @1078 [@dyn 571] (gas: 7)\n 30655: u64 [s1 + 312] = 0\n 30659: u64 [s1 + 0x130] = a1\n 30663: u64 [s1 + 0x128] = a0\n 30667: a1 = s1 + 0x120\n 30671: u64 [s1 + 0x120] = a3\n 30675: a0 = 0\n 30677: ra = 1144, jump @19\n      : @1079 [@dyn 572] (gas: 12)\n 30683: a0 = u64 [s1 + 0x40]\n 30686: a3 = s1 + 0x100\n 30690: u64 [a3 + 0x18] = a0\n 30693: a0 = u64 [s1 + 0x48]\n 30696: u64 [a3 + 0x10] = a0\n 30699: a0 = u64 [s1 + 0x50]\n 30702: u64 [a3 + 0x8] = a0\n 30705: a0 = 0x20\n 30708: a1 = s1 + 0x100\n 30712: a2 = u64 [s1 + 0x58]\n 30715: u64 [a3] = a2\n 30717: ra = 1146, jump @19\n      : @1080 [@dyn 573] (gas: 3)\n 30723: a1 = u64 [s1 + 0x78]\n 30726: a0 = i32 [a1]\n 30728: jump @1082 if a0 >u 63\n      : @1081 (gas: 2)\n 30732: u32 [a1 + 0] = 0x40\n 30735: fallthrough\n      : @1082 (gas: 12)\n 30736: a0 = sp + 0xffffffffffffffe0\n 30739: a0 = a0 & 0xffffffffffffffe0\n 30742: u64 [s1 + 0x58] = a0\n 30745: sp = a0\n 30747: i32 a2 = a0 + 0\n 30749: a1 = 0x40\n 30752: a0 = u64 [s1 + 0x70]\n 30755: ra = 0x47c\n 30759: ecalli 6 // 'hash_keccak_256'\n 30761: a3 = u64 [s1 + 0x58]\n 30764: t0 = 0x47e\n 30768: jump @1280\n      : @1083 [@dyn 574] (gas: 2)\n 30771: a3 = u64 [s1 + 0x58]\n 30774: t0 = 1150, jump @1280\n      : @1084 [@dyn 575] (gas: 7)\n 30780: a1 = u64 [s1 + 0x60]\n 30783: u64 [a1 + 0x18] = a3\n 30786: u64 [a1 + 0x10] = a2\n 30789: u64 [a1 + 0x8] = a4\n 30792: u64 [a1] = a0\n 30794: a0 = s1 + 0xe0\n 30798: ra = 1152, jump @21\n      : @1085 [@dyn 576] (gas: 2)\n 30804: a0 = u8 [s1 + 0xe0]\n 30808: jump @1087 if a0 == 0\n      : @1086 (gas: 6)\n 30811: sp = s0 + 0xfffffffffffffe60\n 30815: ra = u64 [sp + 0x198]\n 30819: s0 = u64 [sp + 0x190]\n 30823: s1 = u64 [sp + 0x188]\n 30827: sp = sp + 0x1a0\n 30831: ret\n      : @1087 (gas: 8)\n 30833: u64 [s1 + 208] = 0\n 30837: u64 [s1 + 200] = 0\n 30841: u64 [s1 + 192] = 0\n 30845: a0 = 0xe2517d3f00000000\n 30855: a1 = s1 + 0xc0\n 30859: u64 [s1 + 0xd8] = a0\n 30863: a0 = 0\n 30865: ra = 1154, jump @19\n      : @1088 [@dyn 577] (gas: 6)\n 30871: a0 = u64 [s1 + 0x18]\n 30874: ra = 0x484\n 30878: ecalli 3 // 'caller'\n 30880: a2 = u64 [s1 + 0x68]\n 30883: t0 = 0x486\n 30887: jump @1273\n      : @1089 [@dyn 578] (gas: 2)\n 30890: a2 = u64 [s1 + 0x68]\n 30893: t0 = 1158, jump @1273\n      : @1090 [@dyn 579] (gas: 7)\n 30899: u64 [s1 + 184] = 0\n 30903: u64 [s1 + 0xb0] = a1\n 30907: u64 [s1 + 0xa8] = a0\n 30911: a0 = 0x4\n 30914: a1 = s1 + 0xa0\n 30918: u64 [s1 + 0xa0] = a3\n 30922: ra = 1160, jump @19\n      : @1091 [@dyn 580] (gas: 11)\n 30928: a0 = u64 [s1 + 0x20]\n 30931: u64 [s1 + 0x98] = a0\n 30935: a0 = u64 [s1 + 0x28]\n 30938: u64 [s1 + 0x90] = a0\n 30942: a0 = u64 [s1 + 0x30]\n 30945: u64 [s1 + 0x88] = a0\n 30949: a0 = 0x24\n 30952: a1 = s1 + 0x80\n 30956: a2 = u64 [s1 + 0x38]\n 30959: u64 [s1 + 0x80] = a2\n 30963: ra = 1162, jump @19\n      : @1092 [@dyn 581] (gas: 3)\n 30969: a0 = u64 [s1 + 0x78]\n 30972: a0 = i32 [a0]\n 30974: jump @1094 if a0 >u 95\n      : @1093 (gas: 3)\n 30978: a1 = u64 [s1 + 0x78]\n 30981: u32 [a1 + 0] = 0x60\n 30984: fallthrough\n      : @1094 (gas: 7)\n 30985: a0 = 0x1\n 30988: a2 = 0x44\n 30991: a1 = u64 [s1 + 0x70]\n 30994: ra = 0x48c\n 30998: ecalli 8 // 'seal_return'\n 31000: t0 = 0x48e\n 31004: jump @1309\n      : @1095 [@dyn 582] (gas: 1)\n 31007: t0 = 1166, jump @1309\n      : @1096 [@dyn 583] (gas: 16)\n 31013: a0 = u64 [0x200f8]\n 31018: u64 [s1 + 0x20] = a0\n 31021: a3 = s1 + 0x200\n 31025: u64 [a3 + 0x38] = a0\n 31028: a1 = u64 [0x20100]\n 31033: a2 = u64 [0x20108]\n 31038: a0 = u64 [0x20110]\n 31043: u64 [s1 + 0x18] = a1\n 31046: u64 [a3 + 0x30] = a1\n 31049: u64 [s1 + 0x10] = a2\n 31052: u64 [a3 + 0x28] = a2\n 31055: a1 = s1 + 0x220\n 31059: u64 [s1 + 0x8] = a0\n 31062: u64 [a3 + 0x20] = a0\n 31065: a0 = 0\n 31067: ra = 1168, jump @19\n      : @1097 [@dyn 584] (gas: 1)\n 31073: t0 = 1170, jump @1293\n      : @1098 [@dyn 585] (gas: 1)\n 31079: ra = 1172, jump @19\n      : @1099 [@dyn 586] (gas: 3)\n 31085: a1 = 0x201bc\n 31090: a0 = i32 [0x201bc]\n 31095: jump @1101 if a0 >u 63\n      : @1100 (gas: 3)\n 31099: u32 [0x201bc] = 0x40\n 31105: t0 = 0x496\n 31109: jump @1344\n      : @1101 (gas: 1)\n 31112: t0 = 1174, jump @1344\n      : @1102 [@dyn 587] (gas: 2)\n 31118: a0 = 0x201d0\n 31123: t0 = 1176, jump @1350\n      : @1103 [@dyn 588] (gas: 4)\n 31129: ra = 0x49a\n 31133: ecalli 6 // 'hash_keccak_256'\n 31135: t0 = 0x49c\n 31139: jump @1274\n      : @1104 [@dyn 589] (gas: 1)\n 31142: t0 = 1180, jump @1274\n      : @1105 [@dyn 590] (gas: 1)\n 31148: ra = 1182, jump @19\n      : @1106 [@dyn 591] (gas: 1)\n 31154: t0 = 1184, jump @1298\n      : @1107 [@dyn 592] (gas: 1)\n 31160: ra = 1186, jump @19\n      : @1108 [@dyn 593] (gas: 3)\n 31166: a1 = u64 [s1 + 0x68]\n 31169: a0 = i32 [a1]\n 31171: jump @1110 if a0 >u 63\n      : @1109 (gas: 3)\n 31175: u32 [a1 + 0] = 0x40\n 31178: t0 = 0x4a4\n 31182: jump @1283\n      : @1110 (gas: 1)\n 31185: t0 = 1188, jump @1283\n      : @1111 [@dyn 594] (gas: 4)\n 31191: ra = 0x4a6\n 31195: ecalli 6 // 'hash_keccak_256'\n 31197: t0 = 0x4a8\n 31201: jump @1282\n      : @1112 [@dyn 595] (gas: 1)\n 31204: t0 = 1192, jump @1282\n      : @1113 [@dyn 596] (gas: 1)\n 31210: ra = 1194, jump @21\n      : @1114 [@dyn 597] (gas: 2)\n 31216: a0 = u8 [s1 + 0x1a0]\n 31220: jump @1116 if a0 == 0\n      : @1115 (gas: 5)\n 31223: a1 = 0\n 31225: a0 = 0\n 31227: a2 = u64 [s1 + 0x58]\n 31230: t0 = 0x4d2\n 31234: jump @1286\n      : @1116 (gas: 1)\n 31237: t0 = 1196, jump @1323\n      : @1117 [@dyn 598] (gas: 1)\n 31243: ra = 1198, jump @19\n      : @1118 [@dyn 599] (gas: 1)\n 31249: t0 = 1200, jump @1292\n      : @1119 [@dyn 600] (gas: 1)\n 31255: ra = 1202, jump @19\n      : @1120 [@dyn 601] (gas: 3)\n 31261: a1 = u64 [s1 + 0x68]\n 31264: a0 = i32 [a1]\n 31266: jump @1122 if a0 >u 63\n      : @1121 (gas: 3)\n 31270: u32 [a1 + 0] = 0x40\n 31273: t0 = 0x4b4\n 31277: jump @1283\n      : @1122 (gas: 1)\n 31280: t0 = 1204, jump @1283\n      : @1123 [@dyn 602] (gas: 4)\n 31286: ra = 0x4b6\n 31290: ecalli 6 // 'hash_keccak_256'\n 31292: t0 = 0x4b8\n 31296: jump @1276\n      : @1124 [@dyn 603] (gas: 1)\n 31299: t0 = 1208, jump @1276\n      : @1125 [@dyn 604] (gas: 1)\n 31305: ra = 1210, jump @19\n      : @1126 [@dyn 605] (gas: 1)\n 31311: t0 = 1212, jump @1297\n      : @1127 [@dyn 606] (gas: 1)\n 31317: ra = 1214, jump @19\n      : @1128 [@dyn 607] (gas: 3)\n 31323: a1 = u64 [s1 + 0x68]\n 31326: a0 = i32 [a1]\n 31328: jump @1130 if a0 >u 63\n      : @1129 (gas: 2)\n 31332: u32 [a1 + 0] = 0x40\n 31335: fallthrough\n      : @1130 (gas: 4)\n 31336: a0 = sp + 0xffffffffffffffe0\n 31339: a0 = a0 & 0xffffffffffffffe0\n 31342: u64 [s1 + 0x68] = a0\n 31345: t0 = 1216, jump @1294\n      : @1131 [@dyn 608] (gas: 4)\n 31351: ra = 0x4c2\n 31355: ecalli 6 // 'hash_keccak_256'\n 31357: t0 = 0x4c4\n 31361: jump @1281\n      : @1132 [@dyn 609] (gas: 1)\n 31364: t0 = 1220, jump @1281\n      : @1133 [@dyn 610] (gas: 1)\n 31370: ra = 1222, jump @21\n      : @1134 [@dyn 611] (gas: 1)\n 31376: t0 = 1224, jump @1285\n      : @1135 [@dyn 612] (gas: 1)\n 31382: ra = 1226, jump @23\n      : @1136 [@dyn 613] (gas: 8)\n 31388: a0 = 0x301d0\n 31393: u64 [s1 + 0x68] = a0\n 31396: i32 a0 = a0 + 0\n 31398: ra = 0x4cc\n 31402: ecalli 3 // 'caller'\n 31404: a2 = u64 [s1 + 0x68]\n 31407: t0 = 0x4ce\n 31411: jump @1291\n      : @1137 [@dyn 614] (gas: 2)\n 31414: a2 = u64 [s1 + 0x68]\n 31417: t0 = 1230, jump @1291\n      : @1138 [@dyn 615] (gas: 40)\n 31423: t0 = a1 | a0\n 31426: a3 = a3 >> 0x20\n 31429: a2 = reverse a2\n 31431: a1 = a2 << 0x20\n 31434: a1 = a1 | a3\n 31437: a2 = a2 >> 0x20\n 31440: u64 [s1 + 152] = 0\n 31444: u64 [s1 + 184] = 0\n 31448: a0 = u64 [s1]\n 31450: u64 [s1 + 0xb0] = a0\n 31454: a0 = u64 [s1 + 0x70]\n 31457: u64 [s1 + 0xa8] = a0\n 31461: a0 = u64 [s1 + 0x78]\n 31464: u64 [s1 + 0xa0] = a0\n 31468: a0 = u64 [s1 + 0x20]\n 31471: u64 [s1 + 0xd8] = a0\n 31475: a0 = u64 [s1 + 0x18]\n 31478: u64 [s1 + 0xd0] = a0\n 31482: a0 = u64 [s1 + 0x10]\n 31485: u64 [s1 + 0xc8] = a0\n 31489: a0 = u64 [s1 + 0x8]\n 31492: u64 [s1 + 0xc0] = a0\n 31496: a3 = u64 [0x20118]\n 31501: a4 = u64 [0x20120]\n 31506: a5 = u64 [0x20128]\n 31511: a0 = u64 [0x20130]\n 31516: u64 [s1 + 0xf8] = a3\n 31520: u64 [s1 + 0xf0] = a4\n 31524: u64 [s1 + 0xe8] = a5\n 31528: u64 [s1 + 0xe0] = a0\n 31532: u64 [s1 + 0x90] = a2\n 31536: u64 [s1 + 0x88] = a1\n 31540: a2 = s1 + 0xe0\n 31544: a3 = s1 + 0xc0\n 31548: a4 = s1 + 0xa0\n 31552: a5 = s1 + 0x80\n 31556: u64 [s1 + 0x80] = t0\n 31560: a0 = 0\n 31562: a1 = 0\n 31564: ra = 1232, jump @27\n      : @1139 [@dyn 616] (gas: 4)\n 31570: a0 = 0\n 31572: a1 = 0x1\n 31575: a2 = u64 [s1 + 0x58]\n 31578: t0 = 1234, jump @1286\n      : @1140 [@dyn 617] (gas: 1)\n 31584: ret\n      : @1141 [@dyn 618] (gas: 16)\n 31586: a0 = u64 [0x20138]\n 31591: u64 [s1 + 0x20] = a0\n 31594: a3 = s1 + 0x200\n 31598: u64 [a3 + 0x38] = a0\n 31601: a1 = u64 [0x20140]\n 31606: a2 = u64 [0x20148]\n 31611: a0 = u64 [0x20150]\n 31616: u64 [s1 + 0x18] = a1\n 31619: u64 [a3 + 0x30] = a1\n 31622: u64 [s1 + 0x10] = a2\n 31625: u64 [a3 + 0x28] = a2\n 31628: a1 = s1 + 0x220\n 31632: u64 [s1 + 0x8] = a0\n 31635: u64 [a3 + 0x20] = a0\n 31638: a0 = 0\n 31640: ra = 1238, jump @19\n      : @1142 [@dyn 619] (gas: 1)\n 31646: t0 = 1240, jump @1293\n      : @1143 [@dyn 620] (gas: 1)\n 31652: ra = 1242, jump @19\n      : @1144 [@dyn 621] (gas: 3)\n 31658: a1 = 0x201bc\n 31663: a0 = i32 [0x201bc]\n 31668: jump @1146 if a0 >u 63\n      : @1145 (gas: 3)\n 31672: u32 [0x201bc] = 0x40\n 31678: t0 = 0x4dc\n 31682: jump @1344\n      : @1146 (gas: 1)\n 31685: t0 = 1244, jump @1344\n      : @1147 [@dyn 622] (gas: 2)\n 31691: a0 = 0x201d0\n 31696: t0 = 1246, jump @1350\n      : @1148 [@dyn 623] (gas: 4)\n 31702: ra = 0x4e0\n 31706: ecalli 6 // 'hash_keccak_256'\n 31708: t0 = 0x4e2\n 31712: jump @1274\n      : @1149 [@dyn 624] (gas: 1)\n 31715: t0 = 1250, jump @1274\n      : @1150 [@dyn 625] (gas: 1)\n 31721: ra = 1252, jump @19\n      : @1151 [@dyn 626] (gas: 1)\n 31727: t0 = 1254, jump @1298\n      : @1152 [@dyn 627] (gas: 1)\n 31733: ra = 1256, jump @19\n      : @1153 [@dyn 628] (gas: 3)\n 31739: a1 = u64 [s1 + 0x68]\n 31742: a0 = i32 [a1]\n 31744: jump @1155 if a0 >u 63\n      : @1154 (gas: 3)\n 31748: u32 [a1 + 0] = 0x40\n 31751: t0 = 0x4ea\n 31755: jump @1283\n      : @1155 (gas: 1)\n 31758: t0 = 1258, jump @1283\n      : @1156 [@dyn 629] (gas: 4)\n 31764: ra = 0x4ec\n 31768: ecalli 6 // 'hash_keccak_256'\n 31770: t0 = 0x4ee\n 31774: jump @1282\n      : @1157 [@dyn 630] (gas: 1)\n 31777: t0 = 1262, jump @1282\n      : @1158 [@dyn 631] (gas: 1)\n 31783: ra = 1264, jump @21\n      : @1159 [@dyn 632] (gas: 2)\n 31789: a0 = u8 [s1 + 0x1a0]\n 31793: jump @1161 if a0 == 0\n      : @1160 (gas: 5)\n 31796: a1 = 0\n 31798: a0 = 0\n 31800: a2 = u64 [s1 + 0x58]\n 31803: t0 = 0x518\n 31807: jump @1286\n      : @1161 (gas: 1)\n 31810: t0 = 1266, jump @1323\n      : @1162 [@dyn 633] (gas: 1)\n 31816: ra = 1268, jump @19\n      : @1163 [@dyn 634] (gas: 1)\n 31822: t0 = 1270, jump @1292\n      : @1164 [@dyn 635] (gas: 1)\n 31828: ra = 1272, jump @19\n      : @1165 [@dyn 636] (gas: 3)\n 31834: a1 = u64 [s1 + 0x68]\n 31837: a0 = i32 [a1]\n 31839: jump @1167 if a0 >u 63\n      : @1166 (gas: 3)\n 31843: u32 [a1 + 0] = 0x40\n 31846: t0 = 0x4fa\n 31850: jump @1283\n      : @1167 (gas: 1)\n 31853: t0 = 1274, jump @1283\n      : @1168 [@dyn 637] (gas: 4)\n 31859: ra = 0x4fc\n 31863: ecalli 6 // 'hash_keccak_256'\n 31865: t0 = 0x4fe\n 31869: jump @1276\n      : @1169 [@dyn 638] (gas: 1)\n 31872: t0 = 1278, jump @1276\n      : @1170 [@dyn 639] (gas: 1)\n 31878: ra = 1280, jump @19\n      : @1171 [@dyn 640] (gas: 1)\n 31884: t0 = 1282, jump @1297\n      : @1172 [@dyn 641] (gas: 1)\n 31890: ra = 1284, jump @19\n      : @1173 [@dyn 642] (gas: 3)\n 31896: a1 = u64 [s1 + 0x68]\n 31899: a0 = i32 [a1]\n 31901: jump @1175 if a0 >u 63\n      : @1174 (gas: 2)\n 31905: u32 [a1 + 0] = 0x40\n 31908: fallthrough\n      : @1175 (gas: 4)\n 31909: a0 = sp + 0xffffffffffffffe0\n 31912: a0 = a0 & 0xffffffffffffffe0\n 31915: u64 [s1 + 0x68] = a0\n 31918: t0 = 1286, jump @1294\n      : @1176 [@dyn 643] (gas: 4)\n 31924: ra = 0x508\n 31928: ecalli 6 // 'hash_keccak_256'\n 31930: t0 = 0x50a\n 31934: jump @1281\n      : @1177 [@dyn 644] (gas: 1)\n 31937: t0 = 1290, jump @1281\n      : @1178 [@dyn 645] (gas: 1)\n 31943: ra = 1292, jump @21\n      : @1179 [@dyn 646] (gas: 1)\n 31949: t0 = 1294, jump @1285\n      : @1180 [@dyn 647] (gas: 1)\n 31955: ra = 1296, jump @23\n      : @1181 [@dyn 648] (gas: 8)\n 31961: a0 = 0x301d0\n 31966: u64 [s1 + 0x68] = a0\n 31969: i32 a0 = a0 + 0\n 31971: ra = 0x512\n 31975: ecalli 3 // 'caller'\n 31977: a2 = u64 [s1 + 0x68]\n 31980: t0 = 0x514\n 31984: jump @1291\n      : @1182 [@dyn 649] (gas: 2)\n 31987: a2 = u64 [s1 + 0x68]\n 31990: t0 = 1300, jump @1291\n      : @1183 [@dyn 650] (gas: 40)\n 31996: t0 = a1 | a0\n 31999: a3 = a3 >> 0x20\n 32002: a2 = reverse a2\n 32004: a1 = a2 << 0x20\n 32007: a1 = a1 | a3\n 32010: a2 = a2 >> 0x20\n 32013: u64 [s1 + 152] = 0\n 32017: u64 [s1 + 184] = 0\n 32021: a0 = u64 [s1]\n 32023: u64 [s1 + 0xb0] = a0\n 32027: a0 = u64 [s1 + 0x70]\n 32030: u64 [s1 + 0xa8] = a0\n 32034: a0 = u64 [s1 + 0x78]\n 32037: u64 [s1 + 0xa0] = a0\n 32041: a0 = u64 [s1 + 0x20]\n 32044: u64 [s1 + 0xd8] = a0\n 32048: a0 = u64 [s1 + 0x18]\n 32051: u64 [s1 + 0xd0] = a0\n 32055: a0 = u64 [s1 + 0x10]\n 32058: u64 [s1 + 0xc8] = a0\n 32062: a0 = u64 [s1 + 0x8]\n 32065: u64 [s1 + 0xc0] = a0\n 32069: a3 = u64 [0x20158]\n 32074: a4 = u64 [0x20160]\n 32079: a5 = u64 [0x20168]\n 32084: a0 = u64 [0x20170]\n 32089: u64 [s1 + 0xf8] = a3\n 32093: u64 [s1 + 0xf0] = a4\n 32097: u64 [s1 + 0xe8] = a5\n 32101: u64 [s1 + 0xe0] = a0\n 32105: u64 [s1 + 0x90] = a2\n 32109: u64 [s1 + 0x88] = a1\n 32113: a2 = s1 + 0xe0\n 32117: a3 = s1 + 0xc0\n 32121: a4 = s1 + 0xa0\n 32125: a5 = s1 + 0x80\n 32129: u64 [s1 + 0x80] = t0\n 32133: a0 = 0\n 32135: a1 = 0\n 32137: ra = 1302, jump @27\n      : @1184 [@dyn 651] (gas: 4)\n 32143: a0 = 0\n 32145: a1 = 0x1\n 32148: a2 = u64 [s1 + 0x58]\n 32151: t0 = 1304, jump @1286\n      : @1185 [@dyn 652] (gas: 1)\n 32157: ret\n      : @1186 [@dyn 653] (gas: 22)\n 32159: u64 [s1 + 0x50] = a3\n 32162: a3 = u64 [a2 + 0x8]\n 32165: u64 [s1 + 0x70] = a3\n 32168: a2 = u64 [a2]\n 32170: u64 [s1 + 0x78] = a2\n 32173: a2 = u64 [a1]\n 32175: a3 = u64 [a1 + 0x8]\n 32178: a4 = u64 [a1 + 0x10]\n 32181: a1 = u64 [a1 + 0x18]\n 32184: u64 [s1 + 0x58] = a0\n 32187: u64 [s1 + 0x8] = a1\n 32190: a0 = s1 + 0x200\n 32194: u64 [a0 + 0x38] = a1\n 32197: u64 [s1 + 0x10] = a4\n 32200: u64 [a0 + 0x30] = a4\n 32203: u64 [s1 + 0x18] = a3\n 32206: u64 [a0 + 0x28] = a3\n 32209: a1 = s1 + 0x220\n 32213: u64 [s1 + 0x20] = a2\n 32216: u64 [a0 + 0x20] = a2\n 32219: a0 = 0\n 32221: ra = 1308, jump @19\n      : @1187 [@dyn 654] (gas: 1)\n 32227: t0 = 1310, jump @1293\n      : @1188 [@dyn 655] (gas: 1)\n 32233: ra = 1312, jump @19\n      : @1189 [@dyn 656] (gas: 3)\n 32239: a1 = 0x201bc\n 32244: a0 = i32 [0x201bc]\n 32249: jump @1191 if a0 >u 63\n      : @1190 (gas: 3)\n 32253: u32 [0x201bc] = 0x40\n 32259: t0 = 0x522\n 32263: jump @1344\n      : @1191 (gas: 1)\n 32266: t0 = 1314, jump @1344\n      : @1192 [@dyn 657] (gas: 2)\n 32272: a0 = 0x201d0\n 32277: t0 = 1316, jump @1350\n      : @1193 [@dyn 658] (gas: 4)\n 32283: ra = 0x526\n 32287: ecalli 6 // 'hash_keccak_256'\n 32289: t0 = 0x528\n 32293: jump @1274\n      : @1194 [@dyn 659] (gas: 1)\n 32296: t0 = 1320, jump @1274\n      : @1195 [@dyn 660] (gas: 1)\n 32302: ra = 1322, jump @19\n      : @1196 [@dyn 661] (gas: 1)\n 32308: t0 = 1324, jump @1298\n      : @1197 [@dyn 662] (gas: 1)\n 32314: ra = 1326, jump @19\n      : @1198 [@dyn 663] (gas: 3)\n 32320: a1 = u64 [s1 + 0x68]\n 32323: a0 = i32 [a1]\n 32325: jump @1200 if a0 >u 63\n      : @1199 (gas: 3)\n 32329: u32 [a1 + 0] = 0x40\n 32332: t0 = 0x530\n 32336: jump @1283\n      : @1200 (gas: 1)\n 32339: t0 = 1328, jump @1283\n      : @1201 [@dyn 664] (gas: 4)\n 32345: ra = 0x532\n 32349: ecalli 6 // 'hash_keccak_256'\n 32351: t0 = 0x534\n 32355: jump @1282\n      : @1202 [@dyn 665] (gas: 1)\n 32358: t0 = 1332, jump @1282\n      : @1203 [@dyn 666] (gas: 1)\n 32364: ra = 1334, jump @21\n      : @1204 [@dyn 667] (gas: 2)\n 32370: a0 = u8 [s1 + 0x1a0]\n 32374: jump @1206 if a0 == 0\n      : @1205 (gas: 5)\n 32377: a1 = 0\n 32379: a0 = 0\n 32381: a2 = u64 [s1 + 0x58]\n 32384: t0 = 0x55c\n 32388: jump @1286\n      : @1206 (gas: 12)\n 32391: a0 = u64 [s1 + 0x20]\n 32394: a2 = s1 + 0x100\n 32398: u64 [a2 + 0x80] = a0\n 32402: a0 = u64 [s1 + 0x18]\n 32405: u64 [a2 + 0x88] = a0\n 32409: a0 = u64 [s1 + 0x10]\n 32412: u64 [a2 + 0x90] = a0\n 32416: a1 = s1 + 0x180\n 32420: a0 = u64 [s1 + 0x8]\n 32423: u64 [a2 + 0x98] = a0\n 32427: a0 = 0\n 32429: ra = 1336, jump @19\n      : @1207 [@dyn 668] (gas: 1)\n 32435: t0 = 1338, jump @1292\n      : @1208 [@dyn 669] (gas: 1)\n 32441: ra = 1340, jump @19\n      : @1209 [@dyn 670] (gas: 3)\n 32447: a1 = u64 [s1 + 0x68]\n 32450: a0 = i32 [a1]\n 32452: jump @1211 if a0 >u 63\n      : @1210 (gas: 3)\n 32456: u32 [a1 + 0] = 0x40\n 32459: t0 = 0x53e\n 32463: jump @1283\n      : @1211 (gas: 1)\n 32466: t0 = 1342, jump @1283\n      : @1212 [@dyn 671] (gas: 4)\n 32472: ra = 0x540\n 32476: ecalli 6 // 'hash_keccak_256'\n 32478: t0 = 0x542\n 32482: jump @1276\n      : @1213 [@dyn 672] (gas: 1)\n 32485: t0 = 1346, jump @1276\n      : @1214 [@dyn 673] (gas: 1)\n 32491: ra = 1348, jump @19\n      : @1215 [@dyn 674] (gas: 1)\n 32497: t0 = 1350, jump @1297\n      : @1216 [@dyn 675] (gas: 1)\n 32503: ra = 1352, jump @19\n      : @1217 [@dyn 676] (gas: 3)\n 32509: a1 = u64 [s1 + 0x68]\n 32512: a0 = i32 [a1]\n 32514: jump @1219 if a0 >u 63\n      : @1218 (gas: 2)\n 32518: u32 [a1 + 0] = 0x40\n 32521: fallthrough\n      : @1219 (gas: 4)\n 32522: a0 = sp + 0xffffffffffffffe0\n 32525: a0 = a0 & 0xffffffffffffffe0\n 32528: u64 [s1 + 0x68] = a0\n 32531: t0 = 1354, jump @1294\n      : @1220 [@dyn 677] (gas: 4)\n 32537: ra = 0x54c\n 32541: ecalli 6 // 'hash_keccak_256'\n 32543: t0 = 0x54e\n 32547: jump @1281\n      : @1221 [@dyn 678] (gas: 1)\n 32550: t0 = 1358, jump @1281\n      : @1222 [@dyn 679] (gas: 1)\n 32556: ra = 1360, jump @21\n      : @1223 [@dyn 680] (gas: 1)\n 32562: t0 = 1362, jump @1285\n      : @1224 [@dyn 681] (gas: 1)\n 32568: ra = 1364, jump @23\n      : @1225 [@dyn 682] (gas: 8)\n 32574: a0 = 0x301d0\n 32579: u64 [s1 + 0x68] = a0\n 32582: i32 a0 = a0 + 0\n 32584: ra = 0x556\n 32588: ecalli 3 // 'caller'\n 32590: a2 = u64 [s1 + 0x68]\n 32593: t0 = 0x558\n 32597: jump @1291\n      : @1226 [@dyn 683] (gas: 2)\n 32600: a2 = u64 [s1 + 0x68]\n 32603: t0 = 1368, jump @1291\n      : @1227 [@dyn 684] (gas: 40)\n 32609: t0 = a1 | a0\n 32612: a3 = a3 >> 0x20\n 32615: a2 = reverse a2\n 32617: a1 = a2 << 0x20\n 32620: a1 = a1 | a3\n 32623: a2 = a2 >> 0x20\n 32626: u64 [s1 + 152] = 0\n 32630: u64 [s1 + 184] = 0\n 32634: a0 = u64 [s1]\n 32636: u64 [s1 + 0xb0] = a0\n 32640: a0 = u64 [s1 + 0x70]\n 32643: u64 [s1 + 0xa8] = a0\n 32647: a0 = u64 [s1 + 0x78]\n 32650: u64 [s1 + 0xa0] = a0\n 32654: a0 = u64 [s1 + 0x8]\n 32657: u64 [s1 + 0xd8] = a0\n 32661: a0 = u64 [s1 + 0x10]\n 32664: u64 [s1 + 0xd0] = a0\n 32668: a0 = u64 [s1 + 0x18]\n 32671: u64 [s1 + 0xc8] = a0\n 32675: a0 = u64 [s1 + 0x20]\n 32678: u64 [s1 + 0xc0] = a0\n 32682: a3 = u64 [0x20178]\n 32687: a4 = u64 [0x20180]\n 32692: a5 = u64 [0x20188]\n 32697: a0 = u64 [0x20190]\n 32702: u64 [s1 + 0xf8] = a3\n 32706: u64 [s1 + 0xf0] = a4\n 32710: u64 [s1 + 0xe8] = a5\n 32714: u64 [s1 + 0xe0] = a0\n 32718: u64 [s1 + 0x90] = a2\n 32722: u64 [s1 + 0x88] = a1\n 32726: a2 = s1 + 0xe0\n 32730: a3 = s1 + 0xc0\n 32734: a4 = s1 + 0xa0\n 32738: a5 = s1 + 0x80\n 32742: u64 [s1 + 0x80] = t0\n 32746: a0 = 0\n 32748: a1 = 0\n 32750: ra = 1370, jump @27\n      : @1228 [@dyn 685] (gas: 4)\n 32756: a0 = 0\n 32758: a1 = 0x1\n 32761: a2 = u64 [s1 + 0x58]\n 32764: t0 = 1372, jump @1286\n      : @1229 [@dyn 686] (gas: 1)\n 32770: ret\n      : @1230 [@dyn 687] (gas: 22)\n 32772: u64 [s1 + 0x38] = a3\n 32775: a3 = u64 [a2 + 0x8]\n 32778: u64 [s1 + 0x70] = a3\n 32781: a2 = u64 [a2]\n 32783: u64 [s1 + 0x78] = a2\n 32786: a2 = u64 [a1]\n 32788: a3 = u64 [a1 + 0x8]\n 32791: a4 = u64 [a1 + 0x10]\n 32794: a1 = u64 [a1 + 0x18]\n 32797: u64 [s1 + 0x30] = a0\n 32800: u64 [s1 + 0x40] = a1\n 32803: a0 = s1 + 0x200\n 32807: u64 [a0 + 0x38] = a1\n 32810: u64 [s1 + 0x48] = a4\n 32813: u64 [a0 + 0x30] = a4\n 32816: u64 [s1 + 0x50] = a3\n 32819: u64 [a0 + 0x28] = a3\n 32822: a1 = s1 + 0x220\n 32826: u64 [s1 + 0x58] = a2\n 32829: u64 [a0 + 0x20] = a2\n 32832: a0 = 0\n 32834: ra = 1376, jump @19\n      : @1231 [@dyn 688] (gas: 1)\n 32840: t0 = 1378, jump @1293\n      : @1232 [@dyn 689] (gas: 1)\n 32846: ra = 1380, jump @19\n      : @1233 [@dyn 690] (gas: 3)\n 32852: a1 = 0x201bc\n 32857: a0 = i32 [0x201bc]\n 32862: jump @1235 if a0 >u 63\n      : @1234 (gas: 2)\n 32866: u32 [0x201bc] = 0x40\n 32872: fallthrough\n      : @1235 (gas: 6)\n 32873: a0 = sp + 0xffffffffffffffe0\n 32876: a2 = a0 & 0xffffffffffffffe0\n 32879: u64 [s1 + 0x28] = a2\n 32882: sp = a2\n 32884: a0 = 0x201d0\n 32889: t0 = 1382, jump @1350\n      : @1236 [@dyn 691] (gas: 4)\n 32895: ra = 0x568\n 32899: ecalli 6 // 'hash_keccak_256'\n 32901: t0 = 0x56a\n 32905: jump @1278\n      : @1237 [@dyn 692] (gas: 1)\n 32908: t0 = 1386, jump @1278\n      : @1238 [@dyn 693] (gas: 13)\n 32914: a0 = u64 [s1 + 0x38]\n 32917: a0 = a0 << 0x20\n 32920: a0 = a0 >> 0x20\n 32923: u64 [s1 + 504] = 0\n 32927: u64 [s1 + 0x38] = a0\n 32930: u64 [s1 + 0x1f0] = a0\n 32934: a0 = u64 [s1 + 0x70]\n 32937: u64 [s1 + 0x1e8] = a0\n 32941: a1 = s1 + 0x1e0\n 32945: a0 = u64 [s1 + 0x78]\n 32948: u64 [s1 + 0x1e0] = a0\n 32952: a0 = 0\n 32954: ra = 1388, jump @19\n      : @1239 [@dyn 694] (gas: 12)\n 32960: a0 = u64 [s1 + 0x8]\n 32963: a3 = s1 + 0x100\n 32967: u64 [a3 + 0xd8] = a0\n 32971: a0 = u64 [s1 + 0x10]\n 32974: u64 [a3 + 0xd0] = a0\n 32978: a0 = u64 [s1 + 0x18]\n 32981: u64 [a3 + 0xc8] = a0\n 32985: a0 = 0x20\n 32988: a1 = s1 + 0x1c0\n 32992: a2 = u64 [s1 + 0x20]\n 32995: u64 [a3 + 0xc0] = a2\n 32999: ra = 1390, jump @19\n      : @1240 [@dyn 695] (gas: 3)\n 33005: a1 = u64 [s1 + 0x68]\n 33008: a0 = i32 [a1]\n 33010: jump @1242 if a0 >u 63\n      : @1241 (gas: 2)\n 33014: u32 [a1 + 0] = 0x40\n 33017: fallthrough\n      : @1242 (gas: 4)\n 33018: a0 = sp + 0xffffffffffffffe0\n 33021: a0 = a0 & 0xffffffffffffffe0\n 33024: u64 [s1 + 0x20] = a0\n 33027: t0 = 1392, jump @1294\n      : @1243 [@dyn 696] (gas: 5)\n 33033: ra = 0x572\n 33037: ecalli 6 // 'hash_keccak_256'\n 33039: a3 = u64 [s1 + 0x20]\n 33042: t0 = 0x574\n 33046: jump @1288\n      : @1244 [@dyn 697] (gas: 2)\n 33049: a3 = u64 [s1 + 0x20]\n 33052: t0 = 1396, jump @1288\n      : @1245 [@dyn 698] (gas: 2)\n 33058: a0 = s1 + 0x1a0\n 33062: ra = 1398, jump @21\n      : @1246 [@dyn 699] (gas: 2)\n 33068: a0 = u8 [s1 + 0x1a0]\n 33072: jump @1268 if a0 == 0\n      : @1247 (gas: 12)\n 33076: a0 = u64 [s1 + 0x58]\n 33079: a2 = s1 + 0x100\n 33083: u64 [a2 + 0x80] = a0\n 33087: a0 = u64 [s1 + 0x50]\n 33090: u64 [a2 + 0x88] = a0\n 33094: a0 = u64 [s1 + 0x48]\n 33097: u64 [a2 + 0x90] = a0\n 33101: a1 = s1 + 0x180\n 33105: a0 = u64 [s1 + 0x40]\n 33108: u64 [a2 + 0x98] = a0\n 33112: a0 = 0\n 33114: ra = 1400, jump @19\n      : @1248 [@dyn 700] (gas: 1)\n 33120: t0 = 1402, jump @1292\n      : @1249 [@dyn 701] (gas: 1)\n 33126: ra = 1404, jump @19\n      : @1250 [@dyn 702] (gas: 3)\n 33132: a1 = u64 [s1 + 0x68]\n 33135: a0 = i32 [a1]\n 33137: jump @1252 if a0 >u 63\n      : @1251 (gas: 2)\n 33141: u32 [a1 + 0] = 0x40\n 33144: fallthrough\n      : @1252 (gas: 4)\n 33145: a0 = sp + 0xffffffffffffffe0\n 33148: a0 = a0 & 0xffffffffffffffe0\n 33151: u64 [s1 + 0x28] = a0\n 33154: t0 = 1406, jump @1294\n      : @1253 [@dyn 703] (gas: 4)\n 33160: ra = 0x580\n 33164: ecalli 6 // 'hash_keccak_256'\n 33166: t0 = 0x582\n 33170: jump @1278\n      : @1254 [@dyn 704] (gas: 1)\n 33173: t0 = 1410, jump @1278\n      : @1255 [@dyn 705] (gas: 10)\n 33179: u64 [s1 + 344] = 0\n 33183: a0 = u64 [s1 + 0x38]\n 33186: u64 [s1 + 0x150] = a0\n 33190: a0 = u64 [s1 + 0x70]\n 33193: u64 [s1 + 0x148] = a0\n 33197: a1 = s1 + 0x140\n 33201: a0 = u64 [s1 + 0x78]\n 33204: u64 [s1 + 0x140] = a0\n 33208: a0 = 0\n 33210: ra = 1412, jump @19\n      : @1256 [@dyn 706] (gas: 12)\n 33216: a0 = u64 [s1 + 0x8]\n 33219: a3 = s1 + 0x100\n 33223: u64 [a3 + 0x38] = a0\n 33226: a0 = u64 [s1 + 0x10]\n 33229: u64 [a3 + 0x30] = a0\n 33232: a0 = u64 [s1 + 0x18]\n 33235: u64 [a3 + 0x28] = a0\n 33238: a0 = 0x20\n 33241: a1 = s1 + 0x120\n 33245: a2 = u64 [s1 + 0x20]\n 33248: u64 [a3 + 0x20] = a2\n 33251: ra = 1414, jump @19\n      : @1257 [@dyn 707] (gas: 3)\n 33258: a1 = u64 [s1 + 0x68]\n 33261: a0 = i32 [a1]\n 33263: jump @1259 if a0 >u 63\n      : @1258 (gas: 2)\n 33267: u32 [a1 + 0] = 0x40\n 33270: fallthrough\n      : @1259 (gas: 4)\n 33271: a0 = sp + 0xffffffffffffffe0\n 33274: a0 = a0 & 0xffffffffffffffe0\n 33277: u64 [s1 + 0x68] = a0\n 33280: t0 = 1416, jump @1294\n      : @1260 [@dyn 708] (gas: 5)\n 33286: ra = 0x58a\n 33290: ecalli 6 // 'hash_keccak_256'\n 33292: a3 = u64 [s1 + 0x68]\n 33295: t0 = 0x58c\n 33299: jump @1288\n      : @1261 [@dyn 709] (gas: 2)\n 33302: a3 = u64 [s1 + 0x68]\n 33305: t0 = 1420, jump @1288\n      : @1262 [@dyn 710] (gas: 2)\n 33311: a0 = s1 + 0x100\n 33315: ra = 1422, jump @21\n      : @1263 [@dyn 711] (gas: 14)\n 33321: a4 = s1 + 0x100\n 33325: a0 = u64 [a4]\n 33327: a1 = u64 [a4 + 0x18]\n 33330: a2 = u64 [a4 + 0x10]\n 33333: a3 = u64 [a4 + 0x8]\n 33336: a0 = a0 & 0xffffffffffffff00\n 33340: a4 = s1 + 0x200\n 33344: u64 [a4 + 0x58] = a1\n 33347: u64 [a4 + 0x50] = a2\n 33350: u64 [a4 + 0x48] = a3\n 33353: u64 [a4 + 0x40] = a0\n 33356: a1 = s1 + 0x240\n 33360: a0 = u64 [s1 + 0x28]\n 33363: ra = 1424, jump @23\n      : @1264 [@dyn 712] (gas: 8)\n 33369: a0 = 0x301d0\n 33374: u64 [s1 + 0x68] = a0\n 33377: i32 a0 = a0 + 0\n 33379: ra = 0x592\n 33383: ecalli 3 // 'caller'\n 33385: a2 = u64 [s1 + 0x68]\n 33388: t0 = 0x594\n 33392: jump @1291\n      : @1265 [@dyn 713] (gas: 2)\n 33395: a2 = u64 [s1 + 0x68]\n 33398: t0 = 1428, jump @1291\n      : @1266 [@dyn 714] (gas: 40)\n 33404: t0 = a1 | a0\n 33407: a3 = a3 >> 0x20\n 33410: a2 = reverse a2\n 33412: a1 = a2 << 0x20\n 33415: a1 = a1 | a3\n 33418: a2 = a2 >> 0x20\n 33421: u64 [s1 + 152] = 0\n 33425: u64 [s1 + 184] = 0\n 33429: a0 = u64 [s1 + 0x38]\n 33432: u64 [s1 + 0xb0] = a0\n 33436: a0 = u64 [s1 + 0x70]\n 33439: u64 [s1 + 0xa8] = a0\n 33443: a0 = u64 [s1 + 0x78]\n 33446: u64 [s1 + 0xa0] = a0\n 33450: a0 = u64 [s1 + 0x40]\n 33453: u64 [s1 + 0xd8] = a0\n 33457: a0 = u64 [s1 + 0x48]\n 33460: u64 [s1 + 0xd0] = a0\n 33464: a0 = u64 [s1 + 0x50]\n 33467: u64 [s1 + 0xc8] = a0\n 33471: a0 = u64 [s1 + 0x58]\n 33474: u64 [s1 + 0xc0] = a0\n 33478: a3 = u64 [0x20198]\n 33483: a4 = u64 [0x201a0]\n 33488: a5 = u64 [0x201a8]\n 33493: a0 = u64 [0x201b0]\n 33498: u64 [s1 + 0xf8] = a3\n 33502: u64 [s1 + 0xf0] = a4\n 33506: u64 [s1 + 0xe8] = a5\n 33510: u64 [s1 + 0xe0] = a0\n 33514: u64 [s1 + 0x90] = a2\n 33518: u64 [s1 + 0x88] = a1\n 33522: a2 = s1 + 0xe0\n 33526: a3 = s1 + 0xc0\n 33530: a4 = s1 + 0xa0\n 33534: a5 = s1 + 0x80\n 33538: u64 [s1 + 0x80] = t0\n 33542: a0 = 0\n 33544: a1 = 0\n 33546: ra = 1430, jump @27\n      : @1267 [@dyn 715] (gas: 5)\n 33552: a0 = 0\n 33554: a1 = 0x1\n 33557: a2 = u64 [s1 + 0x30]\n 33560: t0 = 0x598\n 33564: jump @1286\n      : @1268 (gas: 3)\n 33567: a1 = 0\n 33569: a2 = u64 [s1 + 0x30]\n 33572: t0 = 1432, jump @1286\n      : @1269 [@dyn 716] (gas: 1)\n 33578: ret\n      : @1270 [export #0: 'call'] (gas: 2)\n 33580: a0 = 0\n 33582: ra = 1434, jump @36\n      : @1271 [@dyn 717] [export #1: 'deploy'] (gas: 2)\n 33588: a0 = 0x1\n 33591: ra = 1436, jump @36\n      : @1272 [@dyn 718] (gas: 23)\n 33597: a4 = u64 [s1 + 0x198]\n 33601: a2 = a4 <u 0x80\n 33605: a3 = u64 [s1 + 0x150]\n 33609: a1 = a3 if a2 != 0\n 33612: a5 = u64 [s1 + 0x158]\n 33616: a3 = u64 [s1 + 0x168]\n 33620: a3 = a3 | a5\n 33623: a3 = a0 if a2 == 0\n 33626: a1 = 0xffffffffffffffff if a4 == 0\n 33629: a3 = 0xffffffffffffffff if a4 == 0\n 33632: a4 = u64 [s1 + 0x160]\n 33636: a4 = 0 if a2 == 0\n 33638: a5 = 0 if a2 == 0\n 33640: a0 = u64 [s1 + 0x178]\n 33644: a0 = a0 & ~a3\n 33647: a2 = u64 [s1 + 0x180]\n 33651: a1 = a2 & ~a1\n 33654: a2 = u64 [s1 + 0x188]\n 33658: a2 = a2 & ~a5\n 33661: a3 = u64 [s1 + 0x190]\n 33665: a3 = a3 & ~a4\n 33668: a4 = s1 + 0x2118\n 33672: jump [t0]\n      : @1273 (gas: 14)\n 33674: a0 = u64 [a2 + 0x8]\n 33677: a1 = i32 [a2 + 0x10]\n 33680: a2 = u64 [a2]\n 33682: a0 = reverse a0\n 33684: a3 = a0 << 0x20\n 33687: a1 = reverse a1\n 33689: a1 = a1 >> 0x20\n 33692: a3 = a3 | a1\n 33695: a0 = a0 >> 0x20\n 33698: a1 = reverse a2\n 33700: a2 = a1 << 0x20\n 33703: a0 = a0 | a2\n 33706: a1 = a1 >> 0x20\n 33709: jump [t0]\n      : @1274 (gas: 30)\n 33711: a3 = u64 [s1 + 0x48]\n 33714: a0 = u64 [a3 + 0x18]\n 33717: a1 = u64 [a3 + 0x10]\n 33720: a2 = u64 [a3 + 0x8]\n 33723: a3 = u64 [a3]\n 33725: a0 = reverse a0\n 33727: u64 [s1 + 0x40] = a0\n 33730: a0 = reverse a1\n 33732: u64 [s1 + 0x38] = a0\n 33735: a0 = reverse a2\n 33737: u64 [s1 + 0x30] = a0\n 33740: a0 = reverse a3\n 33742: u64 [s1 + 0x28] = a0\n 33745: a0 = sp + 0xffffffffffffffe0\n 33748: a0 = a0 & 0xffffffffffffffe0\n 33751: u64 [s1 + 0x48] = a0\n 33754: sp = a0\n 33756: a0 = u64 [s1 + 0x50]\n 33759: a0 = a0 << 0x20\n 33762: a0 = a0 >> 0x20\n 33765: u64 [s1 + 504] = 0\n 33769: u64 [s1] = a0\n 33771: u64 [s1 + 0x1f0] = a0\n 33775: a0 = u64 [s1 + 0x70]\n 33778: u64 [s1 + 0x1e8] = a0\n 33782: a1 = s1 + 0x1e0\n 33786: a0 = u64 [s1 + 0x78]\n 33789: u64 [s1 + 0x1e0] = a0\n 33793: a0 = 0\n 33795: jump [t0]\n      : @1275 (gas: 38)\n 33797: t1 = u64 [s1 + 0x148]\n 33801: t1 = t1 + 0x1\n 33804: a0 = t1 <u 0x1\n 33807: t2 = u64 [s1 + 0x140]\n 33811: t2 = t2 + a0\n 33814: a0 = t1 | t2\n 33817: a0 = a0 <u 0x1\n 33820: a1 = u64 [s1 + 0x150]\n 33824: ra = a1 + a0\n 33827: a1 = ra <u a1\n 33830: a0 = u64 [s1 + 0x168]\n 33834: a0 = a0 + a1\n 33837: a1 = u64 [s1 + 0x198]\n 33841: a2 = a1 + 0x20\n 33844: u64 [s1 + 0x168] = a2\n 33848: a3 = a2 <u a1\n 33851: a1 = u64 [s1 + 0x138]\n 33855: a2 = a1 + a3\n 33858: u64 [s1 + 0x148] = a2\n 33862: a4 = a2 <u a1\n 33865: a4 = a3 if a3 == 0\n 33868: a1 = u64 [s1 + 0x190]\n 33872: a3 = a1 + a4\n 33875: a4 = a3 <u a1\n 33878: a1 = u64 [s1 + 0x188]\n 33882: a1 = a1 + a4\n 33885: u64 [s1 + 0x188] = a1\n 33889: a1 = u64 [s1 + 0x178]\n 33893: a4 = a1 + 0x20\n 33896: a5 = a4 <u a1\n 33899: a2 = u64 [s1 + 0x158]\n 33903: a1 = a2 + a5\n 33906: a2 = a1 <u a2\n 33909: a2 = a5 if a5 == 0\n 33912: a5 = u64 [s1 + 0x160]\n 33916: a2 = a2 + a5\n 33919: a5 = a2 <u a5\n 33922: jump [t0]\n      : @1276 (gas: 27)\n 33924: a3 = u64 [s1 + 0x50]\n 33927: a0 = u64 [a3 + 0x18]\n 33930: a1 = u64 [a3 + 0x10]\n 33933: a2 = u64 [a3 + 0x8]\n 33936: a3 = u64 [a3]\n 33938: a0 = reverse a0\n 33940: u64 [s1 + 0x48] = a0\n 33943: a0 = reverse a1\n 33945: u64 [s1 + 0x40] = a0\n 33948: a0 = reverse a2\n 33950: u64 [s1 + 0x38] = a0\n 33953: a0 = reverse a3\n 33955: u64 [s1 + 0x30] = a0\n 33958: a0 = sp + 0xffffffffffffffe0\n 33961: a0 = a0 & 0xffffffffffffffe0\n 33964: u64 [s1 + 0x50] = a0\n 33967: sp = a0\n 33969: u64 [s1 + 344] = 0\n 33973: a0 = u64 [s1]\n 33975: u64 [s1 + 0x150] = a0\n 33979: a0 = u64 [s1 + 0x70]\n 33982: u64 [s1 + 0x148] = a0\n 33986: a1 = s1 + 0x140\n 33990: a0 = u64 [s1 + 0x78]\n 33993: u64 [s1 + 0x140] = a0\n 33997: a0 = 0\n 33999: jump [t0]\n      : @1277 (gas: 22)\n 34001: a4 = u64 [s1 + 0x198]\n 34005: a2 = a4 <u 0x80\n 34009: a3 = u64 [s1 + 0x140]\n 34013: a0 = a3 if a2 != 0\n 34016: a5 = u64 [s1 + 0x148]\n 34020: a3 = u64 [s1 + 0x158]\n 34024: a3 = a3 | a5\n 34027: a3 = a1 if a2 == 0\n 34030: a0 = 0xffffffffffffffff if a4 == 0\n 34033: a3 = 0xffffffffffffffff if a4 == 0\n 34036: a5 = 0 if a2 == 0\n 34038: a4 = u64 [s1 + 0x150]\n 34042: a4 = 0 if a2 == 0\n 34044: a1 = u64 [s1 + 0x178]\n 34048: a1 = a1 & ~a3\n 34051: a2 = u64 [s1 + 0x180]\n 34055: a0 = a2 & ~a0\n 34058: a2 = u64 [s1 + 0x188]\n 34062: a2 = a2 & ~a4\n 34065: a3 = u64 [s1 + 0x190]\n 34069: a3 = a3 & ~a5\n 34072: jump [t0]\n      : @1278 (gas: 18)\n 34074: a3 = u64 [s1 + 0x28]\n 34077: a0 = u64 [a3 + 0x18]\n 34080: a1 = u64 [a3 + 0x10]\n 34083: a2 = u64 [a3 + 0x8]\n 34086: a3 = u64 [a3]\n 34088: a0 = reverse a0\n 34090: u64 [s1 + 0x20] = a0\n 34093: a0 = reverse a1\n 34095: u64 [s1 + 0x18] = a0\n 34098: a0 = reverse a2\n 34100: u64 [s1 + 0x10] = a0\n 34103: a0 = reverse a3\n 34105: u64 [s1 + 0x8] = a0\n 34108: a0 = sp + 0xffffffffffffffe0\n 34111: a0 = a0 & 0xffffffffffffffe0\n 34114: u64 [s1 + 0x28] = a0\n 34117: sp = a0\n 34119: jump [t0]\n      : @1279 (gas: 14)\n 34121: u64 [s1 + 384] = 0\n 34125: a3 = u64 [s1 + 0x168]\n 34129: a0 = u64 [a3 + 0x18]\n 34132: a1 = u64 [a3 + 0x10]\n 34135: a2 = u64 [a3 + 0x8]\n 34138: a3 = u64 [a3]\n 34140: t1 = reverse a0\n 34142: t2 = reverse a1\n 34144: ra = reverse a2\n 34146: a2 = 0\n 34148: a4 = u64 [s1 + 0x178]\n 34152: a0 = reverse a3\n 34154: a3 = 0\n 34156: jump [t0]\n      : @1280 (gas: 9)\n 34158: a0 = u64 [a3 + 0x18]\n 34161: a1 = u64 [a3 + 0x10]\n 34164: a2 = u64 [a3 + 0x8]\n 34167: a3 = u64 [a3]\n 34169: a0 = reverse a0\n 34171: a4 = reverse a1\n 34173: a2 = reverse a2\n 34175: a3 = reverse a3\n 34177: jump [t0]\n      : @1281 (gas: 16)\n 34179: a3 = u64 [s1 + 0x68]\n 34182: a0 = u64 [a3 + 0x18]\n 34185: a1 = u64 [a3 + 0x10]\n 34188: a2 = u64 [a3 + 0x8]\n 34191: a3 = u64 [a3]\n 34193: a0 = reverse a0\n 34195: a4 = reverse a1\n 34197: a2 = reverse a2\n 34199: a3 = reverse a3\n 34201: a1 = u64 [s1 + 0x50]\n 34204: u64 [a1 + 0x18] = a3\n 34207: u64 [a1 + 0x10] = a2\n 34210: u64 [a1 + 0x8] = a4\n 34213: u64 [a1] = a0\n 34215: a0 = s1 + 0x100\n 34219: jump [t0]\n      : @1282 (gas: 16)\n 34221: a3 = u64 [s1 + 0x50]\n 34224: a0 = u64 [a3 + 0x18]\n 34227: a1 = u64 [a3 + 0x10]\n 34230: a2 = u64 [a3 + 0x8]\n 34233: a3 = u64 [a3]\n 34235: a0 = reverse a0\n 34237: a4 = reverse a1\n 34239: a2 = reverse a2\n 34241: a3 = reverse a3\n 34243: a1 = u64 [s1 + 0x48]\n 34246: u64 [a1 + 0x18] = a3\n 34249: u64 [a1 + 0x10] = a2\n 34252: u64 [a1 + 0x8] = a4\n 34255: u64 [a1] = a0\n 34257: a0 = s1 + 0x1a0\n 34261: jump [t0]\n      : @1283 (gas: 8)\n 34263: a0 = sp + 0xffffffffffffffe0\n 34266: a0 = a0 & 0xffffffffffffffe0\n 34269: u64 [s1 + 0x50] = a0\n 34272: sp = a0\n 34274: i32 a2 = a0 + 0\n 34276: a1 = 0x40\n 34279: a0 = u64 [s1 + 0x60]\n 34282: jump [t0]\n      : @1284 (gas: 14)\n 34284: a0 = u64 [a2 + 0x8]\n 34287: a1 = i32 [a2 + 0x10]\n 34290: a2 = u64 [a2]\n 34292: a0 = reverse a0\n 34294: a3 = a0 << 0x20\n 34297: a1 = reverse a1\n 34299: a1 = a1 >> 0x20\n 34302: a3 = a3 | a1\n 34305: a0 = a0 >> 0x20\n 34308: a1 = reverse a2\n 34310: a2 = a1 << 0x20\n 34313: a2 = a2 | a0\n 34316: a1 = a1 >> 0x20\n 34319: jump [t0]\n      : @1285 (gas: 15)\n 34321: a4 = s1 + 0x100\n 34325: a0 = u64 [a4]\n 34327: a1 = u64 [a4 + 0x8]\n 34330: a2 = u64 [a4 + 0x18]\n 34333: a3 = u64 [a4 + 0x10]\n 34336: a0 = a0 & 0xffffffffffffff00\n 34340: a0 = a0 | 0x1\n 34343: a4 = s1 + 0x200\n 34347: u64 [a4 + 0x58] = a2\n 34350: u64 [a4 + 0x50] = a3\n 34353: u64 [a4 + 0x48] = a1\n 34356: u64 [a4 + 0x40] = a0\n 34359: a1 = s1 + 0x240\n 34363: a0 = u64 [s1 + 0x50]\n 34366: jump [t0]\n      : @1286 (gas: 11)\n 34368: u64 [a2] = a1\n 34370: u64 [a2 + 0x8] = a0\n 34373: u64 [a2 + 0x10] = a0\n 34376: u64 [a2 + 0x18] = a0\n 34379: sp = s0 + 0xfffffffffffffd80\n 34383: a0 = sp + 0x200\n 34387: ra = u64 [a0 + 0x78]\n 34390: s0 = u64 [a0 + 0x70]\n 34393: s1 = u64 [a0 + 0x68]\n 34396: sp = sp + 0x280\n 34400: jump [t0]\n      : @1287 (gas: 19)\n 34402: a3 = u64 [s1 + 0x170]\n 34406: a0 = u64 [a3]\n 34408: a1 = u64 [a3 + 0x8]\n 34411: a2 = u64 [a3 + 0x10]\n 34414: a3 = u64 [a3 + 0x18]\n 34417: a0 = reverse a0\n 34419: a1 = reverse a1\n 34421: a2 = reverse a2\n 34423: a3 = reverse a3\n 34425: a3 = a3 + 0x1\n 34428: a4 = a3 <u 0x1\n 34431: a2 = a2 + a4\n 34434: a4 = a3 | a2\n 34437: a4 = a4 <u 0x1\n 34440: a4 = a4 + a1\n 34443: a1 = a4 <u a1\n 34446: a0 = a0 + a1\n 34449: a1 = s1 + 0x2118\n 34453: jump [t0]\n      : @1288 (gas: 14)\n 34455: a0 = u64 [a3 + 0x18]\n 34458: a1 = u64 [a3 + 0x10]\n 34461: a2 = u64 [a3 + 0x8]\n 34464: a3 = u64 [a3]\n 34466: a0 = reverse a0\n 34468: a4 = reverse a1\n 34470: a2 = reverse a2\n 34472: a3 = reverse a3\n 34474: a1 = u64 [s1 + 0x28]\n 34477: u64 [a1 + 0x18] = a3\n 34480: u64 [a1 + 0x10] = a2\n 34483: u64 [a1 + 0x8] = a4\n 34486: u64 [a1] = a0\n 34488: jump [t0]\n      : @1289 (gas: 7)\n 34490: a1 = u64 [a2 + 0x90]\n 34494: a0 = a1 <u a0\n 34497: a1 = u64 [a2 + 0x88]\n 34501: a0 = 0 if a1 != 0\n 34503: a1 = u64 [a2 + 0x98]\n 34507: a0 = 0 if a1 != 0\n 34509: jump [t0]\n      : @1290 (gas: 16)\n 34511: a0 = a3 >u 0\n 34513: a1 = a4 >u 0\n 34515: a1 = a0 if a3 != 0\n 34518: a0 = a5 >u 0\n 34520: u64 [s1 + 0x178] = a2\n 34524: a2 = a2 <u 0x20\n 34527: a2 = a2 ^ 0x1\n 34530: u64 [s1 + 0x180] = a5\n 34534: a2 = a0 if a5 != 0\n 34537: u64 [s1 + 0x188] = a3\n 34541: u64 [s1 + 0x190] = a4\n 34545: a0 = a4 | a3\n 34548: a2 = a1 if a0 != 0\n 34551: a0 = u64 [s1 + 0xa8]\n 34555: a0 = a0 <u 0x20\n 34558: jump [t0]\n      : @1291 (gas: 8)\n 34560: a0 = u64 [a2 + 0x8]\n 34563: a1 = i32 [a2 + 0x10]\n 34566: a2 = u64 [a2]\n 34568: a3 = reverse a0\n 34570: a0 = a3 << 0x20\n 34573: a1 = reverse a1\n 34575: a1 = a1 >> 0x20\n 34578: jump [t0]\n      : @1292 (gas: 7)\n 34580: u64 [s1 + 376] = 0\n 34584: u64 [s1 + 368] = 0\n 34588: u64 [s1 + 360] = 0\n 34592: a0 = 0x20\n 34595: a1 = s1 + 0x160\n 34599: u64 [s1 + 352] = 0\n 34603: jump [t0]\n      : @1293 (gas: 7)\n 34605: u64 [s1 + 536] = 0\n 34609: u64 [s1 + 528] = 0\n 34613: u64 [s1 + 520] = 0\n 34617: a0 = 0x20\n 34620: a1 = s1 + 0x200\n 34624: u64 [s1 + 512] = 0\n 34628: jump [t0]\n      : @1294 (gas: 5)\n 34630: sp = a0\n 34632: i32 a2 = a0 + 0\n 34634: a1 = 0x40\n 34637: a0 = u64 [s1 + 0x60]\n 34640: jump [t0]\n      : @1295 (gas: 10)\n 34642: u64 [s1 + 0x158] = a0\n 34646: u64 [s1 + 0x160] = a1\n 34650: a0 = u64 [s1 + 0x150]\n 34654: a0 = a0 | a1\n 34657: u64 [s1 + 0x150] = a0\n 34661: a0 = u64 [s1 + 0x198]\n 34665: a2 = a0 + 0xffffffffffffff80\n 34668: a0 = 0xffffffffffffffff\n 34671: a1 = 0xffffffffffffffff\n 34674: jump [t0]\n      : @1296 (gas: 17)\n 34676: a0 = u64 [a3 + 0x18]\n 34679: a1 = u64 [a3 + 0x10]\n 34682: a2 = u64 [a3 + 0x8]\n 34685: a3 = u64 [a3]\n 34687: a0 = reverse a0\n 34689: u64 [s1 + 0x158] = a0\n 34693: a0 = reverse a1\n 34695: u64 [s1 + 0x150] = a0\n 34699: a0 = reverse a2\n 34701: u64 [s1 + 0x148] = a0\n 34705: a0 = reverse a3\n 34707: u64 [s1 + 0x140] = a0\n 34711: a0 = sp + 0xffffffffffffffe0\n 34714: a0 = a0 & 0xffffffffffffffe0\n 34717: u64 [s1 + 0x160] = a0\n 34721: sp = a0\n 34723: jump [t0]\n      : @1297 (gas: 12)\n 34725: a0 = u64 [s1 + 0x30]\n 34728: a3 = s1 + 0x100\n 34732: u64 [a3 + 0x38] = a0\n 34735: a0 = u64 [s1 + 0x38]\n 34738: u64 [a3 + 0x30] = a0\n 34741: a0 = u64 [s1 + 0x40]\n 34744: u64 [a3 + 0x28] = a0\n 34747: a0 = 0x20\n 34750: a1 = s1 + 0x120\n 34754: a2 = u64 [s1 + 0x48]\n 34757: u64 [a3 + 0x20] = a2\n 34760: jump [t0]\n      : @1298 (gas: 12)\n 34762: a0 = u64 [s1 + 0x28]\n 34765: a3 = s1 + 0x100\n 34769: u64 [a3 + 0xd8] = a0\n 34773: a0 = u64 [s1 + 0x30]\n 34776: u64 [a3 + 0xd0] = a0\n 34780: a0 = u64 [s1 + 0x38]\n 34783: u64 [a3 + 0xc8] = a0\n 34787: a0 = 0x20\n 34790: a1 = s1 + 0x1c0\n 34794: a2 = u64 [s1 + 0x40]\n 34797: u64 [a3 + 0xc0] = a2\n 34801: jump [t0]\n      : @1299 (gas: 16)\n 34803: a2 = u64 [s1 + 0x168]\n 34807: a0 = u64 [a2 + 0x8]\n 34810: a1 = i32 [a2 + 0x10]\n 34813: a2 = u64 [a2]\n 34815: a0 = reverse a0\n 34817: a3 = a0 << 0x20\n 34820: a1 = reverse a1\n 34822: a1 = a1 >> 0x20\n 34825: a3 = a3 | a1\n 34828: a0 = a0 >> 0x20\n 34831: a1 = reverse a2\n 34833: a2 = a1 << 0x20\n 34836: a0 = a0 | a2\n 34839: a1 = a1 >> 0x20\n 34842: a2 = s1 + 0x1118\n 34846: jump [t0]\n      : @1300 (gas: 7)\n 34848: a1 = u64 [a2 + 0x98]\n 34852: a0 = a1 <u a0\n 34855: a1 = u64 [a2 + 0x88]\n 34859: a0 = 0 if a1 != 0\n 34861: a1 = u64 [a2 + 0x90]\n 34865: a0 = 0 if a1 != 0\n 34867: jump [t0]\n      : @1301 (gas: 13)\n 34869: a1 = a0 <u a1\n 34872: a3 = u64 [s1 + 0x160]\n 34876: a2 = a3 + a1\n 34879: a3 = a2 <u a3\n 34882: a3 = a1 if a1 == 0\n 34885: a1 = u64 [s1 + 0x170]\n 34889: a3 = a3 + a1\n 34892: a1 = a3 <u a1\n 34895: a4 = u64 [s1 + 0x168]\n 34899: a1 = a1 + a4\n 34902: a4 = s1 + 0x2118\n 34906: a5 = a4 + 0x700\n 34910: jump [t0]\n      : @1302 (gas: 13)\n 34912: a1 = a0 <u a1\n 34915: a3 = u64 [s1 + 0x190]\n 34919: a2 = a3 + a1\n 34922: a3 = a2 <u a3\n 34925: a3 = a1 if a1 == 0\n 34928: a1 = u64 [s1 + 0x180]\n 34932: a3 = a3 + a1\n 34935: a1 = a3 <u a1\n 34938: a4 = u64 [s1 + 0x198]\n 34942: a1 = a1 + a4\n 34945: a4 = s1 + 0x2118\n 34949: a5 = a4 + 0x600\n 34953: jump [t0]\n      : @1303 (gas: 12)\n 34955: a1 = a0 <u a1\n 34958: a3 = u64 [s1 + 0x160]\n 34962: a2 = a3 + a1\n 34965: a3 = a2 <u a3\n 34968: a3 = a1 if a1 == 0\n 34971: a1 = u64 [s1 + 0x170]\n 34975: a3 = a3 + a1\n 34978: a1 = a3 <u a1\n 34981: a4 = u64 [s1 + 0x168]\n 34985: a4 = a4 + a1\n 34988: a1 = s1 + 0x1918\n 34992: jump [t0]\n      : @1304 (gas: 12)\n 34994: a0 = u64 [s1 + 0x110]\n 34998: u64 [s1 + 0x178] = a4\n 35002: a0 = a4 <u a0\n 35005: a4 = a0 ^ 0x1\n 35008: u64 [s1 + 0x158] = a3\n 35012: a4 = 0x1 if a3 != 0\n 35015: u64 [s1 + 0x160] = a2\n 35019: a0 = u64 [s1 + 0x180]\n 35023: a0 = a0 | a2\n 35026: a4 = 0x1 if a0 != 0\n 35029: a1 = u64 [s1 + 0x118]\n 35033: jump [t0]\n      : @1305 (gas: 16)\n 35035: a3 = u64 [s1 + 0x158]\n 35039: a0 = u64 [a3 + 0x18]\n 35042: a1 = u64 [a3 + 0x10]\n 35045: a2 = u64 [a3 + 0x8]\n 35048: a3 = u64 [a3]\n 35050: a0 = reverse a0\n 35052: a4 = reverse a1\n 35054: a2 = reverse a2\n 35056: a3 = reverse a3\n 35058: a1 = u64 [s1 + 0x160]\n 35062: u64 [a1 + 0x18] = a3\n 35065: u64 [a1 + 0x10] = a2\n 35068: u64 [a1 + 0x8] = a4\n 35071: u64 [a1] = a0\n 35073: a0 = 0x1000\n 35077: jump [t0]\n      : @1306 (gas: 12)\n 35079: a0 = a2 <u a0\n 35082: a3 = u64 [s1 + 0x190]\n 35086: a1 = a3 + a0\n 35089: a3 = a1 <u a3\n 35092: a3 = a0 if a0 == 0\n 35095: a0 = u64 [s1 + 0x180]\n 35099: a3 = a3 + a0\n 35102: a0 = a3 <u a0\n 35105: a4 = u64 [s1 + 0x198]\n 35109: a0 = a0 + a4\n 35112: a4 = a5 + 0x400\n 35116: jump [t0]\n      : @1307 (gas: 14)\n 35118: a3 = a3 + a4\n 35121: u64 [s1 + 0x158] = a3\n 35125: a3 = a3 << 0x3b\n 35128: a4 = a2 >> 0x5\n 35131: a4 = a4 | a3\n 35134: a0 = u64 [s1 + 0x160]\n 35138: t1 = u64 [a0 + 0x18]\n 35141: a2 = a2 << 0x3b\n 35144: a3 = u64 [a0 + 0x10]\n 35147: a1 = a1 >> 0x5\n 35150: a0 = a1 | a2\n 35153: t2 = reverse t1\n 35155: a2 = reverse a3\n 35157: jump [t0]\n      : @1308 (gas: 8)\n 35159: a1 = sp + 0xffffffffffffffe0\n 35162: a1 = a1 & 0xffffffffffffffe0\n 35165: u64 [s1 + 0x168] = a1\n 35169: sp = a1\n 35171: i32 a0 = a0 + 0\n 35173: i32 a2 = a1 + 0\n 35175: a1 = 0x20\n 35178: jump [t0]\n      : @1309 (gas: 16)\n 35180: sp = sp + 0xfffffffffffffd80\n 35184: a2 = sp + 0x200\n 35188: u64 [a2 + 0x78] = ra\n 35191: u64 [a2 + 0x70] = s0\n 35194: u64 [a2 + 0x68] = s1\n 35197: s0 = sp + 0x280\n 35201: sp = sp & 0xffffffffffffffe0\n 35204: s1 = sp\n 35206: a2 = u64 [a1 + 0x10]\n 35209: u64 [s1 + 0x50] = a2\n 35212: a2 = u64 [a1 + 0x8]\n 35215: u64 [s1 + 0x70] = a2\n 35218: a1 = u64 [a1]\n 35220: u64 [s1 + 0x78] = a1\n 35223: u64 [s1 + 0x58] = a0\n 35226: jump [t0]\n      : @1310 (gas: 7)\n 35228: a0 = a0 << 0x3b\n 35231: a1 = a0 >> 0x38\n 35234: u64 [s1 + 0x198] = a1\n 35238: a2 = 0x80 - a1\n 35242: a0 = 0xffffffffffffffff\n 35245: a1 = 0xffffffffffffffff\n 35248: jump [t0]\n      : @1311 (gas: 11)\n 35250: t2 = u64 [s1 + 0x188]\n 35254: t2 = t2 + 0x1\n 35257: a0 = t2 <u 0x1\n 35260: a4 = u64 [s1 + 0x198]\n 35264: a4 = a4 + a0\n 35267: a0 = t2 | a4\n 35270: a0 = a0 <u 0x1\n 35273: a1 = u64 [s1 + 0x178]\n 35277: a0 = a0 + a1\n 35280: a1 = a0 <u a1\n 35283: jump [t0]\n      : @1312 (gas: 5)\n 35285: sp = a0\n 35287: i32 a2 = a0 + 0\n 35289: a1 = 0x40\n 35292: a0 = u64 [s1 + 0x198]\n 35296: jump [t0]\n      : @1313 (gas: 10)\n 35298: a0 = u64 [a3 + 0x18]\n 35301: a1 = u64 [a3 + 0x10]\n 35304: a2 = u64 [a3 + 0x8]\n 35307: a3 = u64 [a3]\n 35309: a0 = reverse a0\n 35311: a1 = reverse a1\n 35313: a2 = reverse a2\n 35315: a3 = reverse a3\n 35317: a4 = s1 + 0x2118\n 35321: jump [t0]\n      : @1314 (gas: 4)\n 35323: a0 = 0x2118\n 35327: a3 = s1 + a0\n 35330: a4 = a3 + 0x600\n 35334: jump [t0]\n      : @1315 (gas: 8)\n 35336: a4 = u64 [a5 + 0x60]\n 35339: a1 = a1 | a4\n 35342: a4 = u64 [a5 + 0x68]\n 35345: a3 = a3 | a4\n 35348: a4 = u64 [a5 + 0x70]\n 35351: a2 = a2 | a4\n 35354: a4 = s1 + 0x2118\n 35358: jump [t0]\n      : @1316 (gas: 8)\n 35360: a2 = a1 | a5\n 35363: a0 = a0 | a3\n 35366: a2 = a2 | a0\n 35369: a2 = a2 >> 0x20\n 35372: a0 = a0 | a5\n 35375: a0 = a0 << 0x20\n 35378: a0 = a0 | a2\n 35381: jump [t0]\n      : @1317 (gas: 10)\n 35383: u64 [s1 + 0x150] = a0\n 35387: u64 [s1 + 0x148] = a1\n 35391: a1 = u64 [s1 + 0x140]\n 35395: a0 = a0 | a1\n 35398: u64 [s1 + 0x140] = a0\n 35402: a0 = u64 [s1 + 0x198]\n 35406: i32 a2 = a0 + 0xffffffffffffff80\n 35409: a0 = 0xffffffffffffffff\n 35412: a1 = 0xffffffffffffffff\n 35415: jump [t0]\n      : @1318 (gas: 9)\n 35417: a2 = a3 + a1\n 35420: a3 = a2 <u a3\n 35423: a3 = a1 if a1 == 0\n 35426: a1 = u64 [s1 + 0x180]\n 35430: a3 = a3 + a1\n 35433: a1 = a3 <u a1\n 35436: a4 = u64 [s1 + 0x188]\n 35440: a4 = a4 + a1\n 35443: jump [t0]\n      : @1319 (gas: 7)\n 35445: a0 = sp + 0xffffffffffffffe0\n 35448: a0 = a0 & 0xffffffffffffffe0\n 35451: u64 [s1 + 0x170] = a0\n 35455: sp = a0\n 35457: a1 = 0x20\n 35460: a0 = 0\n 35462: jump [t0]\n      : @1320 (gas: 10)\n 35464: a0 = u64 [sp + 0x10]\n 35467: a1 = u64 [sp + 0x18]\n 35470: a2 = 0x100000000\n 35480: a2 = a2 ^ a0\n 35483: a2 = a2 | a1\n 35486: a3 = a0 >> 0x20\n 35489: a3 = a3 <u 0x1\n 35492: a3 = 0 if a1 != 0\n 35494: a3 = 0 if a2 == 0\n 35496: jump [t0]\n      : @1321 (gas: 7)\n 35498: a1 = u64 [a2 + 0x98]\n 35502: a0 = a1 <u a0\n 35505: a1 = u64 [a2 + 0x90]\n 35509: a0 = 0 if a1 != 0\n 35511: a1 = u64 [a2 + 0x88]\n 35515: a0 = 0 if a1 != 0\n 35517: jump [t0]\n      : @1322 (gas: 8)\n 35519: a4 = a2 + a0\n 35522: a4 = a4 + a3\n 35525: a3 = a4 ^ a2\n 35528: u64 [s1 + 0x168] = a4\n 35532: a2 = a4 <u a2\n 35535: a2 = a0 if a3 == 0\n 35538: a4 = u64 [s1 + 0x158]\n 35542: jump [t0]\n      : @1323 (gas: 12)\n 35544: a0 = u64 [s1 + 0x20]\n 35547: a2 = s1 + 0x100\n 35551: u64 [a2 + 0x98] = a0\n 35555: a0 = u64 [s1 + 0x18]\n 35558: u64 [a2 + 0x90] = a0\n 35562: a0 = u64 [s1 + 0x10]\n 35565: u64 [a2 + 0x88] = a0\n 35569: a1 = s1 + 0x180\n 35573: a0 = u64 [s1 + 0x8]\n 35576: u64 [a2 + 0x80] = a0\n 35580: a0 = 0\n 35582: jump [t0]\n      : @1324 (gas: 10)\n 35584: a2 = a1 | a5\n 35587: a0 = ra | a0\n 35590: a2 = a2 | a0\n 35593: a2 = a2 >> 0x20\n 35596: a0 = a0 | a5\n 35599: a0 = a0 << 0x20\n 35602: a0 = a0 | a2\n 35605: u64 [s1 + 0x148] = t1\n 35609: u64 [s1 + 0x140] = t2\n 35613: jump [t0]\n      : @1325 (gas: 6)\n 35615: a0 = a1 <u a0\n 35618: a2 = u64 [a3 + 0x98]\n 35622: a0 = 0 if a2 != 0\n 35624: a2 = u64 [a3 + 0x78]\n 35627: a0 = 0 if a2 != 0\n 35629: jump [t0]\n      : @1326 (gas: 6)\n 35631: a0 = a1 <u a0\n 35634: a2 = u64 [a3 + 0x90]\n 35638: a0 = 0 if a2 != 0\n 35640: a2 = u64 [a3 + 0x88]\n 35644: a0 = 0 if a2 != 0\n 35646: jump [t0]\n      : @1327 (gas: 8)\n 35648: a4 = a4 | a2\n 35651: a2 = a0 | a1\n 35654: a2 = a2 | a4\n 35657: a2 = a2 >> 0x20\n 35660: a1 = a1 | a4\n 35663: a1 = a1 << 0x20\n 35666: a1 = a1 | a2\n 35669: jump [t0]\n      : @1328 (gas: 6)\n 35671: u64 [s1 + 0x168] = a0\n 35675: u64 [s1 + 0x150] = a1\n 35679: a0 = 0xffffffffffffffff\n 35682: a1 = 0xffffffffffffffff\n 35685: a2 = u64 [s1 + 0x198]\n 35689: jump [t0]\n      : @1329 (gas: 6)\n 35691: a0 = u64 [a3 + 0x18]\n 35694: a1 = u64 [a3 + 0x10]\n 35697: a2 = u64 [a3 + 0x8]\n 35700: a3 = u64 [a3]\n 35702: a0 = reverse a0\n 35704: jump [t0]\n      : @1330 (gas: 10)\n 35706: sp = sp + 0xfffffffffffffd80\n 35710: a3 = sp + 0x200\n 35714: u64 [a3 + 0x78] = ra\n 35717: u64 [a3 + 0x70] = s0\n 35720: u64 [a3 + 0x68] = s1\n 35723: s0 = sp + 0x280\n 35727: sp = sp & 0xffffffffffffffe0\n 35730: s1 = sp\n 35732: a3 = u64 [a2 + 0x10]\n 35735: jump [t0]\n      : @1331 (gas: 5)\n 35737: a5 = u64 [s1 + 0x170]\n 35741: u64 [a5 + 0x8] = t2\n 35744: u64 [a5] = t1\n 35746: u64 [a5 + 0x10] = ra\n 35749: jump [t0]\n      : @1332 (gas: 12)\n 35751: a2 = u64 [sp]\n 35753: a3 = u64 [sp + 0x8]\n 35756: u64 [s1] = a2\n 35758: u64 [s1 + 0x8] = a3\n 35761: u64 [s1 + 0x10] = a0\n 35764: u64 [s1 + 0x18] = a1\n 35767: sp = s0 + 0xffffffffffffffc0\n 35770: ra = u64 [sp + 0x38]\n 35773: s0 = u64 [sp + 0x30]\n 35776: s1 = u64 [sp + 0x28]\n 35779: sp = sp + 0x40\n 35782: jump [t0]\n      : @1333 (gas: 12)\n 35784: a0 = u64 [a5 + 0x80]\n 35788: a1 = u64 [a5 + 0x78]\n 35791: a2 = u64 [a5 + 0x70]\n 35794: a4 = u64 [a5 + 0x68]\n 35797: a0 = a0 | a2\n 35800: a2 = a4 | a1\n 35803: a2 = a2 | a0\n 35806: a2 = a2 >> 0x20\n 35809: a0 = a0 | a1\n 35812: a0 = a0 << 0x20\n 35815: a0 = a0 | a2\n 35818: jump [t0]\n      : @1334 (gas: 7)\n 35820: u64 [s1 + 344] = 0\n 35824: u64 [s1 + 336] = 0\n 35828: u64 [s1 + 328] = 0\n 35832: a0 = 0x20\n 35835: a1 = s1 + 0x140\n 35839: u64 [s1 + 320] = 0\n 35843: jump [t0]\n      : @1335 (gas: 7)\n 35845: a1 = a0 + 0x1f\n 35848: a0 = a1 <u a0\n 35851: a5 = u64 [s1 + 0x110]\n 35855: a2 = a5 + a0\n 35858: a3 = a2 <u a5\n 35861: a3 = a0 if a0 == 0\n 35864: jump [t0]\n      : @1336 (gas: 7)\n 35866: a0 = 0x20\n 35869: u64 [s1 + 0x198] = a0\n 35873: a5 = 0\n 35875: u64 [s1 + 400] = 0\n 35879: u64 [s1 + 392] = 0\n 35883: u64 [s1 + 376] = 0\n 35887: jump [t0]\n      : @1337 (gas: 8)\n 35889: u64 [sp + 48] = 0\n 35892: u64 [sp + 40] = 0\n 35895: u64 [sp + 32] = 0\n 35898: a0 = 0x4e487b7100000000\n 35908: a1 = sp + 0x20\n 35911: u64 [sp + 0x38] = a0\n 35914: a0 = 0\n 35916: jump [t0]\n      : @1338 (gas: 8)\n 35918: a0 = sp + 0xffffffffffffffe0\n 35921: a0 = a0 & 0xffffffffffffffe0\n 35924: u64 [s1 + 0x160] = a0\n 35928: sp = a0\n 35930: i32 a2 = a0 + 0\n 35932: a1 = 0x20\n 35935: a0 = u64 [s1 + 0xf8]\n 35939: jump [t0]\n      : @1339 (gas: 9)\n 35941: sp = sp + 0xfffffffffffffda0\n 35945: a2 = sp + 0x200\n 35949: u64 [a2 + 0x58] = ra\n 35952: u64 [a2 + 0x50] = s0\n 35955: u64 [a2 + 0x48] = s1\n 35958: s0 = sp + 0x260\n 35962: sp = sp & 0xffffffffffffffe0\n 35965: s1 = sp\n 35967: jump [t0]\n      : @1340 (gas: 6)\n 35969: sp = s0 + 0xffffffffffffffa0\n 35972: ra = u64 [sp + 0x58]\n 35975: s0 = u64 [sp + 0x50]\n 35978: s1 = u64 [sp + 0x48]\n 35981: sp = sp + 0x60\n 35984: jump [t0]\n      : @1341 (gas: 5)\n 35986: a0 = a1 <u a0\n 35989: a2 = u64 [a5 + 0x90]\n 35993: a0 = 0 if a2 != 0\n 35995: a0 = 0 if a3 != 0\n 35997: jump [t0]\n      : @1342 (gas: 8)\n 35999: a0 = u64 [a4 + 0xb8]\n 36003: a1 = u64 [a4 + 0xc0]\n 36007: a2 = u64 [a4 + 0xb0]\n 36011: a3 = u64 [a4 + 0xa8]\n 36015: a1 = a1 | a2\n 36018: a0 = a0 | a3\n 36021: a0 = a0 | a1\n 36024: jump [t0]\n      : @1343 (gas: 5)\n 36026: a0 = sp + 0xffffffffffffffe0\n 36029: a2 = a0 & 0xffffffffffffffe0\n 36032: u64 [s1 + 0x170] = a2\n 36036: sp = a2\n 36038: jump [t0]\n      : @1344 (gas: 5)\n 36040: a0 = sp + 0xffffffffffffffe0\n 36043: a2 = a0 & 0xffffffffffffffe0\n 36046: u64 [s1 + 0x48] = a2\n 36049: sp = a2\n 36051: jump [t0]\n      : @1345 (gas: 7)\n 36053: a0 = sp + 0xffffffffffffffe0\n 36056: a0 = a0 & 0xffffffffffffffe0\n 36059: u64 [s1 + 0x198] = a0\n 36063: sp = a0\n 36065: i32 a2 = a0 + 0\n 36067: a1 = 0x40\n 36070: jump [t0]\n      : @1346 (gas: 8)\n 36072: a0 = sp + 0xffffffffffffffe0\n 36075: a0 = a0 & 0xffffffffffffffe0\n 36078: u64 [s1 + 0x30] = a0\n 36081: sp = a0\n 36083: i32 a2 = a0 + 0\n 36085: a1 = 0x40\n 36088: a0 = u64 [s1 + 0x40]\n 36091: jump [t0]\n      : @1347 (gas: 4)\n 36093: a0 = 0x1118\n 36097: a1 = s1 + a0\n 36100: a2 = a1 + 0x400\n 36104: jump [t0]\n      : @1348 (gas: 6)\n 36106: u64 [a1 + 1344] = 0\n 36110: u64 [a1 + 1336] = 0\n 36114: u64 [a1 + 1320] = 0x1\n 36119: a2 = a1\n 36121: a0 = 0x20\n 36124: jump [t0]\n      : @1349 (gas: 4)\n 36126: a0 = u64 [s1 + 0x198]\n 36130: a0 = i32 [a0]\n 36132: a1 = 0x23\n 36135: jump [t0]\n      : @1350 (gas: 6)\n 36137: i32 a0 = a0 + 0\n 36139: i32 a2 = a2 + 0\n 36141: u64 [s1 + 0x68] = a1\n 36144: a1 = 0x40\n 36147: u64 [s1 + 0x60] = a0\n 36150: jump [t0]\n      : @1351 (gas: 4)\n 36152: a0 = 0x2118\n 36156: a3 = s1 + a0\n 36159: a4 = a3 + 0x500\n 36163: jump [t0]\n      : @1352 (gas: 4)\n 36165: a0 = 0x2118\n 36169: a3 = s1 + a0\n 36172: a4 = a3 + 0x700\n 36176: jump [t0]\n      : @1353 (gas: 4)\n 36178: a0 = 0x2118\n 36182: a2 = s1 + a0\n 36185: a3 = a2 + 0x100\n 36189: jump [t0]\n      : @1354 (gas: 7)\n 36191: a0 = a3 <u a0\n 36194: a1 = u64 [s1 + 0x80]\n 36198: a4 = a1 + a0\n 36201: a1 = a4 <u a1\n 36204: a1 = a0 if a0 == 0\n 36207: a0 = u64 [s1 + 0x90]\n 36211: jump [t0]\n      : @1355 (gas: 9)\n 36213: sp = sp + 0xffffffffffffffc0\n 36216: u64 [sp + 0x38] = ra\n 36219: u64 [sp + 0x30] = s0\n 36222: u64 [sp + 0x28] = s1\n 36225: s0 = sp + 0x40\n 36228: sp = sp & 0xffffffffffffffe0\n 36231: s1 = a0\n 36233: i32 a0 = sp + 0\n 36235: jump [t0]\n      : @1356 (gas: 2)\n 36237: a3 = a2 & 0x40\n 36240: jump @1360 if a3 != 0\n      : @1357 (gas: 1)\n 36243: jump @1359 if a2 == 0\n      : @1358 (gas: 6)\n 36246: i32 a3 = 0x40 - a2\n 36249: a3 = a1 << a3\n 36252: a1 = a1 >> a2\n 36255: a0 = a0 >> a2\n 36258: a0 = a0 | a3\n 36261: ret\n      : @1359 (gas: 1)\n 36263: ret\n      : @1360 (gas: 4)\n 36265: a0 = a2 + 0xffffffffffffffc0\n 36268: a0 = a1 >> a0\n 36271: a1 = 0\n 36273: ret\n      : @1361 (gas: 2)\n 36275: a3 = a2 & 0x40\n 36278: jump @1365 if a3 != 0\n      : @1362 (gas: 1)\n 36281: jump @1364 if a2 == 0\n      : @1363 (gas: 6)\n 36284: i32 a3 = 0x40 - a2\n 36287: a3 = a0 >> a3\n 36290: a0 = a0 << a2\n 36293: a1 = a1 << a2\n 36296: a1 = a1 | a3\n 36299: ret\n      : @1364 (gas: 1)\n 36301: ret\n      : @1365 (gas: 4)\n 36303: a1 = a2 + 0xffffffffffffffc0\n 36306: a1 = a0 << a1\n 36309: a0 = 0\n 36311: ret\n",
            "bytecode": {
              "object": "50564d0000e9a7000000000000010700c1f001c000800381b8381a7e6af354d4fb4a430db13afcd68bf3bccb1a818f57a43c318674691cfb3a7128a342e895fbee39e50b46b433d9795b328baa11afd5a1ede42dc98d5c5cb4795d6a256c905f2ac0f6e166d0fc94945250b6cde19d6877bf99cebae44d62a1abd3c6eb1b9160ab585409e494056248eb975299f476da347b43259f58a58cc4766168207473754d6972747369642065726f20726f747562656c6961746572200000656c6f7220728a8048028a9910d8cb5917e71802b2330a3598b382a1c12e2c017c5842d706d61dff7e7e1188872fd1014979ec26e982400927504a02787c0d6f6533a740453020746375646f7250746f6e2073656f64381a7e6af354d4fb4a430db13afcd68bf3bccb1a818f57a43c318674691cfb3a1dff7e7e1188872fd1014979ec26e982400927504a02787c0d6f6533a7404530795d6a256c905f2ac0f6e166d0fc94945250b6cde19d6877bf99cebae44d62a11dff7e7e1188872fd1014979ec26e982400927504a02787c0d6f6533a74045301dff7e7e1188872fd1014979ec26e982400927504a02787c0d6f6533a74045309dc6d9325c1f39f67429440b67ea472a64fdc7edd13539b51b1739a847e021eb0480c40c000000000e0000001c0000002a000000300000003d00000048000000570000005a00000065000000770000008200000063616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a6563616c6c65726465706f7369745f6576656e746765745f73746f72616765686173685f6b656363616b5f3235366e6f777365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e73666572726564051302c02c830463616c6cc03483066465706c6f7906c037a582ce02c0d98d9b00e3012703c103f2036f04770476057b05ab052f06390679068c069806d306f80683078907aa07160838087c0885089f08a408bf08f1080f091a091f092b09630981099f09ae09b709c609cb09e2090f0a2c0a370a3c0a480a6a0ad50a020b390b4d0b7c0bf10b420c4f0c790ca20ce60c160dac0db10de90df60da70ee80efa0eb00fb60f3d1081108710101150115611e2114b127612bc12c612081312133b137713ab13b513d2130b149014a114eb1453158015cd15e2152516a716b216e016121738176f178517cc1708183418ac18e61845199719ec192a1ab11ae41aed1a931ce91cef1c101d541d961de71d511e621e8e1eea1efb1e271f821f941fc11ff51f19205f2069208820c420f420fe200c2132217b21bb21c9212d227d22f622032329233a237e238b23a923cb230e241b2439244a249124b324f624032529253b257b2588259125f6250426782686269626e226572760278e27af277128c628cf28fe280e294b2959297a29c529d329e429282a362a4a2a052b602b0a2c102c352c532c592c852c8f2c9d2c132d862db72dda2de02d0d2e272e2d2e572e712e9a2eb92ebf2ee82e532fb02fc92f0f302330af300b319231a631e23149325e32d9323433ab331034c434da3438353e3544356835a135a735d735fa351b3640364a36a236d936f336083712372b3744375f37ad37b337e8370638283835388038a838c638d738e13800393d3971399939c3390d3a6d3a7e3af23afd3ab83bbe3bc43bca3be53b043c5e3c6c3c9f3c2d3dc03dd23dff3d053e0b3e113e173e1d3e233e453eca3e343f4e3f543f5a3f603f703f953fa93fe63f32408c40e24008414f416d417e4188419141fd41fd420343ac43b243b843be43cb43d143d743f64350445e4494449a44ab443d454e4588458e4594459a45a045a645ac45ca454246b846d346d946df46e546f54617472847a547f1471748574864489148de48f2482b497449c249f449094a414a5f4a664a874af64af94bff4b654c6b4c714c774c844c8a4c904c2b4d434d744d7a4d8b4d294e394e634e694e6f4e754e7b4e814e874ea54e2d4faa4fc54feb4f425068507550e250425156519851c751f3511852af52bc521d5432543c5459548654da54f85477557d5583568956c156ee56335767579c57355863589758ba58d858f558fb581d594f598e59c659d459ef594a5a535aa75ad65a305b6f5b755b7b5b4a5c985cc25c1d5d7a5da95dc85dd25e085f365f685fa05fc35fe15ffe5f0460266051608f60c4600a614f616e619e61bb61fa6100622d625a62736283628c629662bc62c262c862e162f162fa623b63636393639c63b463e86302640b648d64b664c664cc64d564f064f66406650c6515652a659165a565ab65c265e665ad66e366fc66206706687568c668d2694d6aa96ac76a016b716b796b7f6b966bc06bc66b016c2a6c6c6ccb6c266da16dfe6df66e7b6f5b70b8702b7139714671b77169728172f5727673cf7318744a7494749f74ae74e3740075217543754c7586758f75ab75d47504760d76257668767b768476a176b976d97625772b77317773777c77b677bf77db77037833783c7854789778aa78b378d078f9781f792579617967796d798e799979a679ac79b279b879be79d779e479ea79f0790b7a117a177a1d7a367a437a497a4f7a557a5b7a777a847a8a7a907a967a9c7ab67abf7a527b607b627b9e7ba47baa7bcb7bd67be37be97bef7bf57bfb7b147c217c277c2d7c487c4e7c547c5a7c737c807c867c8c7c927c987cb47cc17cc77ccd7cd37cd97cf37cfc7c8f7d9d7d9f7de37de97def7d107e1b7e287e2e7e347e3a7e407e597e667e6c7e727eb37eb97ebf7ed87ee57eeb7ef17ef77efd7e197f267f2c7f327f387f3e7f587f617ff47f0280048048804e8054807f808c809280c080ed800981198122812c81608166816c81888195819b81c081ea81068216821f822982598273827c8210832a8334833d83aa876e978a2098aa20977b2098bb20c89b0bc9ba0a979b019abbaeab20ae873751094ec87909647a017c8b95880195ac0178ab64caab9cf42836510934c87909647a017c8b95880195ac0178ab64caab9cf4281c51091a839aff01c8a80b7cbb9599ffc8a70c78cb83aaff5209f032003908c0010251080e063307f0010383770a092801069511f07b10087b1564896475330820649750100291047c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511d87b10207b15187b161082897b19088289087b1982851082861833082050100449036f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832009511a07b10587b15507b16489515608411e06476828718828910828a0882886f776f996faa6f887b18187b1a107b19087b17491138491130491128491120481140208318831a20831b403309ff33070a05821738821830821928821a206f776f886f996faa7b6a187b69107b68087b6750120660890032009511a07b10587b15509515608411e08272827a08827b108277188283828908828c108288186f746fbb6faa6f276f826fcc6f996f387b17187b1a107b1b087b147b18387b19307b1c287b12208318831a203309ff330b2033070a0a9551a082105882155095116032009511a07b10587b15507b16489515608411e0829a7b1a18829a087b1a10829a107b1a088299187b1964865010086b0182186f888219086f99821a106faa821b186fbb7b1b387b1a307b19287b18208379836a8317203308010a0450120a95880032009511e0fe7b1018017b1510017b160801951520018411e082c67b166082c6087b166882c6107b167082cc187b1c7882bc7b1c3882bc087b1c4082bc107b1c4882bb187b1b5033020c82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191049115833000e28bb007b185850100eb5006f687b18980082186f887b1890008218086f887b1888008218106f887b1880008218186f887b18b8008218206f887b18b0008218286f887b18a8008218306f887b18a0008218386f887b18d8008218406f887b18d0008218486f887b18c8008218506f887b18c0008218606f887b18f8008218686f887b18f0008218706f887b18e8008218786f887b18e0008379811a58831780003308040a049551e0fe8210180182151001821608019511200132008b7910520931c8780883881f8488e05638000001253309bc0102390abc0102ae8a093d08bc0102013308d001028377c887073200009511f07b10087b158475010a02013d07b80102510507501010095010122201951140ff7b10b8007b15b0007b16a8009515c0008411e0491178491170491160800033074095186049116850101419fc49219800492190004921880049218000831780000a0b01821790008218980082198800821a8000d49808d4a707d48707520782003306d0010383670a033a07d801033908e001033a09d001036f77977a206f88988820d48a0a9877206f98978920d497079888204911387b18307b17289517409518207b1a2033001633029e03283a8600641733084050101851fa8217188218108219088216d49707d48609d47909989920d48707977720d49707510717003308d001028388330701330933001e0a08282a6467330850101ab3fe8377330833090a28f0f96467330850101ca0fe83783307330933001e0a0801951110fe7b10e8017b15e0017b16d8019515f001951190d88411e0641695691821491940491938491928800033074095684021491930501020f1fa3307b801027b6798013907b801025517040728aa54956700208377600133083300220a01019569182181976452475448d1910a280d2e5147b08852966c065247dffd17a20a2870305247b415dbb90a28a215956318295247cc87bdf00a28442d5247bfe715210a287e2c5147a39c8a241e05514718b70634f4075147a98d344ae506514762844e520a287f244929400549293805492930054929280595670020837740063300240a0b33022628b98500501226b5850082b73882b84082b93082ba28d49808d4a707d4870751070628794b5012287a8500ac7806287e4b95670020837760063308040a019567182195790005829860956a00017ba888008298587ba880008298507ba8788297487ba7703a07000002956a18117ba700013a070800023a081000023a091800027ba7f8007ba8f000956800127ba9e800330750102aaef9956718114927e0004927d8004927d00064793307209568e0114929c80050102c8cf93308bc01023907bc010256173f0b2003bc010240019517e08479e07b69680164913307d00102837783997b6890013308407b67980133002e0a06826a680133023028fb7e826a6801501230f47e3307d001037b67680183777b6738013300320a0333023428577f501234547f4929c0007b98b8007b97b0009568c0117b9aa800330750103605f982674001956818117b87a000826748017b879800826750017b879000648a3307209568a011826958017ba98800501038d3f882689001818756173f08480840019517e08477e07b67580150123acc800033003c0a0633023e28c47f50123ec17f83778001c867075010408bf9956a18117ca76851070628132f3a074000027ba7603a074800023a085000023a095800027ba7587ba850956860117ba948330750104261f89567181149174049173849173064793307209568401149192850104443f882689001818756173f08480840019517e08477e07b6760015012463c80003300480a06826a600133024a28c97d826a600150124ac27d8267380133004c0a0333024e28307e50124e2d7e4919207b98187b9710956820117b9a083307501050e2f782674001956818117b87826748017b87f8826750017b87f0648a33072095680011826958017ba9e8501052b5f782689001818756173f08480840019517e08477e07b675801501254ae7f3300560a0633025828a77e501258a47e8377e000c8670750105a6ef89567ff07957719017c77c80751070628f12d9567ff079577610733084050105c20f69569ff07959919018292600695980006828c58828b50828748d42b0ad4c708d4a808988820d4ca0a97aa20d4a808510806288b30492938064929300649292806140a00000000a079c3089568ff07958841077b9a40067b6798017b6b90017b6280017b6c880150105eeff6956c000182c8980082c7880082ca8000d47a0a140b00000000010000001407fcffffff000000005012609681005207062821308387049569ff0795991901492920064929180649290806209568ff0795882107492910067b6a88017b6b80015010628bf6956a000182a8980082a780009577dc501264e77f52070628d62f8387249569ff0795991901492900064929f8054929e805269568ff07958801074929f00550106648f695670001827a8800827b900082789800140900000000010000001407bcffffff00000000d8780794b794a7520706287c2f8387443a088000027b698001956cff0795cc190195cb00057bb8e0003a088800023a099000023a0a9800027bb8d8007bb9d0009568ff079588e1067bbac800501068d3f5956a000182a9980082a7800095779cd8790782a89000948782a88800948752070628142f8397643a08a00002956aff0795aa1901492ab805492ab0057ba8c0059568ff079588c106492aa80550106a82f5330884008267980150106cddf88378330701330984000a08014929e0004929d8004929d0004929c800956700208377e00133006e0a0b01956a182182a7d80082a8e00082a9d00082aac800d49808d4a707d4870751070628a346501270828000ac780628a84695670020837700023308040a01956a182182a9e80082a7f00082a8f80082aa00017b6a58027b6850027b67480295676002956840027b6940025010724a6582677802956800017b879800826770027b879000826768027b878800826760027b8780009567200233084050107474f3956b000282b73882b83082b92882ba20d49707d48a09d47909989920d48707977720d4970751070628e82d9569000182978000956b00027bb7829788007bb708829790007bb71095680002829798007bb71864a77b6a98013300fe01284df47b627801956700017b7c80007b7b88007b7a9000492900074929f8064929f0064929e80695670030837700f83300760a0b33027828527c5012784f7c82b7f80082a8000782b9f00082bae800d49808d4a707d48707510706289145826798018177561703072895459567801833084050107aa1f2956a181195ac000750127cd77d510706282d2d3a072000023a082800023a093000027ba760073a0738000295ac00077bc8587bc950956860187bc74864b77b6b98013300fe012890f3492900054929f8044929f0044929e80495670020837700060a0b01956a182195ab000482b7f80082a8000582b9f00082bae800d49808d4a707d48707510706280f45826798018177561703072813459568182149282005492818054928100549280805029567ff079577a1069568202650107e0ff49568ff0795881901958900058297a000956800017b879800829798007b879000829790007b878800829788007b8780009567ff079577810633084050208000a3f1956aff0795aa190195ac000550228200d47c51070628292c956900018297800095ac00057bc748829788007bc750829790007bc7589568ff0795886106829798007bc76064b77b6b98013300fe012889f27b627801956700017b7c80007b7b88007b7a90004929600149295801492950014929480195670020837760020a0b01956a182195ab000182b75882b86082b95082ba48d49808d4a707d48707510706281a4482679801817756176307281e449567002083778002330804330084000a013302860028a57d50228600a27d82a7800082a87882a970d4780a889b0194ab520b0628f943956a182182aa6801826b980180b295ac04d8ac0ac8a90bd89b09daaa09c88909d88908c8870a9567ff07957719014927600449275804492750047b724804957800047b8c687b8b707b8978647b9567ff079577a1059568ff07958881059569ff07959961057bba800450208800e9569568ff0795881901958900048297a0007b67b800829798007b67c000829790007b67c800829788007b67d000956700208377a00233082433008a000a0133028c0028d47c50228c00d17c82a7a00082a8980082a99000d4780a889b0194ab520b06283743956a182182aa8801826b980180b295ac04d8ac0ac8a90bd89b09daaa09c88909d88908c8870a9567ff0795771901492700044927f8034927f0037b72e803957800047b8c087b8b107b8918647b9567ff07957741059568ff07958821059569ff07959901057bba200450208e0016569568ff079588190195890004829740956800017b87708297387b87688297307b87608297287b8758956700208377c002330844330090000a013302920028057c50229200027c82a7c00082a8b80082a9b000d4780a889b0194ab520b06287942956a182182aaa801826b980180b295ac04d8ac0ac8a90bd89b09daaa09c88909d88908c8870a9567ff07957719014927a00349279803492790037b728803957800037b8ca8007b8bb0007b89b800647b9567ff079577e1049568ff079588c1049569ff079599a1047bbac003502094004455956bff0795bb190195bc000382c7e000956b00017bb75082c7d8007bb74882c7d0007bb74082c7c8007bb7383a082000023a092800023a0a3000027bb8287bc880003a073800027bb9207bc9787bba187bca709568ff07958881047bb7307bc7683307502096007aef9567ff079577190149276003492758034927500364793307209568ff079588610449294803502098004fef3308bc01023907bc010256173f0b2003bc010240019517e08479e07b69980164913307d0010283777b68000183993308407b67f80033009a000a06826a980133029c0028b278826a980150229c00ab787b6790016f877b6788016f977b6780016fa77b6778019517e08477e07b67980164713307d001037b67080183777b67b00033009e000a03826908013302a000288570826908015022a0007e709569ff079599190149294003959b00037bb8387bb7309568ff07958841047bba2833075020a2008aee826778019568ff0795881901958900037b9720826780017b9718826788017b9710648a3307209568ff0795882104826990017ba908035020a4004eee82680001818756173f08480840019517e08477e07b679001647183793308408267f8003300a6000a06826a90013302a80028c671826a90015022a800bf71826898017b8a187b89107b8b087b879567ff07957701045020aa00e5ee9567ff07957719017c77e802520706281640956718214927e0014927d8014927d0014927c801029567ff079577e1039568e0225020ac00acee9568ff0795881901958c000282c7e00082c9d80082cad00082cbc8009518e08488e0648195bc0188cb01c8ab0bd4bc0a88aa01c89a0ad89a09c897077b8a107b8b087b8c7b6be000d47b0b7b6cf0007b6ad800d4ac09d4b9097b67e8007b871852090628464095671821492700024927f8014927f0014927e80102956700235020ae009fee9567ff079577c1033308405020b000eaeb9568ff0795881901958c000282c7c0007b67880182c9b8007b69800182cab0007b6a900182cba8007b6b98017bc7a0007bc998007bca90009567ff079577a1037bcb88005020b2004550956b000182ba980082b7880082b89000d4870782b98000d49a08d47808988820d49707977720d48707510706280f268267f0009569ff0795991901959b00027bb7688267e0007bb7708267d8007bb7789568ff07958881038267e8007bb7800064a75020b40072ec956c000182c8980082c7880082ca8000d47a0a140b00000000010000001407e0ffffff000000005022b600187752070628a3257b6a8801838a208267d0009569ff0795991901959c00027bc7488267c8007bc7508267c0007bc7589568ff07958861038267b8007bc7607b6a780164a77b6b80015020b800f8eb956a000182a8980082a780009577c05022ba00537552070628412583874082685801956aff0795aa190195ab00027bb828826860017bb830826868017bb8389568ff0795884103826970017bb9407b67a8005020bc00a0eb95670020837720030a0701956a000182ac9800140900000000010000001407a0ffffff00000000d87c0782a89000948782a88800948752070628c824956a182195a70002827b088278107b698001827918827a2083c760956cff0795cc19017bca200295ca00027ba9187ba8109568ff07958821037bab087b67a0005020be001eeb8267b0003300c0000a030195690001829b980082978000957780d87b07829890009487829888009487520706285324826908015022c200126f83b78000956bff0795bb1901492b000295bc00017bc8f8007bc9f0009568ff07958801037bcae8007b6798005020c400b3ea956c000182ca880082c89800140b0000000001000000140760ffffff000000005022c600607552070628eb238387a0009569ff07959919014929e0014929d8014929d0019568ff079588e1024929c8017b67687b6b80015020c80056ea956a000182a8980082a78000957740ff5022ca00b073520706289e238387c00082683801956aff0795aa190195ab00017bb8a800826840017bb8b000826848017bb8b8009568ff079588c102826950017bb9c0007b67385020cc00f9e98267e8009569ff0795991901959a00017ba7a0008267d8007ba798008267e0007ba790009568ff079588a1028267f0007ba7880033075020ce00bde99568ff07958819014928800149287801492868010164893307209568ff0795888102492970015020d00091e99517e08477e07b679001647182690001819756173f08480940019517e08477e07b678801647183793308408267f8000a06826a880182a71882a81082a90882aa6f7c7b6c786f8b7b6b80006f987b6890006fa77b678800826990017b97187b98107b9b087b9c9567ff0795776102826898015020d200dfe7956aff0795aa190195ab000182b76082b85882b95082ba48956b182195bc00027bc7407bc8387bc9307bca2895684023826790015020d40049ea9517e08478e06481826978959901889701826a8000c87a0ad4a907887701826c9000c87c0bd8cb07826c8800c8c7077b6748017b87187b6b38017b8b107b6a40017b8a087b68607b6950017b899567ff0795774102826878015020d60046e79567ff0795771901957c000182ca4082cb3882c93082c828956c00017bc9307bca28d4a907d4b809d479099899207bcb20d4b707977720d4970751070628a4219567ff07957721027b6818015020d800f4e69569ff079599190195970001827b20827818827a108eb78e8cdbb70c7b6a10018ea77b68587b6b50d4b8087b67287b6c307b6848db8c07510706281145829708017b67709567ff07957701028268605020da00cbe8956bff0795bb190182b9e80082b7f00082b8f80082ba00017bbac0007bb8b8007bb7b0009567ff079577e1019568ff079588c1017bb9a8005020dc00dd509567ff0795771901827ae000827bd800827cd0008272c8008ea78eb8dba7088ec7882920859901dbc709d4ab07db78098267708877207b674052090628c1207b6270017b6c78017b6b90017b6a80019567ff0795771901826850017b788800826840017b789000826838017b7898009568ff079588a101826948017b79a00033075020de0014e782690001819756171f08480920019517e08477e07b678801647183793308208267f8003300e0000a068267703302e2002824718267705022e2001e71826b58c8ba0a7b6a680197aa3b989b05d4ab0b8267880182721897993b827710988805d489096f246f7782684094c8826a4894a8948b9489c89402d84209c8970cc8cb0b7b6b9801d37b0cd87b0adac90a7b6a60018269700195901fd8900b826a7801c8ba09d8a90cdabb0c82639001c8c303973b3b989a05d4ba0a97993b980b05d4b909c849097b697801d8490b6424c8b709c8a909d3790a7b697001d87909daab09826b6801826758d87b07826a50c8a70798ba05977b3bd4ba0a826b880182b282bb08987705948a94876fb86f2bc8b707c88a0ad88a0cc8c70782606001c8a000d8a00ac8a70282679001d87307826a8001c8a707983a05977c3bd4ca0a987705c8b707956c000182cb9800c88a0ad88a08c88707c8a9097bc968d8a908c887077bc7609517e08473e064317b6358010182677801d8740782697001d39b08d89b09da8709826c6801d8c007826a6001d3a208d8a20ada870ad3c007d48707da790a7b347b3b087b30107b3218520a0628c71e95671821492760024927580249275002492748029568602364377b6490017b6b98017b6288017b6080015020e4009ce68263580182628801826b980182649001954401884701c87b0bd4b40788770182688001c88707d88708c8820264702860ff4929400749293807492930074929280795670030837740f83300e6000a0b3302e800285f705022e8005c7082b73882b84082b93082ba28d49808d4a707d48707510706281d385022ea001470ac780628223895670030837760f83308040a0195671821957900078298607b6860018298587b6868018298507b6870018297487b677801956700203308405020ec0037e395681819828700077b678801958c000682c9f8007b69800182cbf0007b6b900182cae8007b6a98017bc7e0007bc9d8007bcbd0009567e01f7bcac8005020ee009a47956a000182a7880082a89000d4870782a9800082a89800d49808d47808988820d49707977720d4870751070628641d956718194927c0064927b8064927b0069568c01f4927a806826798015020f000dee3956b000182b7880082b98000d47909140a00000000010000001407e0ffffff0000000082b89800d8780782b8900094879497520706280a1d82679801837720956818197b69880164894928a0064928980649289006330b609568a01f7b9b88067b6a80015020f20074e395690001829780009577c05022f4004e6c52070628c11c8267980183774095691819492980064929780649296806609568801f492970065020f60037e3140900000000010000001407a0ffffff00000000956a000182a89800d8780782a89000948782a888009487520706286a1c82679801837760956818197b69800164894928600649285806492850069568601f492948065020f800dbe295690001829780009577805022fa00b56b52070628281c8267980183778000956918194929400649293806492930069568401f492928065020fc009ee2956b000182b98800140a0000000001000000140760ffffff0000000082b89800d8780782b890009487949752070628d11b826798018377a000956918194929200649291806492910069568201f492908067b6a80015020fe0043e29569000182978000957740ff502200011c6b520706288f1b826798018377c00095691819492900064929f8054929e805609568001f4929f0055020020104e2956a000182a76095691819959b00057bb7e00082a7687bb7d80082a7707bb7d0009568e01e82a7787bb7c800330750200401d0e1956718194927c0054927b8054927b005647a3307209568c01e492aa8050150200601ace13308bc01023907bc010256173f0b2003bc010240019517e08479e07b69900164913307d00102837783997b6898013308407b678801330008010a06826a900133020a01288669826a900150220a017f6995bc00077bca80007bc9787bc8707bc7689567a01e9568802850200c012fe2956b181995bc000582c7980082c8a00082c9900082ca8800d49808d4a707d487078e77492b8005492b78057bc7689567801e492b700550200e0167528267600195691819959a00057ba760826768017ba758826770017ba7509568601e826778017ba748330750201001d1e09568181950221201126c9568401e4929300550201401b9e0826898019517e08477e07b6790016471818756173f0e4808403302160128ac6b50221601a96b826788010a06826a980182a71882a81082a90882aa6f7c6f8b6f976fa87b686801826990017b98187b6770017b97107b6b60017b9b087b6c58017b9c9567201e3308405020180110df95681819958c000582c7207b67800182c9187b69780182cb107b6b880182ca087b6a98017bc7958c00047bc9f8007bcbf0009567001e7bcae80050201a0175439567e01d8268900150201c01eee0956a000182a7800082a88800d4870782a97882a89800d49808d47808988820d49707977720d48707510706283219956b181995bc000482c7e00082c8d80082c9d00082cac8007bcaa8007bc9b0007bc8b8009568c01d7bc7c0008267980150201e0198df8267580195770188780182696001c89808d48709889901826a7001c8a909d8a90a826b6801c8ba0a956b181995bc00047bc9787bc8707bc7689567a01d9568801d7bca8000330020013302120428eb69956b000182b7800082b978d47909140a00000000010000001407e0ffffff0000000082b89800d8780782b8880094877bb990009497520706287118956b181982b2a00495bc000482c8980082c990007b6a800182ca8800826798018377207bca487bc9507bc8589568601d7bb260047b67780150202201cfde82685801958702502224018e65958c00047bca187bc9107bc70864899567401d9568201d7b9b20043300260133021204283f6995690001829780009577c050222801ec6452070628e917956c181982c2400495c70004827838827930827a288267980183774095cb00037bbae8007bb9f0007bb8f8009568001d7bc200047b67500150202a0147de8268580195870350222c01b0647bc990007bc788007bca98007bc8a0009567e01c9568a02850202e010edf14070000000001000000956900017b9780001407a0ffffff00000000502230015b64520706285817956c181982c2e00395cb000382b8d80082b9d00082bac800826798018377607bbaa8007bb9b0007bb8b8009568c01c7bc2c0037b67480150203201b7dd826858019587045022340120647bc9b0007bc7a8007bcab8007bc8c0009567a01c9568c028502036017ede956900018297800095778050223801dc6352070628d916956a181995ac000382c9980082cb900082c888007b6940019799209899208267980183778000492a80037bc8687bcb709568801c7bc9787b67380150203a0134dd14070000000001000000956900017b978000140760ffffff0000000050223c017363520706287016140700000000ff00000082684001d287078e79826798018377a000956a1819492a6003492a5803492a50039568601c7ba948037b67400150203e01cfdc82685801958705502240018e63958c00037bca187bc9107bc70864899567401c9568201c7b9b20033300420133021204283f679569000182978000957740ff50224401eb6252070628e815956c181982cb400382c8380382c9300382ca2803826798018377c0007bcae8027bc9f0027bc8f8029568001c7bcb00037b676801502046014adc9567e01b3308405020480103db33024a019568181901958b000282b9e00082bad80082b7d00082b8c800956b00017bb788007bb98000d497077bb89000d4a808d478089888207bba70d4a707977720d48707510706285615956918194929c0024929b8024929b0029568c01b4929a802208267900150204c01cfdb9567a01b8268980150204e0187da956a000182a7800082a870d47809140700000000010000007ba7601407e0ffffff0000000082a89000d8780782a8880094877ba99800949752070628e714956c181982c2a00295c9000282989800829a9000829b8800826790018377207b9b687b9a707b98789568801b7bc28002502050014ddb9567601b826878015020520105da956900018297609577c0502254012a60520706288d1495691819959a000282a7607b67300182a7587b67580182a7507b67600182a7487b677801826790018377404929400249293802491a28e0009568401b4929300250205601e3da8268900195870001d88708826a8801c88a09d8a90ada880a82687001c88a0ad88a08826b8001c88b0b95681819958c00017bc9d0007bc7c800826730017b870002826758017bc7f800826760017bc7f000826778017bc7e8007bcad800648a9567201b9568001b9569e01a7babe00150205801a24833025a019568181901958900028297207b6730018297187b6758018297107b6760018297087b6778019567c01a8268500150205c01fdd814070000000001000000956900017b97501407a0ffffff0000000050225e01115f520706287413956818198287c0017b6720018287b8017b6728018267900182687801d878096474826a8801826b6001d3ab02d8ab07da29078263700182625801c93200c9ab0ac99a0bc9480a95a9e0d8a90cc8cb0a95aaffd3ba08d8ba0bda8c0bd83202826c800182683001c9c80cc92c0cd87008c98c0c956218198228b0017b681001c97007887801c98c0c8228a8017b6818019577ffc87b0bd87b07c87c0c8347607b298801952900017b9a90007b9b98009568a01a7b9ca0005020600154d99567181982683001957900017b9840826858017b9838826860017b9830826878017b9828826820017b9860826828017b9858826810017b9850647b9567801a9568601a9569401a826a18017bba480150206201334733026401956818190195890001829780007b6730018297787b6758018297707b6760018297687b6778019567201a82684801502066018dd79569000182975095778050226801b25d520706281512956c181982c2200195c70001827818827a10827b0882679001837780007bcbe8007bcaf0007bc8f8009568001a7bc2000150206a017ad89567e0198268380150206c0132d714070000000001000000956900017b9750140760ffffff0000000050226e01465d52070628a911956c181982c8d80082c9d00082cac800140bffffffff00000000d28b0b8499ff84aaff826790018377a000492cc0007bcaa8007bc9b0009568c0197bcbb8005020700100d89567a0198268400150207201b8d695690001829750957740ff50227401dc5c520706283f11956b181982b7a00082b8980082b9880082ba9000d49808d4a707d487078e78826790018377c000492b8000491b787bb86895688019491b70502076019dd795676019826868015020780155d6140720ffffff000000009569000150227a01765c52070628d910956818198287607b6768018287587b6798018267900182687801d87809648c6474826a8801826b6001d3ab08d8ab07da89078263700182625801c93200c9ab0ac99a0bc94c0a95a9e0d8a90cc8cb0a95aaffd3ba08d8ba0bda8c0bd83202826c800182683001c9c80cc92c0cd87008c98c0c956218198228507b684801c97007887801c98c0c8228487b6850019577ffc87b0bd87b07c87c0c8347e0007b292864297b9a307b9b38956840197b9c4050207c01c0d69567181182683001957900077b98e000826858017b98d800826860017b98d000826878017b98c80095671819826868017b78826898017b78f8826848017b78f0647b95672019956800199569e018826a50017bbae850207e0199449568181901828710828220828308828a1882688801d3870bd8870c648082649001d84308dab80c82697001c99a0bd89a0a82698001c99209c9a909d8cb0ac9a909c9cb0bc90707c98707c94308d497076489d4b808d47808d4b707988820977720d48707510706285f0f8267900164987b6998013300c801284fd95147200bcc7a0a286429492900064929f8054929f0054929e8059567002083770007330080010a0b33028201283161502282012e6182b7f80082a8000682b9f00082bae800d49808d4a707d48707510706287c2950228401ef60ac78062881299567002083772007330804330086010a013302880128ab5d50228801a85d82b70882b81082b91882ba20956b181195bc00057bca607bc9587bc850956860167bc748330750208a0140d59568181150228c018160956840164929300550208e0128d59517e08477e07b67780164713908bc010256183f0b2003bc010240019517e08479e07b69980164913307d00102837783993308400a06826a980182a71882a81082a90882aa6f7c7b6c88016f8b7b6b90016f997b6980016fa77b679801826878017b87187b89107b8b087b8c9567201650209001a4d5956b181195b800058287207b6778018287187b6770018287107b6768018287087b6760018267880195770188780182699001c89808d48709889901826a8001c8a909d8a90a826c9801c8ca0a95bc00047bc8d0007bc7c8007bc9d800956700169568e0157bcae000330092013302120428e25e956c181182c700057b67400182c7f8047b67480182c7f0047b67500182c7e8047b6758018267880195790250229401565b7bb7a0007bba98007bb890009567c0159568a0157bb988003300960133021204288e5e50229801235f8297c0007b6720018297b8007b6728018297b0007b6730018297a8007b6738018268880195870350229a01595a7bc8407bca387bc9307bc728956780159568402750209c0190d450229e01d65e829780007b6718018297787b6710018297707b6708018297687b670001826888019587045022a0010f5a7bc8607bca587bc9507bc74895676015956860275020a20146d4956c181182c758047b67f80082c750047b67f00082c748047b67e800826788019579055022a401735a7bb7207bba187bb81095674015956820157bb9083300a6013302120428af5d5022a801445e8297407b67c8008297387b67d0008297307b67d8008297287b67e000956700153308405020aa01a3d195691811829b0004959a000382acf80082a8f00082a7e8007b689801d4b80ad4c708d4a808988820d4ca0a97aa20d4a80852080d0c826860017b98c803826868017b98d003826870017b98d8039568e014826a78017b9ae0037b6790017b6b88017b6c80015020ac0172d282628001826a880182689001d4a20c140b00000000010000001407e0ffffff00000000d8780782699801949794c75107a50b838720956918114929c0034929b8034929a803e0009568c0144929b0037b6c78017b6b70015020ae0115d2826790019577e00082689001d88708826a98015022b001965a95681811958c00037bc9507bc748826740017bc78000826748017bc778826750017bc770826758017bc7687bca58648a9567a01495688014956960147bab60035020b201ea3f956a000182a8900082a7709577c05022b401025b5107030b9567181182738803827b90038274a0037b64680182709803d883027b635801826a9801d3ab08d8ab0964b77b6b600164acda8209826a80017b607001c9a008d8a00a826b8801c9b40bc9ab0bd8980ac9ab0bc99808c9c709c9290982679001c9730a82679001837740956c18117bca280395ca00037ba9307ba838956840147bab405020b60116d19568181182676801958900027b97e000826770017b97d800826760017b97d000826758017b97c800826720017b870003826728017b97f800826730017b97f000648b95672014956800149569e013826a38017bbae8025020b801ee3e956b000182b89000140a00000000010000001407a0ffffff00000000d8780782b99800949782b97894975107f10995691811959b000382b7207b67500182b7187b67580182b7107b67600182b7087b67680183876082680001959b00027bb8a800826808017bb8b000826810017bb8b8009568c0137b6a7001826a18017bbac0005020ba0133d0956a000182a8900082a7709577805022bc017f59510780098267f80097772098792083878000956a1811492aa0028268e80095ab00027bb888008268f0007bb890009568a0137bb998005020be01e3cf956c000182ca7882c99000140b0000000001000000140760ffffff00000000d8790782c89800948794a751071a09140700000000ff0000008268f800d287078e788397a0009569181149298002492978027b98680295688013492970027b6b70015020c0017ccf956a000182a8900082a770957740ff5022c201c7585107c80882696801d889036492826a9801826b6001d3ab08d8ab0964b764acda8309826a8001826b5801c9ab08d8ab04826b8801826a5001c9ba0bc94b0bd8980ac9ab0bc99808c9c709c9390982679001c9720a826790018377c000956c18117bca480295ca00027ba9507ba858956860137bab605020c401ecce9568181182675001958900027b9782675801958a00017ba7f800826760017ba7f000826768017ba7e8008267c8007b97208267d0007b97188267d8007b9710648b956740139568201395690013826ae0007bba08025020c601c53c95671811827830028272400282732802827a380282679801d3780bd8780c647082679001d87304dab40c82678001c97a0bd87a0a82678801c97209c9a909d8cb0ac9a90982679001c9cb0bc90808c9480ac97308d4a909d4b80ad49a0ad4b90998aa20979920d4a909520989077b6898015020c80182d183788169980133070a082893044929c0004929b8004929b0004929a800956700208377c0010a0b01956a182182a7b80082a8c00082a9b00082aaa800d49808d4a707d4870751070628d7218267980181775617030728db219567e0013308405020ca017bcc956b000182baf80082b8f00082b9e80082b7e000d49a0ad48709d4a909989920d4a808978820d498085208ed063a08400002956b00017bb8d8003a0a4800023a085000023a095800027bbad0007bb8c8009568c0017bb9c0007b6798013300fe01284ecd49132049131849131049130895670030837720f90a0b01956a182982a71882a82082a91082aa08d49808d4a707d4870751070628452182679801817756170307284921956720213308405020cc01c7cb956a182182ab2082a81882a91082a7085022ce016c5652084c063a080000027ba83a0b0800023a081000023a0918000295ac00ff7bcbf8007bc8f000956800217bc9e8007b6798013300fe0128afcc4929c0064929b8064929b0064929a806956700208377c0073300d0010a0b3302d20128c6545022d201c3545022d401615751070628c720826798018177330843ac780628c920956740183300d6013302d2032810589568181195890007829738956800017b8788008297307b8790008297287b879800956700208377e0073308043300d8010a013302da01285d545022da015a5482b7c80082b8d00082b9d80082bae000956b181195bc00077bca207bc9187bc810956820187bc70833075020dc01eecb95671811492700074927f8064927f0066479330720956800184929e8065020de01cbcb3308bc01023907bc010256173f112003bc0102403302e00128a8565022e001a5563307d00102837783997b6880013308407b6778013300e2010a06826a70013302e401282e55826a70015022e40127557b6768016f877b6760016f977b6758016fa77b6750019517e08477e07b677001647182678801977720987720956918114929e006959a00067ba7d800826790017ba7d0009568e017826798017ba7c80033075020e60123cb8267500195681811958900067b97c000826758017b97b800826760017b97b000648a3307209568c017826968017ba9a8065020e801ecca82688001818756173f0e4808403302ea0128eb555022ea01e855826778013300ec010a06826a98013302ee0128694e826a98015022ee01624e826870017b8a187b89107b8b087b879567a0175020f0018ccb95671811827788067b679801956780173308405020f20147c9956a181195ac000682cb800082c87882c97082c7685022f401e7535208c7037c6898018e88492a6006492a58067ba8480695686017492a50067b6798013300fe01283aca4929200749291807492910074929080795670030837720f83300f6010a0b3302f801289b555022f801985582b71882b82082b91082ba08d49808d4a707d4870751070628651e8267980181775617030728691e9567c0183308405020fa01a3c8956a181195ac000782cbc00082c8b80082c9b00082c7a8005022fc01405352082003492aa007492a9807492a90079568a018492a88077b6798015020fe019dc93308208267980150200002f8cc837833092033070a08280a33092033070a08019569ff079599190182677001959a00077ba7a800826778017ba7b000826780017ba7b8009568c010826788017ba7c00033075020020245c99567ff07957719014927a0074927980749279007647a3307209568a010492a880701502004021dc982689001818756173f08480840019517e08477e07b676001502206021551330008020a06826a600133020a02280e51826a600150220a02075195bc00057bca80007bc9787bc8707bc768956780109568802650200c02b7c9956bff0795bb190195bc000782c77882c8800082c97082ca68d49808d4a707d487078e77492b6007492b58077bc74895676010492b500750200e02ee39826788019569ff0795991901959a00077ba740826780017ba738826778017ba73095684010826770017ba72833075020100254c89568ff07958819014928200749281807492808070164893307209568201049291007502012022cc8826890019517e08477e07b6760016471818756173f08480840019517e08477e07b6790015022140218500a06826a900182a782a80882a91082aa186f776f886f996faa95ab04d8ab0ac8a90cd89c09daaa09c88909d88908c88707826860017b8b7b8c087b89107b87189567001050201602aac8956aff0795aa190195ab000682b7e80082b8f00082b9f80082aa0007140bffffffff00ffffffd2b909140b00000000010000007b6b9001d4b909956b182195bc00057bcaa0007bc890007bc788007bc998009568a0268267600150201802c2c89567ff079577e10733084050201a020dc69569ff07959919018292e00695970006827cd800827bd000827ac800d42b07d4ca08d47808988820d4c707977720d48707520777826770017b97a806826778017b97b006826780017b97b8069568ff079588c107826788017b97c00664a77b6a60017b6b88017b6280017b6c780150201c02d3c68267380133001e020a0301956a000182ab6082a7800082a878d4870782a890009588e0d88b0882a988009498947851080628941b00826740857701826b1001826828dbb807826830826948db9807826350d43b0482695898983f7b684897330198bc3f97920182687098803f97bb01978a017b6a507b6c405107e9017b64107b62187b6b207b60287b63308488e07b6810019567ff0795771901826850017b7848826840017b7850826838017b78589568ff0795886101826948017b79603307502020020dc650222202bd4e5020240269c950222602934d0a064926900120330c492698014926880149267801502228026a496472826870017b87187b6050017b80107b84087b837b62680150222a02b44c82679001c87808826a3001c8ac008269200182679801c879098267280164ca826c8801c8c707520b4e01826b9001d8b80bc8b000d3a0027b6a3801d8a00cda2b0cc89c0cd89c02826a9801d8a909c89707c8270750222c02a84e5207c8fe9567400450202e021fc4956b000482b75882b85082b94882ba40956b182195bc00027bc780007bc8787bc9707bca6895688023826770015020300290c68263480195330188370182644001c87404d4430788770182685001c87800d8800882676801c88707826890019589207b696801d8890a82683801c8a8097b694801d8890bdaaa0b82689801c8b80ad88a0b82688801c8b8087b68880182687801958b20d88b0c82695801c8c908d89809dacc09826c6001c8c909d8c90c82628001c8c2027b62800150223202724e64727bc7187b605001826768017b679001826c48017b6a9801648a7b62680133022a0228624b826c48d49807d44707520729014926800149267801492688014926900164c4826740289301826b70826c1001d3cb0b826c58d4cb0b826c10d4cb0b510bb70064a3826b9001d8b80bc8b00ad33a02d83a0cda2b0cc89c0cd89c02826b9801d8b909c89707c8270750223402664c520766fd9567ff079577410150203602b9c29567ff07957719018278407b6890018278387b6888018278307b6880018277287b67780182677050223802a34b50203a02b44f50223c02524d50203e02824f50224002414950204202764f50224402204595bc00027bcaa0007bc998007bc890007bc788009568a0238267700150204602eac4826748826830d48707826840826918d49808826928826a20d4a909826a5095aa01956b182195bc00027bcaa8007bc9b0007bc8b8007bc7c0003307c0232807017b62187b6b207b60287b6330956b000182b72882b820d487071408e0ffffff0000000082b918d8890882ba3094a89478510871fc8398209567ff079577810150204802c1c19567ff079577190182788000956900017b9890008278787b9888008278707b98788277687b978000826870826448826330826028826740826b2082621801d472077b677001d443077b676801d40b077b6760019789037b6998018d9980003307ff3308ff50204a02854e7b6740017b6858018267708a79033307ff3308ff50204c02454e50224e02e94a50205002394e502252027745826b50d4b707956c0001502254029e4a95bc00027bc9d8007bcae0007bc8d0007bc7c8003307e02301c87608826760502056029ac39517e08479e06491826778957a0250225802bc4dc8870cd87c0782688800c887077b6c38017b9c107b6b48017b9b087b6a50017b9a7b69607b6740017b97189567ff07957721018268a80050205a02a5c09568ff0795881901828920828a18828710828808956b00017bb7307bb928d49707d4a809d479099899207bba20d4a707977720d4970752070afb9567ff07957701017b68180150205c0259c09567ff0795771901827a8278f895670010827908f98ea78e8bdba70b7b6910018e977b68707b6a58d4a8087b67307b6b407b6850db8b0751070628782095670010827700f97b67a8009567ff079577e10082686050205e022bc2956700108279e0f8956700108277e8f8956800108288f0f8956a001082aaf8f8956b00107bbab8f8956a00107ba8b0f8956800107b87a8f89567ff079577c1009568ff079588a100956a00107ba9a0f850206002252a95670010827ad8f895670010827bd0f895670010827cc8f8956700108279c0f850226202cd457b67485109040282675001956800107b8780f882674801956800107b8788f882673801956800107b8790f89568ff079588810082674001956900107b9798f833075020640276c082670001817756171f12826800014808203302660228ea4a50226602e74a330068020a068267a80033026a02288a4a8267a80050226a02834a826b7050226c02a34782684894c8826a5094a8948b9487c87402d84207c8790cc8cb0b7b6b9801d39b0cd89b0adac70a7b6a288267780195701fd8700b826a8001c8ba07d8a70cdabb0c82639001c8c303973b3b987a05d4ba0a97773b980b05d4b707c847077b677001d84707642450226e02c848826770d87b07826a58c8a70798ba05977b3bd4ba0a826b600182b282bb08987705948a94876fb86f2bc8b707c88a0ad88a0cc8c707826028c8a000d8a00ac8a70282679001d87307826a8801c8a707983a05977c3bd4ca0a987705c8b707956c000182cb9800c88a0ad88a08c88707c8a9097bc960d8a908c887077bc7589517e08477e07bc7900064710182677001d8740782696801d39b08d89b09da8709826c6001d8c007826a5801d3a208d8a20ada870ad3c007d48707da790a7b648801826790017b747b6b98017b7b087b6078017b70107b6280017b7218510a3795671821492700034927f8024927f0024927e80295680024826790015020700232c050227202b54682628001c882026470287cff826748857701826a1001826830dba807826840826950db9807826b58d4ba087b685082687098893f7b694897b9017b694098a93f7b69289788017b68188268a80098893f7b693097a9017b69209789017b695851076f018488e07b68100182675001956800107b8740f882674801956800107b8748f882673801956800107b8750f89568ff0795884182674001956900107b9758f833075020740219be50227602c9465020780275c150227a029f4533007c020a0633027e0228524850227e024f485022800278416472826870017b87187b6050017b80107b84087b837b62680150228202c24482679801c87808826a3001c8ac008269200182679001c879098267280164ca826c8801c8c707520bd800826b9801d8b80bc8b000d3a0027b6a3801d8a00cda2b0cc89c0cd89c02826a9001d8a909c89707c8270750228402b6465207d6f69567a004502086022dbc956b000482b7b80082b8b00082b9a80082baa000956b182195bc00037bc7207bc8187bc9107bca089568202482677001502088029bbe50228a02713f82628001c8c2027b62800150228c02f44664727bc7187b605001826768017b679801826c48017b6a9001648a7b6268013302820228e443826770d48707826850d4870752072901492680014926780149268801492690012885018263900182629801826ba800826c1001d3cb0b826c70d4cb0b826c50d4cb0b510bb70064a4d8280bc8b00ad34a02d84a0cda2b0cc89c0cd89c0bd83909c89707c8b70750228e02e9445207e9f59567ff07957721502090023dbb95670010827738f87b67900195670010827730f87b67880195670010827728f87b67800195670010827720f87b6778018267a800502292021a44502094022b4850229602c94550209802f94750229a02b84150209c02ed4750229e02973d95bc00037bca407bc9387bc8307bc72895684024826770015020a00265bd826748826840d48707826828826918d49808826930826a20d4a909826a5895aa01956b182195bc00037bca487bc9507bc8587bc76033076024280801956a000182a72882a820d487071408e0ffffff0000000082a918d8890882a930949894785108fcf4826718018378209567ff079577615020a20249ba95670010827778f8956800017b87900095670010827770f87b87880095670010827768f87b877895670010827760f87b87800001826728826818d487077b677001826748826840d487077b676801826730826820d487077b6760018268a8009788037b6898018d8980003307ff3308ff5020a40201477b6740017b6858018267a8008a79033307ff3308ff5020a602c0465022a80264435020aa02b4465022ac02f23d826b58d4b707956c00015022ae02194395bc00037bc9787bca80007bc8707bc7683307802401c876088267605020b00218bc9567ff079577018268a0005020b20263b995670010827200f895670010827308f895670010827410f8826778957a03d87a0b82678000c8b70cd87c07dabb0795680010828b18f8956918217b9c9003959c00037bca880082689000c887077bc79800d8870782688800c887077bc7a0007bcbc0007b94b8037b93b0037b92a8039567a0249568c0245020b4028abb9517e0847ce064c1826878958704d88708826a8000c88a09d8a90ada880a82689000c88a0ad88a08826b8800c8b8087b6c98017bc8187bca107bc9087bc79567e007826898005020b6029ab88267e0077b6790018267e8077b6788018067f0077b6780019567c007826898015020b802a0ba8067d4079777208268d80782698001d4970795691821826a8801959b00037bbad000826a90017bbac8007bb8e0007bb7d8009568e024826798015020ba02d8ba9567a0078268685020bc0227b88267b8078268a8078269b007826aa007d48707d4a909d497078e777b67900195678007826898015020be0226ba826780078268880782699807826a9007826b900197bb20140cffffffff00ffffffd2ca0ad4ba0a956b18217bb9000495b900037b98f0007b97e8007b9af80095680025826798015020c00251ba9517e08479e06491826778957a055022c2027344c87808d87807826c8800c8c7077b6740017b97187b6838017b98107b6b48017b9b087b6998007b6a50017b9a956760078268385020c40260b7956b000782b97882ba7082b76882b860956b00017bb7287bb920d497077bb830d4a808d478089888207bba18d4a707977720d4870751070628c3f195674007826830015020c60217b795670007827a588279508278488ea78e9bdba70b7b68a0008e877b6990007b6a8800d4a9097b67707b6b787b691001db9b07510706288017826740077b67a80095672007826898005020c802f5b8826920078267280782683007826a3807956b00067bbaf8007bb8f0007bb7e800956700079568e0067bb9e0005020ca02132195670007827a18827b10827c0882795022cc02cc3c7b6780005109fe0182675001956900067b97c000826748017b97c800826738017b97d0009568c006826740017b97d80033075020ce0284b782670001817756171f12826800014808203302d00228f8415022d002f5413300d2020a06018267a80095781fd87807826ca000c87c09d8c90ada770a826b90005022d402ad3e8268800094c8826a100194a8948b9487c87402d84207c8790cc8cb0b7b6b9801d39b0cd89b0adac70a7b6a00018267780195701fd8700b826a8001c8ba07d8a70cdabb0c82639001c8c303973b3b987a05d4ba0a97773b980b05d4b707c847077b677001d8470764245022d602cf3f82679000d87b07826a8800c8a70798ba05977b3bd4ba0a826b600182b282bb08987705948a94876fb86f2bc8b707c88a0ad88a0cc8c70782600001c8a000d8a00ac8a70282679001d87307826a8801c8a707983a05977c3bd4ca0a987705c8b707956c000182cb9800c88a0ad88a08c88707c8a9097bc960d8a908c887077bc7589517e08477e07bc7900064710182677001d8740782696801d39b08d89b09da8709826c6001d8c007826a5801d3a208d8a20ada870ad3c007d48707da790a7b648801826790017b747b6b98017b7b087b6078017b70107b6280017b7218510a37956718214927200449271804492710044927080495682025826790015020d80236b75022da02b93d82628001c882026470287cff826780008577018268a000826970db890782687882691001db9807510783018267a8008477e07b67100182675001956900067b978000826748017b978800826738017b97900095688006826740017b97980033075020dc0260b55022de02103e5020e002bcb85022e202e63c3300e4020a063302e60228993f5022e602963f5022e802bf386472826870017b87187b6050017b80107b84087b83017b626801826710017b6b7801d87b07857b017b6a580194ab017b69600182678001d49707947b018268300182679801c87808826a2801c8ca0a8269180182679001c879098267200164c0826c8801c8c707520be200826b9801d8b80bc8ba0ad30a027b603801d80a0cda2b0cc89c0cd89c02826b9001d8b909c89707c827075022ea02fb3c7b6348017b64400151070628f0ed956700055020ec0248b3956b000582b71882b81082b90882ba956b182195bc00047bc7407bc8387bc9307bca2895684025826770015020ee02bbb55022f002913682628001c8c2027b6280015022f202143e64727bc7187b605001826768017b679801826c48017b6a9001648a2800ff8267a80082689000d487078268a00082698800d49808d487075207300149268001492678014926880149269001287f018264900182639801826ba800826c1001d3cb0b826c9000d4cb02826ca000826b8800d4bc0cd4c20b510ba400d8380bc8ba0ad30a02d80a0cda2b0cc89c0cd89c0bd84909c89707c8b7075022f402fd3b51070628faec956760065020f60252b2956800068287787b6790018287707b6788018287687b6780018287607b6778018267a8005022f8023f3b5020fa02503f5022fc02ee3c5020fe021e3f50220003dd3850200203123f50220403bc3495bc00047bca607bc9587bc8507bc7489568602582677001502006038ab48269900098973f82688800978801d48707826aa00098a83f979901d49808826ba80098b93f97aa01d4a90997ba0195aa01956b182195bc00047bca687bc9707bc8787bc7800033078025286c01956a000182a72082a818d487071408e0ffffff0000000082a930d8890882a92894989478520806280dec826730018378209567a006502008035eb1956800068287b800956900017b9790008287b0007b9788008287a8007b97788287a0007b978000018269a00098973f826a900097a801d487077b67700198a73f82688800978801d487077b676801826aa80098a73f979801d487077b67600197a7017b67580197a8037b6898018d8980003307ff3308ff50200a030f3e7b6738017b6850018267a8008a79033307ff3308ff50200c03ce3d7b6748017b68400182683801d487077b673801826798018379803307ff3308ff50200e03a83d826b980188b98000826a3801db9a07826c4001826a5001d4ca0ada980a93b7ff93baff939c826b4801939b82687801e0a80882698001e0790782698801e0b909826a9001e0ca0a956c000182cb58d4b70750221003cc3995bc00047bc998007bcaa0007bc890007bc788003307a02501c876088267980050201203c7b2956740063308405020140316b0956b000682b95882ba5082b74882b840956b00017bb790007bb98800d497077bb89800d4a808d478089888207bba8000d4a707977720d487075107062875ea8267f000956900067b97208267e0007b97288267d8007b9730956820068267e8007b97388267980150201603e3b0956a000182a7880082a88000d47809140700000000010000007ba7701407e0ffffff0000000082a89800d8780782a8900094877ba97894975207062809ea826798018377204926180649261006492600066095680006492608065020180383b082689801958760d88708826a900150221a0309397b69a8057b67a0058267b8007b67d8058267c0007b67d0058267c8007b67c8058267d0007b67c0057b6ab0059567e0059568c0059569a0057b6bb80550201c03611e956800058287f8007b6758018287f0007b6750018287e8007b6760018287e0007b6768018267b00033001e030a0301956900018297709577c082989800d8780782989000948782987894875207062840e98269080150222003ff338267980183774049269805956b00057bb890007bb98800956880057bba800050202203adaf8262680182609801d80203826c900182686001d3c80ad8c809daa309826a8001826b5001c9ab07d8ab04826b8801826a5801c9ba0bc94b0bd8970ac9ab0bc99709c9c808c93807c90208d4b707d4980ad47a0ad4970798aa20977720d4a70751070628ace83a07a800027b6778053a07b000023a09b800023a0ac000027b6770057b696805956960057b6a60058267980150202403e9b09567400533084050202603cfad956a000582a75882a85082a94882ab40d49707d48b09d47909989920d48707977720d497075107062842e864ba8267f000956900057b97208267e0007b97288267d8007b9730956820058267e8007b973864a77b6a98013300fe0128a8ae3308d00102838833070133090a082881083308d00102838833070133090a082870083308d00102838833070133090a08285f083308d00102838833070133090a08284e083308d00102838833070133090a08283d083308d00102838833070133090a08282c083308d00102838833070133090a08281b083308d00102838833070133090a08280a083308d00102838833070133090a0828f9073308d00102838833070133090a0828e8073308d00102838833070133090a0828d7073308d00102838833070133090a0828c6073308d00102838833070133090a0828b5074926b0034926a8034926a0031407000000003f7d51e29568a0037b67b803330750202803a8ad8267b00033002a030a038269080133022c03285b2f8269080150222c03542f492698037b6890037b678803330704956880037b6a800350202e036cad82672801956a00037ba778826720017ba770826718017ba76833072495686003826930017ba960502030033fad82670001817756175f1a826800014808603307013309448268f8000a082881003307013309448268f8000a0828724926f0034926e8034926e003140700000000717b484e9568e0037b67f803330750203203ebac4926d8034926d0034926c003113307049568c0034926c80350203403cdac82670001817756173f19826800014808403307013309248268f8000a08280f3307013309248268f8000a08013308d00102838833070133090a082877063308d00102838833070133090a08286606524705f5c48e0c0195671821492780064927780649277006492768069567002083778007330036030a0b3302380328873450223803843482b77882b8800082b97082ba68d49808d4a707d48707510703023308d00102838833070133090a082804063308d00102838833070133090a0828f3053308d00102838833070133090a0828e2053308d00102838833070133090a0828d1053308d00102838833070133090a0828c0053308d00102838833070133090a0828af053308d00102838833070133090a08289e053308d00102838833070133090a08288d053308d00102838833070133090a08287c053308d00102838833070133090a08286b053308d00102838833070133090a08285a0552471f7447d5ee00956718214927e0074927d8074927d0074927c807956700308377e0f833003a030a0b33023c0328c53650223c03c23682b7d80082b8e00082b9d00082bac800d49808d4a707d48707510768013308d00102838833070133090a0828f5048269680150223e03312f83b720956cff0795cc1901492ca00695cb00067bb898007bb990009568ff079588a1077bba880050204003d7aa3a076000023a086800029569ff0795991901959b00067bb780003a077000027bb8783a0a7800027bb77064973308409569ff07959981077b7a6806826760015020420365ac33078268980133090a08286c045247a7c9ff017195671821492780004917784917704917689567002083778001330044030a0b01956a182182a77882a8800082a97082aa68d49808d4a707d48707510768023308d00102838833070133090a08281604502246038835ac788a003308d00102838833070133090a0828fb0352475df12f2fea01956718214927200149271801492710014927080195670020837720020a0b01956a182195ab000182b71882b82082b91082ba08d49808d4a707d487075107b4033308d00102838833070133090a0828a203826798018177561743f4013308d00102838833070133090a0828860395674017330048033302dc032843359568181195890006829740956800017b8780008297387b8788008297307b8790008297287b87980050204a03511c3a07400002956a181195ab00067bb7203a074800023a085000023a095800027bb7187bb810956820177bb908330750204c032ea995671811492700064927f8054927f0056479330720956800174929e80550204e030ba93908bc010256183f133308403d08bc01023302500328eb3350225003e8333307d0010283777b6778018399330840330052030a063302540328702d502254036d2d958c00067bca88007bc990007bcb98007bc7a0009567e0169568a027502056039aa9956b181195bc000582c8c80082c7d00082c9d80082cae0007bcac0007bc9b8007bc7b0009567c0167bc8a80050205803901d956b000182b7800095681811958900057b97800082b788007b977882b790007b9770648a9567a0169568801682b998007ba9680533005a033302d40428e12f33078268780133090a082811025247be8a5636a401956718214927c0044927b8044927b0044927a804956700208377c00533005c030a0b01956a182195ab000450225e03d132510722023308d00102838833070133090a0828c301502260033533ac78cb013308d00102838833070133090a0828a80195670030837700f93308040a0195671821957900078298e8007b6898018298f0007b6890018297f8007b6788019567182982777b6780019567e020330062033302d203282e33330264039568181901958900078297c8007b6778018297d0007b6770018297d8007b6768018297e0007b676001826780017b97a000826788017b979800826790017b979000648a9567c0209568a020826998017ba98807502066038a17956b181995bc000782c8a80082c7b00082c9b80082cac0007bca80007bc9787bc770956780207bc86850206803091c95671819956c000182c860957900077b982082c8687b981882c8707b981082c8787b980882c880007b984082c888007b983882c890007b9830647b95676020956840209569202082ca98007bba280733006a0333025e05284d303308d001028388330733090a08286c95691821524724e250724c4929c0054929b8054929b0054929a805956700208377c00633006c030a0b33026e0328cc3150226e03c931502270032a31510728023308d00102838833070133090a08281c3308d00102838833070133090a08280c838833070133090a08018267980181775617435b3308d0010228e7956700208377a0013308040a0101956818218287a00082899800828a880082889000977b2098bb20d4a909d48b0bd49b0b510b42013308d0010228ab826798018177330843ac78b6013308d00102289795670020837740023308040a0195671821957900018298287b6898018298307b6890018298387b6888018297407b67800195674003330072033302d203282e31826740037b677801826748037b677001826750037b676801826758037b676001826780017b671803826788017b671003826790017b6708039567200395680003826998017b690003502074039915956b000382b82082b72882b93082ba387b6af8027b69f0027b67e8029567e0027b68e002502076031d1a956b000182b760956c00027bc7980082b7687bc7900082b7707bc7880082b7787bc7800082b780007bc7b80082b788007bc7b00082b790007bc7a8009567c0029568a0029569800282ba98007bcaa0003300780333021a0528602e3308d001028388330733090a08287ffe140a000000000bdb6579d37a0ad48a0ad49a0a88aa01140b00000000a7c9ff01d3b707d48707d49707887701d4a7074926b8014926b0017b67a001330780009568a0014926a80150207a034ba43908bc010256289f00182003bc0102a0003307d001028378800028acda3307d001028378800028a0da50227c037b2fac787e013308d0010228edfd9567ff079577410633007e033302d20328b02f9567ff0795771901957900058298407b6878018298387b6888018298307b6890018297287b6798013307d001037b67800183770a0301956c000182c9800082970882988199106f77987a206f88978b20d4ba0a9777206f99989920d4970798882082c98800979920989920d3980882c99800d39707d4870782c89000d3a808d4870752074802956700208377e0053308040a0195691821959b000482bac80082b7d00082b8d80082b9e000956bff0795bb1901826c78017bbcc004826c88017bbcb804826c90017bbcb004826c98017bbca80495bc00047bc9e0007bc8d8007bc7d0009567ff07957701069568ff079588e1059569ff079599c1057bcac8003300800333025e0528ab2c3308d001028388330733090a0828cafc492630044926280449262004140700000000717b484e956820047b673804330750208203bda249261804492610044926000441330704956800044926080433003403289ba29567e012330084033302dc0328422e95681811958900018297e000956800017b8780008297d8007b8788008297d0007b8790008297c8007b879800502086034c153a07000002956a181195ab00017bb7c0003a070800023a081000023a091800027bb7b8007bb8b0009568c0127bb9a80033075020880325a2956718114927a001492798014927900164793307209568a0124929880150208a0302a23908bc010256183f133308403d08bc010233028c0328e22c50228c03df2c3307d0010283777b677801839933084033008e030a0633029003286726502290036426958c00057bcac8007bc9d0007bcbd8007bc7e000956780129568e0265020920391a2956b181195bc000182c86882c77082c97882ca80007bca607bc9587bc750956760127bc848502094038e16956b000182b7800095681811958900017b972082b788007b971882b790007b9710648a956740129568201282b998007ba908013300960333028e0428e02828fff89569ff0795991901492918054929100514070000000032b297667b9720059568ff07958821064929080533075020980301a13908bc010256181f0b2003bc010220013308d0010283883307013309040a0801492690044926880449268004140700000000717b484e956880047b679804330750209a03bba0492678044926700449266004413307049568600449266804330034032899a04926f0044926e8044926e004140700000000717b484e9568e0047b67f804330750209c0376a04926d8044926d0044926c004413307049568c0044926c804330034032854a08289107b69308289087b695082887b68587b6738492618024926100249260802956800024926000233075020a00327a04926f8014926f0014926e8013307209568e0014926e0015020a2030aa03308bc01023907bc010256173f0b2003bc010240019517e08479e07b692864913307d00102837783997b68483308407b67403300a4030a063302a6032823235022a60320238267309777209877204926d8017b677b67d0018267507b67c8019568c0018267587b67c00133075020a803989f826708956a00017ba7b8008267107ba7b0008267187ba7a8003307209568a0018269207ba9a0005020aa036b9f826848818756173f0e4808403302ac03287e2a5022ac037b2a3300ae030a06826a303302b003281724826a305022b0031124956780015020b20321a07c678001510708330828f20149267801492670014926680195686001492660015020b403099f5022b60330295020b803fd9e826848818756173f0e4808403302ba0328102a5022ba030d2a3300bc030a06826a303302be03287d28826a305022be0377287b67286f877b67206f977b67186fa77b67109517e08477e07b673064714926380182677b6730018267507b672801956820018267587b67200133075020c0038a9e826710956a00017ba7188267187ba7108267207ba708330720956800018269287ba95020c203629e826848818756173f08480840019517e08477e07b6748647183793308408267403300c4030a06826a483302c60328de21826a485022c603d8218268307b8a187b89107b8b087b879567e0005020c803039f8267e0008268e8008269f800826af000847700ff867701956b00027bb9387bba307bb8287bb720956820028267305020ca03479f3307d001037b674883773300cc030a038269483302ce032801238269485022ce03fb22d4780298aa206f99979820d4a8089899204916784926980082677b6790008267507b6788008267587b6780004926b8004926b0004926a8004926a0003a0ac800023a0bd000023a0cd800023a07e000027b6ad8007b6bd0007b6cc8007b67c0007b69707b68689569c000956aa000956b8000956c607b6260330733085020d0036d9f330801018269387b984919084919104919189551a0fd951700028270588275508276489511600232003308243300d4030a013302d60328c5255022d603c225510a0b5022d803d82632003308d00102838833070133093300da030a083302dc032888285022dc0385283308043300de030a013302e0032885255022e0038225510a0b5022e203982632003308d00102838833070133093300e4030a08019511907b10687b15609515708411f0827a1882791082738277088eab8e9cdbab0c8e72883b20ff85bb01db720bd4a908db8c0b520b429538e000d8380bc8b70cd87c07dabb07c89707d89709c8a9097b18407b1c487b1750330740c871087b19585020e603349c95519082106882156095117032005022e80392265020ea031a9c49111849111049014133070464184911085020ec03039c3908bc010256183f0b2003bc010240013308d0010283883307013309243300ee030a0801951170ff7b1088007b1580007b1678951590008411f064728289827408828c088273959a1fd89a00c80c0984aae07b1308c8a303d8a30bc8490ac8ba0ad39a06d89a07da6b07822b18d8c90c828610822210828818da000cc86c0cd86c06c82c09c89707d8c90cd89709c8b808c86808c8c808c8980c8ec88e79dbc809d4c7088ea6db8906520657821808d88308d34a09d84a06da9806d82708d3bc09d8bc0bda980bd32708d49808da860b520b307b13507b1a587b17603307409518507b1c685020f003189b955170ff8210880082158000821678951190003200491140491138491130140700000000717b484e9518307b174833075020f203e29a491128491120491110413307049518104911185020f403c99a3908bc010256183f0b2003bc010240013308d0010283883307013309243300f6030a0801951140fe7b10b8017b15b0017b16a8019515c0018411e08280829b088284088296950a1fd80a02c8240c7b1630d86a03d3bc0a7b1b40d8bc0bdaa30b828610d84c0ada220a829c18828218829310c86a0ad86a08c82808d3c8097b1c20d9c808d83a0cda9c08d33a0ad4a909db980b510bed027b17187b1328d460077b14507b1238d42408d487079877207b1648d46808978820d487075207c4027b10608308831780017b18100a010182199801821a9001821b88018e978ea8db97087b1990007b1a8800d49a077b1b98008eb9db78095209920282168001951760013308405020f803859882127801821c70017b1c78821368017b138000821460017b147095671f7b1658d8670882199800c898088488018477e0957920d87907c8780ad88a0bda770b492138017b19200164267b1258017b1c50017b1348017b1440017b1a280195174001951820017b1b30015020fa0377fd8219707b166882188000d46807821a78d4a908d47808988820d4a707977720d487075207e4018216587b160001821798007b170801821788007b17100195180001821790007b17180164975020fc03ff98821760c8670ad87a0982145082179800c84707c89707d3470bd84708dab90882104882198800c8090995ac20d8ac02c8270b821a30d8ca0c821a40d3ab06d8ba0adb6a0cd8090a82133882169000c83606c86a0ac89808d89809c8a909d87b07da2207c88707d88708c89808821a20d3a809d88a08821b28d87b0ada9a08d3b707d49707db780c821a9800520c9c01d430071408e0ffffff00000000821960d889089448947851080f0182198800821c58d49c0782189000d4a808d48707987720d49808978820d4870782167082198000821a78821b685207de00d4ba071408e0ffffff000000007b1860d88608949894785108c3008217108377207b175083672064c864c65020fe035b9b837783688219500a01821270c86207d8270882199800821b8000c8b909c88909d3b90ad8b90bdaa80b82188800821a78c8a808d8a80a821c9000821668c86c0cc8ca0ac88b0bd88b08c8a808d4b808821a60d8a70a949a948a510a5064268377204921f8004921f0004921e8009518e0004921e0005020000478978217188218687b78188218787b7810821880007b78087b76955140fe8210b8018215b0018216a8019511c0013200003308d0010228724921d0004921c8004921c000140700000000717b484e9518c0007b17d8003307502002041c974921b8004921b0004921a000413307049518a0004921a80050200404fe963908bc010256183f0b2003bc010240013308d0010283883307013309240a083308d0010228083308d001020183883307013309330006040a08019511a07b10587b15507b16489515608411f0828910828c08828b82881897923f98ca01d42a02978a3f989901d49a0a97cc3f98b901d49c0c98830184bb019ab888b60184c97fd2a804d2280adbbc09d2380b88982094a8d4b40c94c8ab86167b797b7a087b74107b7b18502208041621320050220a04be2050200c044696491118491110490122330704641849110850200e042f963908bc010256183f0b2003bc010240013308d001028388330701330924330010040a083302120428a82050221204a5207b6710828718828910828a0882887b67b0007b6738027b69a8007b6930027b6aa0007b6a28027b6898007b68200295670002330840502014048a94956800028287187b67188287107b67208287087b672882877b67309567e00195682002502016048d96956b000182b7f80082b8f00082b9e80082bae0007b6790007bb7b8007b6888007bb8b0007b6980007bb9a8009567c0019568a0017b6ab8007bbaa000502018049bfe826730826818826928d48909826a20d4a708d49808988820d4a909979920d4980852086503956c000182c9d80082cad00082c8c80082cbc0007b6b607bcb80007b68707bc888007b6a687bca9000956880017b69787bc9980050201a04fa94826ab80084a70152070001826720826818d487071408e0ffffff00000000826b30d88b08826928949894785108fc0284a800ff83b720826a8000956900017b9a087b98826888007b981095680001826a90007b9a1850201c049f94330433033302826768826860d48707826878826970d49808d487078e779777057b67b800018268b800958720d88708c88409d8490ada880ac83a0ad83a08c8820b8268307b68e0007b67c0008267287b67e8008267207b67f0007b69c8008267187b67f8007b6ad0009567e0009568c0007b6bd80050201e044bf88267108268187b78188268207b78108268287b78088268307b789551a0fd9517000282705882755082764895116002320082679800956900017b97608267a0007b97688267a8007b9770956860018267b0007b9778330750202004c7939517e08477e07b675864713908bc010256181f0b2003bc010220019517e08479e07b69b00064913307d00102837783993308200a064926b800330433033302826cb00082c7188268309589207b6950d88908826928c8890a7b6a48d89a0bda880b82c81082c90882ca6f776f886f906fa9826c58649a7bc91864097b6980007bc9107b6890007bc80864797bc7826720c87b0b7b6b40d87b07826818c887077b6738017b6a88007b6998008267608268b800d87807826970d39408d89409da8709826b68d8b307826a78d3a208d8a20ada870ad3b307d48707da790a510a71fe9567400164c87b62b0007b63a8007b64a00050202204c1938268508267b800c88707d88708826b488269a000c8b909c88909d3b90ad8b90bdaa80b826a408268a800c8a808d8a802826c38826ab000c8ac0cc82c0ac88b0bd88b08c8a808d49808d4b709d48909d4b808989920978820d498085208a100956c000182c95882c85082ca4882cb407bcb207bca287bc830956820017bc938502024044a92826a980095aa0188a70182649000c87404d44a0788770182688000c87803d8830882678800c887078268b800958020d88009826ba000c89b08d8b80bda990b8269a800c89b0bd89b098262b000c8920264497b699000826c587bc90864a97bca7bc310647a7bc7187b6380007b60b800648464b328b2fe00951110ff7b10e8007b15e0007b16d8009515f0008411f0828c10828b18828a0882887b1a287b1b18d4ab0bd4c80ad4ba0a98aa207b1c20d4cb0b97bb20d4ba0a520af7017b17088297187b17688296108297087b176082977b17589517b0007b1810502026043090821758d46709821868821a60d4a808d489099899207b1650d46808978820d498085208ae018219c800821ac000821bb8008218b0007b18307b1890007b1b387b1b98007b1a407b1aa000951890007b19487b19a8006476502028040d91821768821850d478081407e0ffffff00000000d87609821a6094a9948951095501821820821918d49808821910d87907821a2894a7948751073b01646c821630821a40d4a607821848821b38d4b808d48707987720d4a808978820d487075207140183c7208398207b1828646850202a0402947b1720821728646850202c04f4936478821720646950202e04c08e821758c86707d86708821960821b38c8b909c88909d3b90ad8b90bdaa80b821850821a40c8a808d8a80a821c68821648c86c0cc8ca0ac88b0bd88b08c8a808d4b808140ae0ffffff00000000d8a70a949a948a510a91008377204921880049218000491178951870491170502030040e9082163095661f1407e0ffffff01000000d26707821858c88707d88708821a60c88a09d8a90ada880a821850c88a0ad88a08821b68c8b808957b20d87b07c8790cd89c09da7709c8a909d8a907c887078218087b8b7b8c087b89107b8718955110ff8210e8008215e0008216d8009511f000320000951140ff7b10b8007b15b0007b16a8009515c0008411e064168289828a08828b108288187b67187b68787b6b707b6a689568607b69603307502032045c8f49165849165049164833072095684049164050203404448f3908bc010256183f0b2003bc010240019517e08479e07b691064913307d00102837783993308400a06826a1082a782a80882a91082aa186f776f886f996faa95aa0188ab01c8b909d49a0b88bb01c88b0bd88b08c887077b6a80007b6988007b6b90007b6798009567209568800050203604c28f826730826838826920826a28826b187bb7107bb8187bb97bba08955140ff8210b8008215b0008216a8009511c0003200951120ff7b10d8007b15d0007b16c8009515e0008411f0827810827918827a088277d4a909d48707d49707510719955120ff8210d8008215d0008216c8009511e00032009517a00033084050203804158d8219b8008216b0008217a8008218a0007b17107b1908d497077b1818d46808d47808988820d46707977720d487075207c000492190004921880049218000140700000000a079c308951880007b17980082171850203a04f68d821908d46909140600000000010000001407fcffffff00000000821818d8780782181094877b1908949751076b8217188377044911784911704911602095186049116850203c04ad8d9567dc821818d87807821810948782180894875107398216188367244911584911504911401695184049114850203e047b8d1407bcffffff00000000d8760782181094878218089487520704008216188367443a08e800023a09f000027b18387b1930140800007473697865207b182895182049112050204004318d3308646467502042048e908378330701330964330044040a0801951180fe7b1078017b1570017b166801951580018411e064164926580149265001492648019568400149264001330750204604e28c492638014926300149262801330720956820014926200150204804c58c3308bc01023907bc010256173f112003bc01024033024a0428b01750224a04ad173307d00102837783997b68583308407b675033004c040a06826a4833024e04282b16826a4850224e0425167b67386f877b67306f977b67286fa77b67209517e08477e07b674064713307d001037b674883777b6718330050040a038269483302520428070e82694850225204010e49261801956900017b98107b9708956800017b9a3307502054041a8c8267207b67f8008267287b67f0008267307b67e8003307209568e0008269387b69e00050205604f18b826858818756173f08480840019517e08477e07b673864718379330840826750330058040a06826a3833025a04286d0f826a3850225a04670f8268407b8a187b89107b8b087b879567c00050205c04928c7c67c000510719955180fe8210780182157001821668019511800132004926b0004926a8004926a0001407000000003f7d51e29568a0007b67b800330750205e045d8b826718330060040a038269483302620428120d826948502262040c0d492698007b6890007b678800330704956880007b6a800050206404248b491678491670491668330724956860491660502066040c8b826758817756175f0b82685848086001330701330944826850330068040a0801951160fe7b1098017b1590017b1688019515a0018411e064168279827808827a108277187b6720956b00017bb7787b6a287bba707b68307bb868956860017b69387bb960330750206a04a08a50226c04c71450206e04948a3308bc01023907bc010256173f0b2003bc010240019517e08479e07b696864913307d00102837783997b68783308407b6770330070040a06826a683302720428fb13826a6850227204f5137b67586f877b67506f977b67486fa77b67409517e08477e07b676064713307d001037b676883777b6718330074040a038269683302760428d70b82696850227604d10b492638017b6830017b672801956820017b6a2001330750207804ea89826740956a00017ba7188267487ba7108267507ba708330720956800018269587ba950207a04c289826878818756173f08480840019517e08477e07b67586471837933084082677033007c040a06826a5833027e04283e0d826a5850227e04380d8268607b8a187b89107b8b087b879567e00050208004638a7c67e000510719955160fe8210980182159001821688019511a00132004926d0004926c8004926c0001407000000003f7d51e29568c0007b67d8003307502082042e89826718330084040a038269683302860428e30a82696850228604dd0a4926b8007b68b0007b67a8003307049568a0007b6aa00050208804f5888267207b6798008267287b6790008267307b678800330724956880008269387b69800050208a04cc88826778817756175f0b8268784808600133070133094482687033008c040a0833028e0428501050228e044d103a07f800027b6720956a00027ba7383a080001023a090801023a071001027b68187ba8307b69107ba928956820027b67087ba720330750209004648850229204cc0d5020940458883308bc01023907bc010256173f112003bc010240330296042843135022960440133307d0010250229804961333009a040a0633029c04280c0a50229c04090a50209e0413885022a004180e5020a2040788826868818756173f0e4808403302a40428090c5022a404060c3300a6040a063302a80428cc0b5022a804c90b5020aa04c7887c67a001510711330833078269583302d204283e0c5022ac04d3105020ae04b4875022b004030d5020b204a887826868818756173f0e4808403302b40428aa0b5022b404a70b3300b6040a063302b80428440a5022b804410a5020ba0476875022bc04560d5020be046a87826868818756173f08480840019517e08477e07b67685022c004d50c3300c2040a063302c40428020b5022c404ff0a5020c60427885022c804810b5020ca0493883307d001037b676883773300cc040a038269683302ce04284d0c8269685022ce04470cd4780298aa206f99979820d4a808989920492698004926b80082677b67b0008267707b67a8008267787b67a0008267207b67d8008267187b67d0008267107b67c8008267087b67c0003a0a1801023a0b2001023a0c2801023a073001027b6af8007b6bf0007b6ce8007b67e0007b6990007b6888009569e000956ac000956ba000956c80007b628000330733085020d004a88833073308018269585022d204e60a32003a073801027b6720956a00027ba7383a084001023a094801023a075001027b68187ba8307b69107ba928956820027b67087ba72033075020d60427865022d8048f0b5020da041b863308bc01023907bc010256173f112003bc0102403302dc042806115022dc0403113307d001025022de0459113300e0040a063302e20428cf075022e204cc075020e404d6855022e604db0b5020e804ca85826868818756173f0e4808403302ea0428cc095022ea04c9093300ec040a063302ee04288f095022ee048c095020f0048a867c67a001510711330833078269583302180528010a5022f204960e5020f40477855022f604c60a5020f8046b85826868818756173f0e4808403302fa04286d095022fa046a093300fc040a063302fe042807085022fe04040850200005398550220205190b502004052d85826868818756173f08480840019517e08477e07b676850220605980a330008050a0633020a0528c50850220a05c20850200c05ea8550220e0544095020100556863307d001037b67688377330012050a038269683302140528100a826968502214050a0ad4780298aa206f99979820d4a808989920492698004926b80082677b67b0008267707b67a8008267787b67a0008267207b67d8008267187b67d0008267107b67c8008267087b67c0003a0a5801023a0b6001023a0c6801023a077001027b6af8007b6bf0007b6ce8007b67e0007b6990007b6888009569e000956ac000956ba000956c80007b62800033073308502016056b86330733080182695850221805a90832007b6a50829a087b6a7082997b69788289828a08828b108288187b67587b6808956700027b78387b6b107b7b307b6a187b7a28956820027b69207b7920330750201c05e28350221e054a0950202005d6833308bc01023907bc010256173f112003bc0102403302220528c10e50222205be0e3307d0010250222405140f330026050a0633022805288a0550222805870550202a05918350222c05960950202e058583826868818756173f0e48084033023005288707502230058407330032050a0633023405284a075022340547075020360545847c67a0015107113308330782695833025c0528bc07826720956900017b9780008267187b9788008267107b979000956880018267087b979800330750203805128350223a05610850203c050683826868818756173f0e48084033023e0528080750223e050507330040050a063302420528a205502242059f0550204405d48250224605b40850204805c882826868818756173f08480840019517e08477e07b676850224a05330833004c050a0633024e0528600650224e055d0650205005858350225205df0650205405f1833307d001037b67688377330056050a038269683302580528ab0782696850225805a507d4780298aa206f99979820d4a808989920492698004926b80082677b67b0008267707b67a8008267787b67a0008267087b67d8008267107b67d0008267187b67c8008267207b67c0003a0a7801023a0b8001023a0c8801023a079001027b6af8007b6bf0007b6ce8007b67e0007b6990007b6888009569e000956ac000956ba000956c80007b6280003307330850205a050684330733080182695850225c05440632007b6a38829a087b6a7082997b69788289828a08828b108288187b67307b6840956700027b78387b6b487b7b307b6a507b7a28956820027b69587b79203307502060057d8150226205e5065020640571813308bc01023907bc010256173f0b2003bc010240019517e08479e07b692864913307d0010250226605b00c330068050a0633026a0528910450226a058e048267389777209877204926f8017b67387b67f0018267707b67e8019568e0018267787b67e001330750206c050581826708956a00017ba7d8008267107ba7d0008267187ba7c8003307209568c0018269207ba9c00050206e05d880826868818756173f08480840019517e08477e07b6720502270054306330072050a06826a2033027405288105826a20502274057b059567a001502076058b817c67a0015107ef01826758956900017b9780008267507b9788008267487b979000956880018267407b979800330750207805658050227a05b40550207c055980826868818756173f08480840019517e08477e07b672850227e05c405330080050a0633028205288803502282058503492658018267387b6750018267707b674801956840018267787b6740013307502084050580826708956a00017ba7388267107ba7308267187ba728330720956820018269207ba92050208605dc7fff826868818756173f08480840019517e08477e07b676850228805460533008a050a06826a6833028c05288404826a6850228c057e049567000150208e058e80956b000182b782b81882b91082ba08847700ff956b00027bb8587bb9507bba487bb7409568400282672850209005d6803307d001037b67688377330092050a0382696833029405289004826968502294058a04d4780298aa206f99979820d4a808989920492698004926b8008267387b67b0008267707b67a8008267787b67a0008267407b67d8008267487b67d0008267507b67c8008267587b67c0003a0a9801023a0ba001023a0ca801023a07b001027b6af8007b6bf0007b6ce8007b67e0007b6990007b6888009569e000956ac000956ba000956c80007b6280003307330850209605ea803307330801826930330298052824033308826930502298051c033200330750209a052e8233070150209c052582826b980188b98000826a5001db9a08826c5801826a6801d4ca0ada970a93b8ff93baff826b6001939b939c82677801e0a70782698001e0890882698801e0c909826a9001e0ba0a956b1821320282970881981082996f77977a206f88988820d48a0a9877206f98978920d497079888203202826a4882a71882a81082a90882aa6f777b67406f877b67386f977b67306fa77b67289517e08477e07b674864718267509777209877204926f8017b677b67f0018267707b67e8019568e0018267787b67e001330732028263480195330188370182644001c87404d4430788770182685001c87800d8800882676801c88707826898019589207b696801d8890a82683801c8a8097b694801d8890bdaaa0b82689001c8b80ad88a0b82688801c8b8087b68880182687801958b20d88b0c82695801c8c908d89809dacc09826c6001c8c909d8c90c3202826a5082a71882a81082a90882aa6f777b67486f877b67406f977b67386fa77b67309517e08477e07b675064714926580182677b6750018267707b674801956840018267787b67400133073202826b980188b98000826a4001db9a07826c4801826a5801d4ca0ada980a93b7ff93baff939c826b5001939b82687801e0a80882698001e0790782698801e0b909826a9001e0ca0a3202826a2882a71882a81082a90882aa6f777b67206f877b67186f977b67106fa77b67089517e08477e07b67286471320249268001826a680182a71882a81082a90882aa6f736f846f903309826b78016fa7330a320282a71882a81082a90882aa6f776f8b6f996faa3202826a6882a71882a81082a90882aa6f776f8b6f996faa8268507b8a187b89107b8b087b87956700013202826a5082a71882a81082a90882aa6f776f8b6f996faa8268487b8a187b89107b8b087b879567a00132029517e08477e07b675064718379330840826760320282970881981082996f77977a206f88988820d48a0a9877206f98978920d479099888203202956b000182b782b80882b91882ba10847700ff867701956b00027bb9587bba507bb8487bb7409568400282675032027b987b97087b97107b9718955180fd95170002827078827570827668951180023202826a700182a782a80882a91082aa186f776f886f996faa95aa0188ab01c8b909d49a0b88bb01c88b0bd88b08c8870795681821320282a71882a81082a90882aa6f776f8b6f996faa8268287b8a187b89107b8b087b87320282989000d8780782988800948782989800948732028ea78eb8dba7088ec77b6978018899208599017b6c8001dbc7097b6a88017b6b9001d4ab07db78098267a800887720320282970881981082996f7a97a7206f88988820320249267801492670014926680133072095686001492660013202492618024926100249260802330720956800024926000232026471837933084082676032027b6758017b68600182675001d487077b675001826798019579803307ff3308ff320282a71882a81082a90882aa6f777b6758016f877b6750016f977b6748016fa77b6740019517e08477e07b67600164713202826730956a00017ba7388267387ba7308267407ba728330720956820018269487ba9203202826728956a00017ba7d8008267307ba7d0008267387ba7c8003307209568c0018269407ba9c00032028269680182970881981082996f77977a206f88988820d48a0a9877206f98978920d4970798882095691811320282989800d878078298880094878298900094873202d88708826a6001c88a09d8a90ada880a82687001c88a0ad88a08826b6801c8b808956b182195bc00073202d88708826a9001c88a09d8a90ada880a82688001c88a0ad88a08826b9801c8b808956b182195bc00063202d88708826a6001c88a09d8a90ada880a82687001c88a0ad88a08826b6801c88b0b956818193202826710017b6b7801d87b07857b017b6a580194ab017b69600182678001d49707947b01826818013202826a580182a71882a81082a90882aa6f776f8b6f996faa826860017b8a187b89107b8b087b87330700103202d87907826a9001c87a08d8a80ada770a82678001c87a0ad87a07826b9801c8b70795cb00043202c8ba0a7b6a580197aa3b989b05d4ab0b8267600182731897993b827a10988805d498076f346fa932029518e08488e07b6868016481837783893308203202951180fd951900027b90787b95707b9668951580028411e064168289107b69508289087b697082887b68787b6758320297773b9878387b6898019a8980003307ff3308ff320282648801954401884701826b9801c87b0bd4b40788770182687801c88707d8870832026471837933084082679801320282a71882a81082a90882aa6f776f886f996faa956b1821320233071821c8760a95ab0006320282cb60d4b80882cb68d4ba0a82cb70d4b909956b18213202d4c809d4a707d47909989920d4c707977720d4970732027b6750017b68480182684001d487077b674001826798018379803307ff3308ff3202c88a09d8a90ada880a82688001c88a0ad88a08826b8801c88b0b32029517e08477e07b67700164713308203307320282171082181814090000000001000000d37909d48909987a2088aa01948a939a320282989800d878078298900094878298880094873202c8790bc8ab0bd39b0a7b6b6801d89b09daa709826b58013202826720956900017b9798008267187b9790008267107b978800956880018267087b97800033073202d4c809d47007d47909989920d4c707977720d497077b6348017b6440013202d8780782a99800949782a97894973202d8780782a99000949782a9880094973202d49b0bd48709d4b909989920d4b808978820d4980832027b6768017b6850013307ff3308ff82699801320282a71882a81082a90882aa6f773202951180fd951a00027ba0787ba5707ba668951580028411e06416829a103202826c70017bc4087bc37bc01032028219821a087b697b6a087b67107b68189551c0821038821530821628951140320282c7800082c87882c97082cb68d49707d48b09d47909989920d48707977720d4970732024926580149265001492648013307209568400149264001320295781fd87807826c1001c87c09d8c90ada770a32023307207b679801330c4926900149268801492678013202491130491128491120140700000000717b484e9518207b1738330732029517e08477e07b676001647183793308208267f80032029511a0fd951900027b90587b95507b9648951560028411e0641632029551a08210588215508216489511603202d8780782c99000949794a7320282b7b80082b8c00082b9b00082baa800d49808d4a707d4870732029517e08479e07b697001649132029517e08479e07b6948649132029517e08477e07b6798016471837933084032029517e08477e07b673064718379330840826740320233071811c8760895890004320249284005492838054928280501648933072032028267980181773308233202837783997b68683308407b6760320233071821c8760a95ab0005320233071821c8760a95ab0007320233071821c87609959a00013202d87a0782688000c8780bd88b08da77088267900032029511c07b10387b15307b16289515408411e0647683173202849a40520a195109148d9a40cfa80ad09808d09707d4a707320032009597c0d0780733083200849a40520a195109148d9a40d0a70acf9707cf9808d4a808320032009598c0cf87083307320049922425494b2a252da9944c4949214225a952484992244992244992244992244992244992244992244992244992244992244992542529a524292949a84a494a922449922449922449922449922449922449922449929224294955494a9228492549559282922425294955559292a42495242549529224152aa5942495141411112949929424495292242925499284a222458a142952a4489122458a142952a428912222a224491042c2509a9486448888882421498888884644248950218452929224499288129294244932945215aaa950a51111112992904808112211a5914002020924020924202020908888889408922449122411292211892409112184888842444489082144308942452245122144919210111185888888281111a2c824829484488824212184245288242512a2c8248214498448494812294414899488842832899092100911914424444424499224494404101111112122220104102489880811111122222149444488881011114000a9242122224208111111222289a22421222222224484128d8888482322224912241129222222222242444444444442244992244922a24824224524222222222252122222922451241222421242881049a4884444443422222249124522224244848888888888888804111124119148242252442222222222a2114992248922118922412449494494244912111111498a8888882022222222222212458288484a22a224499288888848524444440411914892241189224144242511519224494444444444111111114444442291480821119224222988888812114108114ca250948822124114459144218a282211444424112988884824522222822832894a441189209214114444121111222288888888a4244992a4484412492222420411092222222222222222228888482449924444241289882888884800010449242222914844248a202212248988482412118920a211010490284a22924812119144248288464412454904111111111111444400010449444444442482888820898888888888884810111111111111051111a144449044516412952892548aa28824454410114912912411415292481249241289248a882022922492244992242282884852899224491289481011111111111111444444544a92244922222222222222220aa2c8242a1125922089249124a9942a4922494412492249922452924822499244495592449248244912912449921423912412499294248988882822228888489244921211111145822449920449448a4824128948101111111111111141442422499224222222828848000144a2924844119188082212249188081141000144248a9248441111114424482222222282880002884425111111111144449044444488082211914844a22022a2440842886012858a4414910822924404111111498a484410118944225210414410495424124491a4aa8844225124884824128922222288082222892449928888888888882092481249242249444424220920804814251111111149121141248824454444221224119124121111114124888888080288082048222222221111114124888888082212241111114944249108028808204802881411111111412488244544442222482222222222222288041123222222124992248988881041441091049000225194444444449244041141244112914824129188101144249244128988888888888822228288914824121141009100822422222252449288244992248948928848129124898888082222914824128914111141c4884824121141244112114922222222880802880410241111012489888888202288449044444492222289041141001124914844a4229244244992244944924422492249222591202222222222a248a488880431492229924822499224254992441109242222228a0411114992208948140992242249a4208288208942049328548a241545514492228848241289482249249188888888484444444444828888888804111111119120492282202291484482248908222222221224894844824422918804111111912449222222222222228888041040a22211114444041191082292884824922222828824888888884424458948224992442211914482888888888888888822222288082080442922128944221111111111114424414412111111111144228000121501448a88888808221241448a482a114944922489444444120922a2888888884422454444101111911449249124912449922422282a1111118d888824491489041111912449224484102222229224118d24499244914810491244288410111111898888882241904449222211894824221245828888882491828888121184104124081589282211445114491449444444441444444444948808a2482488282211449222888848101149828822222222111111512448922449148904111111414444440489a054a91111111111110511115122045164124114910822924404119148921491882022229148440a222242890822898a4c22284a529524491225892022222202480091888888882022414444442449924444444444141111443412492451c92492244992244992449224111189442222054110148a88a0482445108944248a4424892489244144104912114922824822492491482412492491882492441289a04444441149121111258924491449922492041111442412894482200882208888888820499224494444442449224900492a12114444442249244992894422114910912441100449041111119320290992482412251211414492449224491211114494884a9424499288884810111111111111111111114444444404898888888888888882282291208a48040952aa24892489249244922449a42049924449559224492492248948922449a2914812892449228a442289888888208894249224499224491249924422222222222211511004411409822291144124129128129124922492041141444444244944104422281111514492242222121191248992244992202241444444444444044110044110491211244992248948924824092049452412444444444422629248124922129104119124088220892012494c82480411111149224944444424128988888820294924892412498a082222222282484422222222228248101191a488082222220124111111114152122491482412512488248924499224494410492a5144924812111144444444444410490a2222222222220aa2884482682491248228aa2489241149248924499248412492244aaa9224924422499288244992241a892491489224a248249288888808824889449248442222222222a2200882281204452269442491882422918844918824912491248848228824452449441044222811115122129144444422221289482249922409920822914824220882200882489288201249248924494492884492009254128920222222123112492492882491484412444492202212912488884424495124128944124444444c0491209224221249224912914824221144440248009128259188101144124144444444444444041111111111d14822514a228844444404118948129144244992244992244408212222824810499224499222128944a488845209a5124a25944a2895502aa15442a9845209a5124a25944a2895880820a220a28844101189082212892422411491244a12151101441444844404514492a8241a4a25944a40444444449120912489502aa15442a9845209a5124a25944a2895502aa15442a904444444441409222292442895081211111111410811112121252222282a81882411d148244922944a10a15402222222a21149922442a94421944a44242211894422081109212491828888121184488804a12851248888888820222222222282888888448a888848510988888888684410a1548208a5129122222222a28888448c888888888888882222828888884822414422499244229122222222a1aa084444444491208850aa50aa52a30845a4111191248950940845a48844229188884444444444444444440491241111114422128944444444444444245425802409204912111111841008911009222422221191482412216a444a2949492249249144448a888888888888888888888888888884aa44440011051121119188484444444444042122420811110511112522089110094251a2481011111141449248120922221289141111914444041011511022184a1a1101441444844444222280888288908848929444444441442422082182490a95248a0449a24844a2201189442211a448248812491041a44444441004291209a24412a49492a42812912848244912294891492a8912499024451011118924890421458924484a92281289888810428888482222a9205392882451a24890a0508a2241a24890a0508a2649925229922491244992240992a4204892128408869268442452494992244992244992244952494992244992244992202212250920294822491022184aa211119192922449922449922449924892244992489146442522512222414422224922499224a2888888882089244992484444444441924492249124499224912449922449922422012415914492248924124052912415544e1291248924912449924a8988882049122922221a8a8800220a2242228210c15052282c459324494a922449929224492925090a8224294188602889224192141111111109224992121144444444444444449024499224222222914844228844920092544422522422419524494a8c244992442412918888089224498a48124524128948419242049328548a2a92244992a4aa9422914a92242312499224499244141141224924491249224992244922922449248824924412892492441229924a89a88c888824294992248924494a244892244912111189442212054902482a9224a928499224492429480a4a41922449922449922401a422114982248024499224499224494a1211118d8888549224490a922409420493142aa5245549922411118920499294888828222292a4248988882241444492244912111140448224800092949224910449524a924412049094320921092049908292684444a48888288888440421441009422589124990524a92424a94488288242a48241289449022935412259220498a20121111454400110589124910118908922409522493442322229524912489a4200842886092422589124990524a92424a94488288882848244912294891492a8912499024451089888822228088824489248888440489442291085224934491202412424892480a82208408224108a2481004418a4482281204914a240882204522411409822048914982281204411052944882a42411452291482412218410111111111115940485444208491249411084104124084114098220489148104582205289044110a4482488224110042932491045822008428a1249909424a248241289442284102222222222a28292a024a5244924492229088210228804218822411004291209a24810442a91442412912808821489045124088220452609a24810044148512209929244148944229148841042444444444454501294a494248924492405411042049314822812248944221205894824128920452609a2441244109188442212054190229304512488442212058924492209a4c8244194488208a22411491209428a12499094242291482412894408214444444444440525911254902022129124519148241225959294a424a994529294248a44242a924812492412894412492422892491942495524a92a24844a22222114952148944222549a59492a4229254155592aa4a92aa92a42849aa4a92a2249594544a5292a22491489248258948124549aa922449a22455254945a2a84a914422924849a514118928221251254544229294a4a2288a242a9124492425229148248aa45292924491282a912492484489249144224a2489241245249188248a24554592a2449248225122492449aa24aa14912452929494442445124922a91225a92a8a444992444992a4884844929244122989524900495245a2a82491448948242251499224a244a944514992a488244a524524899422a55292244991244992141189288924258a88920490541295282249a4922425aa8888242551492a894a492a2912458452942a4991281245a244922849922a4992a4924a9224a9a40000"
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "DISTRIBUTOR_ROLE()": "f0bd87cc",
              "MANUFACTURER_ROLE()": "965288b0",
              "RETAILER_ROLE()": "2115e7bf",
              "addDistributor(address)": "7250e224",
              "addRetailer(address)": "8ec4f505",
              "getProduct(uint256)": "b9db15b4",
              "getProductCount()": "4a348da9",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "products(uint256)": "7acc0b20",
              "registerProduct(string,string,string)": "3406b718",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "supportsInterface(bytes4)": "01ffc9a7",
              "verifyProduct(uint256)": "524e8462"
            }
          },
          "irOptimized": "/// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 1:\"@openzeppelin/contracts/access/IAccessControl.sol\", 8:\"@openzeppelin/contracts/utils/Context.sol\", 10:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 11:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 16:\"contracts/SupplyChainVerifier.sol\"\nobject \"SupplyChainVerifier_2406\" {\n    code {\n        {\n            /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            /// @src 16:1001:1043  \"_grantRole(DEFAULT_ADMIN_ROLE, msg.sender)\"\n            pop(fun_grantRole(/** @src 16:1032:1042  \"msg.sender\" */ caller()))\n            /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n            let _1 := mload(64)\n            let _2 := datasize(\"SupplyChainVerifier_2406_deployed\")\n            codecopy(_1, dataoffset(\"SupplyChainVerifier_2406_deployed\"), _2)\n            return(_1, _2)\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole(var_account) -> var\n        {\n            /// @src 0:6256:6260  \"bool\"\n            var := /** @src 0:2232:2236  \"0x00\" */ 0x00\n            /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n            mstore(/** @src 0:2232:2236  \"0x00\" */ 0x00, 0x00)\n            /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n            mstore(0x20, /** @src 0:2232:2236  \"0x00\" */ 0x00)\n            /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n            let dataSlot := keccak256(/** @src 0:2232:2236  \"0x00\" */ 0x00, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x40)\n            /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n            let dataSlot_1 := /** @src -1:-1:-1 */ 0\n            /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)))\n            mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n            /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n            dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x40)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var := /** @src 0:2232:2236  \"0x00\" */ 0x00\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                mstore(/** @src 0:2232:2236  \"0x00\" */ 0x00, 0x00)\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                mstore(0x20, /** @src 0:2232:2236  \"0x00\" */ 0x00)\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                let dataSlot_2 := keccak256(/** @src 0:2232:2236  \"0x00\" */ 0x00, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x40)\n                /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x40)\n                sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 0:2232:2236  \"0x00\" */ 0x00, 0x00, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 0:2232:2236  \"0x00\" */ 0x00, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 8:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 8:\"@openzeppelin/contracts/utils/Context.sol\", 10:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 16:\"contracts/SupplyChainVerifier.sol\"\n    object \"SupplyChainVerifier_2406_deployed\" {\n        code {\n            {\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _2 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _2)) { revert(0, 0) }\n                        /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        let expr := /** @src 0:2673:2720  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ _2, /** @src 0:2688:2720  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                        /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 10:862:902  \"interfaceId == type(IERC165).interfaceId\" */ eq(_2, /** @src 10:877:902  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        mstore(_1, iszero(iszero(expr)))\n                        return(_1, 32)\n                    }\n                    case 0x2115e7bf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos := mload(64)\n                        mstore(memPos, /** @src 16:388:414  \"keccak256(\\\"RETAILER_ROLE\\\")\" */ 0x2a5f906c256a5d799494fcd066e1f6c077689de1cdb65052a1624de4bace99bf)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        return(memPos, 32)\n                    }\n                    case 0x248a9ca3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let ret := fun_getRoleAdmin(calldataload(4))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, ret)\n                        return(memPos_1, 32)\n                    }\n                    case 0x2f2ff15d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_1 := calldataload(4)\n                        let value1 := abi_decode_address()\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 0:4300:4318  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value_1))\n                        /// @src 0:4330:4355  \"_grantRole(role, account)\"\n                        pop(fun_grantRole(value_1, value1))\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x3406b718 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let offset := calldataload(4)\n                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                        let value0 := abi_decode_string(add(4, offset), calldatasize())\n                        let offset_1 := calldataload(36)\n                        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n                        let value1_1 := abi_decode_string(add(4, offset_1), calldatasize())\n                        let offset_2 := calldataload(68)\n                        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n                        let value2 := abi_decode_string(add(4, offset_2), calldatasize())\n                        mstore(0, /** @src 16:234:264  \"keccak256(\\\"MANUFACTURER_ROLE\\\")\" */ 0xeefb95e842a3287179d933b4460be539a1d5af11aa8b325bb45c5c8dc92de4ed)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        mstore(32, 0)\n                        let dataSlot := keccak256(0, 64)\n                        /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 8:735:745  \"msg.sender\" */ caller(), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x40)\n                        /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                        if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0xff))\n                        /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                            mstore(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0, /** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                            /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                            mstore(4, /** @src 8:735:745  \"msg.sender\" */ caller())\n                            /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                            mstore(36, /** @src 16:234:264  \"keccak256(\\\"MANUFACTURER_ROLE\\\")\" */ 0xeefb95e842a3287179d933b4460be539a1d5af11aa8b325bb45c5c8dc92de4ed)\n                            /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                            revert(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0, 68)\n                        }\n                        let _3 := sload(/** @src 16:1290:1306  \"_productIds += 1\" */ 0x02)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        let sum := add(_3, /** @src 16:1305:1306  \"1\" */ 0x01)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        if gt(_3, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        sstore(/** @src 16:1290:1306  \"_productIds += 1\" */ 0x02, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sum)\n                        let memPtr := mload(64)\n                        finalize_allocation_10348(memPtr)\n                        mstore(memPtr, sum)\n                        /// @src 16:1386:1636  \"Product({...\"\n                        let _4 := add(memPtr, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 32)\n                        mstore(_4, value0)\n                        /// @src 16:1386:1636  \"Product({...\"\n                        let _5 := add(memPtr, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 64)\n                        mstore(_5, value1_1)\n                        /// @src 16:1386:1636  \"Product({...\"\n                        let _6 := add(memPtr, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 96)\n                        mstore(_6, /** @src 16:1509:1524  \"block.timestamp\" */ timestamp())\n                        /// @src 16:1386:1636  \"Product({...\"\n                        let _7 := add(memPtr, 128)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        mstore(_7, /** @src 8:735:745  \"msg.sender\" */ caller())\n                        /// @src 16:1386:1636  \"Product({...\"\n                        let _8 := add(memPtr, 160)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        mstore(_8, 0)\n                        /// @src 16:1386:1636  \"Product({...\"\n                        let _9 := add(memPtr, 192)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        mstore(_9, value2)\n                        mstore(0, sum)\n                        mstore(32, /** @src 16:1305:1306  \"1\" */ 0x01)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        sstore(dataSlot_2, mload(memPtr))\n                        let memberSlot := add(dataSlot_2, /** @src 16:1305:1306  \"1\" */ 0x01)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        let _10 := mload(_4)\n                        let newLen := mload(_10)\n                        if gt(newLen, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        let _11 := extract_byte_array_length(sload(memberSlot))\n                        if gt(_11, 31)\n                        {\n                            mstore(0, memberSlot)\n                            let data := keccak256(0, 32)\n                            let deleteStart := add(data, shr(5, add(newLen, 31)))\n                            if lt(newLen, 32) { deleteStart := data }\n                            let _12 := add(data, shr(5, add(_11, 31)))\n                            let start := deleteStart\n                            for { }\n                            lt(start, _12)\n                            {\n                                start := add(start, /** @src 16:1305:1306  \"1\" */ 0x01)\n                            }\n                            /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                            { sstore(start, 0) }\n                        }\n                        let srcOffset := 0\n                        srcOffset := 32\n                        switch gt(newLen, 31)\n                        case 1 {\n                            let loopEnd := and(newLen, not(31))\n                            mstore(0, memberSlot)\n                            let dstPtr := keccak256(0, srcOffset)\n                            let i := 0\n                            for { } lt(i, loopEnd) { i := add(i, 32) }\n                            {\n                                sstore(dstPtr, mload(add(_10, srcOffset)))\n                                dstPtr := add(dstPtr, /** @src 16:1305:1306  \"1\" */ 0x01)\n                                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                                srcOffset := add(srcOffset, 32)\n                            }\n                            if lt(loopEnd, newLen)\n                            {\n                                let lastValue := mload(add(_10, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                            }\n                            sstore(memberSlot, add(shl(/** @src 16:1305:1306  \"1\" */ 0x01, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ newLen), /** @src 16:1305:1306  \"1\" */ 0x01))\n                        }\n                        default /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        {\n                            let value_2 := 0\n                            if newLen\n                            {\n                                value_2 := mload(add(_10, srcOffset))\n                            }\n                            sstore(memberSlot, or(and(value_2, not(shr(shl(3, newLen), not(0)))), shl(/** @src 16:1305:1306  \"1\" */ 0x01, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ newLen)))\n                        }\n                        let memberSlot_1 := add(dataSlot_2, /** @src 16:1290:1306  \"_productIds += 1\" */ 0x02)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        let _13 := mload(_5)\n                        let newLen_1 := mload(_13)\n                        if gt(newLen_1, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        let _14 := extract_byte_array_length(sload(memberSlot_1))\n                        if gt(_14, 31)\n                        {\n                            mstore(0, memberSlot_1)\n                            let data_1 := keccak256(0, 32)\n                            let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                            if lt(newLen_1, 32) { deleteStart_1 := data_1 }\n                            let _15 := add(data_1, shr(5, add(_14, 31)))\n                            let start_1 := deleteStart_1\n                            for { }\n                            lt(start_1, _15)\n                            {\n                                start_1 := add(start_1, /** @src 16:1305:1306  \"1\" */ 0x01)\n                            }\n                            /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                            { sstore(start_1, 0) }\n                        }\n                        let srcOffset_1 := 0\n                        srcOffset_1 := 32\n                        switch gt(newLen_1, 31)\n                        case 1 {\n                            let loopEnd_1 := and(newLen_1, not(31))\n                            mstore(0, memberSlot_1)\n                            let dstPtr_1 := keccak256(0, srcOffset_1)\n                            let i_1 := 0\n                            for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                            {\n                                sstore(dstPtr_1, mload(add(_13, srcOffset_1)))\n                                dstPtr_1 := add(dstPtr_1, /** @src 16:1305:1306  \"1\" */ 0x01)\n                                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                                srcOffset_1 := add(srcOffset_1, 32)\n                            }\n                            if lt(loopEnd_1, newLen_1)\n                            {\n                                let lastValue_1 := mload(add(_13, srcOffset_1))\n                                sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                            }\n                            sstore(memberSlot_1, add(shl(/** @src 16:1305:1306  \"1\" */ 0x01, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ newLen_1), /** @src 16:1305:1306  \"1\" */ 0x01))\n                        }\n                        default /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        {\n                            let value_3 := 0\n                            if newLen_1\n                            {\n                                value_3 := mload(add(_13, srcOffset_1))\n                            }\n                            sstore(memberSlot_1, or(and(value_3, not(shr(shl(3, newLen_1), not(0)))), shl(/** @src 16:1305:1306  \"1\" */ 0x01, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ newLen_1)))\n                        }\n                        sstore(add(dataSlot_2, 3), mload(_6))\n                        let memberSlot_2 := add(dataSlot_2, 4)\n                        sstore(memberSlot_2, or(and(sload(memberSlot_2), shl(160, 0xffffffffffffffffffffffff)), and(mload(_7), sub(shl(160, 1), 1))))\n                        let cleaned := iszero(iszero(mload(_8)))\n                        let _16 := sload(memberSlot_2)\n                        sstore(memberSlot_2, or(and(_16, not(shl(160, 255))), and(shl(/** @src 16:1386:1636  \"Product({...\" */ 160, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ cleaned), shl(160, 255))))\n                        let memberSlot_3 := add(dataSlot_2, 5)\n                        let _17 := mload(_9)\n                        let newLen_2 := mload(_17)\n                        if gt(newLen_2, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        let _18 := extract_byte_array_length(sload(memberSlot_3))\n                        if gt(_18, 31)\n                        {\n                            mstore(0, memberSlot_3)\n                            let data_2 := keccak256(0, 32)\n                            let deleteStart_2 := add(data_2, shr(5, add(newLen_2, 31)))\n                            if lt(newLen_2, 32) { deleteStart_2 := data_2 }\n                            let _19 := add(data_2, shr(5, add(_18, 31)))\n                            let start_2 := deleteStart_2\n                            for { }\n                            lt(start_2, _19)\n                            {\n                                start_2 := add(start_2, /** @src 16:1305:1306  \"1\" */ 0x01)\n                            }\n                            /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                            { sstore(start_2, 0) }\n                        }\n                        let srcOffset_2 := 0\n                        srcOffset_2 := 32\n                        switch gt(newLen_2, 31)\n                        case 1 {\n                            let loopEnd_2 := and(newLen_2, not(31))\n                            mstore(0, memberSlot_3)\n                            let dstPtr_2 := keccak256(0, srcOffset_2)\n                            let i_2 := 0\n                            for { } lt(i_2, loopEnd_2) { i_2 := add(i_2, 32) }\n                            {\n                                sstore(dstPtr_2, mload(add(_17, srcOffset_2)))\n                                dstPtr_2 := add(dstPtr_2, /** @src 16:1305:1306  \"1\" */ 0x01)\n                                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                                srcOffset_2 := add(srcOffset_2, 32)\n                            }\n                            if lt(loopEnd_2, newLen_2)\n                            {\n                                let lastValue_2 := mload(add(_17, srcOffset_2))\n                                sstore(dstPtr_2, and(lastValue_2, not(shr(and(shl(3, newLen_2), 248), not(0)))))\n                            }\n                            sstore(memberSlot_3, add(shl(/** @src 16:1305:1306  \"1\" */ 0x01, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ newLen_2), /** @src 16:1305:1306  \"1\" */ 0x01))\n                        }\n                        default /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        {\n                            let value_4 := 0\n                            if newLen_2\n                            {\n                                value_4 := mload(add(_17, srcOffset_2))\n                            }\n                            sstore(memberSlot_3, or(and(value_4, not(shr(shl(3, newLen_2), not(0)))), shl(/** @src 16:1305:1306  \"1\" */ 0x01, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ newLen_2)))\n                        }\n                        /// @src 16:1652:1701  \"ProductRegistered(newProductId, name, msg.sender)\"\n                        let _20 := /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ mload(64)\n                        mstore(_20, sum)\n                        mstore(add(_20, 32), 96)\n                        let tail := abi_encode_string(value0, add(_20, 96))\n                        mstore(add(_20, 64), /** @src 8:735:745  \"msg.sender\" */ caller())\n                        /// @src 16:1652:1701  \"ProductRegistered(newProductId, name, msg.sender)\"\n                        log1(_20, sub(tail, _20), 0xd810998a0248808a33b20218e71759cb2ec1a182b398350ad606d742587c012c)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, sum)\n                        return(memPos_2, 32)\n                    }\n                    case 0x36568abe {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_2 := abi_decode_address()\n                        /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                        if /** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ iszero(eq(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ value1_2, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 8:735:745  \"msg.sender\" */ caller()))\n                        /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                        {\n                            /// @src 0:5478:5508  \"AccessControlBadConfirmation()\"\n                            mstore(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0, /** @src 0:5478:5508  \"AccessControlBadConfirmation()\" */ shl(225, 0x334bd919))\n                            revert(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0, 4)\n                        }\n                        /// @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\"\n                        pop(fun_revokeRole(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ calldataload(4), /** @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\" */ value1_2))\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x4a348da9 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _21 := sload(/** @src 16:2834:2845  \"_productIds\" */ 0x02)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, _21)\n                        return(memPos_3, 32)\n                    }\n                    case 0x524e8462 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_5 := calldataload(4)\n                        mstore(0, /** @src 16:313:342  \"keccak256(\\\"DISTRIBUTOR_ROLE\\\")\" */ 0xfbd454f36a7e1a388bd6fc3ab10d434aa4578f811acbbcf33afb1c697486313c)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        mstore(32, 0)\n                        let dataSlot_3 := keccak256(0, 64)\n                        /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                        let dataSlot_4 := /** @src -1:-1:-1 */ 0\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 16:1899:1909  \"msg.sender\" */ caller(), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot_3)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        dataSlot_4 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x40)\n                        /// @src 16:1873:1948  \"hasRole(DISTRIBUTOR_ROLE, msg.sender) || hasRole(RETAILER_ROLE, msg.sender)\"\n                        let expr_1 := /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_4), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0xff)\n                        /// @src 16:1873:1948  \"hasRole(DISTRIBUTOR_ROLE, msg.sender) || hasRole(RETAILER_ROLE, msg.sender)\"\n                        if iszero(expr_1)\n                        {\n                            /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                            mstore(0, /** @src 16:388:414  \"keccak256(\\\"RETAILER_ROLE\\\")\" */ 0x2a5f906c256a5d799494fcd066e1f6c077689de1cdb65052a1624de4bace99bf)\n                            /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                            mstore(32, 0)\n                            let dataSlot_5 := keccak256(0, 64)\n                            /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                            let dataSlot_6 := /** @src -1:-1:-1 */ 0\n                            /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 16:1899:1909  \"msg.sender\" */ caller(), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot_5)\n                            /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                            dataSlot_6 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x40)\n                            /// @src 16:1873:1948  \"hasRole(DISTRIBUTOR_ROLE, msg.sender) || hasRole(RETAILER_ROLE, msg.sender)\"\n                            expr_1 := /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_6), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0xff)\n                        }\n                        if iszero(expr_1)\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 38)\n                            mstore(add(memPtr_1, 68), \"Must have distributor or retaile\")\n                            mstore(add(memPtr_1, 100), \"r role\")\n                            revert(memPtr_1, 132)\n                        }\n                        mstore(0, value_5)\n                        mstore(32, 1)\n                        /// @src 16:2022:2084  \"require(products[productId].id != 0, \\\"Product does not exist\\\")\"\n                        require_helper_stringliteral_024c(/** @src 16:2030:2057  \"products[productId].id != 0\" */ iszero(iszero(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sload(keccak256(0, 64)))))\n                        mstore(0, value_5)\n                        mstore(32, 1)\n                        /// @src 16:2095:2125  \"products[productId].isVerified\"\n                        let _22 := add(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ keccak256(0, 64), 4)\n                        sstore(_22, or(and(sload(_22), not(shl(160, 255))), shl(160, 1)))\n                        /// @src 16:2147:2185  \"ProductVerified(productId, msg.sender)\"\n                        let _23 := /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ mload(64)\n                        mstore(_23, value_5)\n                        mstore(add(_23, 32), /** @src 16:1899:1909  \"msg.sender\" */ caller())\n                        /// @src 16:2147:2185  \"ProductVerified(productId, msg.sender)\"\n                        log1(_23, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 64, /** @src 16:2147:2185  \"ProductVerified(productId, msg.sender)\" */ 0xab60911bebc6d3ab48620594e409545834da76f4995297ebc48ca5589f25437b)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x7250e224 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0_1 := abi_decode_address_10350()\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole_10351()\n                        /// @src 0:4300:4318  \"getRoleAdmin(role)\"\n                        let var := /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0\n                        mstore(0, /** @src 16:313:342  \"keccak256(\\\"DISTRIBUTOR_ROLE\\\")\" */ 0xfbd454f36a7e1a388bd6fc3ab10d434aa4578f811acbbcf33afb1c697486313c)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        mstore(32, 0)\n                        /// @src 0:3894:3923  \"return _roles[role].adminRole\"\n                        var := /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ keccak256(0, 64), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1))\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 0:4300:4318  \"getRoleAdmin(role)\" */ var)\n                        /// @src 0:4330:4355  \"_grantRole(role, account)\"\n                        pop(fun_grantRole_10353(value0_1))\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x7acc0b20 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, 1)\n                        let dataSlot_7 := keccak256(0, 64)\n                        let _24 := sload(/** @src 16:836:879  \"mapping(uint256 => Product) public products\" */ dataSlot_7)\n                        let ret_mpos := copy_array_from_storage_to_memory_string(add(dataSlot_7, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 1))\n                        /// @src 16:836:879  \"mapping(uint256 => Product) public products\"\n                        let ret_mpos_1 := copy_array_from_storage_to_memory_string(add(dataSlot_7, 2))\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        let _25 := sload(/** @src 16:836:879  \"mapping(uint256 => Product) public products\" */ add(dataSlot_7, 3))\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        let _26 := sload(/** @src 16:836:879  \"mapping(uint256 => Product) public products\" */ add(dataSlot_7, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 4))\n                        /// @src 16:836:879  \"mapping(uint256 => Product) public products\"\n                        let ret_mpos_2 := copy_array_from_storage_to_memory_string(add(dataSlot_7, 5))\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, _24)\n                        mstore(add(memPos_4, 32), 224)\n                        let tail_1 := abi_encode_string(ret_mpos, add(memPos_4, 224))\n                        mstore(add(memPos_4, 64), sub(tail_1, memPos_4))\n                        let tail_2 := abi_encode_string(ret_mpos_1, tail_1)\n                        mstore(add(memPos_4, 96), _25)\n                        mstore(add(memPos_4, 128), and(_26, sub(shl(160, 1), 1)))\n                        mstore(add(memPos_4, 160), iszero(iszero(and(shr(160, _26), 0xff))))\n                        mstore(add(memPos_4, 192), sub(tail_2, memPos_4))\n                        return(memPos_4, sub(abi_encode_string(ret_mpos_2, tail_2), memPos_4))\n                    }\n                    case 0x8ec4f505 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0_2 := abi_decode_address_10350()\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole_10351()\n                        /// @src 0:4300:4318  \"getRoleAdmin(role)\"\n                        let var_1 := /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0\n                        mstore(0, /** @src 16:388:414  \"keccak256(\\\"RETAILER_ROLE\\\")\" */ 0x2a5f906c256a5d799494fcd066e1f6c077689de1cdb65052a1624de4bace99bf)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        mstore(32, 0)\n                        /// @src 0:3894:3923  \"return _roles[role].adminRole\"\n                        var_1 := /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ keccak256(0, 64), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1))\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 0:4300:4318  \"getRoleAdmin(role)\" */ var_1)\n                        /// @src 0:4330:4355  \"_grantRole(role, account)\"\n                        pop(fun_grantRole_10357(value0_2))\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x91d14854 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_3 := abi_decode_address()\n                        mstore(0, calldataload(4))\n                        mstore(32, 0)\n                        let dataSlot_8 := keccak256(0, 64)\n                        /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                        let dataSlot_9 := /** @src -1:-1:-1 */ 0\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(value1_3, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot_8)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        dataSlot_9 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x40)\n                        let value_6 := and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_9), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0xff)\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, iszero(iszero(value_6)))\n                        return(memPos_5, 32)\n                    }\n                    case 0x965288b0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, /** @src 16:234:264  \"keccak256(\\\"MANUFACTURER_ROLE\\\")\" */ 0xeefb95e842a3287179d933b4460be539a1d5af11aa8b325bb45c5c8dc92de4ed)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        return(memPos_6, 32)\n                    }\n                    case 0xa217fddf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, 0)\n                        return(memPos_7, 32)\n                    }\n                    case 0xb9db15b4 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_7 := calldataload(4)\n                        let memPtr_2 := mload(64)\n                        finalize_allocation_10348(memPtr_2)\n                        mstore(memPtr_2, 0)\n                        mstore(add(memPtr_2, 32), 96)\n                        mstore(add(memPtr_2, 64), 96)\n                        mstore(add(memPtr_2, 96), 0)\n                        mstore(add(memPtr_2, 128), 0)\n                        mstore(add(memPtr_2, 160), 0)\n                        mstore(add(memPtr_2, 192), 96)\n                        mstore(0, value_7)\n                        mstore(32, 1)\n                        /// @src 16:2624:2686  \"require(products[productId].id != 0, \\\"Product does not exist\\\")\"\n                        require_helper_stringliteral_024c(/** @src 16:2632:2659  \"products[productId].id != 0\" */ iszero(iszero(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sload(keccak256(0, 64)))))\n                        mstore(0, value_7)\n                        mstore(32, 1)\n                        let dataSlot_10 := keccak256(0, 64)\n                        let memPtr_3 := mload(64)\n                        finalize_allocation_10348(memPtr_3)\n                        mstore(memPtr_3, sload(dataSlot_10))\n                        let memberValue := copy_array_from_storage_to_memory_string(add(dataSlot_10, 1))\n                        let _27 := add(memPtr_3, 32)\n                        mstore(_27, memberValue)\n                        let memberValue_1 := copy_array_from_storage_to_memory_string(add(dataSlot_10, 2))\n                        let _28 := add(memPtr_3, 64)\n                        mstore(_28, memberValue_1)\n                        let _29 := sload(add(dataSlot_10, 3))\n                        let _30 := add(memPtr_3, 96)\n                        mstore(_30, _29)\n                        let _31 := sload(add(dataSlot_10, 4))\n                        let _32 := add(memPtr_3, 128)\n                        mstore(_32, and(_31, sub(shl(160, 1), 1)))\n                        let _33 := add(memPtr_3, 160)\n                        mstore(_33, iszero(iszero(and(shr(160, _31), 0xff))))\n                        let memberValue_2 := copy_array_from_storage_to_memory_string(add(dataSlot_10, 5))\n                        let _34 := add(memPtr_3, 192)\n                        mstore(_34, memberValue_2)\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, 32)\n                        mstore(add(memPos_8, 32), mload(memPtr_3))\n                        let memberValue0 := mload(_27)\n                        mstore(add(memPos_8, 64), 224)\n                        let tail_3 := abi_encode_string(memberValue0, add(memPos_8, 256))\n                        let memberValue0_1 := mload(_28)\n                        mstore(add(memPos_8, 96), add(sub(tail_3, memPos_8), not(31)))\n                        let tail_4 := abi_encode_string(memberValue0_1, tail_3)\n                        mstore(add(memPos_8, 128), mload(_30))\n                        mstore(add(memPos_8, 160), and(mload(_32), sub(shl(160, 1), 1)))\n                        mstore(add(memPos_8, 192), iszero(iszero(mload(_33))))\n                        let memberValue0_2 := mload(_34)\n                        mstore(add(memPos_8, 224), add(sub(tail_4, memPos_8), not(31)))\n                        return(memPos_8, sub(abi_encode_string(memberValue0_2, tail_4), memPos_8))\n                    }\n                    case 0xd547741f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_8 := calldataload(4)\n                        let value1_4 := abi_decode_address()\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 0:4717:4735  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value_8))\n                        /// @src 0:4747:4773  \"_revokeRole(role, account)\"\n                        pop(fun_revokeRole(value_8, value1_4))\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0xf0bd87cc {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, /** @src 16:313:342  \"keccak256(\\\"DISTRIBUTOR_ROLE\\\")\" */ 0xfbd454f36a7e1a388bd6fc3ab10d434aa4578f811acbbcf33afb1c697486313c)\n                        /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                        return(memPos_9, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_10350() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function finalize_allocation_10348(memPtr)\n            {\n                let newFreePtr := add(memPtr, 224)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_string(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x24)\n                }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(length, 0x1f), not(31)), 0x20))\n                mstore(memPtr, length)\n                if gt(add(add(offset, length), 0x20), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                calldatacopy(add(memPtr, 0x20), add(offset, 0x20), length)\n                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                array := memPtr\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                let slotValue := sload(slot)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(memPtr, 0x20), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 0x20)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ slot)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x20)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                    for { } lt(i, length) { i := add(i, 0x20) }\n                    {\n                        mstore(add(add(memPtr, i), 0x20), sload(dataPos))\n                        dataPos := add(dataPos, 1)\n                    }\n                    ret := add(add(memPtr, i), 0x20)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                mcopy(add(pos, 0x20), add(value, 0x20), length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            /// @ast-id 128 @src 0:3810:3930  \"function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {...\"\n            function fun_getRoleAdmin(var_role) -> var\n            {\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                mstore(/** @src 0:3901:3907  \"_roles\" */ 0x00, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:3901:3907  \"_roles\" */ 0x00)\n                /// @src 0:3894:3923  \"return _roles[role].adminRole\"\n                var := /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ keccak256(/** @src 0:3901:3907  \"_roles\" */ 0x00, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x40), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1))\n            }\n            /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n            function require_helper_stringliteral_024c(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 22)\n                    mstore(add(memPtr, 68), \"Product does not exist\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 93 @src 0:3199:3302  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole_10351()\n            {\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                mstore(0, 0)\n                mstore(0x20, 0)\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 8:735:745  \"msg.sender\" */ caller(), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x40)\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0xff))\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0, /** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                    mstore(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 8:735:745  \"msg.sender\" */ caller())\n                    /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                    mstore(36, 0)\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0, 68)\n                }\n            }\n            /// @ast-id 93 @src 0:3199:3302  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole(var_role)\n            {\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x00)\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 8:735:745  \"msg.sender\" */ caller(), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x40)\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0xff))\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                    mstore(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 8:735:745  \"msg.sender\" */ caller())\n                    /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                    mstore(36, var_role)\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 68)\n                }\n            }\n            /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole_10353(var_account) -> var\n            {\n                /// @src 0:6256:6260  \"bool\"\n                var := /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0\n                mstore(0, /** @src 16:313:342  \"keccak256(\\\"DISTRIBUTOR_ROLE\\\")\" */ 0xfbd454f36a7e1a388bd6fc3ab10d434aa4578f811acbbcf33afb1c697486313c)\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                mstore(0x20, 0)\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x40)\n                /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0xff))\n                case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:6466:6478  \"return false\"\n                    var := /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0\n                    /// @src 0:6466:6478  \"return false\"\n                    leave\n                }\n                default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                    mstore(0, /** @src 16:313:342  \"keccak256(\\\"DISTRIBUTOR_ROLE\\\")\" */ 0xfbd454f36a7e1a388bd6fc3ab10d434aa4578f811acbbcf33afb1c697486313c)\n                    /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                    mstore(0x20, 0)\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                    /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x40)\n                    sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                    /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 16:313:342  \"keccak256(\\\"DISTRIBUTOR_ROLE\\\")\" */ 0xfbd454f36a7e1a388bd6fc3ab10d434aa4578f811acbbcf33afb1c697486313c, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 8:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6424:6435  \"return true\"\n                    var := /** @src 0:6347:6351  \"true\" */ 0x01\n                    /// @src 0:6424:6435  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole_10357(var_account) -> var\n            {\n                /// @src 0:6256:6260  \"bool\"\n                var := /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0\n                mstore(0, /** @src 16:388:414  \"keccak256(\\\"RETAILER_ROLE\\\")\" */ 0x2a5f906c256a5d799494fcd066e1f6c077689de1cdb65052a1624de4bace99bf)\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                mstore(0x20, 0)\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x40)\n                /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0xff))\n                case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:6466:6478  \"return false\"\n                    var := /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0\n                    /// @src 0:6466:6478  \"return false\"\n                    leave\n                }\n                default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                    mstore(0, /** @src 16:388:414  \"keccak256(\\\"RETAILER_ROLE\\\")\" */ 0x2a5f906c256a5d799494fcd066e1f6c077689de1cdb65052a1624de4bace99bf)\n                    /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                    mstore(0x20, 0)\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                    /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x40)\n                    sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                    /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 16:388:414  \"keccak256(\\\"RETAILER_ROLE\\\")\" */ 0x2a5f906c256a5d799494fcd066e1f6c077689de1cdb65052a1624de4bace99bf, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 8:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6424:6435  \"return true\"\n                    var := /** @src 0:6347:6351  \"true\" */ 0x01\n                    /// @src 0:6424:6435  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole(var_role, var_account) -> var\n            {\n                /// @src 0:6256:6260  \"bool\"\n                var := /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, 0)\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x40)\n                /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0xff))\n                case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:6466:6478  \"return false\"\n                    var := /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0\n                    /// @src 0:6466:6478  \"return false\"\n                    leave\n                }\n                default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                    mstore(0, var_role)\n                    mstore(0x20, 0)\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                    /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x40)\n                    sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                    /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 8:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6424:6435  \"return true\"\n                    var := /** @src 0:6347:6351  \"true\" */ 0x01\n                    /// @src 0:6424:6435  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 294 @src 0:6732:7049  \"function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_revokeRole(var_role, var_account) -> var\n            {\n                /// @src 0:6810:6814  \"bool\"\n                var := /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, 0)\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 0:6830:6852  \"hasRole(role, account)\" */ var_account, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x40)\n                /// @src 0:6826:7043  \"if (hasRole(role, account)) {...\"\n                switch /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0xff)\n                case /** @src 0:6826:7043  \"if (hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:7020:7032  \"return false\"\n                    var := /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0\n                    /// @src 0:7020:7032  \"return false\"\n                    leave\n                }\n                default /// @src 0:6826:7043  \"if (hasRole(role, account)) {...\"\n                {\n                    /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                    mstore(0, var_role)\n                    mstore(0x20, 0)\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 0:6868:6897  \"_roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 0:6868:6897  \"_roles[role].hasRole[account]\" */ var_account, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 0:6868:6880  \"_roles[role]\" */ dataSlot_2)\n                    /// @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0x40)\n                    sstore(/** @src 0:6868:6897  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(sload(/** @src 0:6868:6897  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ not(255)))\n                    /// @src 0:6924:6964  \"RoleRevoked(role, account, _msgSender())\"\n                    log4(/** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 0, 0, /** @src 0:6924:6964  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ and(/** @src 0:6924:6964  \"RoleRevoked(role, account, _msgSender())\" */ var_account, /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 8:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6978:6989  \"return true\"\n                    var := /** @src 16:118:2854  \"contract SupplyChainVerifier is AccessControl {...\" */ 1\n                    /// @src 0:6978:6989  \"return true\"\n                    leave\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220dcb88ec7ed17d570f9bd9f8b637d5a01067a2c61a2f0a953c527fd4cb47e390164736f6c634300081a0033\"\n    }\n}\n",
          "hash": "39cef3d63b0d8b6688b423ee534a445fc2c1293aad74a6f22eb755feb61e5886",
          "factoryDependencies": {}
        }
      }
    }
  }
}